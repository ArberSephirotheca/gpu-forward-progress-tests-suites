#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 0.0))), injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) ^ 0)))], _GLF_FUZZED(203.497)), vec2(_GLF_FUZZED(5583.4619), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(203.497)), vec2(_GLF_FUZZED(5583.4619), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(203.497)), vec2(_GLF_FUZZED(_GLF_IDENTITY(5583.4619, (_GLF_IDENTITY(5583.4619, max(5583.4619, 5583.4619))) - 0.0)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(203.497)), vec2(_GLF_FUZZED(5583.4619), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y) - 0.0)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))))))).y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true))))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true)))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), false, false))), true)))))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false))), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), _GLF_IDENTITY(true, (true) && true)))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-80.59, -494.522)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true))))))))))) || false))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6226.2793)), float(1.0), bool(true))), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, cos(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, sin(sqrt(0.0)), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat3x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, cos(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, sin(sqrt(0.0)), 1.0)) : _GLF_FUZZED(-4.8)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(3833.0741)), vec2(_GLF_FUZZED(6.2), (vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(68.72))), 0.0, 0.0))))[1]), bvec2(false, true))))), 1.0)), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))) * mat2(1.0)).x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(mat2x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(6.0)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(6.0)), max(float(_GLF_FUZZED(6.0)), float(_GLF_FUZZED(6.0)))) : _GLF_FUZZED(530.987))), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))))))), 0.0)))), 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(mat2x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(6.0)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(6.0)), max(float(_GLF_FUZZED(6.0)), float(_GLF_FUZZED(6.0)))) : _GLF_FUZZED(530.987))), bool(false))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, 0.0, 0.0))))))), 0.0)))), 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false) || false), true, false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2065.5404))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2065.5404))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, _GLF_IDENTITY(true, ! (! (true)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2065.5404))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) && true))))), bool(_GLF_IDENTITY(bvec3(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(3.9) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(2065.5404))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(3.9) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2065.5404))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, _GLF_IDENTITY(true, (true) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 1.0, 0.0, 0.0)))) - 0.0)), bool(true))), sqrt(1.0) * ((injectionSwitch)[0])), _GLF_FUZZED(-84.86)), vec2(_GLF_FUZZED(1274.0204), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))).x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.7)), bool(false))))) + (_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(_GLF_IDENTITY(4u, (4u) - 0u)))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) ^ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(16303u, clamp(16303u, 16303u, 16303u)), 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))).x)), _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((uvec3(16303u, 177198u, 96303u)), uvec3(uvec4((_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(uvec3(54996u, 12110u, 101401u)) : uvec3(16303u, 177198u, 96303u)))), 1u))))))).x, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mod(-6.4, -7.6)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min(clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mod(-6.4, -7.6)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mod(-6.4, -7.6)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mod(-6.4, -7.6)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) / 1.0)))), injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, _GLF_IDENTITY(96303u, ~ (~ (96303u)))), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(16303u, 177198u, _GLF_IDENTITY(96303u, (96303u) >> 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(uvec3(51223u, 34956u, 33942u).r) : 0u)), 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(16303u, (_GLF_IDENTITY(16303u, uint(uvec4(16303u, 0u, 1u, 0u)))) * 1u), 177198u, 96303u)))))))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u)), (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u))) - uvec3(0u, 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))))).x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(16303u, 1u * (16303u)), 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(16303u, 177198u, 96303u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))), 0u) | (uvec3(16303u, 177198u, 96303u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(bitfieldExtract(num_workgroup, -63319, 92))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(16303u, 1u * (16303u)), 177198u, 96303u), uvec3(0u, 0u, 0u) | (uvec3(16303u, 177198u, 96303u)))))))).x)) << 0u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) ^ 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), ~ (~ (uvec2((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(859.234)), float(injectionSwitch.y), bool(true)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6266.7311))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 0.0)))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bool((bool(bool(_GLF_DEAD(false)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (next_virtual_gid))), ~ (~ (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))) ^ 0u)], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))) && true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
