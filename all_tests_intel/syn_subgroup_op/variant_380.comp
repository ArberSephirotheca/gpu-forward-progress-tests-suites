#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec4 _f0;
 mat3x2 _f1;
 vec3 _f2;
 mat2x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 bvec2 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 float _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 vec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec3 _f1;
 uint subgroup_local_id;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 float _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 uint _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 bool _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_4 {
 float _f0;
 ivec2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 ivec4 _f1;
 int _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 float _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
 uvec2 _f3;
 mat2 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(vec2(1.0), _GLF_struct_2(_GLF_struct_0(bvec2(true), ivec4(1), 1, mat4x3(1.0)), 1.0, _GLF_struct_1(vec3(1.0))), _GLF_struct_4(1.0, ivec2(1), _GLF_struct_3(bvec3(true), true, mat2x3(1.0), mat4x3(1.0), bvec2(true))), uvec2(1u), mat2(1.0), _GLF_struct_9(1.0, _GLF_struct_5(true, uvec3(1u), gl_SubgroupInvocationID, mat3x2(1.0)), _GLF_struct_6(mat2(1.0)), _GLF_struct_7(vec4(1.0), mat3x2(1.0), mat4x2(1.0), vec2(1.0), mat4x2(1.0)), 1u, _GLF_struct_8(mat2x4(1.0), bvec2(true), ivec4(1), mat4x2(1.0), 1.0, ivec2(1), mat2(1.0))), _GLF_struct_11(_GLF_struct_10(uvec4(1u), mat3x2(1.0), vec3(1.0), mat2x4(1.0), ivec3(1))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_12._f5._f1.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_12._f5._f1.subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_struct_replacement_12._f5._f1.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
