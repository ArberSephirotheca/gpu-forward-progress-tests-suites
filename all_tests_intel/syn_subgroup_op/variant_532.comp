#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 bvec3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat4 _f3;
 uvec3 _f4;
 uint _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_37 {
 _GLF_struct_36 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_34 {
 vec4 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_33 {
 float _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_35 {
 bool _f0;
 bvec4 _f1;
 _GLF_struct_33 _f2;
 _GLF_struct_34 _f3;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 mat4 _f1;
 vec3 _f2;
 bvec4 _f3;
 vec2 _f4;
 mat4x2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
 int _injected_loop_counter;
 _GLF_struct_31 _f1;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 bvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_28 {
 uvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_27 {
 ivec4 _f0;
} ;

struct _GLF_struct_26 {
 mat4x2 _f0;
 int _f1;
 uvec2 _f2;
 vec4 _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_25 {
 ivec4 _f0;
 bool _f1;
 ivec2 _f2;
 vec3 _f3;
 mat3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 mat2 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_29 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_30 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_35 _f2;
 mat4 _f3;
 _GLF_struct_37 _f4;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_22 {
 int _f0;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 ivec4 _f2;
 uint next_virtual_gid;
 mat3x2 _f3;
 uint _f4;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_18 {
 int _f0;
 mat3x2 _f1;
 bool _f2;
 uvec4 _f3;
 mat4x3 _f4;
 vec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 bvec3 _f1;
 int _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 vec4 _f1;
 vec3 _f2;
 bool _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 mat2x3 _f1;
 float _f2;
 bvec3 _f3;
 uvec3 _f4;
 ivec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_16 {
 float _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 uvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 bvec2 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 int _f1;
 vec3 _f2;
 uvec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 _GLF_struct_7 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_16 _f4;
 uvec3 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 bvec2 _f1;
 uvec4 _f2;
 _GLF_struct_4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 ivec4 _f1;
 mat3 _f2;
 vec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 bool _f1;
 mat2 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 vec2 _f1;
 bvec4 _f2;
 uvec2 _f3;
 uint _f4;
 ivec2 _f5;
 float _f6;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 uvec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_6 {
 uint _f0;
 ivec3 _f1;
 _GLF_struct_3 _f2;
 uint subgroup_size;
 _GLF_struct_5 _f3;
 bvec3 _f4;
 mat3x2 _f5;
 mat3x2 _f6;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(ivec3(1), uvec4(1u), _GLF_struct_8(uvec4(1u), _GLF_struct_7(uvec4(1u), 1, vec3(1.0), uvec2(1u), vec3(1.0)), mat4x3(1.0)), _GLF_struct_12(_GLF_struct_9(mat4(1.0), mat4(1.0)), bvec2(true), true, _GLF_struct_10(ivec4(1), mat4x3(1.0), vec4(1.0), mat3x2(1.0)), _GLF_struct_11(mat4(1.0), mat4x2(1.0), uvec4(1u), bvec2(true), bvec4(true), uvec4(1u), bvec2(true)), uvec4(1u)), _GLF_struct_16(1.0, _GLF_struct_13(mat2x4(1.0), mat2x3(1.0), 1.0, bvec3(true), uvec3(1u), ivec2(1), mat3x4(1.0)), _GLF_struct_14(ivec3(1), vec4(1.0), vec3(1.0), true, mat4x3(1.0)), _GLF_struct_15(mat4(1.0), uvec2(1u), ivec2(1), ivec3(1))), uvec3(1u), _GLF_struct_20(_GLF_struct_17(bvec4(true), bvec3(true), 1, gl_SubgroupID), _GLF_struct_18(1, mat3x2(1.0), true, uvec4(1u), mat4x3(1.0), vec3(1.0), ivec2(1)), _GLF_struct_19(ivec2(1), ivec3(1))));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, ivec3(1), _GLF_struct_3(uvec3(1u), uvec2(1u), _GLF_struct_0(mat3x4(1.0), vec2(1.0), bvec4(true), uvec2(1u), 1u, ivec2(1), 1.0), _GLF_struct_1(mat4x2(1.0), true, mat2(1.0)), _GLF_struct_2(bvec2(true), ivec4(1), mat3(1.0), vec3(1.0), ivec3(1))), 16, _GLF_struct_5(uvec4(1u), bvec2(true), uvec4(1u), _GLF_struct_4(bvec3(true), ivec4(1), mat3(1.0), mat2x3(1.0)), mat4x2(1.0)), bvec3(true), mat3x2(1.0), mat3x2(1.0));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_21._f6._f0.subgroup_id * _GLF_struct_replacement_6.subgroup_size + subgroup_local_id;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_22(1), _GLF_struct_23(vec2(1.0), vec2(1.0)), ivec4(1), workgroup_base + _GLF_struct_replacement_21._f6._f0.subgroup_id * _GLF_struct_replacement_6.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size), mat3x2(1.0), 1u);
 for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             buf[virtual_gid] = 1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size)
  {
   do
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       buf[_GLF_struct_replacement_24.next_virtual_gid] = 2;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     subgroupAll(false);
    }
   else
    {
    }
  }
 else
  {
   for(_GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_30(_GLF_struct_25(ivec4(1), true, ivec2(1), vec3(1.0), mat3(1.0), ivec3(1)), _GLF_struct_26(mat4x2(1.0), 1, uvec2(1u), vec4(1.0), 1.0, mat3x4(1.0)), _GLF_struct_27(ivec4(1)), mat2(1.0), _GLF_struct_28(uvec4(1u), mat4x2(1.0)), _GLF_struct_29(bvec4(true), bvec3(true), bvec3(true)), mat3(1.0)), _GLF_struct_32(uvec3(1u), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))), _GLF_struct_31(mat4x3(1.0), mat4(1.0), vec3(1.0), bvec4(true), vec2(1.0), mat4x2(1.0), mat3x4(1.0))), _GLF_struct_35(true, bvec4(true), _GLF_struct_33(1.0, 1u, uvec2(1u)), _GLF_struct_34(vec4(1.0), mat2x3(1.0), mat4x2(1.0))), mat4(1.0), _GLF_struct_37(_GLF_struct_36(bvec3(true), bvec2(true), uvec2(1u), mat4(1.0), uvec3(1u), 1u, mat3x4(1.0)), bvec4(true), mat4x2(1.0), bvec3(true), uvec2(1u))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_38._f1._injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _GLF_struct_replacement_38._f1._injected_loop_counter ++)
    {
     buf[_GLF_struct_replacement_24.next_virtual_gid] = 2;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
  }
}
