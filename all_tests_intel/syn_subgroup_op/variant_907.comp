#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), (bool(! (! (_GLF_DEAD(false))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bool(! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, ! (! (true))), true), false)))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bool(! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, ! (! (true))), true), false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, max(3, 3)))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = 16;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.8)), bool(false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), (min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.8)), bool(false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) - sin(0.0))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))));
 for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, min(1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true)))))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (1u & 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u)) | (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u)))))), uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u), 0u)))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) * subgroup_size : _GLF_FUZZED(subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(74.34)), vec2(_GLF_FUZZED(0.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))).x > injectionSwitch.y))));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true))), bool(bool(bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true))))))), false)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true))), bool(bool(bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true))))))), false))))) || false));
   do
    {
     for(int _injected_loop_counter = ((0 & _GLF_IDENTITY(-54512, (false ? _GLF_FUZZED(bitCount(usubBorrow(workgroup_id, workgroup_base, workgroup_id))) : -54512))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid)))))))))))) - 0u))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) | _GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size)))))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u)))) << 0u), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)), max(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)), ~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u))))))), ((subgroup_size)) ^ 0u)) | ((subgroup_size))), 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 1u * (1u)))))))))), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), min((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size))) : _GLF_FUZZED(workgroup_base)))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u)))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base))))), (true ? _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ _GLF_IDENTITY(1u, 0u ^ (1u))), 0u, (1u & 1u)))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base))))) : _GLF_FUZZED(subgroup_id))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid)))) * 1u)))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) | ((subgroup_size))), 0u, 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) >> 0u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) | ((subgroup_size))), 0u, 0u, 1u)))))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true))) ? ~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) / 1u))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))))), min((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))))) ? ~ (subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), 1u, 1u)))) << 0u))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & _GLF_IDENTITY(1u, 0u | (1u)))))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid)))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), ((subgroup_size)) ^ 0u)) | ((subgroup_size))), 0u, 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) | ((subgroup_size))), 0u, 0u, 1u)))))), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), min((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), _GLF_IDENTITY(uint(uvec4(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), 0u, 1u, 1u)), (uint(uvec4(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), 0u, 1u, 1u))) >> 0u)))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (1u))))), 0u, (1u & 1u)))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), _GLF_IDENTITY(uint(uvec4(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), 0u, 1u, 1u)), (uint(uvec4(uint(uvec4(subgroup_size, (0u ^ 1u), 0u, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (1u & _GLF_IDENTITY(1u, max(1u, 1u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))))), 0u, 1u, 1u))) >> 0u)))), ((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (1u))))), 0u, (1u & 1u)))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))) : _GLF_FUZZED(subgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) : _GLF_FUZZED(virtual_gid)))))) | _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | ((subgroup_size))), 0u, 0u, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) | (((subgroup_size)) ^ 0u)))) | ((subgroup_size))), 0u, 0u, 1u)))))))))), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), min((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))), uint(uint((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u ^ 1u), 0u, (1u & 1u))))))))) >> 0u), (true ? ~ (subgroup_size) : _GLF_FUZZED(workgroup_base)))))))))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) / 1u) + 1) >> 0u)) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u))), uvec3(subgroup_size, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u))), uvec3(subgroup_size, 0u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u))), uvec3(subgroup_size, 0u, 0u)))), 1u * (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), clamp(uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u), uvec3(subgroup_size, 0u, 0u))), uvec3(subgroup_size, 0u, 0u))))))))), min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), clamp(min(subgroup_size, subgroup_size), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) * 1u)))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(0u, 0u))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       buf[virtual_gid] = 1;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(8.7, -70.99, 8237.2161, -9.6, -6962.7979, -94.52, -2.4, -7.5, 5271.0607, 45.45, 4.4, -3.9, 192.066, 0.1, _GLF_IDENTITY(-225.036, clamp(-225.036, _GLF_IDENTITY(-225.036, float(_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0)))))))), -225.036)), -4196.6742)) : mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6382.0600))), injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(8.7, -70.99, 8237.2161, -9.6, -6962.7979, -94.52, -2.4, -7.5, 5271.0607, 45.45, 4.4, -3.9, 192.066, 0.1, _GLF_IDENTITY(-225.036, clamp(-225.036, _GLF_IDENTITY(-225.036, float(_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0)))))))), -225.036)), -4196.6742)) : mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6382.0600))), injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))))))) > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(8.7, -70.99, 8237.2161, -9.6, -6962.7979, -94.52, -2.4, -7.5, 5271.0607, 45.45, 4.4, -3.9, 192.066, 0.1, _GLF_IDENTITY(-225.036, clamp(-225.036, _GLF_IDENTITY(-225.036, float(_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0)))))))), -225.036)), -4196.6742)) : mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6382.0600))), injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))))))) > injectionSwitch.y), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(8.7, -70.99, 8237.2161, -9.6, -6962.7979, -94.52, -2.4, -7.5, 5271.0607, 45.45, 4.4, -3.9, 192.066, 0.1, _GLF_IDENTITY(-225.036, clamp(-225.036, _GLF_IDENTITY(-225.036, float(_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0)))))))), -225.036)), -4196.6742)) : mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6382.0600))), injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))))))) > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(8.7, -70.99, 8237.2161, -9.6, -6962.7979, -94.52, -2.4, -7.5, 5271.0607, 45.45, 4.4, -3.9, 192.066, 0.1, _GLF_IDENTITY(-225.036, clamp(-225.036, _GLF_IDENTITY(-225.036, float(_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(-225.036, 1.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0, 0.0)), 1.0, 0.0)))))))), -225.036)), -4196.6742)) : mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6382.0600))), injectionSwitch.y), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0))))))) > injectionSwitch.y), true), false, true)))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5648.5619)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.1)), bool(false)))), bool(_GLF_IDENTITY(true, true && (true)))))), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, 14.44, -324.079, 9510.7597))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(float(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), float(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.17)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, _GLF_IDENTITY(4.2, _GLF_ZERO(0.0, injectionSwitch.x) + (4.2)), 14.44, _GLF_IDENTITY(-324.079, (-324.079) * 1.0), 9510.7597))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, _GLF_IDENTITY(14.44, (14.44) - 0.0), -324.079, 9510.7597))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, _GLF_IDENTITY(14.44, (14.44) - 0.0), -324.079, 9510.7597))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, _GLF_IDENTITY(14.44, (14.44) - 0.0), -324.079, 9510.7597))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, _GLF_IDENTITY(14.44, (14.44) - 0.0), -324.079, 9510.7597))))), float(vec4(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, 657.083, 9.6, 4.2, _GLF_IDENTITY(14.44, (14.44) - 0.0), -324.079, 9510.7597))))), log(1.0), 0.0, 0.0))))) : _GLF_FUZZED(-9.4))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-38.46))), 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x2(-4.1, -225.603, _GLF_IDENTITY(657.083, max(657.083, _GLF_IDENTITY(657.083, 0.0 + (657.083)))), 9.6, 4.2, 14.44, -324.079, 9510.7597))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))), 1))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), false || ((false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp2(942.171)) : injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp2(942.171)) : injectionSwitch.x)) > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(exp2(942.171)) : injectionSwitch.x)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(554.120), _GLF_FUZZED(60.43)), bvec2(false, false))).x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)), false))), false, false))))))))))))) && true))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       buf[next_virtual_gid] = 2;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && _GLF_IDENTITY((true), ((true)) && true)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)) || false)), (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7691.9953) : injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((32.44)), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0), (true ? mat4x3(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat4x3(-6007.8003, 968.975, 905.088, -19.56, -6898.6321, -24.01, -3.2, 1.2, 743.194, -10.39, 21.72, -0.5)))))), (_GLF_FUZZED((32.44))) - 0.0)), max(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((32.44), 0.0 + ((32.44)))), (_GLF_FUZZED((32.44))) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), max(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * mat2(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.8), mix(float(_GLF_FUZZED(-8.1)), float(_GLF_FUZZED(-7.8)), bool(true))) : float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), max(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), max(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)))), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0), (true ? _GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0) : _GLF_FUZZED(atanh(7.1))))), max(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * mat2(1.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((32.44), mix(float(_GLF_FUZZED(6.4)), float((32.44)), bool(true)))), (_GLF_FUZZED((32.44))) - 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), 0.0 + (_GLF_FUZZED((32.44))))) - 0.0)), clamp(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY((_GLF_FUZZED((32.44))), min((_GLF_FUZZED((32.44))), (_GLF_FUZZED((32.44))))) - 0.0)), _GLF_IDENTITY(float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED((1.8 * 879.358))), bool(false))), _GLF_IDENTITY(float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) * cos(0.0)), float(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_IDENTITY(_GLF_FUZZED((32.44)), mix(float(_GLF_FUZZED(-70.12)), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(5668.7106) : float(mat2(_GLF_FUZZED((32.44)), 1.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_FUZZED((32.44)), (_GLF_FUZZED((32.44))) - 0.0)))))), bool(false))))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(vec4(-5.6, 7.0, _GLF_IDENTITY(-1.7, (-1.7) - 0.0), -629.040))[0]))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(vec3(injectionSwitch.y, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY((vec3(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - vec3(0.0, 0.0, 0.0), ((vec3(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - vec3(0.0, 0.0, 0.0)) * mat3(1.0)))) + vec3(0.0, 0.0, 0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false), true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false), true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))), true, true))))))))))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(412.147)), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(19185)), (injectionSwitch)[1]), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(float(19185)), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-626.150), (vec2(_GLF_FUZZED(float(19185)), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(float(19185)), (injectionSwitch)[1]))[0], _GLF_FUZZED(1.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(_GLF_IDENTITY(false, true && (false)), true))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-236.736) : injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) || false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) - 0);
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((344.818 + 2622.7252)) : injectionSwitch.y)))))) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))).y))))
              barrier();
             barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
        }
      }
     subgroupAll(true);
    }
  }
 else
  {
  }
}
