#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 bvec4 _f0;
 bvec3 _f1;
 uvec2 _f2;
 bool _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 uvec4 _f1;
 bvec4 _f2;
 vec3 _f3;
 int _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 int _f1;
 uvec4 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat4 _f1;
 int _f2;
 mat4x3 _f3;
 uvec3 _f4;
 mat2x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_14 {
 float _f0;
 vec3 _f1;
 uint _f2;
 mat3 _f3;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 mat2 _f1;
 bvec2 _f2;
 ivec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 bvec4 _f2;
 uvec4 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_23 {
 uint next_virtual_gid;
 _GLF_struct_15 _f0;
 _GLF_struct_18 _f1;
 mat4 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uint workgroup_base;
 ivec2 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_7 {
 float _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec2 _f1;
 _GLF_struct_5 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 uint workgroup_id;
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
 ivec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 _GLF_struct_2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uint _f1;
 mat3x4 _f2;
 mat2 _f3;
 mat3x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 uint workgroup_size;
 _GLF_struct_3 _f1;
 vec3 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && (false))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), false || (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(43.33))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(146567u) : (1u))) * _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(_GLF_IDENTITY(7u, (7u) >> 0u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec2(uint(7u), 0u)), (uint(uvec2(uint(7u), 0u))) | (uint(uvec2(uint(7u), 0u))))))), uint(_GLF_IDENTITY(7u, ~ _GLF_IDENTITY((~ (7u)), max((~ (7u)), _GLF_IDENTITY((~ (7u)), (_GLF_IDENTITY((~ (7u)), ((~ (7u))) * 1u)) << 0u))))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)), min((uint(7u)), _GLF_IDENTITY((uint(7u)), max((uint(7u)), (uint(7u)))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(7u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) >> 0u))))))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec2(uint(7u), 0u)), (uint(uvec2(uint(7u), 0u))) | (uint(uvec2(uint(7u), 0u))))))), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))))) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), uint(3u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 1u * (uint(3u))), uint(3u)))) + 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, min(7u, 7u)) : _GLF_FUZZED(bitfieldExtract(26369u, 41107, 77550)))))))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u)) ^ 0u) * (1u)), 1u), uint(uvec3(max(_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u)) ^ 0u) * (1u)), 1u), 1u, 1u)))))), mat3x4(1.0), mat2(1.0), mat3x2(1.0), vec3(1.0))), gl_WorkGroupSize.x, _GLF_struct_3(mat3(1.0), _GLF_struct_2(1, ivec4(1), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u))) | (uvec4(1u)))), bvec3(true)), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_WorkGroupID.x, _GLF_struct_6(ivec4(1), ivec2(1), _GLF_struct_5(mat3(1.0), mat3x4(1.0)), mat2(1.0)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0))))), bvec4(true)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), true, true, true))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_struct_9(bvec2(true), _GLF_struct_replacement_4.workgroup_size * _GLF_struct_replacement_8.workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1)))), _GLF_IDENTITY(ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1))))), (_GLF_IDENTITY(ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1))))), clamp(ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1))))), ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1))))), ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1)))))))) | (ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1)))))))) / ivec2(1, 1)), (true ? _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))), (ivec2(0, 0) & ivec2(47350, 6088)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | _GLF_IDENTITY(((ivec2(1))), max(_GLF_IDENTITY(((ivec2(1))), (false ? _GLF_FUZZED(ivec2(85860, -39196)) : ((ivec2(1))))), ((ivec2(1))))))))) | ivec2(0, 0)))))), max(ivec2(1), _GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), ivec2(1), ivec2(1)))))), ivec2(0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) | ((ivec2(1))))))) | ivec2(0, 0)), max(ivec2(1), ivec2(1)))))) / ivec2(1, 1)) : _GLF_FUZZED((ivec2(-14211, 37934) + ivec2(28067, 15515))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11._f0._f1.workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_11._f0._f1.workgroup_base + subgroup_id * subgroup_size, (_GLF_struct_replacement_11._f0._f1.workgroup_base + subgroup_id * subgroup_size) + uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), 1.0, sqrt(1.0))), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), 1.0, sqrt(1.0)))) + abs(0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), _GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.2)), bool(false))), 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, cos(0.0), abs(1.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0, 1.0)), sin(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 1.0)), (float(mat4x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, cos(0.0), abs(1.0), abs(1.0), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0, 1.0)), sin(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 1.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.9))), 1.0, 1.0), (mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, cos(0.0)), (mat2(1.0, 1.0, 1.0, cos(0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-749.217)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_replacement_11._f0._f1.workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)) / uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)))), (false ? _GLF_FUZZED(129779u) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)) / uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))), 0u))) + 0u))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u ^ 1u)))), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)) / uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u)))), (false ? _GLF_FUZZED(129779u) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (subgroup_id) / 1u), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_id) / 1u), uint(uvec3(~ ((subgroup_id) / 1u), 1u, 1u)))))), 0u)) / uvec2(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u), uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) / 1u), 0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))) * ((subgroup_id))) / 1u), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))), 0u))) + 0u)))) - 0u)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), _GLF_struct_15(_GLF_struct_12(mat2(1.0), _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), mat2x4(1.0), bvec3(true), uvec2(1u)), _GLF_struct_13(bvec3(true), mat2(1.0), bvec2(true), ivec2(1), bvec4(true)), bvec4(true), uvec4(1u), _GLF_struct_14(1.0, vec3(1.0), 1u, _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))))), _GLF_struct_18(_GLF_struct_16(mat3x4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat4(1.0), 1, mat4x3(1.0), uvec3(1u), mat2x3(1.0), mat4(1.0)), _GLF_struct_17(ivec4(1))), mat4(1.0), _GLF_struct_22(_GLF_struct_19(ivec2(1), uvec4(1u), bvec4(true), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0)))[0], _GLF_FUZZED(554.802), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / abs(vec3(1.0, 1.0, 1.0))))[2]), vec3(_GLF_FUZZED((-86.70 - _GLF_IDENTITY(1811.5352, mix(float(_GLF_IDENTITY(1811.5352, float(mat2x4(1811.5352, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED((86.27 / 34.26))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (vec3(1.0))[1], _GLF_FUZZED(vec2(-80.30, -212.010).s)), _GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))))), 1, uvec4(1u), _GLF_struct_20(vec3(1.0)), _GLF_struct_21(bvec4(true), bvec3(true), uvec2(1u), true, mat4x3(1.0)), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), (bool(! (bool(false)))) || false))))), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), (bool(! (bool(false)))) || false))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1 ^ 1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) ^ ivec4(0, 0, 0, 0), max(_GLF_IDENTITY((ivec4(1, 0, 0, _GLF_IDENTITY(0, min(0, 0)))) ^ ivec4(0, 0, 0, 0), ((ivec4(1, 0, 0, _GLF_IDENTITY(0, min(0, 0)))) ^ ivec4(0, 0, 0, 0)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1, 0, 0, 0)), min((ivec4(1, 0, _GLF_IDENTITY(0, (0) | (0)), 0)), (ivec4(1, 0, 0, 0)))) ^ _GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (ivec4(0, 0, 0, 0))), min((ivec4(1, 0, 0, 0)) ^ ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), max(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0))))))), min(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), max(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), max(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0))))))), min(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), max(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0))))))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), max(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0))))))))))), 0, 0), min(ivec4(1, 0, 0, 0), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 0, 0, 0)))) ^ ivec4(0, 0, 0, 0))))))))), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (_GLF_IDENTITY(ivec4(1, 0, 0, 0), ~ (~ (ivec4(1, 0, 0, 0))))) ^ ivec4(0, 0, 0, 0)))))) | (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) ^ ivec4(0, 0, 0, 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) * 1u) : uint(uint(subgroup_local_id + 1)), uint(uint(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) * 1u) : uint(uint(subgroup_local_id + 1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) * 1u) : _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uint(uint(uint(subgroup_local_id + 1))))) : _GLF_FUZZED(atomicXor(virtual_gid, subgroup_id))))) >> 0u)))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u + (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) - 0u))))) + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | 0u)) + 0u)))) | (subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1))))))))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))))) << (_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), min(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(uvec4(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u), 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) ^ 1u)) < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), bool(bvec2(((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0) < injectionSwitch.y)), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), (injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true, false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, false, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-518.488))) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   buf[_GLF_struct_replacement_23.next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true), false), false, true)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true), false))))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true), false))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0))))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-147.520, -0.3)))), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-985.326)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-985.326)) : _GLF_FUZZED(-1.4))), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0))))) > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2289.8842), _GLF_FUZZED(1.5)), bvec2(false, false)), (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), false))))))), (injectionSwitch.x < injectionSwitch.y)) ? mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1]), vec2(_GLF_FUZZED(4352.4104), _GLF_FUZZED(-582.448)), bvec2(false, false))))[0], min((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / exp(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / exp(0.0)), (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / exp(0.0))) + 0.0)), float(_GLF_FUZZED(-61.86)), bool(false))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2289.8842), _GLF_FUZZED(1.5)), bvec2(false, false)) : _GLF_FUZZED((injectionSwitch + vec2(6.4, -466.997)))))), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), max(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x)))))), injectionSwitch.x)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), max(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x)))))), injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), max(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x))), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3777.2826) : injectionSwitch.x)))))), injectionSwitch.x)), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   buf[_GLF_struct_replacement_23.next_virtual_gid] = _GLF_IDENTITY(2, (2) ^ 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, abs(1.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true))))))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
