#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)))))
  barrier();
 uint subgroup_size = _GLF_IDENTITY(16, (16) + 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false)))))) || false) && (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), false || (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true), true)), true))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (! (! (false))))), false, true), true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -7.4)))).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -7.4)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -7.4)))).y))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -7.4)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -7.4)))).y))), true)), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, uint(_GLF_IDENTITY(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), (_GLF_IDENTITY(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), max(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, uint(_GLF_IDENTITY(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), (_GLF_IDENTITY(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), max(uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u), uvec4((subgroup_local_id) >> 0u, 1u, 1u, 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0))) - 0.0)), 1.0 * (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0))) - _GLF_IDENTITY(0.0, (0.0) - 0.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0))), max(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)))) - tan(0.0))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - tan(0.0)))))), float(_GLF_FUZZED(427.826)), bool(false))), float(_GLF_FUZZED((-6209.4797))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, _GLF_IDENTITY(false, (false) && true))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, _GLF_IDENTITY(false, (false) && true))), true))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), true, false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), true, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false))), false, false)), false, true))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec2((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))) && true), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id)), 1u * (_GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))))) | 0u)) << _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) ^ 0u), ~ (_GLF_IDENTITY(~ ((0u ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ ((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, (0u) << 0u))))), uint(uint(~ ((0u ^ 0u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), clamp(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((_GLF_IDENTITY(0u ^ 0u, ~ (_GLF_IDENTITY(~ (0u ^ 0u), uint(uvec2(~ (0u ^ 0u), 1u)))))))))), 1u, 0u)), _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u))), ~ (_GLF_IDENTITY(~ ((~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)))), uvec3(uvec4(~ ((~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)))), 0u))))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), uvec3(uvec3(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY((0u ^ 0u), uint(uvec3((0u ^ 0u), 0u, 0u)))), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), uvec3(1u, 1u, 1u) * (~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(_GLF_IDENTITY(~ ((0u ^ 0u)), (~ ((0u ^ 0u))) ^ 0u)))), 1u, 0u))))))), _GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), clamp((uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), (uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((0u ^ 0u))))), 1u, _GLF_IDENTITY(0u, max(0u, 0u)))), uvec3(uvec3((uvec3(_GLF_IDENTITY(~ ((0u ^ 0u)), uint(uint(~ ((_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) >> 0u)))))), 1u, 0u)))))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))), (uint(uvec3(~ (_GLF_IDENTITY((0u ^ 0u), (0u | 0u) ^ ((0u ^ 0u)))), 1u, 0u))) * 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, true && (true)) ? subgroup_local_id + 1 : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))))) << _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)), ~ (_GLF_IDENTITY(~ ((0u ^ 0u)), _GLF_IDENTITY(uint(uvec3(~ ((_GLF_IDENTITY(0u ^ 0u, ~ (~ (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, 0u | (0u)), (0u ^ 0u) - 0u)))))), 1u, 0u)), (uint(uvec3(~ ((0u ^ 0u)), 1u, 0u))) * 1u)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(workgroup_size), min(true ? uint(0u) : _GLF_FUZZED(workgroup_size), true ? uint(0u) : _GLF_FUZZED(workgroup_size))))))), 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) | (subgroup_local_id + 1)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_size))))), 0u)), 1u, (0u ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), ((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))) << 0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u), 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (~ (_GLF_FUZZED(workgroup_base)))) : 0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(workgroup_size), min(true ? uint(0u) : _GLF_FUZZED(workgroup_size), true ? uint(0u) : _GLF_FUZZED(workgroup_size))))))), 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(0u))), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_size))))), 0u)), 1u, (_GLF_IDENTITY(0u, (0u) - 0u) ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u, 0u)))) / 1u)) ^ 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) | 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), 1u * (_GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) | (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) << 0u))))) / 1u), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(71532u)))))))) : 0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(workgroup_size), min(true ? uint(0u) : _GLF_FUZZED(workgroup_size), true ? uint(0u) : _GLF_FUZZED(workgroup_size))))))), 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid)))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_size))))), 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (0u ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))), 1u * ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) | 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), 1u * (_GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) | (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) << 0u))))) / 1u), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(71532u)))))))) : 0u))), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true ? uint(0u) : _GLF_FUZZED(workgroup_size), min(true ? uint(0u) : _GLF_FUZZED(workgroup_size), true ? uint(0u) : _GLF_FUZZED(workgroup_size))))))), 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid)))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_size))))), 0u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (0u ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(uaddCarry(subgroup_local_id, workgroup_id, subgroup_local_id))))) << _GLF_IDENTITY((0u ^ 0u), ~ (_GLF_IDENTITY(~ ((0u ^ 0u)), _GLF_IDENTITY(uint(uvec3(~ ((0u ^ 0u)), 1u, _GLF_IDENTITY(0u, (0u) - 0u))), (uint(uvec3(~ ((_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))), 1u, 0u))) * 1u))))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))), bvec2(bvec4(bvec2((! (false)), _GLF_IDENTITY(true, false || (true))), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))), bvec2(bvec4(bvec2((! (false)), _GLF_IDENTITY(true, false || (true))), true, false))))), true && (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))), bvec2(bvec4(bvec2((! (false)), _GLF_IDENTITY(true, false || (true))), true, false))))))))), (bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), true, false))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true))))))))))))))), ((! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, true)))))))))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(2157.4671, -23.23, 15.85, -9933.0053).w)), vec2(_GLF_FUZZED(9383.9570), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), _GLF_IDENTITY(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-94.04), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), float(mat4(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-94.04), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), 0.0, 1.0, 0.0, sqrt(abs(1.0)), 0.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, sin(0.0), sqrt(log(1.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0)))))), float(_GLF_FUZZED(9067.5092)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x2(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)), 0.0, 0.0, 1.0, 0.0)), float(mat4x2(injectionSwitch[1], _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(-3848.0163))))).x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), _GLF_IDENTITY(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-94.04), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), float(mat4(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-94.04), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), 0.0, 1.0, 0.0, sqrt(abs(1.0)), 0.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, sin(0.0), sqrt(log(1.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0)))))), float(_GLF_FUZZED(9067.5092)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x2(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)), float(mat4x2(injectionSwitch[1], _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0))))) : _GLF_FUZZED(-3848.0163))))).x < injectionSwitch.y))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-94.04), _GLF_IDENTITY(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(-94.04), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), float(mat4(clamp(_GLF_FUZZED(-94.04), _GLF_IDENTITY(_GLF_FUZZED(-94.04), float(mat4x3(_GLF_FUZZED(-94.04), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4318.4731)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-94.04), min(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04))), max(_GLF_FUZZED(-94.04), _GLF_FUZZED(-94.04)))), 0.0, 1.0, 0.0, sqrt(abs(1.0)), 0.0, 0.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, sin(0.0), sqrt(log(1.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0)))))), float(_GLF_FUZZED(9067.5092)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch[1], 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)), float(mat4x2(injectionSwitch[1], _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec2(-9047.7375, -9.8), injectionSwitch)) : 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(-3848.0163))))).x < injectionSwitch.y))))) > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true)))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (_GLF_IDENTITY(! (false || (false)), (! (false || (false))) || false)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_IDENTITY(true, true && (true))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), true)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)), true)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)), true)), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)), true)), true)), true)), false)))))))), false, true, false)))), ! (! ((true)))))) && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! _GLF_IDENTITY((true), ! (! ((true)))))) && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, false))))))) && true) && (true)), ! (! _GLF_IDENTITY((true), ! (! ((true)))))) && _GLF_IDENTITY((false), ((false)) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))) && true))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) - 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true))))))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0)))), float(_GLF_FUZZED(-8.8)), bool(false))), 0.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0)))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true, true, true))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
}
