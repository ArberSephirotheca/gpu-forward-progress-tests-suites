#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = _GLF_IDENTITY(16, max(16, _GLF_IDENTITY(16, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), (~ (_GLF_IDENTITY(16, (16) >> 0))) | (~ (_GLF_IDENTITY(16, (16) >> 0))))))), 0, 1))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(16, (_GLF_IDENTITY(16, (16) - 0)) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) >> 0, clamp(_GLF_IDENTITY((16) >> 0, 1 * ((16) >> 0)), _GLF_IDENTITY((16) >> 0, ((16) >> 0) >> 0), (16) >> 0))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(16, (16) >> 0)), min((_GLF_IDENTITY(16, (16) >> 0)), (_GLF_IDENTITY(16, (16) >> 0))))))))), 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), (~ (_GLF_IDENTITY(16, (16) >> 0))) | (~ (_GLF_IDENTITY(16, (16) >> 0))))))), 0, 1))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), (~ (_GLF_IDENTITY(16, (16) >> 0))) | (~ (_GLF_IDENTITY(16, (16) >> 0))))))), 0, 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, (16) >> 0)), (~ (_GLF_IDENTITY(16, (16) >> 0))) | (~ (_GLF_IDENTITY(16, (16) >> 0))))))), 0, 1)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-52.29)), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) - 0.0)))), false)))), true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false))), bvec3(bvec4(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), true))))))), (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-345.588) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true)))))))) || false)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) || false))))))) || false, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.9, -48.22)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false))))) || false))) && true))))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-656.930))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-30.56)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x2(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(7073.7216)), bool(false))) > injectionSwitch.y)) && true))) || false)))))))) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0))), mat3x2(mat3x2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)))))))).x > injectionSwitch.y)) && true))) || false)))))))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x2(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(7073.7216)), bool(false))) > injectionSwitch.y)) && true))) || false)))))))) || false))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(329.670)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))), injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant((false ? mat4(1.8, 33.55, 70.73, -235.847, 4.5, 696.119, -5.3, 7.6, -3417.2300, -5328.0336, -1.1, -6.2, 5260.3950, 5.1, 9041.9435, 493.984) : mat4(-251.794, -8062.0468, 5.2, 94.14, -958.237, _GLF_IDENTITY(-5083.0140, (true ? -5083.0140 : _GLF_FUZZED(5.3))), -8.4, 174.519, -3.2, 48.53, -1.0, 6012.6577, 2525.2951, 0.7, -1.2, 3244.0707)))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(85.34)), bool(false))))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-1659.5778)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))), false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), false, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false)) || false))))) && true)))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))) || false))))))), false))), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false)))), ! (! (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (_GLF_IDENTITY(true && ((true) || false), bool(bvec3(true && ((true) || false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))))) || false))))), true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) || false))))) || false))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))))))) || false)))))))))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (true && ((true) || false)) && true)))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))), bool(bvec4((_GLF_IDENTITY((true) || false, true && ((true) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (_GLF_IDENTITY(true && ((true) || false), bool(bvec3(true && ((true) || false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))))) || false))))), true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) || false))))) || false))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))))))) || false)))))))))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (true && ((true) || false)) && true)))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))), bool(bvec4((_GLF_IDENTITY((true) || false, true && ((true) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (_GLF_IDENTITY(true && ((true) || false), bool(bvec3(true && ((true) || false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))))) || false))))), true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) || false))))) || false))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))))))) || false)))))))))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (true && ((true) || false)) && true)))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))), bool(bvec4((_GLF_IDENTITY((true) || false, true && ((true) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (_GLF_IDENTITY(true && ((true) || false), bool(bvec3(true && ((true) || false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))))) || false))))), true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) || false))))) || false))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))))))) || false)))))))))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (true && ((true) || false)) && true)))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))), bool(bvec4((_GLF_IDENTITY((true) || false, true && ((true) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)) && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (_GLF_IDENTITY(true && ((true) || false), bool(bvec3(true && ((true) || false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, true && (false))))))))) || false))))), true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) || false))))) || false))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), true && ((true) || false)))))))) || false)))))))))))))), (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false)))), ! (! (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, _GLF_IDENTITY(true && ((true) || false), (true && ((true) || false)) && true)))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))), bool(bvec4((_GLF_IDENTITY((true) || false, true && ((true) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || false))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) && true))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, sqrt(0.0), sqrt(0.0)), vec3(0.0, 1.0, 1.0))), 1.0, log(1.0), 0.0))).x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
