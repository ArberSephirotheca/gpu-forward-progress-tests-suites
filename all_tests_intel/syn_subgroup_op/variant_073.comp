#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.3)), float(0.0), bool(true))), 0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(855.046), (true ? _GLF_FUZZED(855.046) : _GLF_FUZZED(-2.3)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)))).y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))))) && true)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), true))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, true)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))))) || false), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true)))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(16, (16) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(16, (16) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(16, (16) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(16, (16) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0)), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))) >> 0))), ~ (~ (_GLF_IDENTITY(16, (16) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0)))))))) ^ 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(injectionSwitch)))).y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false))), ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, false)))) && true) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false || (false), (false || (false)) && true), true, false))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, abs(0.0), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.3)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false), true, false))), true)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, true)))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, true, true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2((false) && true, false)), true && (bool(bvec2((false) && true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(776.522)), bvec2(false, false)))), max(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(776.522)), bvec2(false, false)))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(776.522)), bvec2(false, false)))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(776.522)), bvec2(false, false))))) * mat2(1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mat2(mat4x2(mat2(mat4x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))))))) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-269.341)), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], clamp(_GLF_IDENTITY((vec2(0.0, 0.0))[0], 0.0 + ((vec2(0.0, 0.0))[0])), (vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[0], max(_GLF_IDENTITY((vec2(0.0, 0.0))[0], float(mat2x3((vec2(0.0, 0.0))[0], 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY((vec2(0.0, 0.0))[0], mix(float((vec2(0.0, 0.0))[0]), float(_GLF_FUZZED(5.5)), bool(false))))))), (vec2(0.0, 0.0))[1]), bvec2(true, true)))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(776.522)), bvec2(false, false))))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-269.341)), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], clamp(_GLF_IDENTITY((vec2(0.0, 0.0))[0], 0.0 + ((vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), (transpose(mat3(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))) * mat3(1.0)))))), 0.0))[0])), (vec2(0.0, 0.0))[_GLF_IDENTITY(0, (0) << 0)], (vec2(0.0, 0.0))[0])), (vec2(0.0, 0.0))[1]), bvec2(true, true)))).x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))))))), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(1.0))))) - 0.0) < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(1.0))))) - 0.0) < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))))))) : _GLF_FUZZED((workgroup_id >> workgroup_id)))) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-8239.4573) : injectionSwitch.x, max(false ? _GLF_FUZZED(-8239.4573) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-8239.4573) : injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.2) : false ? _GLF_FUZZED(-8239.4573) : injectionSwitch.x)))))), 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8239.4573) : injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), min(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))) : _GLF_FUZZED(1686.2794))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-318.401) : injectionSwitch.y))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (0u) << 0u), 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / 1u), 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), (uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / 1u), 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / 1u), 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), uint(uint(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / 1u), 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))))))))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u))))))), _GLF_IDENTITY((min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))), clamp((min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))), _GLF_IDENTITY((min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))), min((min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))), (min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))))), (min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))), 0u, 0u, 0u)))))))) >> 0u)))), (uvec2((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size, 1u)) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0))))))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(2u, 2u))) | (2u))), uint(2u))))) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) / 1u))) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u)))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))) + uvec2(0u, 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u)), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u)))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), (uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u, uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u, clamp((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) >> 0u)))), 1u, 1u, 1u))))))))), 0u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), max(uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u))))), 0u, 0u, 0u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), clamp(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), min(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) / 1u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)))))))), (uvec2((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size, 1u)) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch)), mix(vec2((clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch)))[1], min((clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch)))[1], (clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch)))[1]))), vec2(_GLF_FUZZED(-550.578), _GLF_FUZZED(-5.4)), bvec2(false, false))))).x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(86.94), _GLF_FUZZED(-10.20)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), false, false)))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), (~ (1))))) < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-40953 / -6821)))), bool(false))) > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1)) < subgroup_size, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1)) < subgroup_size, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))), false), false)))))))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17912))))), int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17912))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), 1 << _GLF_IDENTITY(int(2), int(2))), min(min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), 1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), 1 << _GLF_IDENTITY(int(2), int(2))), (min(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), 1 << _GLF_IDENTITY(int(2), int(2)))) / 1))))) >> _GLF_IDENTITY(int(2), int(2))), 1, 0))), 1, 1)) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))))))))), (bool(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true, false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), bool(bvec4(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), false, false, true))))))))), true, false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), ! (! ((bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))), true, false))))), true, false), true)))))), false)))))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))) && true, ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size, _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (subgroup_local_id + 1 < subgroup_size)) || false))))) && true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))) && true, ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size, _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (subgroup_local_id + 1 < subgroup_size)) || false))))) && true) || false), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size, _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! (true && (subgroup_local_id + 1 < subgroup_size)), true && (_GLF_IDENTITY(! (true && (subgroup_local_id + 1 < subgroup_size)), ! (! (! (true && (subgroup_local_id + 1 < subgroup_size))))))))))))) && true, ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) + 1 < subgroup_size, _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) && (subgroup_local_id + 1 < subgroup_size)) || false))))) && true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))), false || (bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))))))), false || (! (bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec2((subgroup_local_id + 1 < subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   buf[next_virtual_gid] = 2;
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, bool(bvec3((! (_GLF_IDENTITY(false, (false) && true))) && true, false, false)))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, bool(bvec3((! (_GLF_IDENTITY(false, (false) && true))) && true, false, false)))) && true), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, bool(bvec3((! (_GLF_IDENTITY(false, (false) && true))) && true, false, false)))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))) && true, bool(bvec3((! (_GLF_IDENTITY(false, (false) && true))) && true, false, false)))) && true), true))))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && _GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, false)))), (! (_GLF_IDENTITY(((false) && true), bool(bvec3(((false) && true), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-38.85), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9867.8937)), bvec2(true, false))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false, false))), true, false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sin(0.0), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(9.2))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0)))).x : _GLF_FUZZED(-682.377))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    return;
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), false || (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! ((! (true))))) || false))))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool(bvec4(false, true, false, true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
