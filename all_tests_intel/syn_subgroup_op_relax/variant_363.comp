#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(-589.774, -797.407), vec2(-1.8, -212.518))) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(-589.774, -797.407), vec2(-1.8, -212.518))) : injectionSwitch)).x > injectionSwitch.y) && true))) || (true && (_GLF_IDENTITY(true, false || (true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-55.29) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))), false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-5.1, 0.8, 653.671).g)), vec2(_GLF_FUZZED(90.50), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)) || false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false), false), true))), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, false || ((_GLF_IDENTITY(false, (false) || false)) && true))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, false))) || false)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))), true && (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), (((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0), clamp(min(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0), min(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0), min(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0))), 1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (uvec3(gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))), abs(1.0), 0.0, 1.0, 1.0, 1.0, exp(0.0)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, false, false, true))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5731.1536) : injectionSwitch.x)), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(1007.5628) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), min(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), exp(0.0))), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5731.1536) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5731.1536) : injectionSwitch.x))) + 0.0), 1.0, determinant(mat3(1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), exp(0.0)))) - 0.0)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED((- 0.8)) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8032.9895)))), min((false ? _GLF_FUZZED((- 0.8)) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8032.9895)))), (false ? _GLF_FUZZED((- 0.8)) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8032.9895)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size))))))) >> 0u), 0u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u)))), (~ ((workgroup_size))))))) >> 0u), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size)))))), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size))))))) + 0u)) | 0u)) >> 0u), 0u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u)))), _GLF_IDENTITY((~ ((workgroup_size))), ((~ ((workgroup_size)))) << 0u))))) >> 0u), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) >> 0u, ((_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) >> 0u) >> 0u)), 0u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size))))))) >> 0u), 0u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u)))), (~ ((workgroup_size))))))) >> 0u), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size)))))), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((workgroup_size))), (~ ((workgroup_size))))))) + 0u)) | 0u)) >> 0u), 0u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((workgroup_size))), min((~ ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) << 0u)))), _GLF_IDENTITY((~ ((workgroup_size))), ((~ ((workgroup_size)))) << 0u))))) >> 0u), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) >> 0u, ((_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) >> 0u) >> 0u)), 0u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size))) | (workgroup_size))) | (workgroup_size))), _GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ ((workgroup_size))) : _GLF_FUZZED(subgroup_size))))))) >> 0u), 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))))) ^ uvec2(0u, 0u)), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(106601u, 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), (((workgroup_size))) | 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(106601u, uint(uvec3(106601u, 0u, 1u))), 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(((workgroup_size)), 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (uint(3u))), uint(3u))) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((workgroup_size)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(106601u, 154161u)), (true ? _GLF_FUZZED(uvec2(106601u, 154161u)) : _GLF_FUZZED(_GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), max((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), _GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), ((min(subgroup_size, subgroup_id) | _GLF_IDENTITY((uvec2(51633u, 169234u) << 44681u), ((uvec2(51633u, 169234u) << 44681u)) >> uvec2(0u, 0u)))) | ((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u))))))))) : uvec2(((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), 0u)))), 1u * (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), max(((workgroup_size)), ((workgroup_size)))), 0u), (false ? _GLF_FUZZED(uvec2(106601u, 154161u)) : uvec2(((workgroup_size)), 0u)))))))))))) >> 0u), 0u, 1u, 1u), min(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))))) ^ uvec2(0u, 0u)), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(106601u, 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), (((workgroup_size))) | 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(106601u, uint(uvec3(106601u, 0u, 1u))), 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(((workgroup_size)), 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (uint(3u))), uint(3u))) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((workgroup_size)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(106601u, 154161u)), (true ? _GLF_FUZZED(uvec2(106601u, 154161u)) : _GLF_FUZZED(_GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), max((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), _GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), ((min(subgroup_size, subgroup_id) | _GLF_IDENTITY((uvec2(51633u, 169234u) << 44681u), ((uvec2(51633u, 169234u) << 44681u)) >> uvec2(0u, 0u)))) | ((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u))))))))) : uvec2(((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), 0u)))), 1u * (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), max(((workgroup_size)), ((workgroup_size)))), 0u), (false ? _GLF_FUZZED(uvec2(106601u, 154161u)) : uvec2(((workgroup_size)), 0u)))))))))))) >> 0u), 0u, 1u, 1u), uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))))) ^ uvec2(0u, 0u)), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), uvec2(((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(106601u, 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(_GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size)))), 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), (((workgroup_size))) | 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(106601u, uint(uvec3(106601u, 0u, 1u))), 154161u), (uvec2(106601u, 154161u)) << uvec2(0u, 0u))) : uvec2(((workgroup_size)), 0u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (uint(3u))), uint(3u))) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((workgroup_size)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(106601u, 154161u)), (true ? _GLF_FUZZED(uvec2(106601u, 154161u)) : _GLF_FUZZED(_GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), max((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), _GLF_IDENTITY((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u)), ((min(subgroup_size, subgroup_id) | _GLF_IDENTITY((uvec2(51633u, 169234u) << 44681u), ((uvec2(51633u, 169234u) << 44681u)) >> uvec2(0u, 0u)))) | ((min(subgroup_size, subgroup_id) | (uvec2(51633u, 169234u) << 44681u))))))))) : uvec2(((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), 0u)))), 1u * (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_size)), max(((workgroup_size)), ((workgroup_size)))), 0u), (false ? _GLF_FUZZED(uvec2(106601u, 154161u)) : uvec2(((workgroup_size)), 0u)))))))))))) >> 0u), 0u, 1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_size, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) - 0u)) : ~ (~ ((workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | _GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))))))), (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))) - 0u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) >> _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) ^ 0u))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))))), ((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))))))))) | ((~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u))), 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (0u)), clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u)), uint(uvec3(uint(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u)), 1u, (0u | 0u))))), (workgroup_base) ^ 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))) / 1u)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true))), true, _GLF_IDENTITY(false, (false) || false)))))))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))), true && ((_GLF_DEAD(false)) && true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(false)) && true)) || false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false)) && true), (((_GLF_DEAD(false)) && true)) || false), (! ((_GLF_DEAD(false)) && true)) || false))), true, _GLF_IDENTITY(true, true && (true))), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(false)) && true)) || false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(false)) && true)) || false))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(false)) && true)) || false))), true, true), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4((! ((_GLF_DEAD(false)) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4((! ((_GLF_DEAD(false)) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) || false))), true, true), false)))))))))), false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ((false)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), false, false)))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))), bool(bool(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(float(float(injectionSwitch.x)), (true ? float(float(injectionSwitch.x)) : _GLF_FUZZED(8885.9792)))))) > injectionSwitch.y)), false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (false), true, true)))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (false), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (false), true, true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), bool(bvec3(! (false), true, true)))))))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))))))), bool(bvec4(false, false, false, false))) ? _GLF_FUZZED(88305) : _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1) + 0, max((false ? _GLF_FUZZED(88305) : 1) + 0, (false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) << 0, 1 * ((_GLF_IDENTITY(1, (1) | (1))) << 0)))))) + 0)))))))) % subgroup_size), _GLF_IDENTITY(max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - 0u)) | (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (88305) * 1)))) : _GLF_IDENTITY(1, (1) | 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, min(1, 1))))), (1) | 0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))) + (_GLF_IDENTITY(88305, (88305) * 1)))) : _GLF_IDENTITY(1, (1) | 0))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0), clamp(false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0), false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0), _GLF_IDENTITY(false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0)), (~ (false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0))) | 0)))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, _GLF_IDENTITY((88305), ((88305)) ^ 0) * 1)))) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) / 1)), int(ivec4(false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, _GLF_IDENTITY((88305), ((88305)) ^ 0) * 1)))) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) / 1)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), min(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69797))) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1)))))) | (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0))))))) - 0)))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-51510)))) : 1), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(88305) : 1)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(63593)))))), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 0 ^ (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), (1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), clamp(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69797))) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1)))))) | (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0))))))) - 0)))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-51510)))) : 1), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(88305) : 1)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(63593)))))), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 0 ^ (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), (1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), clamp(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69797))) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1)))))) | (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0))))))) - 0)))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-51510)))) : 1), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(88305) : 1)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(63593)))))), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 0 ^ (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), (1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), clamp(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69797))) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1)))))) | (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0))))))) - 0)))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-51510)))) : 1), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(88305) : 1)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(63593)))))), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 0 ^ (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), (1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), clamp(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(69797))) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1)))))) | (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), max((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-63564)))))))) + 0))))))) - 0)))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-51510)))) : 1), ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(88305) : 1)) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(63593)))))), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 0 ^ (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), (1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))) | (_GLF_IDENTITY(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), clamp(1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))), (false ? _GLF_FUZZED(88305) : 1))))))))))))))))) % subgroup_size)), 1u * (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(subgroup_id)))), ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(subgroup_id))))))), (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size)))))) | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), clamp(((subgroup_size)) | ((subgroup_size)), ((subgroup_size)) | ((subgroup_size)), ((subgroup_size)) | ((subgroup_size))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(workgroup_base))) + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, workgroup_id, subgroup_id)) : _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))) ? _GLF_FUZZED(_GLF_IDENTITY(88305, min(88305, _GLF_IDENTITY(88305, min(_GLF_IDENTITY(88305, (88305) >> 0), 88305))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4)))), (1) | 0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + _GLF_IDENTITY((_GLF_IDENTITY(88305, (88305) * 1)), ((_GLF_IDENTITY(88305, (88305) * 1))) << ((0 | 0) >> _GLF_IDENTITY(int(1), int(1)))))) : _GLF_IDENTITY(1, (1) | 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7))), ~ (~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))), 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) | 0)), _GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (88305) - 0)) * _GLF_IDENTITY(1, min(1, 1)))))) : _GLF_IDENTITY(1, (1) | 0))), clamp(_GLF_IDENTITY(((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (88305) - 0)) * 1)))) : _GLF_IDENTITY(1, (1) | 0))), (((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (88305) - 0)) * 1)))) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(14628))))))) | (((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (88305) - 0)) * 1)))) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (88305) - 0)) * 1)))) : _GLF_IDENTITY(1, (1) | 0))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(88305, 0 + (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, (_GLF_IDENTITY(88305, int(ivec4(_GLF_IDENTITY(88305, (true ? 88305 : _GLF_FUZZED(-92827))), 1, 1, 1)))) - 0)) * _GLF_IDENTITY(1, (1 ^ 1) | (1)))))) : _GLF_IDENTITY(1, (1) | 0))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), uint(1u))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), 1 * (1)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), ((1)) | ((1))), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), 0 | ((1))))), max((1), (1))))) + 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), max(_GLF_IDENTITY((1), ((1)) >> 0), (1))))))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))), max((1), (1)))), clamp(0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + 0))))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), _GLF_IDENTITY(((false ? _GLF_FUZZED(88305) : 1)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), 0 ^ ((false ? _GLF_FUZZED(88305) : 1)))) * 1))) << 0) - 0))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, _GLF_IDENTITY(1, max(1, 1)), 0)), (int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) / 1), 1, 0))) << 0)), (false ? _GLF_FUZZED(88305) : 1))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), uint(1u))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(35536)))))), max(((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(35536)))))), ((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(35536))))))))), 1 * (1)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))), clamp(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))), _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))), (false ? _GLF_FUZZED(11871) : _GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))))), _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))), (_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))))) | (_GLF_IDENTITY((1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1)))))), 1 * (~ (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) + 0), max(_GLF_IDENTITY((1), ((1)) >> 0), (1)))))))))))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((1), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), (1)))), clamp(0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + 0))))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(88305), max(_GLF_FUZZED(88305), _GLF_FUZZED(88305))) : 1)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), 0 ^ ((false ? _GLF_IDENTITY(_GLF_FUZZED(88305), (_GLF_FUZZED(88305)) ^ (0 << _GLF_IDENTITY(int(1), int(1)))) : 1)))) * 1))) << 0) - 0))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, _GLF_IDENTITY(1, max(1, 1)), 0)), (int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(34482) : 0)), (1) + 0, (1) + 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 + (_GLF_IDENTITY(1, max(1, 1))))) / 1), 1, 0))) << 0)), (false ? _GLF_FUZZED(88305) : 1))))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), uint(1u)))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), uint(1u))))) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))), 1 * (1)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(subgroup_local_id)))) | _GLF_IDENTITY((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), clamp((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), _GLF_IDENTITY((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), ((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))) / 1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))))) | ((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((-61019 & 0) << _GLF_IDENTITY(int(0), int(0))) | ((1))))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1)))))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1)))))), (0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1))))))) - 0)) | (0 | (_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) >> 0), (1))))))))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((1), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), (1)))), clamp(0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((1), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), (1)))), clamp(0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((1), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), max((1), (1)))), clamp(0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1)))), 0 | (_GLF_IDENTITY((1), max((1), (1))))))) + 0)) << 0), 1))))))) << 0)) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 | (int(4)), (false ? _GLF_FUZZED(-66801) : 0 | (int(4)))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), _GLF_IDENTITY(((false ? _GLF_FUZZED(88305) : 1)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(88305) : 1), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(88305), (_GLF_FUZZED(88305)) ^ 0) : 1), 0 ^ ((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (false ? _GLF_FUZZED(ivec4(-84802, -41085, 9413, 82791).t) : 88305))) : 1, ~ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(88305, (false ? _GLF_FUZZED(ivec4(-84802, -41085, 9413, 82791).t) : 88305))) : 1))))))) * 1))) << 0) - 0))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, _GLF_IDENTITY(1, max(1, 1)), 0)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, _GLF_IDENTITY((1) + _GLF_IDENTITY(0, 0 ^ (0)), clamp((1) + 0, (1) + 0, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) | ((1))) + 0))) : _GLF_FUZZED(-6495))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1), 1, 0))) << 0)), (false ? _GLF_FUZZED(88305) : 1))))))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.6), _GLF_FUZZED(((6.6 / 5.1) / 244.454))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(! (! (bool(bool(false)))), true)))), false), true, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(! (! (bool(bool(false)))), true)))), false), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(! (! (bool(bool(false)))), true)))), false), true, false))), false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))), bool(bvec2(! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, true), bvec3(bvec4(bvec3(bool(bool(false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))), false), true, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(! (! (bool(bool(false)))), true)))), false), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(false)))), true), bvec2(bvec4(bvec2(! (! (bool(bool(false)))), true), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false)))))), false), true, false))), false))))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-995.916)), bool(false))) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec4(next_virtual_gid, 0u, 0u, 0u)), (uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 0u, 0u), max(uvec4(next_virtual_gid, 0u, 0u, 0u), uvec4(next_virtual_gid, 0u, 0u, 0u))))))) | 0u)), next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - 0)), min(uint(2), uint(2))), _GLF_IDENTITY(4, (4) + 0), 64, 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, 939.456)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, false, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))), ! (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))), (! (true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))))))), bool(bvec4(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))))))), false, false, true))))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))))), true)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, true && (false)))))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9975.2927), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9975.2927), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y))))))), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, sin(0.0), log(1.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, length(vec2(0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
