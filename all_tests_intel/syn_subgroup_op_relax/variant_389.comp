#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = _GLF_IDENTITY(16, int(_GLF_IDENTITY(ivec2(16, 1), (true ? ivec2(16, 1) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(-71136, int(ivec4(-71136, 0, 1, 0))), 7878))))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 1u))), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(uint(false)) : _GLF_IDENTITY(uint(8u), (uint(8u)) | (0u ^ 0u)))))) ^ (workgroup_size), _GLF_IDENTITY(0u + ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (workgroup_size)), clamp(0u + ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (workgroup_size)), 0u + ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (workgroup_size)), 0u + ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (workgroup_size)))))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, 1u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, 1u, 0u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) * 1u)))), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ 0u), 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) ^ 0u))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(42247)))], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(2.4), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-34.03)), float(injectionSwitch[1]), bool(true)))) - 0.0), injectionSwitch[1], injectionSwitch[1])))))).y)), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- 2755.1612, min(- 2755.1612, - 2755.1612))))), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- 2755.1612, min(- 2755.1612, - 2755.1612))))), float(injectionSwitch.y), bool(true)))) - log(1.0))))) + 0.0)), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0))), min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), 0 ^ (int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))) / 1.0)) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, abs(0.0)))) + (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mix(float(float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED(-0.5)), bool(false)))))) : _GLF_FUZZED(7.4))))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0)), 0.0), (_GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))) / 1.0)) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), injectionSwitch.x)) / 1.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   _GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(subgroup_local_id)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))) && true))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, cos(sqrt(0.0)), 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, cos(sqrt(0.0)), 0.0, 1.0)))))) < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, 0.0, 0.0, 1.0, 0.0, cos(sqrt(0.0)), 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, cos(sqrt(0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, sin(0.0), 0.0, sin(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, abs(0.0)), (mat2x3(0.0, sin(0.0), 0.0, sin(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, abs(0.0))) * mat2(1.0)))), 1.0)))))) < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(false))))
          break;
         break;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))
        continue;
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y))))))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sin(-9.3)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(sin(-9.3))))) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false))
          break;
         barrier();
        }
       return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))) || false)))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), round(length(normalize(1.0))), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), round(length(normalize(1.0))), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), round(length(normalize(1.0))), 0.0)) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0, 0.0, 0.0))), exp(0.0), 1.0, length(tan(vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))), sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-52.57) : length(0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 0.0, 1.0)))))))), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, length(tan(vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))), sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(573.711) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-5.3)))))))) - determinant(mat4(0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1239.9471)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(98.50))), 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))))) * mat4(1.0))))))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-6.0)), bool(false)))) * 1.0) > injectionSwitch.y))))
          barrier();
         do
          {
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x2(injectionSwitch[1], 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0)), (float(mat4x2(injectionSwitch[1], 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0))) + 0.0)))).x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(-9.0, 5651.2905, -83.94, -14.23))) : injectionSwitch.y))))));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY(0, (0) | (0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))))
            break;
           barrier();
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), true && ((false))))), ((! (! _GLF_IDENTITY((false), true && ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(6.1, 0.8, -0.9, -20.82, 9.3, 4.7, 4330.6789, 0.0)) : mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))).x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(6.1, 0.8, -0.9, -20.82, 9.3, 4.7, 4330.6789, 0.0)) : mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))).x)) > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-19.76)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cos(injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cos(injectionSwitch)))).x > injectionSwitch.y)))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
                  break;
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false, false)), ! (! (bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false, false)))))))))));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true))) && true))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + abs(vec2(0.0, 0.0))))[0], _GLF_FUZZED(6242.1449)), vec2(_GLF_FUZZED(-203.286), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)), false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
            break;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))))))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))))))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_IDENTITY(_GLF_FUZZED(-1709.4948), 1.0 * (_GLF_FUZZED(-1709.4948)))), bool(false))), injectionSwitch[1])).y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bvec2(true, true))), ! (! ((bool(bvec2(true, true)))))))))))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true)))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true))))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true)))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1896.5812), _GLF_FUZZED((true ? 7974.6865 : 0.9))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))) || false)) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.7))), injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4020.0975), _GLF_FUZZED((+ -922.108))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))).y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true, true)))))))))))), false)))), true))))))) && true), true))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true))) || false)) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(true)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(true)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(true)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(true)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.8 / -916.122))), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(true)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), true))))) && true)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y))))), true, true)))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8694.9562)), vec2(_GLF_FUZZED(79.67), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8.9)), bool(false))) > injectionSwitch.y, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(false || (false || (true)), _GLF_IDENTITY(true, true && (true)) && (false || (false || (true)))))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), false, true))) && true, (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), false, true))) && true, (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), false, true))) && true, ((bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), false, true))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))) || false)) || false)) && true))), true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), true, _GLF_IDENTITY(true, false || (true)))))))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false), false, false, false))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)), (bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true))) || false)))), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))))))) && true)), false))), true && (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))))), false))))), ! (! (! (bool(bvec2(_GLF_DEAD(false), false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))))))), ! (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false)))))))))))), false, true, true))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(72429) : _GLF_IDENTITY((0) - int(_GLF_ZERO(0.0, injectionSwitch.x)), min((0) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))); _injected_loop_counter --)
      {
       subgroupAll(false);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.6, -8.7)) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
                  return;
                }
               else
                {
                }
              }
             else
              {
              }
             barrier();
            }
          }
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.y), bool(true))))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     for(int _injected_loop_counter = (0 & -99292); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), bool(bvec2(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(20.56)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x > injectionSwitch.y))))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.y)))))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))), (bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) || false))), bool(bvec4(! (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))), (bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) || false))), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(fma(9.9, 1.1, 0.4)))) < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-367.611)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.35), _GLF_FUZZED(960.293)), bvec2(false, false))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), 1.0 * ((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y)))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.35), _GLF_FUZZED(960.293)), bvec2(false, false))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), 1.0 * ((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y)))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.35), _GLF_FUZZED(960.293)), bvec2(false, false))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), 1.0 * ((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y)))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.35), _GLF_FUZZED(960.293)), bvec2(false, false))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y), 1.0 * ((false ? _GLF_FUZZED(-4686.8548) : injectionSwitch.y)))) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) * 1.0))))), bool(true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-827.364) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-827.364) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-827.364) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) - 0.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))
        barrier();
      }
     else
      {
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    continue;
                  }
                }
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.0, 2510.1813)) : injectionSwitch)), injectionSwitch)).y))))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                continue;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     do
                      {
                       subgroupAll(true);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          continue;
                         continue;
                        }
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false))))))))))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))))), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), false, false, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
    }
  }
 else
  {
  }
}
