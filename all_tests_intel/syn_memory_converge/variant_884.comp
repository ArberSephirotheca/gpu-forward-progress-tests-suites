#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), true && ((false))), ! (! (false || (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y)))))) ? injectionSwitch.x : _GLF_FUZZED(7.1))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (false ? _GLF_FUZZED(870.723) : float(mat2x4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))))), bool(bvec4(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(true, ! (! (true))), false, true))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) ? injectionSwitch.x : _GLF_FUZZED(7.1))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))) || false)))))))) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true)))) && true))))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), true))))), false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false, false), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), true))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bool(false)))), true))))), false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false, false), true)))), true)))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, ! (! (false))))), true, false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), false || ((false)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || _GLF_IDENTITY((false), false || ((false)))) || false, ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || _GLF_IDENTITY((false), false || ((false)))) || false)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-23.64)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-1.2)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-16.87))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-96.51), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, true)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(68.16), float(mat2x4(_GLF_FUZZED(68.16), 0.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.7)), float(1.0), bool(true))), 1.0, 0.0)))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))), ! (! (bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))), ! (! (bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))), ! (! (bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, true)))))), false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && true), false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true)))))), false))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), bool(bvec3((! (! (true))), true, false))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), bool(bvec3((! (! (true))), true, false))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false), false)))), false, true))))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(false || (bool((false))), bool(bvec4(false || (bool((false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(false || (bool((false))), bool(bvec4(false || (bool((false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(false || (bool((false))), bool(bvec4(false || (bool((false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false), true))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || (bool((false))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || _GLF_IDENTITY((bool((false))), bool(bvec4((bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (false) || false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))), ! (! (false))), true, false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), (vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))) * vec3(1.0, 1.0, 1.0)))) * 1.0))) - 0.0), (injectionSwitch.x) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float((injectionSwitch.x) + abs(0.0)), bool(true))))), mix(float(_GLF_FUZZED(-547.184)), float(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float((injectionSwitch.x) + abs(0.0)), bool(true)))))), bool(true))))), float(_GLF_FUZZED(4.1)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-4929.3511)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(-4929.3511)), max(float(_GLF_FUZZED(-4929.3511)), float(_GLF_FUZZED(-4929.3511)))))), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))), true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-3.6)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-4929.3511)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-4929.3511)), (float(_GLF_FUZZED(-4929.3511))) * 1.0), float(_GLF_FUZZED(-4929.3511)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float((injectionSwitch.x) + abs(0.0)), float(_GLF_FUZZED((true ? -1.3 : -8.3))), bool(false)))) - 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), max(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1)))), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(false, ! (! (false)))))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, sqrt(0.0), abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0))), cos(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0))), (true ? _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, sqrt(0.0), abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0))), cos(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0))), (float(mat4x3(injectionSwitch.x, sqrt(0.0), abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(tan(0.0), 0.0, abs(0.0), 0.0))), cos(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0)))) / 1.0) : _GLF_FUZZED(728.671)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))) * 1.0)), (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))) - log(1.0)))), float(_GLF_FUZZED(4.1)), bool(_GLF_IDENTITY(false, ! (! (false))))))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false))))))))), true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(false, ! (! (false)))))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(length(vec3(0.0, 0.0, 0.0))), 0.0), max(vec4(injectionSwitch, exp(length(vec3(0.0, 0.0, 0.0))), 0.0), vec4(injectionSwitch, exp(length(vec3(0.0, 0.0, 0.0))), 0.0))))).y)))) && true), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), max(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), float(_GLF_FUZZED(-1.6)), bool(false)))))), (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), (float(_GLF_FUZZED(4.1))) - 0.0), bool(false)), max(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), max(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), float(_GLF_FUZZED(-1.6)), bool(false)))))), (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), (float(_GLF_FUZZED(4.1))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), max(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), float(_GLF_FUZZED(-1.6)), bool(false)))))), (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), (float(_GLF_FUZZED(4.1))) - 0.0), bool(false)))))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float((injectionSwitch.x) + abs(0.0)), bool(true)))), (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float((injectionSwitch.x) + abs(0.0)), bool(true))))))))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)))), bool(bvec2((_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)))), false))))))), true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((8084.5175 + -255.504)) : injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0), (_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0)) + 0.0))), float(_GLF_FUZZED(4.1)), bool(false)), mix(float(_GLF_FUZZED(-55.55)), float(mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(4439.5749)), (float(_GLF_FUZZED(4439.5749))) - 0.0), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false))), bool(true))))), float(_GLF_FUZZED(-4929.3511)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), min(float(_GLF_FUZZED(4.1)), float(_GLF_FUZZED(4.1)))), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), min(float(_GLF_FUZZED(4.1)), float(_GLF_FUZZED(4.1)))), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.9) : mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(4.1)), min(float(_GLF_FUZZED(4.1)), float(_GLF_FUZZED(4.1)))), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))))))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), mix(float(_GLF_FUZZED(1617.9298)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0))), bool(true))), (injectionSwitch.x) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + abs(0.0) : _GLF_FUZZED(361.619))), (injectionSwitch.x) + abs(0.0)))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(false), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(float(false), min(_GLF_IDENTITY(float(false), min(float(false), float(false))), float(false)))), bool(true))))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + abs(0.0) : _GLF_FUZZED(361.619))), (injectionSwitch.x) + abs(0.0)))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false))) : _GLF_FUZZED(324.501)))), float(_GLF_FUZZED(-4929.3511)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(radians(dot(vec4(3.8, -15.91, 846.393, 24.09), vec4(978.698, -30.36, 8.9, 4.0)))))), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(161.140)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))))))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), mix(float(_GLF_FUZZED(1617.9298)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0))), bool(true))), (injectionSwitch.x) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + abs(0.0) : _GLF_FUZZED(361.619))), (injectionSwitch.x) + abs(0.0)))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(false), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(float(false), min(_GLF_IDENTITY(float(false), min(float(false), float(false))), float(false)))), bool(true))))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + abs(0.0) : _GLF_FUZZED(361.619))), (injectionSwitch.x) + abs(0.0)))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false))) : _GLF_FUZZED(324.501)))), float(_GLF_FUZZED(-4929.3511)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(radians(dot(vec4(3.8, -15.91, 846.393, 24.09), vec4(978.698, -30.36, 8.9, 4.0)))))), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(161.140)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))).x, 0.0, 1.0)), (float(vec3(injectionSwitch.x, 0.0, 1.0))) * 1.0)), mix(float(_GLF_FUZZED(1617.9298)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.x, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(6.9) : float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.x, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)))))))), 0.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.1) : float(vec3(injectionSwitch.x, 0.0, 1.0))))), max((_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.1) : float(vec3(injectionSwitch.x, 0.0, 1.0))))), (_GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.1) : float(vec3(injectionSwitch.x, 0.0, 1.0))))))) * 1.0))), bool(true))), (injectionSwitch.x) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-4692.8843)), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))), max(float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))))), bool(true))))))), (false ? _GLF_FUZZED(-896.526) : float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))), max(float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(361.619), mix(float(_GLF_FUZZED(361.619)), float(_GLF_FUZZED((false ? 18.55 : 99.54))), bool(false))))), (injectionSwitch.x) + abs(0.0)))))), bool(true))))))))), float(_GLF_FUZZED(4.1)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false)))) + abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float(_GLF_IDENTITY((0.0), float(vec4(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED((27.84 + 181.692))), bool(false))) - 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + abs(0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(false), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(float(false), min(_GLF_IDENTITY(float(false), min(float(false), float(false))), float(false)))), bool(_GLF_IDENTITY(true, (true) || false)))))), float(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), min(_GLF_IDENTITY((injectionSwitch.x) + abs(0.0), (true ? (injectionSwitch.x) + abs(0.0) : _GLF_FUZZED(361.619))), (injectionSwitch.x) + abs(0.0)))), bool(true))))))), float(_GLF_FUZZED(4.1)), bool(false))) : _GLF_FUZZED(324.501)))), float(_GLF_FUZZED(-4929.3511)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0) + abs(0.0))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(radians(dot(vec4(3.8, -15.91, 846.393, 24.09), vec4(978.698, -30.36, 8.9, 4.0))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(8262.1243) : _GLF_IDENTITY((true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(radians(dot(vec4(3.8, -15.91, 846.393, 24.09), vec4(978.698, -30.36, 8.9, 4.0))))), ((true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(radians(dot(vec4(3.8, -15.91, 846.393, 24.09), vec4(978.698, -30.36, 8.9, 4.0)))))) / 1.0)))), mix(float(_GLF_FUZZED(4439.5749)), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) < injectionSwitch.y)))))) / 1.0) + abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(161.140)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), float(_GLF_FUZZED(4.1)), bool(false)))), float(_GLF_FUZZED(-4929.3511)), bool(false))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(4.1)), bool(false)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-4929.3511, min(_GLF_IDENTITY(-4929.3511, max(_GLF_IDENTITY(-4929.3511, (true ? -4929.3511 : _GLF_FUZZED(-0.0))), -4929.3511)), _GLF_IDENTITY(-4929.3511, mix(float(-4929.3511), float(_GLF_FUZZED(-3679.1018)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))))))) > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x, gl_WorkGroupID.x))) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) : _GLF_FUZZED((write_val >> subgroup_local_id))));
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true))))) && true))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(write_val)), (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, max(write_val, write_val))) << 0u)))) - 0u), (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(write_val, (write_val) / 1u)))) << 0u);
}
