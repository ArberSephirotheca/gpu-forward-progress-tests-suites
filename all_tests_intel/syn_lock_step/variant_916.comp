#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec2 _f0;
 vec4 _f1;
 bvec4 _f2;
 uvec4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 bvec3 _f1;
 int _f2;
 ivec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4 _f1;
 uvec4 _f2;
 bool _f3;
 mat2x4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 uvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 uvec3 _f1;
 mat3 _f2;
 ivec4 _f3;
 uint virtual_gid;
 int _f4;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
 mat4x2 _f2;
 float _f3;
 _GLF_struct_1 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 _GLF_struct_6 _f2;
 ivec3 _f3;
 uvec3 _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(mat4x3(1.0), _GLF_struct_0(mat2(1.0)), mat4x2(1.0), 1.0, _GLF_struct_1(mat3x2(1.0), uvec3(1u), mat3(1.0), ivec4(1), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1), bvec2(true)), mat4(1.0), _GLF_struct_6(uvec3(1u), _GLF_struct_3(mat4(1.0), mat4(1.0), uvec4(1u), true, mat2x4(1.0), bvec2(true)), _GLF_struct_4(bvec3(true), bvec3(true), 1, ivec3(1), bvec4(true)), _GLF_struct_5(bvec2(true), vec4(1.0), bvec4(true), uvec4(1u), ivec4(1)), uvec2(1u), vec2(1.0)), ivec3(1), uvec3(1u), mat2x4(1.0));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0)))); _injected_loop_counter ++)
  {
   buf[_GLF_struct_replacement_7._f0._f4.virtual_gid] = 1;
  }
 buf[next_virtual_gid] = 2;
}
