#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : injectionSwitch.y))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(937.643)), vec2((vec2(mat2(injectionSwitch, sin(0.0), 0.0)))[0], (vec2(mat2(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-173.518)), vec2(_GLF_FUZZED((false ? -4712.2222 : -9.8)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)))).x)))) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || false)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(38.76))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x), max(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x)) - 0.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x)))))) > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 1975.7168)), _GLF_FUZZED(-56.80)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), (! (! _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))), ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), (! (! _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false))))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false))))))) && true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false))))))) && true)))), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false))))), ! (! ((! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec3(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), true, false))))))))))))) && true))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), (injectionSwitch.x < injectionSwitch.y)))) && true)), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), bool(bvec4(bool((false) && true), false, false, true)))))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true), true && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))) && true))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && ((_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), true, true))), (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (! (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(ceil(vec2(-58.77, -26.46))) : vec2(mat2x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0))))).y)))))) && true)), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), _GLF_IDENTITY(! (! (bool(bool((! (false)))))), false || (! (! (bool(bool((! (false))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-683.971)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))))) && true))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true, false, true)))) || false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true, false, true)))) || false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, false || (false))))))))) || false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.6)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), 0u ^ ((gl_WorkGroupID.x))) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x)), gl_WorkGroupID.x))) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x) << 0u))))) * ((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), uint(0u)))))) / 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-42.98), _GLF_FUZZED(-6.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(uintBitsToFloat(num_workgroup)) : (injectionSwitch)[1]))), bvec2(true, true))).y, (false ? _GLF_FUZZED(-214.690) : injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-214.690) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, cos(sin(vec2(0.0, 0.0))) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(0.0, 0.0) : _GLF_FUZZED(atanh(vec2(2.2, 831.159)))))))).x, tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(2496.7611)), bool(false))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - 0u), max(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - 0u), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - 0u)))) | 0u), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - 0u), 1u, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)))))) | uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)))), 0u | (_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | _GLF_IDENTITY((uint(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), uint(uvec4(uint(subgroup_size), 1u, 1u, 0u))))))), _GLF_IDENTITY(0u ^ ((uint(subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : 0u ^ ((uint(subgroup_id * subgroup_size))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false)))), false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), false)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), true, true, false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))), false, true, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && (! (false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), true, false))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.4)), bool(false))), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(-4.2) : (injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(-4.2) : (injectionSwitch)[0], max(_GLF_IDENTITY(false ? _GLF_FUZZED(-4.2) : (injectionSwitch)[0], (false ? _GLF_FUZZED(-1589.8245) : false ? _GLF_FUZZED(-4.2) : (injectionSwitch)[0])), false ? _GLF_FUZZED(-4.2) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(3.1), (_GLF_FUZZED(3.1)) * 1.0)), vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (_GLF_DEAD(false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, false)), (bool(bvec3(! (! (false)), false, false))) && true)))))), ! (! (_GLF_IDENTITY((! (! (false))), bool(bvec4(_GLF_IDENTITY((! (! (false))), true && _GLF_IDENTITY(((! (! (false)))), bool(_GLF_IDENTITY(bool(((! (! (false))))), ! (! (_GLF_IDENTITY(bool(((! (! (false))))), true && (bool(((! (! (false))))))))))))), true, true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, false)), (bool(bvec3(! (! (false)), false, false))) && true)))))), ! (! (_GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && _GLF_IDENTITY(((! (! (false)))), bool(_GLF_IDENTITY(bool(((! (! (false))))), ! (! (_GLF_IDENTITY(bool(((! _GLF_IDENTITY((! (false)), false || ((! (false))))))), true && (bool(((_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && _GLF_IDENTITY(((! (! (false)))), bool(_GLF_IDENTITY(bool(((! (! (false))))), ! (! (_GLF_IDENTITY(bool(((! _GLF_IDENTITY((! (false)), false || ((! (false))))))), true && (bool(((_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && _GLF_IDENTITY(((! (! (false)))), bool(_GLF_IDENTITY(bool(((! (! (false))))), ! (! (_GLF_IDENTITY(bool(((! _GLF_IDENTITY((! (false)), false || ((! (false))))))), true && (bool(((_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))), true, true, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bool(bool(bvec2((! (false)), false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false))))), true, true)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true))))))), (bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true)))))))) || false))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true))))))), (bool(bool((! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && ((! (! (false))))), true, true, true)))))))) || false)))))))), ! (! (! (! (_GLF_IDENTITY((! (! (false))), bool(bvec4(_GLF_IDENTITY((! (! (false))), true && ((! (! _GLF_IDENTITY((false), ((false)) || false))))), true, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, false, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-41.00), max(_GLF_FUZZED(-41.00), _GLF_FUZZED(-41.00)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-41.00), max(_GLF_FUZZED(-41.00), _GLF_FUZZED(-41.00)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), float(_GLF_FUZZED(8214.8191)), bool(false))))) < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), ! (! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(false)))) || false)), ! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))))))) || false)), ! (! (! (false))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (! (! (false))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (! (! (false)))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))) || false)), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))), (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(82.58, -7.5), vec2(0.1, -1.4), injectionSwitch)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), bool(true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))), ! (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec3(bvec2((false) && true, true), false))), true, false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, true))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, true)))))) && true)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))), true && (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))))))))))), ((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))))))))))) || false) && true)))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(98.14) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false))), false || (_GLF_IDENTITY((bool(bvec4(false, true, true, false))), ! (! ((bool(bvec4(false, true, true, false))))))))), true && ((! _GLF_IDENTITY((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_IDENTITY((bool(bvec4(false, true, true, false))), ! (! ((bool(bvec4(false, true, true, false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size) / _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup)))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[next_virtual_gid] = 2;
}
