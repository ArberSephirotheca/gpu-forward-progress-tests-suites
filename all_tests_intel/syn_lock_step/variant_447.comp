#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), true))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = _GLF_IDENTITY(16, (_GLF_IDENTITY(16, (16) | 0)) | (16));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))) << 0u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))) >> 0u))) + subgroup_id * subgroup_size) << 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2388.2866) : _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-330.655)))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655), max(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655), _GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-330.655)) - 0.0)))))) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))))))) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).x)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((-2701.8701 * -2.9))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), bool(false))), clamp(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, _GLF_IDENTITY(1.0 * (-2701.8701), (1.0 * (-2701.8701)) * cos(0.0))) * -2.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (_GLF_IDENTITY(-2701.8701, float(mat3(_GLF_IDENTITY(-2701.8701, (-2701.8701) - 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) * -2.9))), bool(false))), _GLF_IDENTITY(float(float(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), bool(false)), (false ? _GLF_FUZZED(-16.34) : mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), bool(false))))))), min(float(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, cos(0.0), 1.0, 1.0, 1.0)), (true ? float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, cos(0.0), 1.0, 1.0, 1.0)) : _GLF_FUZZED(distance(vec3(-113.479, 0.5, -58.88), vec3(-365.048, -74.51, -830.946))))))), mix(float((injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), (float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9)))) - 0.0), bool(false))))), float(float(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), bool(false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((_GLF_IDENTITY(-2701.8701, 1.0 * (-2701.8701)) * -2.9))), bool(false)))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, log(1.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-49.78)) : 0.0)), 1.0, _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(989.138)), bool(false))), 0.0)))) / abs(1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((-2701.8701 * -2.9))), bool(false))) / abs(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0)))))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  barrier();
 buf[next_virtual_gid] = 2;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / sqrt(1.0)), injectionSwitch.y))))))), ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / sqrt(1.0)), injectionSwitch.y)))))))) && true) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) || false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, sqrt(0.0), abs(0.0)))).x > injectionSwitch.y)))))))))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY((! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false))))) || false))), ! (! ((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), false || (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), true)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), true)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), false)))))))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x, (false ? _GLF_FUZZED(ceil(40.64)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)))))))))))) || false)))))))))))), ! (! ((_GLF_IDENTITY((! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false))))) || false))), ! (! ((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), false || (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), true)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), true)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))), false)))))))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x, (false ? _GLF_FUZZED(ceil(40.64)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)))))))))))) || false))))))))))))))) && true)))));
  }
}
