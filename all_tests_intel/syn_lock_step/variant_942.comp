#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))))))) || false)))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - (0 ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) | (int(6)))))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(691.205, _GLF_IDENTITY(812.353, (false ? _GLF_FUZZED(dot(vec3(-408.150, -901.454, 4468.2551), vec3(-9252.0858, -1.5, -5.9))) : 812.353)), 77.27, 6766.2424) * mat2x4(4.2, -1.0, 8.3, 765.406, 636.592, -295.322, -0.3, 993.301))) : injectionSwitch)), 0.0))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool(bool(injectionSwitch.x > injectionSwitch.y))), false || ((bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _injected_loop_counter)) != (1 | (1 & 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_IDENTITY(ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))), 0, 0, 0), (ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))), 0, 0, 0)) | (ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))), 0, 0, 0)))))) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) - 0), 0))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (0 << _GLF_IDENTITY(int(7), int(7))) | (5))))), _GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)), (false ? _GLF_FUZZED(vec4(-8.4, 96.10, -0.1, 8.3)) : vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED((-2520.3447 * 4.7))), float(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-173.230 + -20.76)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, float(mat2x4((0.0) * 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) / 1.0)))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0))))))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (0 << _GLF_IDENTITY(int(6), int(6))) | (int(5))), int(5))), int(ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(_GLF_IDENTITY(ivec4(82147, 1, 1, 1), clamp(ivec4(82147, 1, 1, 1), _GLF_IDENTITY(ivec4(82147, 1, 1, 1), ~ (~ (ivec4(82147, 1, 1, 1)))), ivec4(82147, 1, 1, 1)))))) ^ 0), 82147)) & 0), 1))), int(5))), 0, 0, _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) >> 0))))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0)), vec4(0.0, 1.0, 1.0, abs(1.0))), _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0)), vec4(0.0, 1.0, 1.0, abs(1.0))), (dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0)), vec4(0.0, 1.0, 1.0, abs(1.0)))) * 1.0)), abs(0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)), (false ? _GLF_FUZZED(vec4(-8.4, 96.10, -0.1, 8.3)) : vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-2128.5689, -8.3)))).y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, max((_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, clamp((_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0))))), float(_GLF_FUZZED(49.28)), bool(false))))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0))))))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), int(ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0), 1))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0), 1))), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0), 1))), int(5))))), 0, 0, _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) >> 0))))))), ((_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-97.80)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-674.736) : 1.0))), bool(true))), abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, cos(0.0), 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)), (false ? _GLF_FUZZED(vec4(-8.4, 96.10, -0.1, 8.3)) : vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-67.44, float(_GLF_IDENTITY(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, abs(1.0), 1.0, 0.0), transpose(transpose(mat4x3(-67.44, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))))))), injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0))))))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), int(ivec4((int(_GLF_ONE(1.0, injectionSwitch.y))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0, 0 | (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0, 0 | (_GLF_IDENTITY(82147, min(_GLF_IDENTITY(82147, (_GLF_IDENTITY(82147, int(ivec4(82147, 1, 1, 1)))) ^ 0), 82147)) & 0)))))) : _GLF_FUZZED(94305))), 1))), int(5))), 0, 0, _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) >> 0)))))))) ^ 0), 0))) << _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) >> 0))))) + 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter --)), 0 | (_GLF_FUZZED((_injected_loop_counter --)))) : _injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x)), false, false, true))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(7680.1372)), bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 1 * (int(ivec2(0, 0)))))], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 1 * (int(ivec2(0, 0)))))], injectionSwitch[1]), max(vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 1 * (int(ivec2(0, 0)))))], injectionSwitch[1]), vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 1 * (int(ivec2(0, 0)))))], injectionSwitch[1])))) - vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), max(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)))))), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(73.43)), bool(false))), injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)])), 1.0, 0.0, 1.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(5020.6619), _GLF_FUZZED(431.480)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 1.0, 0.0, 0.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2((injectionSwitch), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))) * mat2(1.0))))) * vec2(1.0, 1.0)).y, false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), false, false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false, _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2459.6573))))), 1.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), vec2(1.0, 1.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(481.604))), 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).y), float(_GLF_FUZZED(vec2(-3.9, 569.436).s)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false)))), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)))) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4024.8107)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-9661.4079) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), max(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(-3.2))))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))).y, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)))) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4024.8107)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-9661.4079) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), max(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(-3.2))))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))).y, false)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((false ? -2482.9342 : -4.1))), vec2(_GLF_FUZZED(-7125.8318), ((injectionSwitch))[1]), bvec2(false, true))) * vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (true ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-1.3, 947.237))))).y) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y : _GLF_FUZZED(-4081.4168))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) * sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) * sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) * sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) * sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) * sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) * vec2(1.0, 1.0)).y) && true)) || false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(2.9)) : 1.0)))).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(2.9)) : 1.0)))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(2.9)) : 1.0)))).y)), true, true, false)))), ! (! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, injectionSwitch.x), _GLF_IDENTITY(float(vec3(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, injectionSwitch.x), 0.0, 1.0)), (float(vec3(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, injectionSwitch.x), 0.0, 1.0))) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], min((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-22.81), _GLF_FUZZED(43.63)), bvec2(false, false))), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], min((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-22.81), _GLF_FUZZED(43.63)), bvec2(false, false))), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y, (false ? _GLF_FUZZED(3.5) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], min((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-22.81), _GLF_FUZZED(43.63)), bvec2(false, false))), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], min((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-22.81), _GLF_FUZZED(43.63)), bvec2(false, false))), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], min((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[0])), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-22.81), _GLF_FUZZED(43.63)), bvec2(false, false))), vec2(1.0, 1.0), vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y)), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), (injectionSwitch) * vec2(1.0, 1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.59, -8.5)) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.59, -8.5)) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.59, -8.5)) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)), true && (! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.59, -8.5)) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false))))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.59, -8.5)) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec4(((injectionSwitch)) * vec2(1.0, 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), vec2(0.0, 0.0) + (vec2(vec4(((injectionSwitch)) * vec2(1.0, 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), 1.0, 1.0))))) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + abs(sqrt(0.0)))), 0.0, 1.0, 1.0)))))), 1.0, 1.0))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true))) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + abs(sqrt(0.0)))), 0.0, 1.0, 1.0)))))), 1.0, 1.0))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + abs(sqrt(0.0)))), 0.0, 1.0, 1.0)))))), 1.0, 1.0))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true))) || false)))), ! (! (! ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) + abs(sqrt(0.0)))), 0.0, 1.0, 1.0)))))), 1.0, 1.0))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true))) || false))))))))))))), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-6593))), float(1.0), bool(true))))))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(1.0), bool(true))) : _GLF_FUZZED(6.4)))), (true ? mat3x4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, log(1.0), 0.0, 1.0) : _GLF_FUZZED(mat3x4(-365.721, 8.8, 66.07, -499.733, 2.5, 4213.9752, -7603.4189, -982.834, -0.7, -3.0, -9.0, 4463.8461)))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) * 1.0)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))))))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0), (vec4((_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY((true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6))), clamp((true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6))), _GLF_IDENTITY((true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(44.69, 1.6), mix(vec2((vec2(44.69, 1.6))[0], (vec2(44.69, 1.6))[1]), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(0.0)), bvec2(false, false))))), max((true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(44.69, 1.6), mix(vec2(_GLF_FUZZED(8900.1351), _GLF_FUZZED(73.22)), vec2((vec2(44.69, 1.6))[0], _GLF_IDENTITY((vec2(44.69, 1.6))[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81.15) : (vec2(44.69, 1.6))[1]))), bvec2(true, true))))), (true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6))))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? (vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(44.69, 1.6)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(44.69, 1.6)), (_GLF_FUZZED(vec2(44.69, 1.6))) + vec2(0.0, 0.0)), _GLF_FUZZED(vec2(44.69, 1.6))))), mix(vec2(((true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6))))[0], _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED(-6786.9391), ((_GLF_IDENTITY(true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6)), vec2(1.0, 1.0) * (true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(44.69, 1.6))))))[1]), bvec2(false, true)))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), (_GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), _GLF_IDENTITY(max(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), (max(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * mat2(1.0)))) + vec2(0.0, 0.0))))))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y, false)))))))))))))) || false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)) ^ 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
          {
           do
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8735.8740)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))) && true, ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))) && true, ((! (_GLF_WRAPPED_LOOP(false))) && true) || false))))), false, _GLF_IDENTITY(false, (false) && true)))))));
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), false || (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-13.95)), bvec2(true, false))).x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((false || (injectionSwitch.x < injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! ((false || (injectionSwitch.x < injectionSwitch.y)) && true), ! (! (! ((false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0))), injectionSwitch[1])).y)) && true)))))), bool(bvec3((false || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true, false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (210 & 0)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u)), (true ? uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), ~ (~ (0u + (subgroup_local_id))))), 1u, 1u)) : _GLF_FUZZED((-- subgroup_local_id))))), subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(subgroup_id, 0u, 1u))), 0u + (~ (uint(uvec3(subgroup_id, 0u, 1u)))))))) * subgroup_size))) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), clamp(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), ~ (~ (uvec3(subgroup_id, 0u, 1u))))), uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec3(subgroup_id, 0u, 1u))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << (0u & 199640u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) + 0u)))))) * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size) ^ (44023u & (6492u & 0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size), min(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size), ~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), 0u, 1u))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), max(uvec3(subgroup_id, 0u, 1u), uvec3(subgroup_id, 0u, 1u))))) * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), (uint(uvec3(subgroup_id, 0u, 1u))) ^ 0u)) * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))))) * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), min(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec3(subgroup_id, 0u, 1u))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) << 0u) * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)), 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), uint(0u))) + (subgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u)), ~ (~ (uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u))))))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u)), ~ (~ (uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u)), ~ (~ (uvec3(1u, 1u, 1u) * (uvec3(subgroup_id, 0u, 1u))))))))))))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size))))) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))))))) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / (1u | 1u)) * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), (uint(uvec3(subgroup_id, 0u, 1u))) << 0u)) * subgroup_size))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), (bool(bvec4(_GLF_DEAD(false), true, false, true))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), true, false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     buf[virtual_gid] = _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) / 1), _GLF_IDENTITY(1, min(1, 1))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, ~ (~ (1))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0)))) & 1), ((_GLF_IDENTITY(1, (1) << 0) & 1)) + 0))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         buf[next_virtual_gid] = 2;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(-87888 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), clamp(-87888 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), _GLF_IDENTITY(-87888 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), int(ivec3(-87888 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), 0, 1))), -87888 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
}
