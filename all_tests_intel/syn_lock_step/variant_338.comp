#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(140.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)), (max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (injectionSwitch))) - abs(vec2(0.0, 0.0))))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]), bvec2(true, true)) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(_GLF_IDENTITY(-765.892, (-765.892) / 1.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 0.0, length(0.0), abs(1.0), 1.0)))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(221.264), _GLF_FUZZED(-6.9)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))))))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1846.6147), _GLF_FUZZED(vec3(9.2, -52.86, 899.802).b)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[1]), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)))))), (injectionSwitch)))[1]), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch))), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0)))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), mix(vec2(_GLF_FUZZED(53.50), _GLF_FUZZED(335.433)), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))[1]), bvec2(true, true))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))), bvec2(true, true))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8952.1913), clamp(_GLF_FUZZED(-8952.1913), _GLF_IDENTITY(_GLF_FUZZED(-8952.1913), float(mat2x4(_GLF_FUZZED(-8952.1913), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.0))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(-8952.1913), float(mat4x2(_GLF_FUZZED(-8952.1913), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.9)), float(1.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))))), _GLF_FUZZED(-765.892)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), mix(vec2((max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(656.375)), vec2(_GLF_FUZZED(-2.6), (max((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch)))[1]), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-20.18), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]))[1]), clamp(vec2(_GLF_FUZZED(-20.18), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]))[1]), vec2(_GLF_FUZZED(-20.18), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]))[1]), vec2(_GLF_FUZZED(-20.18), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[1]))[1]))), vec2((vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(-189.910, 854.526)))))[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]))[0], _GLF_FUZZED(_GLF_IDENTITY(float(168427u), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(77.15, -3.1, 6175.8122, 11.02, 5.4, -7.6, -2938.9492, -3.4, 6.8)) : mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(77.15, -3.1, 6175.8122, 11.02, 5.4, -7.6, -2938.9492, -3.4, 6.8)) : mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(77.15, -3.1, 6175.8122, 11.02, 5.4, -7.6, -2938.9492, -3.4, 6.8)) : mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(77.15, -3.1, 6175.8122, 11.02, 5.4, -7.6, -2938.9492, -3.4, 6.8)) : mat3(float(168427u), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(true, true))).y))) * 1.0)), bool(true)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(99.53)), vec2(_GLF_FUZZED(2005.8278), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(injectionSwitch, vec2(-0.7, 550.225)))))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(140.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(-765.892)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) - tan(vec2(0.0, 0.0)))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8952.1913), _GLF_FUZZED(_GLF_IDENTITY(-765.892, (-765.892) / 1.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), max(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0)))) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(238.132), _GLF_FUZZED(-35.02)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1], mix(float(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(238.132), _GLF_FUZZED(-35.02)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), float(_GLF_FUZZED(-91.23)), bool(false)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]), mix(vec2(_GLF_FUZZED(53.50), _GLF_FUZZED(335.433)), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))), (injectionSwitch)))[1]))[1]), bvec2(true, true))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))), (injectionSwitch)))[1]))), bvec2(true, true))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8952.1913), clamp(_GLF_FUZZED(-8952.1913), _GLF_IDENTITY(_GLF_FUZZED(-8952.1913), float(mat2x4(_GLF_FUZZED(-8952.1913), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-8952.1913), float(mat4x2(_GLF_FUZZED(-8952.1913), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))))), _GLF_FUZZED(-765.892)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1162.2753, -8.6)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), mix(vec2(_GLF_FUZZED(-20.18), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]))[1]), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch)))[1]))[0], _GLF_FUZZED(float(168427u))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(true, true))).y))) * 1.0)), bool(true)))))), true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))
          {
           for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (int(1))))) | (int(1)))) >> 0))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) * _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) ^ uvec3(0u, 0u, 0u))))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u);
 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(-42837)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false)))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0)), 0 | ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0)))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0))) >> 0))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(19997) : int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-22814))), vec2(_GLF_FUZZED(94.21), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-751.326))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))) && true), true))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)), 0.0, 0.0, exp(0.0), 1.0, 1.0), (true ? mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)), 0.0, 0.0, exp(0.0), 1.0, 1.0) : _GLF_FUZZED(mat3x2(3.1, 9.0, 680.427, -6.1, -63.69, -3.1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(4342.7984)), bvec2(false, false))))), injectionSwitch)).x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6316.8889)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6316.8889), (_GLF_FUZZED(-6316.8889)) + tan(0.0))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true)), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(321.037))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (-72711 & 0)), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (-72711 & 0)), false))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
      {
       barrier();
      }
     else
      {
      }
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(int(0), 0 ^ (int(0)))) - 0)), ~ (~ ((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(0)) : _GLF_IDENTITY(_GLF_FUZZED(78010), (_GLF_IDENTITY(_GLF_FUZZED(78010), (_GLF_FUZZED(78010)) >> (0 >> _GLF_IDENTITY(int(1), int(1))))) | (_GLF_FUZZED(78010))))) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)));
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(3798.2575)))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-60.00, 213.036).t)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-60.00, 213.036).t)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))), false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), ((_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))) << 0u))), uint(8u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), _GLF_IDENTITY((uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))), (~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))) ^ 0u)), uint(8u))))), ((_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))) << 0u))) | (_GLF_IDENTITY((uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))), clamp((_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), min(_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))) | (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))))), uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))))))) | (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u))))) - 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))) | (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))) | (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))))), (_GLF_IDENTITY(uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u)))), (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))) | (uint((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))), uint(8u))))))) ^ 0u)) << 0u)))))))) & (+ 199202u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_FUZZED(335.548)), bool(false))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_FUZZED(335.548)), bool(false))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(2765.0439))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_FUZZED(335.548)), bool(false))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))
      barrier();
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((20.08))), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-8.7), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(-5.5)), bvec2(true, false))), vec2(0.0, 1.0)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) / abs(1.0)))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))) + (injectionSwitch.x)) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((20.08))), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0))) + (injectionSwitch.x)) < injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         buf[virtual_gid] = 1;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-37.70) : injectionSwitch[1])))).x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (0 ^ (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-658.113), _GLF_IDENTITY(_GLF_FUZZED(6180.7201), (_GLF_FUZZED(6180.7201)) - 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-658.113), _GLF_FUZZED(6180.7201)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-658.113), _GLF_FUZZED(6180.7201)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-658.113), _GLF_FUZZED(6180.7201)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(2.5), _GLF_FUZZED((42.00 - vec2(9.9, 3360.0795).t))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), bvec2(true, true))))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       _GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, 1u * (buf[next_virtual_gid] = 2))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? buf[next_virtual_gid] = 2 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (true ? buf[next_virtual_gid] = 2 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) ^ 0u), (true ? _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) << 0u) : _GLF_FUZZED(subgroup_local_id)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)), 0u ^ (buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)))), (true ? buf[next_virtual_gid] = 2 : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2, 2)))))) | 0) : _GLF_FUZZED(subgroup_local_id)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0) : _GLF_FUZZED(subgroup_local_id)))) | 0u))), (~ ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0), ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0) : _GLF_FUZZED(subgroup_local_id))))), (~ ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) << (0 | 0)))))) | 0) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u))) ^ 0u)) << 0u)) | 0u)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_size))))) / 1u)) >> 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)) : _GLF_FUZZED(subgroup_local_id)))))), (true ? (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / _GLF_IDENTITY(1u, (1u) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u)), (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u))) | (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u))))))))))) : _GLF_FUZZED(next_virtual_gid)))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))))), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u)) >> 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))), min(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) ^ 0u)), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) | (1u))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id)))) << 0u), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | ((0u))))) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) >> 0u))))))))))) - 0u));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) && true)), true, true), true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) * 1)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, 0 + ((0) ^ 0))), 0, (44657 & 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657 & 0, min(44657 & 0, _GLF_IDENTITY(44657 & 0, ~ (~ (44657 & 0)))))))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & _GLF_IDENTITY(0, clamp(0, 0, 0))))))), clamp(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), int(int(_GLF_IDENTITY(0, (0) ^ 0))))))) + 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657 & 0, int(int(44657 & 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0))) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & _GLF_IDENTITY(0, (0) + 0))), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) - ivec3(0, 0, 0))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657, (false ? _GLF_FUZZED(_injected_loop_counter) : 44657)) & 0))))))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(0), 1, 0, 1)), (_GLF_IDENTITY(int(ivec4(int(0), 1, 0, 1)), (int(ivec4(int(0), 1, 0, 1))) | 0)) | (int(ivec4(_GLF_IDENTITY(int(0), (int(0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0, 1)))), (int(ivec4(int(0), 1, 0, 1))) >> 0))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) * 1)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ 0), 0, (44657 & 0))))), clamp(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, 0 + ((0) ^ 0))), 0, (44657 & 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657 & 0, min(44657 & 0, _GLF_IDENTITY(44657 & 0, ~ (~ (44657 & 0)))))))), max(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & _GLF_IDENTITY(0, clamp(0, 0, 0))))))), clamp(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), int(int(_GLF_IDENTITY(0, (0) ^ 0))))))) + 0), 0, (44657 & 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657 & 0, int(int(44657 & 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0))) ^ 0), 0, (44657 & 0)), min(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & _GLF_IDENTITY(0, (0) + 0))), ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))) - ivec3(0, 0, 0))) | (ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (44657 & 0))))), int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, (_GLF_IDENTITY(44657, (false ? _GLF_FUZZED(_injected_loop_counter) : 44657)) & 0))))))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(0), 1, 0, 1)), (_GLF_IDENTITY(int(ivec4(int(0), 1, 0, 1)), (int(ivec4(int(0), 1, 0, 1))) | 0)) | (int(ivec4(_GLF_IDENTITY(int(0), (int(0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0, 1)))), (int(ivec4(int(0), 1, 0, 1))) >> 0))))), false, true))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))) && true)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) : _GLF_FUZZED(_injected_loop_counter))) < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, exp(0.0), tan(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))) - vec2(0.0, 0.0)))).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))) - vec2(0.0, 0.0)))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-0.2, 2.1)))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, tan(0.0), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0))))))) - vec2(0.0, 0.0)))).x)))) + 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(findLSB(194618u)) : _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -73672)) : _injected_loop_counter ++)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) && true))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_DEAD(false)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), (_injected_loop_counter) / 1) < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, ~ (~ (8))))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) + vec2(0.0, 0.0)).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
}
