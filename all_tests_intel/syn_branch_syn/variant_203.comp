#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(7580.8895, clamp(7580.8895, 7580.8895, 7580.8895)))), bool(false))), injectionSwitch.y)))), true, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), false || (bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), false || (bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), false || (bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false, false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), false || (bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false, false))))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false, false))))), false || (bool(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false, false)))))))))))))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), clamp(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, sin(0.0), 1.0, 0.0, log(1.0))), float(mat2x3(float(mat2x3(0.0, 0.0, sin(0.0), 1.0, 0.0, log(1.0))), 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.9)), float(1.0), bool(true)))), 1.0, 0.0)))), 1.0)), float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-10.08))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = _GLF_IDENTITY(16, ~ (~ (16)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))))))))))) || false))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))))) && true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.1)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), max(float(vec3(injectionSwitch.x, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), float(vec3(injectionSwitch.x, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))) < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    return;
   return;
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-26.69)), bvec2(false, false))).x, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(6.2)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(327.498, -81.96, 8.0, -7734.4390, 2.8, 6.3, -39.34, 79.97)) : mat2x4(float(_GLF_FUZZED(6.2)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6879.0560)))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(bvec3(bvec3(bool(true), false, false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(bvec3(bvec3(bool(true), false, false)))))), true && (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(bvec3(bvec3(bool(true), false, false)))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, true)))), false, false), bvec3(bvec3(bvec3(bool(true), false, false))))))), false || (bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(bool(true), false, false)))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(true), false, false)), bvec3(bvec4(bvec3(bvec3(bool(true), false, false)), true))))))))))), false || (bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(bvec3(bvec3(bool(true), false, false))))))))))))))))))))) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(33794u, _GLF_IDENTITY(23639u, ~ (_GLF_IDENTITY(~ (23639u), (~ (23639u)) | (~ (23639u))))))) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(33794u, 23639u)) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(33794u, 23639u)) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u), min((_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(33794u, 23639u)) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(33794u, 23639u)) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u)) >> uvec2(0u, 0u)))))) >> uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(33794u, 23639u)) : (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u)))))))) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), max(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((0u)))) << 0u)) - 0u) | 0u), 0u), clamp(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u))), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u)) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)), (clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))) | (_GLF_IDENTITY(clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)), (clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))) / uvec2(1u, 1u)))))) ^ uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) >> uvec2(0u, 0u)) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))))) >> uvec2(0u, 0u)), clamp(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))))))))))) >> uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) + uvec2(0u, 0u))), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))))) >> uvec2(0u, 0u)), uvec2(1u, _GLF_IDENTITY(1u, min(1u, 1u))) * (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) : (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))) | uvec2(0u, 0u))))))) >> uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) << 0u)), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)))))) << uvec2(0u, 0u)))))) >> uvec2(0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (~ (uvec2(0u, 0u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))))) >> uvec2(0u, 0u)) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))))) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)) ^ uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)), uvec2(0u, 0u), uvec2(0u, 0u)))) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) + (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(2u), uvec2(2u))))) : (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)), (clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))) ^ uvec2(0u, 0u))), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), clamp(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u))))), max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u))))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u))))))), ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))))), 0u), uvec2(0u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup % min(subgroup_size, workgroup_base))) : 0u)))))) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u)))) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)) ^ uvec2(0u, 0u)) | uvec2(0u, 0u)))))).y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)) | (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))))).x * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(73813) : (1))) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0))), 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))))))))))), (true ? 0 << _GLF_IDENTITY(int(6), int(6)) : _GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_FUZZED(6055)) | 0)) - 0))))), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(96202) : _GLF_IDENTITY(0, min(0, 0)))), 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))), 0, 1)))))))))))), (true ? 0 << _GLF_IDENTITY(int(6), int(6)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_FUZZED(6055)) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_IDENTITY(_GLF_FUZZED(6055), _GLF_IDENTITY((_GLF_FUZZED(6055)) | 0, min((_GLF_FUZZED(6055)) | 0, (_GLF_FUZZED(6055)) | 0)))) - 0), (true ? _GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_FUZZED(6055)) | 0)) - 0) : _GLF_FUZZED(56690)))) / 1))))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))), 0 | (_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))))))))))), (true ? 0 << _GLF_IDENTITY(int(6), int(6)) : _GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_FUZZED(6055)) | 0)) - 0))))), subgroup_local_id + _GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + (0 | 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))), min(int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))), (_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))) ^ 0)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec4(6, _GLF_IDENTITY(0, (0) << 0), 0, 1)))), (int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1))))) | (int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))), ~ (~ (int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))))))))), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(6, 0, 0, 1)))))))))))), (true ? 0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6055), int(int(_GLF_IDENTITY(_GLF_FUZZED(6055), min(_GLF_IDENTITY(_GLF_FUZZED(6055), (false ? _GLF_FUZZED(33221) : _GLF_FUZZED(6055))), _GLF_FUZZED(6055)))))), (_GLF_IDENTITY(_GLF_FUZZED(6055), (_GLF_FUZZED(6055)) | 0)) - 0)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) - 0u, max((_GLF_FUZZED(workgroup_base)) - 0u, _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) - 0u, ((_GLF_FUZZED(workgroup_base)) - 0u) | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), max(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base))) + 0u), (_GLF_FUZZED(workgroup_base)))) - 0u))))) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) - 0u), (subgroup_local_id + 1) << 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), max((_GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(0u, (0u) ^ 0u))))))) - (_GLF_IDENTITY(52052u & 0u, (52052u & 0u) | (0u | 0u)))))) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(4u))) : _GLF_FUZZED(next_virtual_gid))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 1u * (4u)), 4u, 4u))))) | 0u), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), min(((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), (((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)) | (((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), (~ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u))) | 0u)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(packSnorm2x16((vec4(-981.761, 7.6, -4163.3462, 82.61) * mat2x4(-42.44, 8.3, -9.8, -98.54, 3.0, 5144.8072, 4.7, 83.73))))))) | 0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(4u))) | 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))), 0u + (~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))))) | _GLF_IDENTITY((4u), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(min(subgroup_id, subgroup_size)))) | ((4u))))), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)) | 0u))))))) * 1u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(packSnorm2x16((vec4(-981.761, 7.6, -4163.3462, 82.61) * mat2x4(-42.44, 8.3, -9.8, -98.54, 3.0, 5144.8072, 4.7, 83.73))))))) | 0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(4u))) | 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))), 0u + (~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))))) | _GLF_IDENTITY((4u), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(min(subgroup_id, subgroup_size)))) | ((4u))))), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)) | 0u))))))) * 1u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(packSnorm2x16((vec4(-981.761, 7.6, -4163.3462, 82.61) * mat2x4(-42.44, 8.3, -9.8, -98.54, 3.0, 5144.8072, 4.7, 83.73))))))) | 0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(4u))) | 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) | (4u))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))), 0u + (~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), min(~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), ~ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))))))) | _GLF_IDENTITY((4u), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(min(subgroup_id, subgroup_size)))) | ((4u))))), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)) | 0u))))))) * 1u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u), 0u ^ (~ ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))))))))))) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << _GLF_IDENTITY(0u, (0u) - (52052u & 0u)))) >> (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - abs(0.0))))), 1u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + 0u)) << 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, (0u | 1u))))), uint(4u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u))) + 0u)) << 0u)))) - (0u | 0u))) | 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), 4u))), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))) | 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, 0u | (4u)), 4u)), (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - abs(0.0))))), 1u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + 0u)) << 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, (0u | 1u))))), uint(4u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u))) + 0u)) << 0u)))) - (0u | 0u))) | 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), 4u))), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))) | 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, 0u | (4u)), 4u)), (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - abs(0.0))))), 1u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + 0u)) << 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, (0u | 1u))))), uint(4u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u))) + 0u)) << 0u)))) - (0u | 0u))) | 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), 4u))), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))) | 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, 0u | (4u)), 4u)), (_GLF_IDENTITY(4u, (4u) | 0u)) | (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) | 0u), 0u ^ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))))))) / 1u)))) - (0u ^ 0u)))))) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.1)), bool(false)))) / abs(1.0)))).y))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))), true && ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))) || false)), true && ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(13.08), _GLF_FUZZED((false ? -219.668 : 833.773))), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(1405.5989), _GLF_FUZZED(_GLF_IDENTITY(-628.686, (true ? -628.686 : _GLF_FUZZED(-1549.8348))))), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(4704.3196, 62.99)) : (injectionSwitch))))[1]), bvec2(true, true)))))).x > injectionSwitch.y))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))), true && ((! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true))))))))))))), ! (! ((! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))), true && ((! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true))))))))))))))))), (((! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))), true && ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))))) || false)), ! (! ((! _GLF_IDENTITY(((! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))), true && ((! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true)))))))))))), false || (_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))), true && ((! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true)))))))))))))))), (((! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))), true && ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(float(54724u))), vec2(_GLF_FUZZED(-3.1), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true))))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))))))))) || false))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false)))))))
      continue;
     int i = 0;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        break;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))))))
            break;
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), true))), false))))))) || false), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(1.0))), 1.0 * (_GLF_IDENTITY(float(mat4(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0)) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (float(mat4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-37.91), _GLF_FUZZED(97.59)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y, injectionSwitch.y), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))) - 0.0)))))) / 1.0)))))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     buf[next_virtual_gid] = 2;
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8007.1240)), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8007.1240)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8007.1240)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8007.1240)), bool(false)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.4) : injectionSwitch.x)) > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (2)), 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (2))))) / 1);
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.3)), bool(false))))) > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), true), true, true))))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))))))))), true, true, false))))))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
}
