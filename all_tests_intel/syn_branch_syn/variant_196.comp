#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat4x3 _f0;
 vec3 _f1;
 vec2 _f2;
 vec2 _f3;
 mat4x2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_18 {
 bool _f0;
 float _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 uvec4 _f1;
 uint _f2;
 vec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 bvec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 float _f1;
 mat4x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 vec4 _f1;
 mat4x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 float _f0;
 float _f1;
 int _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 _GLF_struct_6 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_19 _f4;
 uint subgroup_id;
 _GLF_struct_20 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 vec3 _f1;
 bvec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 uint workgroup_id;
 bool _f1;
 mat3x2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 ivec3 _f1;
 ivec4 _f2;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))) && true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-922.388))) > injectionSwitch.y, true), false, true))), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))), true, true)))), true, true))))))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED((-87.78 - vec2(3.1, -642.027))))).x > injectionSwitch.y))))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat2x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), _GLF_struct_7(_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((mat2x4(50.64, 558.257, -3.9, 47.39, _GLF_IDENTITY(3114.8793, clamp(_GLF_IDENTITY(3114.8793, (3114.8793) + 0.0), 3114.8793, 3114.8793)), -68.39, 18.08, 7.8) * mat4x2(-19.57, -7521.1922, 490.908, 2560.0692, 8.5, 2.3, 2.4, 4.2))))), _GLF_struct_6(mat3x4(1.0)), mat2(1.0)), _GLF_struct_10(_GLF_struct_8(1.0, 1.0, 1), _GLF_struct_9(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(true), false, false))), 1, true)), _GLF_struct_13(_GLF_struct_11(bvec2(true), mat3x4(1.0), mat4x3(1.0), uvec3(1u), mat3x2(1.0)), _GLF_struct_12(mat3x4(1.0), vec4(1.0), mat4x3(1.0), uvec4(1u)), mat3x4(1.0)), _GLF_struct_19(vec2(1.0), _GLF_struct_14(vec4(1.0), 1.0, mat4x3(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(0.3, -5.7)) : 1.0))), mix(float(clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-6.4)), bool(false)), min(mix(float(1.0), float(_GLF_FUZZED(-6.4)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-6.4)), bool(false)))))) + abs(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(95.73, 3.6)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3328.3625, clamp(3328.3625, 3328.3625, 3328.3625))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-56.21, 938.647).y)), bvec2(true, false))).x))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(0.3, -5.7)) : 1.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED(96.57)), bool(false))), -5.7)) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(0.3, -5.7)) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(0.3, -5.7)) : 1.0)), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(reflect(0.3, -5.7)) : 1.0))), float(_GLF_FUZZED(-11.54)), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(reflect(0.3, -5.7), mix(float(_GLF_FUZZED(37.77)), float(_GLF_IDENTITY(reflect(0.3, -5.7), min(reflect(0.3, -5.7), reflect(0.3, -5.7)))), bool(true)))) : 1.0)))))))), float(_GLF_FUZZED(199.378)), bool(false)))))), _GLF_struct_15(mat4x2(1.0), mat3x4(1.0), ivec2(1), bvec2(true), vec3(1.0)), _GLF_struct_16(bvec3(true), uvec4(1u), 1u, vec2(1.0), ivec2(1)), _GLF_struct_17(bvec2(true), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), false), false)))))), bool(bvec4(false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false)))), false, false, true)))) || false)))), _GLF_struct_18(true, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), min(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), (true ? _GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))) : _GLF_FUZZED(ivec4(-71295, 85491, -72064, -57463)))))))), gl_SubgroupID, _GLF_struct_20(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(sqrt(-7.8)))), 0.0, 0.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec3(true)), _GLF_struct_22(_GLF_struct_21(mat4x3(1.0), vec3(1.0), vec2(1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(trunc(_GLF_IDENTITY(sign(7368.6231), float(mat4x2(sign(7368.6231), 0.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))) : dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0))) + 0.0)), mat4x2(1.0), uvec3(1u))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(129591u, 4376u, 29062u)) : gl_NumWorkGroups, max(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(129591u, 4376u, 29062u)) : gl_NumWorkGroups, (true ? false ? _GLF_FUZZED(uvec3(129591u, 4376u, 29062u)) : gl_NumWorkGroups : _GLF_FUZZED(uvec3(76595u, 137732u, 113724u)))), false ? _GLF_FUZZED(uvec3(129591u, 4376u, 29062u)) : gl_NumWorkGroups)))).x;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, tan(0.0)), (true ? mat2(0.0, 0.0, 0.0, tan(0.0)) : _GLF_FUZZED(mat2(-88.23, -2289.4468, -1946.4276, -994.340))))))), (false ? _GLF_FUZZED(vec2(0.3, -6.6)) : vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, determinant(mat2(0.0, 0.0, 0.0, tan(0.0)))))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) && true)))))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupID)).x, _GLF_IDENTITY(true, true && (true)), mat3x2(1.0), _GLF_struct_1(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))), true))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec4(true), mat4(1.0)), _GLF_struct_2(mat4x3(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_3(uvec4(1u), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mat2x3(1.0)), _GLF_IDENTITY(ivec3(1), max(ivec3(1), _GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(17934, -86290, _GLF_IDENTITY(43032, 0 ^ (_GLF_IDENTITY(43032, (43032) << 0))))))))), ivec4(1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (false)))), (false) && true), false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0))) * mat2(1.0)), vec2(vec3(_GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0))) * mat2(1.0)), sqrt(0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(1.5), 0.0 + (_GLF_FUZZED(1.5))), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0))) * mat2(1.0)), min(_GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0))) * mat2(1.0))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))))[2]))), vec3(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[0], (_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[0], min((vec3(injectionSwitch, 1.0))[0], (vec3(injectionSwitch, 1.0))[0]))) - 0.0), _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-9.5, 18.19)))), 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)), mix(vec3(_GLF_FUZZED((vec4(-3.0, -399.376, 65.85, -5886.9963).z / vec3(-8.7, -45.07, 3.8).p)), ((vec3(injectionSwitch, 1.0)))[1], ((vec3(injectionSwitch, 1.0)))[2]), vec3(((vec3(injectionSwitch, 1.0)))[0], _GLF_FUZZED(vec2(-6128.4936, -744.614).r), _GLF_FUZZED(2.0)), bvec3(true, false, false)))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2])), min(_GLF_IDENTITY(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2])), (_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))) + 0.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0)))), 1.0, 0.0))) * mat2(1.0)))) * mat2(1.0))) / exp(vec2(0.0, 0.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 1.0))), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], _GLF_IDENTITY(0.0 + ((vec3(injectionSwitch, 1.0))[2]), max(_GLF_IDENTITY(0.0 + ((vec3(injectionSwitch, 1.0))[2]), (0.0 + ((vec3(injectionSwitch, 1.0))[2])) - 0.0), 0.0 + ((vec3(injectionSwitch, 1.0))[2]))))), vec3((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0)))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)))), mix(float(_GLF_FUZZED((vec2(-3823.7119, -1388.0062) + 940.333).r)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))))), bool(true)))), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 1.0))), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false)))) / cos(vec3(0.0, 0.0, 0.0))), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(-2.5)), bvec2(false, false))), 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(-7145.8543, min(-7145.8543, -7145.8543))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 1.0, 0.0))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false))), 1.0))[1], min((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 1.0, 0.0))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false))), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 1.0, 0.0))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false))), 1.0))[1])), _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, _GLF_IDENTITY(false, ! (! (false)))))), vec3(injectionSwitch, 1.0)))), 1.0, 0.0)), (vec2(mat2(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7145.8543), (vec3(injectionSwitch, 1.0))[1], _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], 0.0 + ((vec3(injectionSwitch, 1.0))[2]))), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(1.5), _GLF_FUZZED(9676.4635)), bvec3(true, false, false))), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9414.4378)), float(1.0), bool(true)))) + 0.0), 0.0))) * mat2(1.0)))).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_5._f0.workgroup_id, (_GLF_struct_replacement_5._f0.workgroup_id) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u));
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm4x8(vec4(1.7, -4045.5101, -7.1, -3.4)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3321.9305) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(1.0), 0.0)))))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(1.0), 0.0)))))))) || false))), bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(1.0), 0.0)))))))) || false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, true && (false))), true))), false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + _GLF_struct_replacement_23.subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + _GLF_struct_replacement_23.subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_size))) * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0u, ((~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), clamp((~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), (~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), min(((subgroup_size)) | ((subgroup_size)), _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), (((subgroup_size)) | ((subgroup_size))) ^ 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), max(~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), ~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))))), (~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))) ^ 0u, ((~ (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_size)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-658.413 + 9.6))), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0), mat3(mat4x3(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0)))))), (false ? _GLF_FUZZED(vec2(6.1, 55.01)) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))), float(injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(-6149.4401)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))), float(injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(-6149.4401)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))), float(injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(-6149.4401)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.6)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.6))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.6)))))))) || false))))))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), true))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false))), true))))))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(837.724))))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))))
    return;
  }
}
