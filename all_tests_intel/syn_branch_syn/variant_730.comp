#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(88600u))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size))) << (0u | 0u)) + _GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) | (subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1)), max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))))) % subgroup_size), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))))), 1, 1))) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((1), ((1)) ^ 0))) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), int(ivec3((_GLF_IDENTITY(1, (1) * 1)), 0, 0)))) / 1), (_GLF_IDENTITY(1, (1) * 1)))) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))) % subgroup_size) : _GLF_FUZZED(workgroup_size))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1) * 1, ((1) * 1) / 1)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1) * 1, ((1) * 1) / 1)), int(_GLF_IDENTITY(ivec3(~ (_GLF_IDENTITY((1) * 1, ((1) * 1) / 1)), 0, 1), (ivec3(~ (_GLF_IDENTITY((1) * 1, ((1) * 1) / 1)), 0, 1)) << ivec3(0, 0, 0)))))))))), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, clamp((1) * 1, (1) * 1, (1) * 1))), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), max(int(_GLF_IDENTITY(1, (1) * 1)), int(_GLF_IDENTITY(1, (1) * 1))))) - 0)), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), max(int(_GLF_IDENTITY(1, (1) * 1)), int(_GLF_IDENTITY(1, (1) * 1))))) - 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, 1 * (_GLF_IDENTITY((1), ~ (~ ((1)))) * 1))), 1)), (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), 0, 1, 0), ~ (~ (ivec4((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), 0, 1, 0)))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), 0, 1, 0), ~ (~ (ivec4((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) * 1)), 0, 1, 0)))))) + 0)) ^ 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, _GLF_IDENTITY(1, (1) << 0)))) % subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(uvec3(196168u, 172738u, 145747u).s))))), clamp(uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(44987, ~ (~ (_GLF_IDENTITY(44987, max(44987, 44987)))))) : _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, (0 | 0)))), _GLF_IDENTITY((1), ((1)) ^ 0) * 1)))), max(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), 0 ^ (~ ((1)))))))) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, (0 << _GLF_IDENTITY(int(5), int(5))), 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, (0 << _GLF_IDENTITY(int(5), int(5))), 0)))))), (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))))))), 1, 1))) % subgroup_size), uint(uvec2(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(44987, ~ (~ (_GLF_IDENTITY(44987, max(44987, 44987)))))) : _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, (0 | 0)))), _GLF_IDENTITY((1), ((1)) ^ 0) * 1)))), max(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), 0 ^ (~ ((1)))))))) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, (0 << _GLF_IDENTITY(int(5), int(5))), 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, (0 << _GLF_IDENTITY(int(5), int(5))), 0)))))), (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))))))), 1, 1))) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)) + 0, min((_GLF_IDENTITY(1, (1) * 1)) + 0, (_GLF_IDENTITY(1, (1) * 1)) + 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)) + 0, min((_GLF_IDENTITY(1, (1) * 1)) + 0, (_GLF_IDENTITY(1, (1) * 1)) + 0)))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)) + 0, min((_GLF_IDENTITY(1, (1) * 1)) + 0, (_GLF_IDENTITY(1, (1) * 1)) + 0)))))))))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))) % subgroup_size) : _GLF_FUZZED(workgroup_size))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 0))), _GLF_IDENTITY((1) * 1, max((1) * 1, (1) * 1))), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) - (-87062 & 0)))))), 1, 1))) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(84503) : 1))))))) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))), (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))) % subgroup_size) : _GLF_FUZZED(workgroup_size))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) << 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1))))), 1, 1))) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, (1) * 1)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) + 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, max(1, 1)))) + 0))), _GLF_IDENTITY(1, (1) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) * 1), (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (_GLF_IDENTITY((1) * 1, ~ (_GLF_IDENTITY(~ ((1) * 1), clamp(~ ((1) * 1), ~ ((1) * 1), ~ ((1) * 1)))))) + 0))) + 0))), _GLF_IDENTITY(1, (1) * 1))))))), 1, 1))) % subgroup_size) : _GLF_FUZZED(workgroup_size))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) && true), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bool(bool(bvec4(false, true, true, true))))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec4((((injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(true, (true) && true), true, false))))) && true), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false)))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) && true), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bool(bool(bvec4(false, true, true, true))))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec4((((injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(true, (true) && true), true, false))))) && true), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) && true), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bool(bool(bvec4(false, true, true, true))))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec4((((injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), false || ((true))), true))) && true), true, false))))) && true), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), true, false)), false || (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), false, false, false))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), false, false, false)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((! (false))), (! ((! _GLF_IDENTITY((false), ((false)) || false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), (! ((! (false)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(1.0)))))), 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), clamp(float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0)))), float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 1.0, abs(1.0), 0.0))))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(926.489), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), bvec2(true, false))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = _GLF_IDENTITY(2, _GLF_IDENTITY(0, int(ivec3(0, 0, 1))) | (2));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(914.819)), float(injectionSwitch.y), bool(true))))), false, false, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true)), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (true ? _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), max(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)))) : _GLF_FUZZED(-7.5)))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true, false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true, ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true), ! (! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true))))))))))))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.09, -5693.8486)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y))) || false)))) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9364.4638)), bool(false)))), float(_GLF_FUZZED(7.6)), bool(false)))) * 1.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, true))) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false), bool(bvec3(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false), true && (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false)), false || (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))))), bool(bvec3(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false)), false || (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))))), false, false))))))))))) || false), _GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false))), false, false))), (bool(bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false), (_GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! ((true))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), false, false)))) || false)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
