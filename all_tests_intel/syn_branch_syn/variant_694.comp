#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bvec2(! (bool(bvec2(false, false))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-7583.6759), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), false))), false, true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(0.0, 0.0) + (vec2(vec3(injectionSwitch, 0.0))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(1.0)) < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y) || false), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-7583.6759), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), false))), false, true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(0.0, 0.0) + (vec2(vec3(injectionSwitch, 0.0))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(1.0)) < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y) || false), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-7583.6759), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true))), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (! (bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (! (bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(82.63)), bool(false))))))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-9.1))))))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true))), (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))) && true)))))), true, false)))))), false))))), true))), false))), false, true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, 44.50)))), 1.0, 1.0), mat2(mat4x3(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, 44.50)))), 1.0, 1.0)))))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(0.0, 0.0) + (vec2(vec3(injectionSwitch, 0.0))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.6)), float(1.0), bool(true)))) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y) && true)), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(1.0)) < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false, true))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y) && true))))) || false), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x) - 0.0), false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)))) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1636.1509), _GLF_FUZZED(60.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-7583.6759), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true))), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (! (bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)), ! (! (bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(82.63)), bool(false))))))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-9.1))))))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true))), (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))) && true)))))), true, false)))))), false))))), true))), false))), false, true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, 44.50)))), 1.0, 1.0), mat2(mat4x3(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, 44.50)))), 1.0, 1.0)))))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(0.0, 0.0) + (vec2(vec3(injectionSwitch, 0.0))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.6)), float(1.0), bool(true)))) * (injectionSwitch))[0]), float(_GLF_FUZZED(45.28)), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y) && true)), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(1.0)) < injectionSwitch.y), true, false))))))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false, true))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y) && true))))) || false), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x) - 0.0), false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(_GLF_IDENTITY(-427.305, mix(float(-427.305), float(_GLF_FUZZED(2511.1139)), bool(false))), (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)))) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1636.1509), _GLF_FUZZED(60.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))))))) && true), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(-7583.6759), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true, false))))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))))))))), true, false)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)), injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true, true, true)))))))), true, false)))))), false))))), true))), false))), false, true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(0.0, 0.0) + (vec2(vec3(injectionSwitch, 0.0))))).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(-1856.0459)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(45.28), 1.0 * (_GLF_FUZZED(45.28)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(45.28), 1.0 * (_GLF_FUZZED(45.28)))), float(_GLF_IDENTITY(_GLF_FUZZED(45.28), 1.0 * (_GLF_FUZZED(45.28)))))), bool(false))), (mat2(1.0) * (injectionSwitch))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))).y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(1.0)) < injectionSwitch.y), true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, true && (false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) < injectionSwitch.y), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) < injectionSwitch.y), true, false)))))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) < injectionSwitch.y), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) < injectionSwitch.y), true, false))))))))) || false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x < injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false), bvec3(bvec4(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, false || (false)))))))))), true))), false, true))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.7)), bool(false))), (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) < injectionSwitch.y) || false), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y), true, false)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-427.305, (_GLF_IDENTITY(-427.305, (false ? _GLF_FUZZED(-7.6) : -427.305))) / 1.0)) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false)))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.305) : injectionSwitch.x)) < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(-576.676, -1.3)) : injectionSwitch.x)) < injectionSwitch.y), true, false)))))))), true))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3361.6895), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, _GLF_IDENTITY((1) + 0, ((1) + 0) | ((1) + 0)))))) - (0 << _GLF_IDENTITY(int(0), int(0))))], clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, _GLF_IDENTITY((1) + 0, ((1) + 0) | ((1) + 0)))))) - (0 << _GLF_IDENTITY(int(0), int(0))))], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, _GLF_IDENTITY((1) + 0, ((1) + 0) | ((1) + 0)))))) - (0 << _GLF_IDENTITY(int(0), int(0))))], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, _GLF_IDENTITY((1) + 0, ((1) + 0) | ((1) + 0)))))) - (0 << _GLF_IDENTITY(int(0), int(0))))])), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, 1.0))), (injectionSwitch)))[1], 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.7) : 0.0))) / 1.0), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))) : _GLF_FUZZED(mix(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, vec2(33.21, -9764.2678)), vec2(mat3x2(max(injectionSwitch, vec2(33.21, -9764.2678)), 1.0, 1.0, 1.0, 0.0))), 7.6))))[1])), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-1173)))]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-55.41)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(roundEven(-2.4)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), true))))))), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), true))))))), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0)))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))) / vec2(1.0, 1.0)))), mix(vec2(_GLF_FUZZED(vec2(18.10, 4303.1176).x), _GLF_FUZZED(-2.6)), vec2((vec2(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0)))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))) / vec2(1.0, 1.0)))))[0], (vec2(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0)))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))) / vec2(1.0, 1.0)))))[1]), bvec2(true, true))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).y), true))))))), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)), ~ (~ ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)))))) - 0u)))))))), 1u))), max(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u))), (1u))), (1u)))) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))))))))), 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), (_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)))) - 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)))))) + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u) : _GLF_FUZZED(subgroup_id))))), min(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), _GLF_IDENTITY(~ (1u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)), max((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))))))))))), 1u))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0))), injectionSwitch.x)) < injectionSwitch.y)) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], (_GLF_IDENTITY(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], min(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2])), 0u ^ (_GLF_IDENTITY(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], min(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2], uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2])))))))) | 0u)), (_GLF_FUZZED(uvec3(72712u, _GLF_IDENTITY(61261u, uint(uint(61261u))), 100664u)[2])) ^ 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, min(1, 1)), 1), clamp(max(_GLF_IDENTITY(1, min(1, 1)), 1), max(_GLF_IDENTITY(1, min(1, 1)), 1), max(_GLF_IDENTITY(1, min(1, 1)), 1)))), _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))), 1))))) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1)))), 1, 1))))) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), (max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1))) >> 0))), 1)), 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), int(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), 0, 0, 0)))) * 1)))) % subgroup_size) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), (max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1))) >> 0))), 1)), 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), int(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), 0, 0, 0)))) * 1)))) % subgroup_size) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), (max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1))) >> 0))), 1)), 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), int(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), 1)), 1, 1)), 0, 0, 0)))) * 1)))) % subgroup_size) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u) : _GLF_FUZZED(workgroup_id)))))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, max(0u, 0u)) + (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), 0 | (_GLF_IDENTITY(1, 0 ^ (1)))))), 1)), 1, 1))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, max(0u, 0u)) + (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, min(1, 1)), 1)), 1, 1))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(174819u) : _GLF_IDENTITY(0u, uint(uint(0u))))))) + (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), 1, 1))))) % subgroup_size))) : _GLF_FUZZED(num_workgroup))), min(((subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_local_id)))))) : _GLF_FUZZED(atomicAdd(workgroup_id, workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78441) : 1)), _GLF_IDENTITY(1, min(1, 1)))))), (1) >> 0), 1));
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))) && true))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y)) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, true, true)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) || false))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), true, true, true))))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.1)), bool(false)))))) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6567.6069), _GLF_FUZZED((float(true) - 1.8))), bvec2(false, false))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6567.6069), _GLF_FUZZED((float(true) - 1.8))), bvec2(false, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6567.6069), _GLF_FUZZED((float(true) - 1.8))), bvec2(false, false))).x > injectionSwitch.y) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6567.6069), _GLF_FUZZED((float(true) - 1.8))), bvec2(false, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6567.6069), _GLF_FUZZED((float(true) - 1.8))), bvec2(false, false))).x > injectionSwitch.y) || false), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
