#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, true && (false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true)))))))), (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true)), bool(bvec2(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true)), true)))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true))))))))) && true)))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, true && (false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true)))))))), (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true)), bool(bvec2(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true)), true)))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true), true, true))))))))) && true))))) && true))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))))), true, true))) || false)))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u)))))))), clamp(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, true && (true))) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY(true, true && (true))) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, true && (true))) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY(true, true && (true))) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u))))))))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), false || ((true))))), (bool(bool(_GLF_IDENTITY((true), false || ((true)))))) && true)))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u))))))))) ^ 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u), min(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u), 0u)))))))))))), uint(uvec3(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), _GLF_IDENTITY(true, false || (true)) && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), (_GLF_IDENTITY(true, true && (true))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u)))))))), 0u, 1u))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), true && (true))) && true) ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u)))), uint(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) : _GLF_FUZZED(64276u)))))))) ^ 0u), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) + uvec4(0u, 0u, 0u, 0u)))) + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(64276u, (true ? 64276u : _GLF_FUZZED(workgroup_id))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) + uvec4(0u, 0u, 0u, 0u)))) + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(64276u, (true ? 64276u : _GLF_FUZZED(workgroup_id)))))))) | ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) + uvec4(0u, 0u, 0u, 0u)))) + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(64276u, (true ? 64276u : _GLF_FUZZED(workgroup_id)))))))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u, 0u))) + subgroup_local_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))) && true) ? workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(64276u, (true ? 64276u : _GLF_FUZZED(workgroup_id))))))))))), ((~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | 0u))) + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(64276u), (true ? workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))) : _GLF_FUZZED(workgroup_id))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), clamp(~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u)))), ~ (_GLF_IDENTITY(uint(2u), 0u + (uint(2u))))))))) : _GLF_FUZZED(workgroup_id)))) - ((151793u & 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) * 1u)) : _GLF_FUZZED(64276u)) | (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(64276u, clamp(_GLF_IDENTITY(64276u, min(64276u, 64276u)), _GLF_IDENTITY(64276u, max(64276u, 64276u)), _GLF_IDENTITY(64276u, clamp(64276u, 64276u, 64276u))))))))))))) << 0u) >> 0u));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u), (uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u)))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size) ^ 0u, min((subgroup_size) ^ 0u, (subgroup_size) ^ 0u))) : _GLF_FUZZED(subgroup_size))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size))), min(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((45660u | 166532u) & 0u, 0u | ((45660u | 166532u) & 0u))) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 0u))) : uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 0u))) : uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, 0u)))))))))), 0u ^ ((subgroup_local_id + 1) % subgroup_size))), uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) >> 0u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u))))), ((subgroup_local_id + 1) % subgroup_size)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u) | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))))))))) / 1u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) ^ 0u))), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_size) ^ 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))) ^ 0u) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1))) % subgroup_size))))), 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)))) : _GLF_FUZZED(workgroup_size)))), (true ? (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))) : _GLF_FUZZED((60220u % num_workgroup)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)))) : _GLF_FUZZED(workgroup_size)))), (true ? (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))) : _GLF_FUZZED((60220u % num_workgroup))))) | 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1)))), 0u | (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1)))), 0u | (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | (((buf[virtual_gid] = 1)) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | (((buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec4(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))))) / 1u)), (_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | (((buf[virtual_gid] = 1)) / 1u))) + 0u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u)) | (((buf[virtual_gid] = 1)) / 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid] = 1, 1u * (buf[virtual_gid] = 1)))) / 1u, (0u | 0u) | (((buf[virtual_gid] = 1)) / 1u))) + 0u)), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u)))))) | (((buf[virtual_gid] = 1)) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) | 0u)) / 1u, (0u | 0u) | (((buf[virtual_gid] = 1)) / 1u))) + 0u)))))))))))) >> 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1))))), _GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | (((buf[virtual_gid] = 1)) / 1u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1))))), _GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | ((_GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) - 0u)) / 1u)))))))) >> 0u))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u)) ^ 0u)) ^ 0u), 0u + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1))))), _GLF_IDENTITY(((buf[virtual_gid] = _GLF_IDENTITY(1, 0 ^ (1)))) / 1u, (_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u))) | (((buf[virtual_gid] = 1)) / 1u)))))) >> 0u))), (true ? (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) | (1)), 0u ^ (buf[virtual_gid] = 1)))), 0u + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) | (1)), 0u ^ (buf[virtual_gid] = 1))))))), _GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, (0u | 0u) | ((_GLF_IDENTITY((buf[virtual_gid] = 1), ~ (~ (_GLF_IDENTITY((buf[virtual_gid] = 1), (true ? _GLF_IDENTITY((buf[virtual_gid] = 1), (true ? (buf[virtual_gid] = 1) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(workgroup_id))))))) / 1u)))))) >> 0u))) : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(subgroup_size))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1)), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)), ((~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u))) >> 0u)))) | 0u, (false ? _GLF_FUZZED(next_virtual_gid) : ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)), ((_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u), ~ (~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))))) >> 0u)))) | 0u))) >> 0u)), 0u | ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) ^ 0u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 114873u))), ((buf[virtual_gid] = 1)) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1)), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), _GLF_IDENTITY(((buf[virtual_gid] = 1)), ~ (~ (_GLF_IDENTITY(((buf[virtual_gid] = 1)), (((buf[virtual_gid] = 1))) << (198697u & 0u))))) / 1u))))) | 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1)))), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) << 0), 0u + (buf[virtual_gid] = 1)), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u))))) | 0u))) >> 0u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 | (max(1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-52497) : int(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> 0)) << 0))), (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)))))))) >> 0u))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, max(1, 1)), (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(virtual_gid))) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ (1 ^ 1)), 1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-53337) : 1))))), ((buf[virtual_gid] = 1)) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (buf[virtual_gid] = 1))), ((buf[virtual_gid] = 1)) / 1u)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (buf[virtual_gid] = 1))), ((buf[virtual_gid] = 1)) / 1u))))))))) - 0u) | 0u) >> 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), _GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, 0u | (((buf[virtual_gid] = 1)) / 1u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, 0u | (((buf[virtual_gid] = 1)) / 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, 0u | (((buf[virtual_gid] = 1)) / 1u)), (_GLF_IDENTITY(((buf[virtual_gid] = 1)) / 1u, 0u | (((buf[virtual_gid] = 1)) / 1u))) >> 0u))))))))) >> 0u))))))), 0u | (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u), _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u, 0u ^ (_GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u, 0u | ((buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)))))), 0u | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(ivec3((1), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))))) >> 0u))))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u)))))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), 0u | (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u)), ~ (~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u)), 1u * ((_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, (1) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))))), ((buf[virtual_gid] = 1)) / 1u)))) >> _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (0u)))))))) << 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u, 0u ^ ((_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)))) >> 0u))))))))), 0u ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u), (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u)) >> 0u)))) >> 0u))))))), (~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (1u ^ 1u) + (buf[virtual_gid] = 1)), (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) / 1u)))) >> 0u)))))))) - 0u)))))) + _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))) | (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), ~ (~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))))))), ~ (0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 0u ^ (~ (0u))))))))))) : _GLF_FUZZED(subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))), (bool(bool(_GLF_WRAPPED_LOOP(false)))) && true)));
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3228.0752)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, true, true, true))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(5, int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1 * (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) ^ 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), clamp(_GLF_IDENTITY(ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), (ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0)) | (ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0))), ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0), ivec4(5, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(955.892) : float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0)))))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1 * (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) ^ 0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])))))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2147.4593, -75.63))))[0], injectionSwitch[1])))))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(injectionSwitch[0], 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(39.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-1421.9934) : injectionSwitch[1]))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), cos(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), cos(0.0), 1.0))))))[0], injectionSwitch[1])))))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))])))))), mix(vec2(_GLF_FUZZED(float(21740u)), _GLF_FUZZED(float(39642))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), max(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), mix(vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))))[0], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))))[1]), vec2(_GLF_FUZZED((- 380.500)), _GLF_FUZZED(55.01)), bvec2(false, false)))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))[1]), bvec2(true, true))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch[1]))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, exp(0.0))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 1.0, exp(0.0))))))[1])))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((false ? _GLF_FUZZED(-1421.9934) : injectionSwitch[1]), (_GLF_IDENTITY(true, false || (true)) ? (false ? _GLF_FUZZED(-1421.9934) : injectionSwitch[1]) : _GLF_FUZZED(step(-59.85, (uvec4(79797u, _GLF_IDENTITY(15697u, clamp(15697u, _GLF_IDENTITY(15697u, (true ? 15697u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(15697u, (true ? 15697u : _GLF_FUZZED(52771u))))), 92830u, 19495u) , 704.059))))))), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / exp(0.0))), 1.0)), injectionSwitch.y)) * (vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])))))).y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 1 * (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))))), min(_GLF_IDENTITY(0, int(ivec2(0, 1))), 0)) | (0), 0 ^ (0 | (0))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), sqrt(1.0), 1.0, 0.0, 1.0, length(0.0), sin(0.0)))))), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), sqrt(1.0), 1.0, 0.0, 1.0, length(0.0), sin(0.0)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), sqrt(1.0), 1.0, 0.0, 1.0, length(0.0), sin(0.0)))))))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, true, true)))))) && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))))), false))), false)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))), false)))))), (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.2)), bool(false))) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-55.04)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), bool(true)))))))), _GLF_IDENTITY((! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), float(_GLF_FUZZED(-21.86)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-55.04)), float(injectionSwitch.x), bool(true))))))))), ((! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-21.86)), (float(_GLF_FUZZED(-21.86))) - 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-55.04)), float(injectionSwitch.x), bool(true)))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))) && true)); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0, (false ? _GLF_FUZZED(82.31) : (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0))) / 1.0)) > injectionSwitch.y))));
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(0, 0, 0) | (ivec3(0, 1, 0))))), (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) || false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), bool(false)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), true)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (! (false)))))), true, true, true))))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false))))))) && true)))))))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), float(mat2(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0)))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && (false))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << 0)) * (1 ^ 0)), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << 0)) * (1 ^ 0)), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(_GLF_IDENTITY(float(_GLF_FUZZED(5.8)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(5.8)), (float(_GLF_FUZZED(5.8))) - 0.0))), float(-30.85), bool(true)))), 467.372, -4889.3407))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), float(_GLF_FUZZED(-395.494)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (false ? _GLF_FUZZED(fract(0.7)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))), (_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(fract(0.7)) : mix(_GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(29.25, -52.06, 0.6, 3405.6529)) : vec4(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-58.59)), bool(false))))) - 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))))), (_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59))))))) * 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59))))))))) - 0.0), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), min(float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)))), bool(false)), max(mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))), max(max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(361.647) : -58.59), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))), clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))), min(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59), mix(float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)), float(_GLF_FUZZED(-626.136)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(361.647) : -58.59)))))), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(_GLF_IDENTITY(false, (false) && true))), max(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-58.59), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat4(-61.88, 5.7, 4518.4600, 7.8, -189.000, -5.7, -8.8, 4.8, -4112.4201, -40.34, -0.0, 584.684, 1.9, 2902.7316, 8047.4284, -338.655))) : _GLF_IDENTITY(_GLF_FUZZED(-58.59), (_GLF_FUZZED(-58.59)) * sqrt(1.0)))), (_GLF_IDENTITY(_GLF_FUZZED(-58.59), mix(float(_GLF_FUZZED(4.9)), float(_GLF_FUZZED(-58.59)), bool(true)))) - 0.0)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), clamp(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), (max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))) - 0.0))), float(mat2x3(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, 0.0)))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(6.4)))), vec2(_GLF_FUZZED((-84.97 - -19.17)), _GLF_FUZZED(vec4(58.86, -1.2, -140.630, -6.3).p)), bvec2(false, false))).y), float(_GLF_FUZZED(-58.59)), bool(false))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-5.5, 710.389)), max(_GLF_FUZZED(vec2(-5.5, 710.389)), _GLF_FUZZED(vec2(-5.5, 710.389)))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.4, 5.7)) : injectionSwitch)).x)))), float(-30.85), bool(true)))), 467.372, -4889.3407)), min(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true)))), 467.372, -4889.3407)), true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(float(false)) : _GLF_ZERO(0.0, injectionSwitch.x)))))), float(-30.85), bool(true)))), 467.372, -4889.3407))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (false ? _GLF_FUZZED(fract(0.7)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(361.647, abs(0.0) + (361.647))) : _GLF_IDENTITY(-58.59, (true ? -58.59 : _GLF_FUZZED(-23.69))))))), (float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) ? _GLF_IDENTITY(_GLF_FUZZED(361.647), (_GLF_FUZZED(361.647)) - 0.0) : _GLF_IDENTITY(-58.59, (true ? -58.59 : _GLF_FUZZED(-23.69)))))))) - 0.0), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(361.647, max(361.647, _GLF_IDENTITY(361.647, max(361.647, 361.647))))) : -58.59)))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : _GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-5.7) : -58.59)))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-58.59, mix(float(-58.59), float(_GLF_FUZZED(746.251)), bool(false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), bool(bvec2(bool(bvec3(bool(false), false, false)), true))))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-58.59, 0.0 + (-58.59)), 1.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(-58.59, 0.0 + (-58.59)), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(-58.59, 0.0 + (-58.59)), 1.0, 0.0, 0.0))))))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (true ? -58.59 : _GLF_FUZZED(-9.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-58.59), (false ? _GLF_FUZZED(5795.3088) : _GLF_FUZZED(-58.59)))))), bool(false)), max(mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(distance(406.512, 4.3)))), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))), max(max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), _GLF_IDENTITY(max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(7288.3216) : max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(27.91) : injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-378.160) : -58.59)))), float(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-378.160) : -58.59)))), 0.0))), bool(false))), (false ? _GLF_FUZZED(887.556) : false ? _GLF_FUZZED(7288.3216) : max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(27.91) : injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-378.160) : -58.59)))), float(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-378.160) : -58.59)))), 0.0))), bool(false))))))))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-58.59, min(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-6971.9274) : _GLF_IDENTITY(-58.59, 1.0 * (_GLF_IDENTITY(-58.59, max(-58.59, _GLF_IDENTITY(-58.59, (-58.59) - 0.0))))))), -58.59)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59, max(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) ? _GLF_FUZZED(361.647) : -58.59)))))), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), (float(_GLF_FUZZED(-58.59))) + 0.0), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))))))), 1.0, 1.0, 1.0, 0.0, 1.0))), max(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), float(mat2(float(_GLF_FUZZED(-58.59)), 0.0, 1.0, 1.0))), bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))))))))))), _GLF_IDENTITY(false, true && (false)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(-30.85, 1.0 * (_GLF_IDENTITY(-30.85, (false ? _GLF_FUZZED(129.979) : -30.85)))), mix(float(_GLF_FUZZED(5.8)), float(-30.85), bool(true)))), 467.372, -4889.3407))), ((true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(5.8)), float(-30.85), bool(true)))), 467.372, -4889.3407)))) - 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (false ? _GLF_FUZZED(fract(0.7)) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), clamp(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y)) ? _GLF_FUZZED(361.647) : -58.59)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y)) ? _GLF_FUZZED(361.647) : -58.59)))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y)) ? _GLF_FUZZED(361.647) : -58.59)))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), min(float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))), max(max(mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-55.18)), float(float(injectionSwitch.y)), bool(true))))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), (_GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), 0.0 + (float(_GLF_FUZZED(-58.59))))) - sin(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), min(float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)))))), bool(false)), (true ? mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), float(vec2(float(_GLF_FUZZED(-58.59)), 1.0))))), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(0.0)), float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), bool(true))) : _GLF_FUZZED(fma(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(44.82))), _GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))))), float(-30.85), bool(true)))), clamp(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(determinant(mat3(-7.4, 50.99, -3.2, 0.0, -236.471, -769.757, -1.3, 5.7, -5466.8117))) : _GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))))), float(-30.85), bool(true)))), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true)))), (true ? sqrt(_GLF_IDENTITY(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true))), min(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true))), _GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true))))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(-3.2))), sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), float(-30.85), bool(true)))))), 467.372, -4889.3407)), min(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.8, (5.8) / 1.0), (5.8) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(-30.85), bool(true)))), 467.372, -4889.3407)), true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(fma(sqrt(_GLF_IDENTITY(-30.85, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(-30.85), bool(true)))), 467.372, -4889.3407))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), (false ? _GLF_FUZZED(fract(_GLF_IDENTITY(0.7, mix(float(0.7), float(_GLF_FUZZED(586.409)), bool(false))))) : mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1058.5333), _GLF_FUZZED(9.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(361.647, max(_GLF_IDENTITY(361.647, (361.647) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0))))), _GLF_IDENTITY(361.647, max(361.647, 361.647))))) : -58.59)))), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(false, bool(bvec2(false, true))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(361.647) : _GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-5.7) : -58.59)))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.49), _GLF_FUZZED(-98.91)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : _GLF_IDENTITY(-58.59, clamp(-58.59, -58.59, -58.59)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.49), _GLF_FUZZED(-98.91)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) ? _GLF_FUZZED(361.647) : _GLF_IDENTITY(-58.59, clamp(-58.59, -58.59, -58.59))) - 0.0))))), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), min(float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (true ? -58.59 : _GLF_FUZZED(-9.0))))), float(_GLF_FUZZED(-58.59)))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))), max(max(mix(_GLF_IDENTITY(float(injectionSwitch.y), float(mat2(float(injectionSwitch.y), sqrt(0.0), 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), _GLF_IDENTITY(max(mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), clamp(float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(-58.59)), clamp(float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59)), float(_GLF_FUZZED(-58.59))))), float(_GLF_FUZZED((true ? -159.646 : -7.8))), bool(false))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))), (false ? _GLF_FUZZED(7288.3216) : max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, mix(float(_GLF_FUZZED((- vec4(-78.05, 12.70, 55.06, 9.8).t))), float(_GLF_IDENTITY(-58.59, float(mat2x3(-58.59, 0.0, 0.0, 0.0, 0.0, 1.0)))), bool(true))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-378.160) : -58.59)))), bool(false))))))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-58.59, min(_GLF_IDENTITY(-58.59, (false ? _GLF_FUZZED(-6971.9274) : _GLF_IDENTITY(-58.59, 1.0 * (-58.59)))), -58.59)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4957.9091) : injectionSwitch.x))) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))), _GLF_IDENTITY(bool(bvec2(false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))), true)), bool(bool(bool(bvec2(false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))), true)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(91.97), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.3)), bvec2(true, false)))) - vec2(0.0, 0.0)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(361.647) : -58.59)))), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-58.59), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-58.59, min(-58.59, -58.59))), max(_GLF_FUZZED(-58.59), _GLF_IDENTITY(_GLF_FUZZED(-58.59), (_GLF_FUZZED(-58.59)) * 1.0))), _GLF_FUZZED(-58.59), _GLF_FUZZED(-58.59)))), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-58.59, (_GLF_IDENTITY(-58.59, 1.0 * (-58.59))) - 0.0))), bool(false)) : _GLF_FUZZED(0.6))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-58.59)), bool(false))))))))))))))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                          barrier();
                         barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) || false))), bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)), false)))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0)))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))));
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), (_GLF_IDENTITY(true, ! (! (true)))) && true)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5128.8636) : 1.0)), _GLF_IDENTITY((1.0) - abs(0.0), mix(float(_GLF_IDENTITY((1.0) - abs(0.0), ((1.0) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(89.96)), bool(false))), abs(0.0)))) / 1.0)), float(_GLF_FUZZED(-369.512)), bool(false)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-14.68), _GLF_IDENTITY(_GLF_FUZZED(6.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(6.5), _GLF_IDENTITY((true ? _GLF_FUZZED(6.5) : _GLF_FUZZED(-9.9)), max((true ? _GLF_FUZZED(6.5) : _GLF_FUZZED(-9.9)), _GLF_IDENTITY((true ? _GLF_FUZZED(6.5) : _GLF_FUZZED(-9.9)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-847.808) : (true ? _GLF_FUZZED(_GLF_IDENTITY(6.5, min(6.5, 6.5))) : _GLF_FUZZED(-9.9))))))), _GLF_FUZZED(6.5), _GLF_FUZZED(6.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | _GLF_IDENTITY(0, min(0, 0)))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0))))), int(ivec4(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0)), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))), (_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(922.876))))) ? _GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) >> 0, int(ivec2(_GLF_IDENTITY((~ (0)) >> 0, max(_GLF_IDENTITY((~ (0)) >> 0, int(ivec4((~ (0)) >> 0, 0, 0, 0))), (~ (0)) >> 0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(92345))))), 0, (1 | 0)), ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 1) * (ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0))))), int(ivec4(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0)), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, (1 | 0))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))) || false)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true))), true && (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true))), true && ((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true))))))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))), false || (_GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))), true && (true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))), true && (true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)))))), false, true), false))))))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))), _GLF_IDENTITY(! (! (bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true)))), true && (! (! _GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec4(true, true, false, false))), true))), true && ((bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec4(true, true, false, false))), true)))))))))))), bool(bool(bool(bvec3(false, true, true))))))))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         buf[next_virtual_gid] = 2;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))))) && true)))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) || false)))))) && true))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) != _GLF_IDENTITY(1, min(1, 1))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(i) : _injected_loop_counter ++)))
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | 0)), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(7.5, _GLF_IDENTITY(4.7, min(_GLF_IDENTITY(4.7, max(4.7, 4.7)), 4.7))))), mix(vec2(_GLF_FUZZED(-4.7), ((true ? injectionSwitch : _GLF_FUZZED(vec2(7.5, 4.7))))[1]), vec2(((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? injectionSwitch : _GLF_FUZZED(vec2(7.5, 4.7))))[0], _GLF_FUZZED(4.7)), bvec2(true, false)))))).y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   do
    {
     buf[next_virtual_gid] = _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) >> 0), 2));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
