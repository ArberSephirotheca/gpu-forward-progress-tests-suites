#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x3 _f0;
 float _f1;
 uvec2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 bvec3 _f1;
 float _f2;
 mat4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 vec4 _f1;
 uvec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 ivec2 _f1;
 float _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 mat4 _f1;
 mat4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat3x2 _f1;
 uint num_workgroup;
 mat4 _f2;
 int _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 mat3x4 _f1;
 vec2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_8 _f4;
 mat4x2 _f5;
 mat4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), bool(bool(bool(bool(! (! (true)))))))))), true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) || false))) && true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(56.37, 31.33, 2.8, 14.71)))))) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(uvec3(1u), mat3x2(1.0), gl_NumWorkGroups.x, mat4(1.0), 1, _GLF_struct_0(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), false)), bool(bvec4(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), false)), bool(bvec4(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), false, false)))) || (true)))))), mat3x2(1.0))), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0)), (float(mat2x4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(700.909)))) - 0.0), 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, log(1.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))) * 1.0))) + log(1.0))), vec2(1.0), _GLF_struct_3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(9.7), 0.0 + (_GLF_FUZZED(9.7))) : 1.0)), _GLF_struct_2(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4(1.0), mat4(1.0), bvec3(true))), _GLF_struct_8(_GLF_struct_4(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(_GLF_IDENTITY(1.0, (1.0) - 0.0))))))), vec4(1.0), uvec4(1u), mat2x3(1.0)), ivec2(1), 1.0, _GLF_struct_5(uvec3(1u)), _GLF_struct_6(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))) || false, ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))))))) || false) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), false || (bool(bvec2(_GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))), true))))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true))))) || false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))))))) || false, ! (! ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true))))))) || false))), true && (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), false, true))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), false, true))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))), false, true))), true, false)), true, true))), false, true)))))))))) || false)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))), false, false, false)), false, true)))), true))) || false))))))))))), 1.0, mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1))), ivec2(1))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1))), ivec2(1))), (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1))), ivec2(1)))) / ivec2(1, 1))) | ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1)), (max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1))) << ivec2(0, 0))), ivec2(1)))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), max(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec2(1))), ivec2(1)))))), _GLF_struct_7(mat2x3(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), uvec2(uvec4(~ (uvec2(1u)), 1u, 1u)))))) << uvec2(_GLF_IDENTITY(0u, (0u) - (0u ^ 0u)), 0u)), ivec4(1))), mat4x2(1.0), mat4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.7) : injectionSwitch.y))) + 0.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.7) : injectionSwitch.y))) + 0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED((+ -5.4)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, exp(0.0), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 1.0, 0.0)), (true ? dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), (0.0) - 0.0), 0.0, 0.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(0.4))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, cos(0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(141612u, _GLF_IDENTITY(121188u, clamp(121188u, 121188u, _GLF_IDENTITY(121188u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(121188u, 1u, 0u), ~ (~ (uvec3(121188u, 1u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(121188u, 1u, 0u), ~ (~ (uvec3(121188u, 1u, 0u)))))))))), 94752u)) : gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), 1u * (_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))))), ~ (_GLF_IDENTITY(~ (0u | (gl_WorkGroupID.x)), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, min(0u, 0u)) | (gl_WorkGroupID.x))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), (_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), max(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x))))), (gl_WorkGroupID.x))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), max(((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(0u | (gl_WorkGroupID.x), 1u * (0u | (gl_WorkGroupID.x))), clamp(_GLF_IDENTITY(0u | (gl_WorkGroupID.x), 1u * (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY(0u | (gl_WorkGroupID.x), 1u * (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY(0u | (gl_WorkGroupID.x), 1u * (0u | (gl_WorkGroupID.x)))))), 1u))))), (((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (gl_WorkGroupID.x), (0u | (gl_WorkGroupID.x)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))))), 1u)))))) / 1u) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))) | (gl_WorkGroupID)).x)))))), min(_GLF_IDENTITY((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, 1u)), min(uint(uvec4(0u, 0u, 0u, 1u)), uint(uvec4(0u, 0u, 0u, 1u))))) + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u), (true ? _GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u), (true ? _GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u) : _GLF_FUZZED(subgroup_local_id)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u, ~ (~ (((~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u) | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)))), (true ? _GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x)), 1u))))) | 0u) : _GLF_FUZZED(subgroup_local_id))))) / 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID)).x), 0u + _GLF_IDENTITY(((gl_WorkGroupID.x)), (((gl_WorkGroupID.x))) | (((gl_WorkGroupID.x)))))) - 0u))), ((~ _GLF_IDENTITY((0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u ^ ((gl_WorkGroupID.x)))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u, 0u))), 0u ^ (0u)) | (gl_WorkGroupID.x)), 1u))))) | 0u)))) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))).x)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u), (false ? _GLF_FUZZED(uvec3(112834u, 90116u, 146303u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u)) << uvec3(0u, 0u, 0u))))), 0u | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u), (false ? _GLF_FUZZED(uvec3(112834u, 90116u, 146303u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u)))))))), (0u ^ ((_GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), ~ (~ ((0u | (gl_WorkGroupID.x))))), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), max((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(119714u, 121783u, 189546u)))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u)), 0u + (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) ^ 0u)), 1u))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), uint(uvec2((_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), clamp(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))), (_GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x)))) << 0u))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))), ~ (~ ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))))))) | 0u)) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), 0u))))))))) - 0u), 1u, 1u)) << uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u), (_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + (_GLF_IDENTITY((gl_WorkGroupID.x), min(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))), (gl_WorkGroupID.x))))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), (_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))) | (_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))), _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x))))), (_GLF_IDENTITY((~ (0u | (gl_WorkGroupID.x))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + ((gl_WorkGroupID.x))))), ((~ _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))) | 0u), (_GLF_IDENTITY((~ (0u | _GLF_IDENTITY((gl_WorkGroupID.x), 0u + (_GLF_IDENTITY((gl_WorkGroupID.x), min(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))), (gl_WorkGroupID.x))))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), (_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u)))) | (_GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))), _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))), _GLF_IDENTITY((0u | (gl_WorkGroupID.x)), uint(uvec2((0u | (gl_WorkGroupID.x)), 1u))))))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((~ (0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) << 0u)))), gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))), false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0))))).y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))) > injectionSwitch.y) && true, bool(bvec2((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, true))), false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false)) && true)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 0.0)))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) || false)))), false)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0), injectionSwitch[1])))).y)))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) / 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) / 1.0))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) / 1.0)))))))) && true)), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) / 1.0))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y) / 1.0)))))))) && true))) || false)))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, 0.0))), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.1) : 1.0))) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, 0.0))), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.1) : 1.0))) * (injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, 0.0))), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.1) : 1.0))) * (injectionSwitch)))).x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, 0.0))), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.1) : 1.0))) * (injectionSwitch)))).x > injectionSwitch.y))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))))), true && (bool(! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false))))) && true))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) + 0.0), injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool(false)), false, false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false))))))))))), true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec4(bvec3(bool(bool(false)), false, false), true))))))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), true))), false))), false)))))))), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) && true))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1618.0283) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, length(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, tan(0.0), 1.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0))) : _GLF_FUZZED(step(vec3(578.927, -1.7, 190.819), vec3(-925.229, 4.1, -519.237))))))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))), false, true, false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) : _GLF_FUZZED((workgroup_size --)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0), (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0)) | ivec3(0, 0, 0))), max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0), (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0)) | ivec3(0, 0, 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0), (ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0)) | ivec3(0, 0, 0)))))), (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (buf[virtual_gid] = 1))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), 0 + (~ (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), 0 + (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1)))))), (false ? _GLF_FUZZED(28476) : _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), 0 + (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1)))))), (true ? _GLF_IDENTITY(~ (~ (1)), 0 + (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1)))))) : _GLF_FUZZED(20312)))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.8))) > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))], injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(1, (1) | (1))))])))))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(80646) : 2))), _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-20180) : 0)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), false)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), false)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)) && true)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true)), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true)), true)))), false))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))) + determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2145.9847), float(mat4x2(_GLF_FUZZED(-2145.9847), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) : injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2145.9847), float(mat4x2(_GLF_FUZZED(-2145.9847), abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) : injectionSwitch.x)))) > injectionSwitch.y, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2x4(mat2x4(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(625.982) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
