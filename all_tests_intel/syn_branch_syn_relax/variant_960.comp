#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(37913) : _injected_loop_counter --)))
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), (float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) ? float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), _GLF_IDENTITY(float(mat2x3(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), clamp(float(mat2x3(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), float(mat2x3(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), float(mat2x3(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))))))) - 0.0)) : _GLF_FUZZED(-106.814)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60)))), clamp(true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60)))), true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60)))), (true ? _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(sin(_GLF_IDENTITY(64.60, clamp(64.60, 64.60, 64.60))))) + 0.0)) / 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, min((0.0) - 0.0, (0.0) - 0.0))))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(505.265))))), 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(1.0), 0.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-767.072)))) / 1.0), 1.0)))), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), 1.0 * (clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.31) : 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (true ? mat4(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(reflect(124.898, 1923.8048)) : 0.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(417.772) : 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))))))), min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))))))))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7056.6143) : 0.0)), 0.0)), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7056.6143) : 0.0)), 0.0)), 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7056.6143) : 0.0)), 0.0)), 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7056.6143) : 0.0)), 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0))))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))))))) * 1.0)), (1.0) / 1.0), 1.0, 1.0), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0)) * mat3(1.0)))))) : _GLF_FUZZED(mat4(8341.8665, _GLF_IDENTITY(-67.38, (-67.38) / cos(0.0)), -42.79, 4.3, -50.41, 7147.0753, 25.85, 238.056, 7459.0134, -5592.4333, 7.9, 499.190, 2.5, 3472.9003, _GLF_IDENTITY(19.77, _GLF_IDENTITY(clamp(_GLF_IDENTITY(19.77, min(_GLF_IDENTITY(19.77, (19.77) - 0.0), 19.77)), 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(_GLF_IDENTITY(19.77, (_GLF_IDENTITY(19.77, clamp(_GLF_IDENTITY(19.77, max(19.77, 19.77)), 19.77, 19.77))) - 0.0), min(19.77, 19.77))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(19.77, _GLF_IDENTITY(float(float(19.77)), clamp(float(float(19.77)), float(float(19.77)), float(float(19.77))))), 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), (clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77)))))) / 1.0)) / round(length(normalize(1.0))))), -6673.9781))))) - mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - abs(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))) + 0.0)), (float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) ? float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, max((0.0) / 1.0, (0.0) / 1.0))), 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), (float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0))) - 0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0))) - 0.0)) : _GLF_FUZZED(-106.814)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 1.0 * (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0))), 0.0 + (float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(mat2x3(min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - tan(abs(0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3956.4674) : 0.0)), 0.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-100.704))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, max(_GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0), max(_GLF_IDENTITY(clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0), clamp(clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0), clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0), clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0))), clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0)))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0)))) / 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))))), (true ? mat4(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), (_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-489.531))), 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(4627.1079) : clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))))))) / 1.0)))) * 1.0)), (1.0) / 1.0), 1.0, 1.0), (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)) * mat3(1.0)))))) : _GLF_FUZZED(mat4(8341.8665, _GLF_IDENTITY(-67.38, (-67.38) / cos(0.0)), -42.79, 4.3, -50.41, 7147.0753, 25.85, 238.056, 7459.0134, -5592.4333, 7.9, 499.190, 2.5, 3472.9003, _GLF_IDENTITY(19.77, _GLF_IDENTITY(clamp(19.77, 19.77, _GLF_IDENTITY(_GLF_IDENTITY(19.77, (19.77) - sin(0.0)), max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), (_GLF_IDENTITY(clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), (clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77)))))) / 1.0)) / round(length(normalize(1.0))))), -6673.9781))))) - mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1427.9770))), 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - abs(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, 1.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), cos(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), round(length(normalize(vec2(1.0, 1.0))))), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-6.0) : determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0))))) - sin(log(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5670.9499) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1.6))), 0.0, 0.0, 1.0, 0.0))) + 0.0)), (float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0))) - 0.0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) ? float(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)), (float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0), 0.0))), 0.0, 1.0, 0.0))) + 0.0))) - 0.0)) : _GLF_FUZZED(-106.814)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), clamp((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0 + ((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0 + ((0.0) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))))))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0), 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, tan(0.0), 0.0))), 1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, log(1.0)))) * mat2(1.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (true ? mat4(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5046.5664) : _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, exp(0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(vec3(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), max(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), 0.0 + (float(vec3(1.0, 1.0, 0.0)))) : _GLF_FUZZED(-2636.1423))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(vec3(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), max(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), 0.0 + (float(vec3(1.0, 1.0, 0.0)))) : _GLF_FUZZED(-2636.1423))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(vec3(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), max(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, 1.0, 0.0)))), 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), 0.0 + (float(vec3(1.0, 1.0, 0.0)))) : _GLF_FUZZED(-2636.1423))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + abs(0.0)), 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))))))) * 1.0)), (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), 1.0, 1.0), (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)) * mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))))), 1.0)))))))) : _GLF_FUZZED(mat4(8341.8665, _GLF_IDENTITY(-67.38, (-67.38) / cos(0.0)), -42.79, 4.3, -50.41, _GLF_IDENTITY(7147.0753, float(vec3(7147.0753, 0.0, log(abs(1.0))))), 25.85, 238.056, 7459.0134, _GLF_IDENTITY(-5592.4333, (-5592.4333) - 0.0), 7.9, 499.190, 2.5, 3472.9003, _GLF_IDENTITY(19.77, _GLF_IDENTITY(_GLF_IDENTITY(clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), clamp(clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))))), (_GLF_IDENTITY(clamp(19.77, 19.77, _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77))))), (clamp(19.77, _GLF_IDENTITY(19.77, (19.77) - 0.0), _GLF_IDENTITY(19.77, max(19.77, _GLF_IDENTITY(19.77, min(19.77, 19.77)))))) / 1.0)) / round(length(normalize(1.0))))), -6673.9781))))) - mat4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, max((0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, 1.0 * ((0.0) - 0.0)))))) - abs(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? 0.0 : _GLF_FUZZED(9.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, 1.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), cos(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))))))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ _GLF_IDENTITY(0, clamp(0, 0, 0)))); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), (~ (_injected_loop_counter --)) ^ 0))))
                {
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))) || false)));
          }
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), true && ((true))), true)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), true && ((true))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ! (! ((true))))), true && (bool(_GLF_IDENTITY((true), ! (! ((true)))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ! (! ((true))))), true && (bool(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false))), (! ((_GLF_IDENTITY(true, (true) || false)))) && true)))) && true)))))))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ! (! ((true))))), true && (bool(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false))), (! ((_GLF_IDENTITY(true, (true) || false)))) && true)))) && true))))))))))), (! ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), ! (! ((true))))), true && (bool(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false))), (! ((_GLF_IDENTITY(true, (true) || false)))) && true)))) && true)))))))))))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))))), false, true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))))), false, true), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), (((true))) && true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), true)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), true && (true && (true))))))), bool(bool(_GLF_IDENTITY((true), ! (! ((true))))))))) || false))))))
    {
     _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id, 0u ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id))) - 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id, 0u ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id))) - 0u) ^ 0u));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
         do
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0)))) + 0.0) : _GLF_FUZZED(-7.3))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat3x4((injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, 0.0, tan(0.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) + 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0)), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)) ? _GLF_FUZZED(vec2(-663.163, 0.6)) : injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-663.163, 0.6)) : injectionSwitch)).x, 1.0, 1.0, tan(0.0), abs(0.0), exp(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0)), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0), vec2(0.0, 1.0))), 0.0))), (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0)))) + 0.0) : _GLF_FUZZED(-7.3))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, _GLF_IDENTITY(((injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(determinant(mat2(476.794, 43.78, -2.4, 44.27))) : _GLF_IDENTITY(((injectionSwitch.x) - 0.0), abs(0.0) + (((injectionSwitch.x) - 0.0))))) / 1.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(mat3x4((injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, 0.0, tan(0.0))), min(float(mat3x4((injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, 0.0, tan(0.0))), float(mat3x4((injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, tan(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, 0.0, tan(0.0)))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x) - 0.0)))) + 0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0)), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)) ? _GLF_FUZZED(vec2(-663.163, 0.6)) : injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-663.163, 0.6)) : injectionSwitch)).x, 1.0, 1.0, tan(0.0), abs(0.0), exp(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(mat4x2(min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 1.0)), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0), vec2(0.0, 1.0))), 0.0))), (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         return;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(2.7)))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-989.775))))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))) : _GLF_FUZZED(-43.90))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-989.775))))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))) : _GLF_FUZZED(-43.90))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-989.775))))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))) : _GLF_FUZZED(-43.90))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-989.775))))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))) : _GLF_FUZZED(-43.90))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-989.775))))), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))) : _GLF_FUZZED(-43.90))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(91.12)))) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), abs(1.0), 0.0, 0.0), clamp(vec4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0)))), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0), vec4(max(injectionSwitch.x, injectionSwitch.x), abs(1.0), 0.0, 0.0)))))))))))))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-96.49))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-96.49)))) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-96.49)))) / 1.0 : _GLF_FUZZED(-6.9)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)), sqrt(0.0) + (float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)))), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(3675.4766))))), max(injectionSwitch.x, injectionSwitch.x)), 1.0))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)), sqrt(0.0) + (float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)))), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(3675.4766))))), max(injectionSwitch.x, injectionSwitch.x)), 1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)), sqrt(0.0) + (float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)))), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(3675.4766))))), max(injectionSwitch.x, injectionSwitch.x)), 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)), sqrt(0.0) + (float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)))), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(3675.4766))))), max(injectionSwitch.x, injectionSwitch.x)), 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)), sqrt(0.0) + (float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0)), 1.0)))), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(3675.4766))))), max(injectionSwitch.x, injectionSwitch.x)), 1.0))) + 0.0)))) + 0.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
         for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) * _GLF_IDENTITY(1, (1) ^ 0))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 + (1))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / (0 ^ 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / (0 ^ 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), false, true))))))))))))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED((mat4x2(9.2, 9.2, 126.600, -7956.6452, 2.9, 53.53, -9.8, -6282.5416) * vec4(2.4, -205.358, 2357.5904, 7.2))))).y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
        return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     else
      {
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))) && true), ! (! (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))) && true))))))
          {
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), (0) | 0), 0, 0)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) / 1, 0 ^ ((int(5)) / 1)))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))))).x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))) || false), false || (true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y)))))))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))))));
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
              }
            }
          }
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, false, false))))), (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || false))))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), true)))))), (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))))), true))))))) && true), false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))) || (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))) && true), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.15, 77.44)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.15, 77.44)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.15, 77.44)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)) && true) || false)) && true)), true))) || false))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (0 & int(82358u)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) >> 0)), ((1 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) >> 0))) | 0)); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        break;
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5))))) / 1)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED((-59933 ^ -85740)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, true))), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true))))), false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, uint(uvec2(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, 1u))) * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) / 1u)) + 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) >> 0u)) / 1u)), _GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))) * cos(vec2(0.0, 0.0))), vec2(mat2x4(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | _GLF_IDENTITY((((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))), ((((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))) ^ 0u))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), max(~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), _GLF_IDENTITY(~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), (~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))) << 0u))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, (false ? _GLF_FUZZED(subgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))), min((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u))))))))) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), uint(4u))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u), uint(4u))))), 1u)) << (uvec4(122777u, 127940u, 71372u, 112788u).zx & uvec2(0u, 0u)))))) & 170889u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)) | ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u)))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, 1u, 0u))), (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), clamp(_GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), uint(uvec2(_GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), 1u))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), max(~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), ~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) - 0u) ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), max(~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), ~ ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))), _GLF_IDENTITY((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))))), ((~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)), (((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y))) | ((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)) | ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y)))))))) / _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(0u, (0u) >> 0u))))))))) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), 1u)))) & 170889u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) & 170889u))) | 0u))))))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), uint(uvec3(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(virtual_gid))))), 0u)))) << 0u) + ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1) * 1u)) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && ((! (false))))) || false), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (_GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec2(bool(bvec2((! (false)), true)), true)))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(44813)))); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), false))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), false || (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), ! (! (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false, false, true))))))))))))))))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          continue;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               buf[virtual_gid] = 1;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, 0u | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w), (true ? (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) : _GLF_FUZZED(workgroup_base)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (uvec4(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), _GLF_IDENTITY(0u, (0u) | 0u))), 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))) ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w) << 0u))), (false ? _GLF_FUZZED(workgroup_base) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))) ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) << 0u)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))), false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_DEAD(false), true, true, false))), false || (bool(bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(11968))), 0), (ivec2(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(11968))), 0)) | (ivec2(_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(11968))), 0))))))) / 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (true ? 0 << _GLF_IDENTITY(int(5), int(5)) : _GLF_FUZZED(94608)))))))) ^ ((0 ^ 0) >> _GLF_IDENTITY(int(6), int(6))), (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec3(int(5), 0, 0)), clamp(int(ivec3(int(5), 0, 0)), int(ivec3(int(5), 0, 0)), int(ivec3(int(5), 0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(5, 0 ^ (5)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(int(ivec3(_GLF_IDENTITY(5, 0 ^ (_GLF_IDENTITY(5, 0 | (5)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(_GLF_IDENTITY(5, 0 ^ (5)), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7146.0034))), injectionSwitch.x))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(5, (5) / 1), 0, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(5, (5) / 1), 0, 1), (ivec3(_GLF_IDENTITY(5, (5) / 1), 0, 1)) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))), int(5))) * 1))) ^ ((0 ^ 0) >> _GLF_IDENTITY(int(6), int(6)))) / 1))) - 0)) | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, true)))))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     int i = 0;
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) + 0))), 0 ^ (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) + 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) << 0), int(7)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) + 0u), 4, 64, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))));
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y))), true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) ^ 0)), _GLF_IDENTITY(int(6), 0 ^ (int(6)))))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          break;
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true), bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true)))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true))))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true))), false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false)), true), true))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), true), true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true))))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec3((_GLF_DEAD(false)) || false, true, false)))))) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), false, true))), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), true))))), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, true)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true), false))), true))))), false))), false)))))))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              break;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
          return;
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))) > ((_GLF_IDENTITY(0, (0) | 0) & 14401) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)), injectionSwitch.x)))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat2(55.33, 0.6, 720.871, -662.982))))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x) - 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), min(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x) - 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) * 1.0) * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).x) - 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-14.82) : injectionSwitch.x))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) + 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.0) : 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), min((1.0), (1.0))) : _GLF_FUZZED(7952.6318))) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.86) : injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.86) : injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))) && true) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(-6.2), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))) && true) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(-6.2), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))) && true) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(-6.2)) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(tanh(8.5)) : 0.0)), float(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3(max(injectionSwitch.x, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(mat4(float(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), clamp(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), _GLF_IDENTITY(clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))), (clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2))))))) - 0.0), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-790.142))) + (max(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-6.2)))))))))))) > injectionSwitch.y)))))))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), (true ? _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED(85.87))) : _GLF_FUZZED(6.4))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(abs(0.0)), 1.0, 1.0))) > injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   do
                    {
                     for(int _injected_loop_counter = (0 & 9965); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))))))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (true ? _GLF_IDENTITY(int(6), min(int(6), int(6))) : _GLF_FUZZED(_injected_loop_counter)))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) | ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       return;
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
      continue;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))
  return;
}
