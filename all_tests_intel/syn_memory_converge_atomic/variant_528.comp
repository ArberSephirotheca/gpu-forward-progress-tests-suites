#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) || false)))))), false, false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))) || false, ! (! ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) || _GLF_IDENTITY(false, bool(bool(false)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.y, 1.0, 1.0))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2081.0061)), bool(false))), false, false))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(20.03)), float(injectionSwitch.x), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_IDENTITY(_GLF_FUZZED(131.851), (_GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_FUZZED(131.851), _GLF_FUZZED(131.851)))) * 1.0), _GLF_FUZZED(131.851))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_IDENTITY(_GLF_FUZZED(131.851), (_GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_FUZZED(131.851), _GLF_FUZZED(131.851)))) * 1.0), _GLF_FUZZED(131.851))), (false ? _GLF_FUZZED(-7.6) : true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_IDENTITY(_GLF_FUZZED(131.851), (_GLF_IDENTITY(_GLF_FUZZED(131.851), min(_GLF_FUZZED(131.851), _GLF_FUZZED(131.851)))) * 1.0), _GLF_FUZZED(131.851)))))) / sqrt(1.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true))) && true))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
  return;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), bool(bool(_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false, false)))))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0))), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), max(dot(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, cos(0.0), tan(log(1.0)), 0.0))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0))), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), max(dot(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0))), 1.0, cos(0.0), tan(log(1.0)), 0.0))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(89.14)))), float(_GLF_FUZZED(6.3)), bool(false))), 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), min(_GLF_IDENTITY(0.0 + (0.0), tan(0.0) + (0.0 + (0.0))), 0.0 + (0.0)))), 0.0, 0.0))))), vec3(1.0, 1.0, 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(33.84) : 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, cos(0.0), tan(log(1.0)), 0.0))).y))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-627.931)), vec2(_GLF_FUZZED(592.242), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), vec2(mat2(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-627.931)), vec2(_GLF_FUZZED(592.242), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), 1.0, sqrt(cos(0.0)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-627.931)), vec2(_GLF_FUZZED(592.242), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(false, true))), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true, true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true) || false)) || false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1819.3772) : injectionSwitch.x)) > injectionSwitch.y))) && true, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (injectionSwitch.x > injectionSwitch.y))) && true, true), false)), true, true))))))) && true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false), false)))))), bool(bool(bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0], (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))))[2]) ^ (4167u & 0u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), max(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))))))), 0u)), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), max(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))))))), 0u)), (false ? _GLF_FUZZED(uvec3(78056u, 114743u, 28055u)) : uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), max(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))])) | uvec3(0u, 0u, 0u))))))), 0u))))) | uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) ^ 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) ^ 0), 2)), (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(109557u) : 0u)), 0u)) | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-15304))), 2))) | (2))))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), _GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u)), (uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))) ^ uvec3(0u, 0u, 0u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) >> 0)) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) - 0)], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, _GLF_IDENTITY(195294u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(195294u, (195294u) >> 0u)), 0u | (~ (_GLF_IDENTITY(195294u, (195294u) >> 0u)))))), 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(64262) : 2))]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u))[2]), (0u | 0u)), (_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u))) * uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))[2]), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, 0u)))) << 0u) | 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uvec4((0u) << 0u, 0u, 0u, 1u)))), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ (4167u & 0u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))])) >> uvec3(0u, 0u, 0u)), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 1u * (_GLF_IDENTITY(gl_WorkGroupSize[0], uint(uvec3(gl_WorkGroupSize[0], 1u, 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(136149u, (136149u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(_GLF_IDENTITY(uvec3(136149u, 195294u, 22213u), min(uvec3(136149u, 195294u, 22213u), uvec3(136149u, 195294u, 22213u))))))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))])) >> uvec3(0u, 0u, 0u)), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 1u * (_GLF_IDENTITY(gl_WorkGroupSize[0], uint(uvec3(gl_WorkGroupSize[0], 1u, 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(136149u, (136149u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(_GLF_IDENTITY(uvec3(136149u, 195294u, 22213u), min(uvec3(136149u, 195294u, 22213u), uvec3(136149u, 195294u, 22213u))))))) + uvec3(0u, 0u, 0u))), 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(136302u, 53117u, 108142u)) : uvec3(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, ((0 << _GLF_IDENTITY(int(7), int(7))) | 0))))))])) >> uvec3(0u, 0u, 0u)), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 1u * (_GLF_IDENTITY(gl_WorkGroupSize[0], uint(uvec3(gl_WorkGroupSize[0], 1u, 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(136149u, (136149u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(_GLF_IDENTITY(uvec3(136149u, 195294u, 22213u), min(uvec3(136149u, 195294u, 22213u), uvec3(136149u, 195294u, 22213u))))))) + uvec3(0u, 0u, 0u))), 1u)))))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))) * uvec4(1u, 1u, 1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(int(2)))))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(177035u, 171128u, 18953u)) : uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), uvec3(0u, 0u, 0u) ^ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]))))), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) << 0))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize))))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))), min((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))), (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, _GLF_IDENTITY(22213u, min(22213u, _GLF_IDENTITY(22213u, (22213u) | (22213u))))))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))), 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-36793) : 2)))))]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))), uvec3(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u))[2]), (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)), min(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)), uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)), uint(uvec3(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), 1u, 0u)))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)))), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u))), ~ (_GLF_IDENTITY(~ ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)))), clamp(~ ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)))), ~ ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)))), ~ ((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)))))))) * uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[2]))[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))[2]), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91446u, 38536u, 180779u)) : gl_WorkGroupSize))[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ (4167u & 0u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) >> 0)))))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, 14329u, 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(136149u, 195294u, 22213u), (uvec3(136149u, 195294u, 22213u)) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], min(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), 1 * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) | (2))))]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), (false ? _GLF_FUZZED((186714u * uvec3(154899u, 72482u, 115145u))) : _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1)))) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY((2), min((2), (2))) | (2))]), 0u))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(37683) : 0))))], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), uvec3(uvec3(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]), 0u))))) : _GLF_FUZZED(uvec3(154783u, _GLF_IDENTITY(14329u, uint(_GLF_IDENTITY(uint(14329u), min(uint(14329u), _GLF_IDENTITY(uint(14329u), (uint(14329u)) | (uint(14329u))))))), 43133u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), clamp(_GLF_FUZZED(uvec3(136149u, 195294u, _GLF_IDENTITY(22213u, (_GLF_IDENTITY(22213u, (22213u) | (22213u))) - 0u))), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u)), _GLF_FUZZED(uvec3(136149u, 195294u, 22213u))))) + uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[2]), (0u | 0u)), _GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), max((uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u))[2]), (0u | 0u)), (_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u))) * uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))) - uvec3(0u, 0u, 0u))[2]), (0u | 0u)), (_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))))), (0u | 0u))) * uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u, 0u)))) << uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))[2]), (0u | 0u)), (uvec4(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (0u | 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && true, bool(bool((false) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, length(0.0), 0.0, 1.0, 0.0)), (float(mat2x3(injectionSwitch.x, 0.0, length(0.0), 0.0, 1.0, 0.0))) / 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((629.513 + 4999.5867))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(0.0, 0.0))), min(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((629.513 + 4999.5867))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(0.0, 0.0))), min(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((629.513 + 4999.5867))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((629.513 + 4999.5867))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(0.0, 0.0))))), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((629.513 + 4999.5867))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(0.0, 0.0))))) + (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.8 - -451.508))), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.8 - -451.508))), float(injectionSwitch.x), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.8 - -451.508))), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.8 - -451.508))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-78.85, 5.0))))) - vec2(0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(1.0)), mat3(mat3(mat3(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-78.85, 5.0))))) - vec2(0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(3.1, (_GLF_IDENTITY(3.1, min(3.1, 3.1))) + 0.0)) : injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.1) : injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.1) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.1) : injectionSwitch.y))))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(injectionSwitch))))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(30030u, (0u & 62709u) + (_GLF_IDENTITY(30030u, _GLF_IDENTITY((30030u) / 1u, (_GLF_IDENTITY((30030u) / 1u, _GLF_IDENTITY(uint(uvec3((30030u) / 1u, 0u, 0u)), (uint(uvec3((30030u) / 1u, 0u, 0u))) - 0u))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, ~ (~ (7u))), 7u)), _GLF_IDENTITY(7u, 0u ^ (7u)), 7u))), uint(7u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u ^ (2u))))) ^ (uint(7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) : subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(clamp(write_val, num_workgroup, write_val)), 0u + (_GLF_FUZZED(clamp(write_val, num_workgroup, write_val)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(30030u, (0u & 62709u) + (_GLF_IDENTITY(30030u, (30030u) / 1u)))) : _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size) - 0u)))) << 0u) + subgroup_local_id, (false ? _GLF_FUZZED(uvec2(151757u, 41487u)[1]) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) >> 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) >> 0u)))))), (false ? _GLF_FUZZED(30030u) : _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (0u & 166547u))))))) << 0u) + subgroup_local_id, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) << 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) >> 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(30030u, (_GLF_IDENTITY(30030u, min(30030u, 30030u))) ^ 0u)) : subgroup_id * subgroup_size))) << 0u) + subgroup_local_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size))), min((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))))) << 0u, 0u + ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), subgroup_size))) >> _GLF_IDENTITY(0u, (0u) / (1u | 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(189183u))))) | (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))))) << 0u) + subgroup_local_id) - 0u, max((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), subgroup_size))) >> _GLF_IDENTITY(0u, (0u) / (1u | 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(189183u))))) | (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))))) << 0u) + subgroup_local_id) - 0u, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), subgroup_size))) >> _GLF_IDENTITY(0u, (0u) / (1u | 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(189183u))))) | (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))))) << 0u) + subgroup_local_id) - 0u)))), uint(uvec2(max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u, 0u + ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / (1u | 1u)), max(_GLF_IDENTITY(0u, (0u) / (1u | 1u)), _GLF_IDENTITY(0u, (0u) / (1u | 1u)))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) / (1u | 1u))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) / (1u | 1u))))))), (false ? _GLF_FUZZED(30030u) : subgroup_id * subgroup_size))) << 0u) + subgroup_local_id) - 0u)), 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))) && true))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), true, false))) || false))))
  return;
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, ~ (~ (4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))), 1 * (4)))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)))), _GLF_IDENTITY(bool(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)))), true)), ! (! (bool(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)))), true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(mix(vec2(-6.6, 2.4), injectionSwitch, -92.67))))), vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))) || ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false)))) && true), true, false))))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0))))))))))))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(_GLF_IDENTITY(false, (false) && true))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (! (! (bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)), true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)), bool(bool((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ((false)) && true), (_GLF_IDENTITY((false), true && ((false)))) && true)))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))) && true))))))), false)))), ! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), true, false))))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))) && true))))))), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(false || (false || (false)), bool(bvec4(false || (false || (false)), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false || (false)), bool(bvec4(false || (false || (false)), true, false, true))), (_GLF_IDENTITY(false || (false || (false)), bool(bvec4(false || (false || (false)), true, false, true)))) || false))))), true && (false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(66.27)))), float(_GLF_FUZZED(-929.929)), bool(false))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u ^ (_GLF_IDENTITY(write_val, max(write_val, write_val)))), _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), 0 + (_GLF_IDENTITY((4), int(ivec2((4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, (false) || false))))) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7744.7217)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (true ? vec2(injectionSwitch.x, 0.0) : _GLF_FUZZED(floor(vec2(-3055.5538, -4.5))))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
