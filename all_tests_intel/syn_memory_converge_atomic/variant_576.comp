#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, true, true)))), false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, sqrt(0.0), 0.0))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (~ _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u))) * ((gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(max(~ (gl_WorkGroupSize), ~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(max(~ (gl_WorkGroupSize), ~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), max(uvec3(uvec3(max(~ (gl_WorkGroupSize), ~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))), uvec3(uvec3(max(~ (gl_WorkGroupSize), ~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))))))))))).x : _GLF_FUZZED(_GLF_IDENTITY((uint(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) << subgroup_size), clamp((uint(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) << subgroup_size), (uint(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) << subgroup_size), (uint(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) << subgroup_size))))), max(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) | ((~ (gl_WorkGroupSize)))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))).x : _GLF_FUZZED((uint(false) << subgroup_size))), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), min(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(960.693)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec4((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))).x : _GLF_FUZZED((uint(false) << _GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(0u, 0u, 0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), ~ (gl_WorkGroupSize))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), ~ (gl_WorkGroupSize))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), ~ (gl_WorkGroupSize))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u)))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), ~ (gl_WorkGroupSize))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u)))).x), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))), uvec3(uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), ~ (gl_WorkGroupSize))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))) - uvec3(0u, 0u, 0u)))).x)) | 0u))))) : _GLF_FUZZED((uint(false) << subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false)))), false))), bool(bool(_GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), false))) || false)))), false))), bool(bvec4((bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false)))), false))), false, false, true)))))) || false)), false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (0u ^ 0u) ^ (max(workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) | ((~ (subgroup_id))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uvec2(subgroup_size, 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (bool(false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((88.27 - -753.198))), float(injectionSwitch.y), bool(true))), true, false))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((88.27 - -753.198))), float(injectionSwitch.y), bool(true))), true, false))))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true), true, true)))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), _GLF_IDENTITY((uint(virtual_gid)), ((uint(virtual_gid))) << 0u) + 0u))), (_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (true ? uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((uint(virtual_gid)), ((uint(virtual_gid))) << 0u) + 0u)))) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(virtual_gid), uint(virtual_gid))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-91639) : _GLF_IDENTITY(0, (0) + 0))) | 0) | ((4))) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.7) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.5) : 0.0)) : _GLF_FUZZED(-455.099))), 0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(mat4x2(8.4, -3.4, -53.77, 3.5, 9.1, -9.6, -96.89, -6.4)))))) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.7)), bool(false))), 0.0, sqrt(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))))), (0.0) - 0.0), 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-1.6)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.7) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.5) : 0.0)) : _GLF_FUZZED(-455.099))), 0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(mat4x2(8.4, -3.4, -53.77, 3.5, 9.1, -9.6, -96.89, -6.4)))))) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.7)), bool(false))), 0.0, sqrt(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))))), (0.0) - 0.0), 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-1.6)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y)))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.7) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7635.3923), _GLF_FUZZED(vec3(5534.1219, 7.5, -1.6).s)), bvec2(false, false))).x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, cos(0.0)), (mat2(0.0, 0.0, 0.0, cos(0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.5) : 0.0)) : _GLF_FUZZED(-455.099))), 0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(mat4x2(8.4, -3.4, -53.77, 3.5, 9.1, -9.6, -96.89, -6.4)))))) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.7)), bool(false))), 0.0, sqrt(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))))), (0.0) - 0.0), 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-1.6)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(6695.2941)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0), (mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-1.8, -8.1).y)), bool(false))), 0.0)) - mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2402.8333)), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), (vec3(1.0, cos(0.0), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y)))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), false, true))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(normalize(sin(injectionSwitch))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> _GLF_IDENTITY(((1 ^ 1) | 0), (((1 ^ 1) | 0)) >> 0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.3)), bool(false)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false, true)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-1419.1735, 3078.6933), -20.78)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(bvec3(bool(bool((_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(bool(bool((_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, true)))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, false))))))))))), ! (! (! (false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || false), true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), true)))), false)))) && true)))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acosh(-1195.5631)) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-588.968), _GLF_FUZZED(3703.2656)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(injectionSwitch, -8.6, mix(710.560, 94.41, true))) : injectionSwitch)).y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), false))))))) || false))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) || false)))))), ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) || false))))))) || false), _GLF_IDENTITY(false, (false) || false) || ((! _GLF_IDENTITY((false), false || ((false)))))), false, false, false)))))))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> 0)]), vec2(_GLF_IDENTITY(_GLF_FUZZED((9008.2616)), mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(_GLF_FUZZED((9008.2616)), float(mat4x3(_GLF_FUZZED((9008.2616)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), _GLF_FUZZED((true ? -2.7 : -3.1))), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.5))))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5086.2750), _GLF_FUZZED(-78.21)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))), true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), float(mat3((injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0))))))), float(_GLF_FUZZED(float(-46732))), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(float(-46732))), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false, true)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.4)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-1.4))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-75.62)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x) - log(1.0)) < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false))), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false))), false)))))), false, false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false, false, false))))))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-9652.1798)))))), vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-25.77, -60.20)), vec2(mat3x2(_GLF_FUZZED(vec2(-25.77, -60.20)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), injectionSwitch)).y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  barrier();
}
