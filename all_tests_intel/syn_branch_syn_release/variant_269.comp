#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), ! (! (false))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2((! (_GLF_DEAD(false))), true)), bool(bool(bool(bvec2((! (_GLF_DEAD(false))), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false)) || false), _GLF_IDENTITY(false, false || (false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) || false)) || false), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED((554.698))), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), min(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))))))) || false)) || false), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, (false) && true))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, (false) && true))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false)))))), true), true))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), false || (bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), true && ((false)))))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true))), true)))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-780.835) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), false)))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true))))))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))))))) || false))) && true))))))))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec3((! (false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(false, true && (false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false) || false)) || false), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), true, false, false))))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), false, false))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true, false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec3((! (false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(false, true && (false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false) || false)) || false), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), true, false, false))))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), false, false))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true, false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec3((! (false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(false, true && (false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false) || false)) || false), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), true, false, false))))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), false, false))))), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true, false)))), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), false), false, false))), true), true))))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), true, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))), (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))) || false)), false, true, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5392.5777)), bool(false))) > injectionSwitch.y)) || (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) || false)), false, true, true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(724.128), _GLF_FUZZED(vec2(-6.9, -1.0).g)), bvec2(false, false))))), injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), bool(bvec4(false, true, false, true))))))))) || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * round(length(normalize(sqrt(1.0))))))))))), mix(vec2(_GLF_FUZZED(82.61), _GLF_FUZZED(-382.812)), vec2((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), (_GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))) * exp(vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))), max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (int(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1))], (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), min(max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), max(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch))))))[1]), bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), true))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED((0.6 / 0.4))), vec2(_GLF_FUZZED(-83.82), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))), injectionSwitch)).y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) && ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch)).y)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), false), false))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false)))), (injectionSwitch.x > injectionSwitch.y) && true), false, true, _GLF_IDENTITY(true, true && (true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (true ? mat3x2(0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0) : _GLF_FUZZED(mat3x2(-51.55, 3.1, -5.2, 4.5, -7.9, -5981.3158))))))), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0)), min(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0)), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec4((injectionSwitch.x > injectionSwitch.y) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true))))), _GLF_IDENTITY(false, true && (false)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u))), uint(8u))), ~ (~ (_GLF_IDENTITY(uint(8u), max(_GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u))), uint(8u)))))), uint(8u))) ^ (subgroup_size)), _GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, 183035u), uvec2(uvec4(uvec2(106818u, 183035u), 1u, 0u)))) << uvec2(0u, 0u)), uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, 183035u), uvec2(uvec4(uvec2(106818u, 183035u), 1u, 0u)))) << uvec2(0u, 0u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, 183035u), uvec2(uvec4(uvec2(106818u, 183035u), 1u, 0u)))) << uvec2(0u, 0u)))))))) ^ uvec2(0u, 0u))), uvec2(0u, _GLF_IDENTITY(0u, (0u) | 0u)) ^ (_GLF_FUZZED(_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, _GLF_IDENTITY(183035u, uint(uvec3(183035u, 1u, 0u)))), (_GLF_IDENTITY(uvec2(106818u, 183035u), uvec2(uvec4(uvec2(106818u, 183035u), 1u, 0u)))) << uvec2(0u, 0u))) ^ uvec2(0u, 0u))))) : uvec2(subgroup_size, 0u)), uvec2(0u, 0u) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, 183035u), (_GLF_IDENTITY(uvec2(106818u, 183035u), uvec2(uvec4(uvec2(106818u, 183035u), 1u, 0u)))) << uvec2(0u, 0u))) ^ uvec2(0u, 0u))) : uvec2(subgroup_size, 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))))) | (virtual_gid))))) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-359) : ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 + (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (false ? _GLF_FUZZED(-359) : ~ (1))))), 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-359) : ~ (1)))))))) << ((0 | 0) >> _GLF_IDENTITY(int(7), int(7))))), ((_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)) - 0))), (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))), ~ (~ (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))))))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43141)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(1, _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43141)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43141)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43141)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(1, _GLF_IDENTITY(1, (1) | (1)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43141)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), min(1, _GLF_IDENTITY(1, (1) | (1))))))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), (_GLF_IDENTITY((1), ~ (~ ((1)))) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0)))) + 0), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 0)))) + (0 >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1)) << 0), _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), 0 | (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1))))), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))) << 0))) - (0 | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0)))), (false ? _GLF_FUZZED(-30412) : _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0)))))), 0)))) | 0)))))) - 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0))) ^ 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86341))) | (~ (_GLF_IDENTITY((1), max((1), (1)))))))) | (1), ((1) | (1)) - 0))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))) - (0 | 0))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ 0))))) | 0))))))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(0, ~ (~ (0)))))))))), (false ? _GLF_FUZZED(43886) : 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, true, false)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
