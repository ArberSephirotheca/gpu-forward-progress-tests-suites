#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || false), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.7, 4.8)))).y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0))))))), false || (bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.7, 4.8)))).y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0))))))))), true, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bool(bool(bvec4(true, true, false, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), ! (! (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(true, false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))) && true)))))), true, false))))))))))), true, true)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true, ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true)))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true, ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true)))))))) || false), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), true)))))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(bvec4(true, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))))[0], _GLF_FUZZED(485.438)), vec2(_GLF_FUZZED(-3428.2624), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))), mix(vec2(_GLF_FUZZED(13.23), _GLF_FUZZED(6.9)), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(974.674, 5763.1277, 41.81, 5.8, 841.555, -8893.3998))))))[1]), bvec2(true, true)))))).y, injectionSwitch.y)), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0)))) && true, bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0)))) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0)))) && true, ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0)))) && true)))))))))))))), true, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(true, true, false, false))), (bool(bool(bvec4(true, true, false, false)))) && true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (bool(bvec4(true, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y), true, true, false)), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y), true, true, false)))))) && (false))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-10.41)), bool(false))) < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && (false))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED((+ -9.7))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-286.429))), injectionSwitch.y)), (injectionSwitch.y) / sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), bool(bvec3(bool(bvec4(true, false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0)), _GLF_IDENTITY(max(vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0))), clamp(max(vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0))), max(vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0))), max(vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, log(1.0), abs(0.0), 0.0))))))).y)))), true, false)))))))), true, _GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    return;
   return;
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)), ! (! (bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true)))))), true, false)))) || false)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.3), float(mat4(_GLF_FUZZED(-2.3), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(_GLF_IDENTITY(5748.1139, clamp(_GLF_IDENTITY(5748.1139, min(_GLF_IDENTITY(5748.1139, max(5748.1139, 5748.1139)), 5748.1139)), _GLF_IDENTITY(5748.1139, clamp(5748.1139, 5748.1139, 5748.1139)), 5748.1139)), -51.79).r)), bvec2(true, false))), injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.3), float(mat4(_GLF_FUZZED(-2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), sqrt(1.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(5748.1139, -51.79).r)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.3), float(mat4(_GLF_FUZZED(-2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), sqrt(1.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(5748.1139, -51.79).r)), bvec2(true, false))), injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.3), float(mat4(_GLF_FUZZED(-2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), sqrt(1.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(5748.1139, -51.79).r)), bvec2(true, false))), injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.3), float(mat4(_GLF_FUZZED(-2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), sqrt(1.0), 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(5748.1139, -51.79).r)), bvec2(true, false))), injectionSwitch)).y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(injectionSwitch)) : injectionSwitch)).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))) && true))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) - (1u ^ 1u))) ^ 0u), uint(_GLF_IDENTITY(6u, 0u + (6u)))))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) * 1u))) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), 0u))))) + 1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (subgroup_local_id + 1)) - 0u))), subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id))) | 0u)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (subgroup_local_id + 1)) - 0u))), subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id))) | 0u)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (subgroup_local_id + 1)) - 0u))), subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id))) | 0u)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (subgroup_local_id + 1)) - 0u))), subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id))) | 0u)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))))))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), (subgroup_local_id + 1), (subgroup_local_id + 1))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (true ? (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) ^ 0u)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) ^ 0u)))))) + 0u)) : _GLF_FUZZED(workgroup_base))) + (0u | 0u)), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(1786.6142))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), uvec2(uvec4(uvec2((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(1.0), 1.0, 0.0)))))), 1u, 1u)))))))) | 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))).x > injectionSwitch.y)), true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) ^ 0)) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))), ((! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || ((false)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), bool(bvec2((false), false))))), false || (! ((! (false)))))))))) && true)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.43)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_id))) ^ (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))) << 0u)], uint(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) >> 0) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))) || false))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, true)))))))))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), ! (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
