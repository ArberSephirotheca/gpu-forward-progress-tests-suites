#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uint _f0;
 ivec4 _f1;
 mat4x2 _f2;
 vec2 _f3;
 float _f4;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 mat4 _f3;
 vec2 _f4;
 bvec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 bvec3 _f1;
 int _f2;
 uint subgroup_local_id;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 bvec4 _f1;
 float _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_9 _f3;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), _GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(bool(false), true)))), bool(bvec2(! (! (bool(bvec2(bool(false), true)))), false))))))))))))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(bool(false), true)))), bool(bvec2(! (! (bool(bvec2(bool(false), true)))), false))))))))))))), false)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(bool(false), true)))), bool(bvec2(! (! (bool(bvec2(bool(false), true)))), false))))))))))))), false))))))))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(bool(false), true)))), bool(bvec2(! (! (bool(bvec2(bool(false), true)))), false))))))))))))), false)))))))))) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))), (_GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))), bool(bvec4(true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))), false))), false, false, true)))) && _GLF_IDENTITY(true, (true) && true)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-35.06)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-35.06)), (float(_GLF_FUZZED(-35.06))) * 1.0), float(injectionSwitch.y), bool(true)))) - 0.0)) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-18.65))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-35.06)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-35.06)), (float(_GLF_FUZZED(-35.06))) * 1.0), float(injectionSwitch.y), bool(true)))) - 0.0, mix(float(_GLF_FUZZED(-88.09)), float((_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-35.06)), (float(_GLF_FUZZED(-35.06))) * 1.0), float(injectionSwitch.y), bool(true)))) - 0.0), bool(true))))) / 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65))) * 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65)), mix(float((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))))), (injectionSwitch.y) / 1.0)), bool(true))) : _GLF_FUZZED(-18.65))), float(_GLF_FUZZED(-9.3)), bool(false))))))) && _GLF_IDENTITY(true, ! (! (true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(807.932))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(61.84)), bool(false))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.4))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch - 3.4)))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_2(_GLF_struct_0(1, bvec4(true), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.9) : 1.0)), mat4x3(1.0)), _GLF_struct_1(mat2x3(1.0)), uvec4(1u), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-9054)))), _GLF_struct_3(mat4(1.0)), _GLF_struct_5(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), 0.0 + ((1.0))), (1.0), _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), float(vec2((1.0), 1.0))), (1.0), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))) + (1.0))))))) / 1.0), clamp(_GLF_IDENTITY(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), _GLF_struct_4(mat3x4(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), true, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), true, false))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), false, false)))))))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), false, false)))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), false, false)))))))))))), false)))))) || false), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))))), true && (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))))), bool(bool(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true, false))), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), true, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true, false))), true, false))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), false, false)))))))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec3(false || (true), false, false)))), true), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), false))))))) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (_GLF_IDENTITY(! ((! (true))), true && (! ((! (true)))))))))))), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), false, false)))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, false))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))), ! (! (false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))), false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))), bool(bvec3(false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, false)))))))))))), false)))))) || false), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bvec3(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true && (bool(bvec3(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)))))))))), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), false), false))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bvec3(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true && (bool(bvec3(! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)))))))))), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))), false), false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))), false))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), true))))), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))))))))))), bool(bool(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true, false))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, true && (true)), false))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))))))))))))))))) && true)), 1, gl_SubgroupInvocationID)), _GLF_struct_9(_GLF_struct_6(mat4x3(1.0), mat2x4(1.0), bvec2(true), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), vec2(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, true)))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_IDENTITY(true, true && (true)))))), true && ((_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_IDENTITY(true, true && (true))))))))))))))))), bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), _GLF_struct_7(mat3x4(1.0)), _GLF_struct_8(1u, ivec4(1), mat4x2(1.0), vec2(1.0), 1.0)), mat3x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0)), (mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0)), (mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), max(float(_GLF_IDENTITY(mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0)), (mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0)), (mat4(0.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 1.0, sin(0.0), sqrt(0.0), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, sin(0.0), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 1.0, sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) * 1.0))), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, min(0, 0)), 1, 1), (ivec4(0, _GLF_IDENTITY(0, min(0, 0)), 1, 1)) * ivec4(1, 1, 1, 1))))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0, (false ? _GLF_FUZZED(4084.0685) : (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(length(-372.325)) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.9) : float(mat2(0.0, 0.0, 1.0, 1.0))))), 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), (abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0)))) * 1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0 + (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(4.7, -2768.9670, 96.76, -77.52)) : mat2(injectionSwitch, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(173.629), _GLF_FUZZED(vec2(-8421.1821, -99.82).t)), bvec2(false, false))), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))))) * mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), clamp(float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), mix(float(_GLF_FUZZED(-187.662)), float(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(3443.0982)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2775.6961) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-15.33))), 0.0, 1.0, 0.0, 1.0)) / mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 0.0))))), (float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 0.0)))))) * 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(59.07)), float(injectionSwitch.y), bool(true))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_FUZZED(85.99)), bool(false))))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - log(1.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), ! (! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) && true))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true))))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true))))), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))))), true, true)))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(false)))), true, false)), ! (! (bool(bvec3(! (! (! (_GLF_DEAD(false)))), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3868.8371))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))) - 0u));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec2((subgroup_id), 1u), (false ? _GLF_FUZZED(uvec2(110716u, 195927u)) : uvec2((subgroup_id), 1u))))) >> 0u), (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) - 0u)), 1u), ~ (~ (uvec2((subgroup_id), 1u)))), (false ? _GLF_FUZZED(uvec2(110716u, 195927u)) : uvec2((subgroup_id), 1u))))) >> 0u), (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))) + _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), (~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id))) ^ 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), (~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id))) ^ 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), (~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id))) ^ 0u)), (false ? _GLF_FUZZED(195039u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), (~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id))) ^ 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), (~ (~ (_GLF_struct_replacement_10._f2._f1.subgroup_local_id))) ^ 0u))) << 0u))) : _GLF_FUZZED(135262u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(968.206)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(968.206)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0))), injectionSwitch[1])).y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true))))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0))) && true), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0))))))))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), true && ((true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((true), true && ((true)))))), bool(bvec4(! (! (! (_GLF_IDENTITY((true), true && ((true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))) && true, false || ((bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))) && true)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uvec3(143305u, 45334u, 12310u)[1]))) + ((_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-5.3) : injectionSwitch.y), max((false ? _GLF_FUZZED(-5.3) : injectionSwitch.y), (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y)))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_10._f2._f1.subgroup_local_id), ~ (~ (uint(_GLF_struct_replacement_10._f2._f1.subgroup_local_id)))))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_10._f2._f1.subgroup_local_id), ~ (~ (uint(_GLF_struct_replacement_10._f2._f1.subgroup_local_id)))))) + 1) << 0u) < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && true), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))))) < _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, max(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) + 0u))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, max(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) + 0u))) + 1) >> 0u) < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) && true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! ((_GLF_IDENTITY(! (bool((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))))))) || false))))) && true), false, false)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (! (bool((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), (_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(6.8)), bool(false))))).y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) + 0) < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u & 10338u)), 1u)))) / 1u))), false || (_GLF_struct_replacement_10._f2._f1.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))) >> 0) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1) ^ 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), min(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))) + 1), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))) << (29716u & 0u))) + 1) : _GLF_FUZZED(subgroup_size))) * 1u) < subgroup_size, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1) ^ 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), min(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))) + 1), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))) << (29716u & 0u))) + 1) : _GLF_FUZZED(subgroup_size))) * 1u) < subgroup_size, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1) ^ 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), min(1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_10._f2._f1.subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))))) + 1), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id) - 0u))) << (29716u & 0u))) + 1) : _GLF_FUZZED(subgroup_size))) * 1u) < subgroup_size, false, true), true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (true))), (bool(! (! (true)))) && true))))), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1]))) / round(length(normalize(1.0)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x < injectionSwitch.y) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, true && (false))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1, (_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1) << 0u))) < subgroup_size, bool(bvec4(_GLF_struct_replacement_10._f2._f1.subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) >> 0), 0 + (_GLF_IDENTITY((0), ((0)) >> 0))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), bool(bvec4(bool(! (_GLF_DEAD(false))), false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), injectionSwitch))) * vec2(1.0, 1.0)).y)), true, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u)), (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u))) * 1u)) ^ 0u)), next_virtual_gid)), min(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u))) ^ 0u)), next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> (42576u & 0u)), next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(1u, 1u))))))) ^ 0u), 0u + (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u))) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), clamp((_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), _GLF_IDENTITY((uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u, (false ? _GLF_FUZZED(workgroup_size) : (uint(uvec3(clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u))))) ^ 0u, (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u))) * 1u))) ^ 0u, (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(uint(uvec3(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u, 0u)), (uint(uvec3(clamp(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))) * 1u))) ^ 0u)))))), next_virtual_gid))))], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(39422) : _GLF_IDENTITY(2, (2) | 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) || false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), true && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false))), true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3((false), true, false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3((false), true, false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((false), true, false)))))))), true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), ! (! (! (bool(_GLF_IDENTITY(false, true && (false)))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), ! (! (! (bool(_GLF_IDENTITY(false, true && (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), ! (! (! (bool(_GLF_IDENTITY(false, true && (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (false)))), ! (! (! (bool(_GLF_IDENTITY(false, true && (false)))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))))))))), (true) && true)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false)))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true, false)))))), false, false, false))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((true ? injectionSwitch : injectionSwitch)) : injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(_GLF_IDENTITY(-31.82, mix(float(_GLF_IDENTITY(-31.82, clamp(-31.82, -31.82, -31.82))), float(_GLF_FUZZED(2.8)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.9, 7.6, 1.4))) : injectionSwitch.y)))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(_GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), (false ? _GLF_IDENTITY(_GLF_FUZZED((mat2(5.0, 75.52, 7.8, 32.30) / mat2(-4.7, -6.9, -31.01, -480.983))), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED((mat2(5.0, 75.52, 7.8, 32.30) / mat2(-4.7, -6.9, -31.01, -480.983))), (_GLF_FUZZED((mat2(5.0, 75.52, 7.8, 32.30) / mat2(-4.7, -6.9, -31.01, -480.983)))) * mat2(1.0))), transpose(transpose(mat4x3(_GLF_IDENTITY(_GLF_FUZZED((mat2(5.0, 75.52, 7.8, 32.30) / mat2(-4.7, -6.9, -31.01, -480.983))), (_GLF_FUZZED((mat2(5.0, 75.52, 7.8, 32.30) / mat2(-4.7, -6.9, -31.01, -480.983)))) * mat2(1.0)))))))) : _GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), (_GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), (true ? mat2(-31.82, 1.9, 7.6, 1.4) : _GLF_FUZZED(mat2(_GLF_IDENTITY(4775.1211, (4775.1211) * 1.0), 9.4, 9331.2379, 5.1))))) / mat2(1.0, 1.0, 1.0, 1.0)))))) : injectionSwitch.y)))) || false, (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(abs(vec2(0.0, 0.0)))).y, (false ? _GLF_FUZZED(determinant(_GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, _GLF_IDENTITY(1.4, (1.4) - 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY((mat2(5.0, 75.52, 7.8, 32.30) / mat2(_GLF_IDENTITY(-4.7, _GLF_IDENTITY(float(float(-4.7)), _GLF_IDENTITY((false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(float(float(-4.7)), mix(float(float(float(-4.7))), float(_GLF_FUZZED(-3.9)), bool(false)))), 1.0 * ((false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(float(float(-4.7)), mix(float(float(float(-4.7))), float(_GLF_FUZZED(-3.9)), bool(false)))))))), -6.9, -31.01, -480.983)), transpose(transpose((mat2(5.0, 75.52, 7.8, 32.30) / mat2(_GLF_IDENTITY(-4.7, _GLF_IDENTITY(float(float(-4.7)), _GLF_IDENTITY((false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(float(float(-4.7)), mix(float(float(float(-4.7))), float(_GLF_FUZZED(-3.9)), bool(false)))), 1.0 * ((false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(float(float(-4.7)), mix(float(float(float(-4.7))), float(_GLF_FUZZED(-3.9)), bool(false)))))))), -6.9, -31.01, -480.983)))))) : _GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), _GLF_IDENTITY((_GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), (true ? mat2(_GLF_IDENTITY(-31.82, min(-31.82, -31.82)), 1.9, 7.6, 1.4) : _GLF_FUZZED(mat2(4775.1211, 9.4, 9331.2379, 5.1))))), mat2(mat2x4((_GLF_IDENTITY(mat2(-31.82, 1.9, 7.6, 1.4), (true ? mat2(_GLF_IDENTITY(-31.82, min(-31.82, -31.82)), 1.9, 7.6, 1.4) : _GLF_FUZZED(_GLF_IDENTITY(mat2(4775.1211, 9.4, 9331.2379, 5.1), (mat2(4775.1211, 9.4, 9331.2379, 5.1)) + mat2(0.0, 0.0, 0.0, 0.0))))))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0)))))) : injectionSwitch.y)))) || false) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
