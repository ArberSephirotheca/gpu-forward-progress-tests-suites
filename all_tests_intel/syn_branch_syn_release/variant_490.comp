#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) && true))))
  return;
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y = subgroup_id;
 uint subgroup_size = _GLF_IDENTITY(16, (16) - _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * cos(0.0)), injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(6.7))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z = subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z = subgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z = _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, true))), bool(bool(! (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), true)))))))))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-54.01, 60.90)))).x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.29) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false))))) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, bool(bool(true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), clamp(uint(uvec2(gl_WorkGroupSize.x, 1u)), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), max(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (uint(uvec2(gl_WorkGroupSize.x, 1u))) ^ 0u), uint(uvec2(gl_WorkGroupSize.x, 1u)))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), min((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))))))), gl_WorkGroupSize, gl_WorkGroupSize), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))) : _GLF_FUZZED((subgroup_id - uvec3(92567u, 196973u, 50771u))))), _GLF_IDENTITY(max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) | (_GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))))), (false ? _GLF_FUZZED(uvec3(34089u, 36804u, 149716u)) : _GLF_IDENTITY(_GLF_IDENTITY(max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) : _GLF_FUZZED(uvec3(17905u, 141422u, 7472u)))))), 0u))), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))))), ~ (~ (max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) : _GLF_FUZZED(uvec3(17905u, 141422u, 7472u))), ((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) : _GLF_FUZZED(uvec3(17905u, 141422u, 7472u)))) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) & uvec3(60228u, 23996u, 137833u)), ((uvec3(0u, 0u, 0u) & uvec3(60228u, 23996u, 137833u))) | ((uvec3(0u, 0u, 0u) & uvec3(60228u, 23996u, 137833u)))))))), 0u))), gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)))), (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u)))))))), min(max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))))))), uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))))), _GLF_IDENTITY(max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize))) | (gl_WorkGroupSize)))), gl_WorkGroupSize, gl_WorkGroupSize))))))), ~ (~ (max(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)), (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)))))))))))))))).x, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(12.38), _GLF_FUZZED(-4.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6408.8206), _GLF_FUZZED(7.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(2.2))), (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(217.853)), bool(false)))) - 0.0), mix(float(_GLF_FUZZED(9.1)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0)))))))).x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3243.8315)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3243.8315)))))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3243.8315)))))))))) || false)) || _GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, false || (false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, abs(0.0))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9060.5790, -7532.9949)))).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(_GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch.y), 0.0, log(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))), (float(mat3x2(float(injectionSwitch.y), 0.0, log(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))) / 1.0)) : _GLF_FUZZED(-473.979))), float(_GLF_FUZZED(-6.2)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.6, -65.28)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x, mix(float(_GLF_FUZZED(-97.09)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.6, -65.28)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x, mix(float(_GLF_FUZZED(-97.09)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.6, -65.28)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x, mix(float(_GLF_FUZZED(-97.09)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.y) - 0.0)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(77.91, (77.91) / 1.0)) : injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(77.91, (77.91) / 1.0)) : injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(77.91, (77.91) / 1.0)) : injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91))), (_GLF_IDENTITY(_GLF_FUZZED(77.91), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(77.91)))) / 1.0) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(77.91) : injectionSwitch.y)))))))))))))))), false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), true, true)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), false || (! (_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))))))))) || false)))), true, true)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (workgroup_base)), 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)), (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))) ^ 0u)))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y)) * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_id))), (workgroup_base), (workgroup_base))))), (~ (workgroup_base)) / 1u))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), 1u * ((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)), clamp((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id)).z, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-943.707)))) * 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u))))) >> 0u)) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z))) - 0u, _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u, min((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u))), (((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u, min((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) - 0u)))) * 1u))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(6u, 0u, 1u), clamp(uvec3(6u, 0u, 1u), uvec3(6u, 0u, 1u), _GLF_IDENTITY(uvec3(6u, 0u, 1u), (uvec3(6u, 0u, 1u)) | (uvec3(6u, 0u, 1u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(virtual_gid) : 6u)), 1u))))))) + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z), max(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(6u, 0u, 1u), clamp(uvec3(6u, 0u, 1u), uvec3(6u, 0u, 1u), _GLF_IDENTITY(uvec3(6u, 0u, 1u), (uvec3(6u, 0u, 1u)) | (uvec3(6u, 0u, 1u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(virtual_gid) : 6u)), 1u))))))) + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec3(6u, 0u, 1u), clamp(uvec3(6u, 0u, 1u), uvec3(6u, 0u, 1u), _GLF_IDENTITY(uvec3(6u, 0u, 1u), (uvec3(6u, 0u, 1u)) | (uvec3(6u, 0u, 1u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec2(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(virtual_gid) : 6u)), 1u))))))) + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, true))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.z) * (((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(mat2(1.1, 504.839, -2018.3803, -1185.9743)) : transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))))))), _GLF_IDENTITY(transpose(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0)))), mat2(mat3(transpose(transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0))))))))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY((min(injectionSwitch.x, injectionSwitch.x)), (true ? (min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(cosh(-2.4)))) / 1.0)), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(round(8.1)) : sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(sqrt(0.0) + (0.0), (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(sqrt(0.0) + (0.0), (sqrt(0.0) + (0.0)) - 0.0)))))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(_GLF_IDENTITY(true, true && (true))))), 0.0)))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141))))).y, true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(609.438)), bvec2(false, false)))) - vec2(0.0, 0.0)))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141), (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141)) * 1.0))))).y, true, true, true))) && true))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(mat2(1.1, 504.839, -2018.3803, -1185.9743)) : transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9622.2817)), bool(false)))) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9622.2817)), bool(false)))) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat2(-8.1, 5.1, -5.7, -2.9))))))))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))), min(clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141))))).y, true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141))))).y, true, true, true))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(mat2(1.1, 504.839, -2018.3803, -1185.9743)) : transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0))))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9622.2817)), bool(false)))) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9622.2817)), bool(false)))) * (injectionSwitch), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))) * (mat2(1.0) * (injectionSwitch)))).x, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat2(-8.1, 5.1, -5.7, -2.9))))))))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))), min(clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)), (true ? (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0)) : _GLF_FUZZED(-7318.6450))) : _GLF_FUZZED(7.6)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(318.395) : injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), (false ? _GLF_FUZZED(-8315.0375) : sqrt(0.0))), 0.0)))), (mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), mix(float(_GLF_FUZZED(37.38)), float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))), sqrt(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), bool(true))), 0.0), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-69.96)))), sqrt(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(30.35)), float(sqrt(0.0)), bool(true))), 0.0)))))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141))))).y, true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1302.9141))))).y, true, true, true))) && true)), false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(4671))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0)) / 1)) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), 0), int(int(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(0, 0, 0)), 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0)) / 1)) * 1)))));
   atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.x], uint(_GLF_IDENTITY(2, (2) ^ 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.x, max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.x, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_12next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_id.x))], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(61089) : 2, (false ? _GLF_FUZZED(61089) : 2) | (false ? _GLF_FUZZED(61089) : 2))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, max(4, 4)), 0, 1, 0))))))) ^ 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
