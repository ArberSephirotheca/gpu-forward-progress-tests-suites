#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) - sqrt(vec2(0.0, 0.0))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(81.78))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_FUZZED(-2.2)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(81.78))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(537.731)), vec2(_GLF_FUZZED(2.0), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))]), bvec2(false, true))).x, (true ? injectionSwitch.x : _GLF_FUZZED(81.78))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(97.82)), bool(false))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min((clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(537.731)), vec2(_GLF_FUZZED(2.0), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))]), bvec2(false, true))).x, (true ? injectionSwitch.x : _GLF_FUZZED(81.78))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(97.82)), bool(false))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(537.731)), vec2(_GLF_FUZZED(2.0), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))]), bvec2(false, true))).x, (true ? injectionSwitch.x : _GLF_FUZZED(81.78))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(97.82)), bool(false))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) * 1.0)), bool(true))))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.6, 918.033)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.6, 918.033)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8310.5674))), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(101328u, 32001u, 198789u))))), _GLF_IDENTITY(((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u), (true ? ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(subgroup_id))))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))))).x)), min((~ (gl_WorkGroupID.x)), (~ (gl_WorkGroupID.x)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(uvec3(workgroup_base, 1u, 0u), uvec3(workgroup_base, 1u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))))), ~ (~ (uvec3(workgroup_base, 1u, 0u))))) ^ uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)) * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), 1u))), _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))), 0u))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))), 0u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))), 0u)), 1u, 1u, 1u)))) * subgroup_size, subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-9.2) : _GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))), ((_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))) / 1u)), 0u))) * subgroup_size, subgroup_id * subgroup_size)), max(uint(clamp(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))), 0u))) * subgroup_size, subgroup_id * subgroup_size)), uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) - 0u))), 0u))) * subgroup_size, subgroup_id * subgroup_size)))))), _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 0u), (uvec2(subgroup_id, 0u)) << uvec2(0u, 0u)))))), 0u))) * subgroup_size, subgroup_id * subgroup_size), max(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-4550.8084), _GLF_FUZZED(45.64)), vec2((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))))[0], (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))))[1]), bvec2(true, true)))).y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))), 0u))) * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))), (true ? uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4202.3328)) : 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) : _GLF_FUZZED(subgroup_local_id)))), 0u))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id)))))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u))))), 0u))) * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uint((true == true))) : subgroup_id)) * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec4(~ (subgroup_id * subgroup_size), 1u, 1u, 0u))), ~ (subgroup_id * subgroup_size))))))))))))) + _GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, log(1.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, log(1.0), 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) * 1.0)))))))) > injectionSwitch.y))))), true, false, false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), true, true, true)))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))) && true)) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false)))), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false)))), false), false)), true)))))))))))))))))), true, true))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))) && true)) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), false))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || false, false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false)))), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((! (! (true))) || false, false), bvec2(bvec2(bvec2((! (! (true))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false)))), false), false)), true)))))))))))))))))), true, true))))))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), 0u + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) ^ 0u)) ^ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.3)), bool(false))) < injectionSwitch.y)) ? ~ (subgroup_size) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(uvec4(uint(7u), 1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec4(uint(7u), 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(94831u, 14723u, 130240u, 170379u)) : uvec4(uint(7u), 1u, 1u, 1u))), uvec4(uint(7u), 1u, 1u, 1u), uvec4(uint(7u), 1u, 1u, 1u))))), uint(7u))) ^ 0u, min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, 0u | ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, clamp((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u) - 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u, ~ (~ ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u))))))))) ^ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? ~ _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))) : _GLF_FUZZED(num_workgroup)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), uint(_GLF_IDENTITY(uvec4(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u) : _GLF_FUZZED((workgroup_base + virtual_gid)))), uint(_GLF_IDENTITY(6u, (6u) | 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (uvec4(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u) : _GLF_FUZZED((workgroup_base + virtual_gid)))), uint(_GLF_IDENTITY(6u, (6u) | 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))))) | ((_GLF_IDENTITY(~ (subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (subgroup_size)))))), max((~ (subgroup_size)), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup))))))) | (_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(num_workgroup)))))))))))) - 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED((mat2x3(-6212.7003, -50.34, 7.1, 564.903, -2890.9637, -7.8) , workgroup_id))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(true, ! (! (true))) ? buf[virtual_gid] = 1 : _GLF_FUZZED((mat2x3(-6212.7003, -50.34, 7.1, 564.903, -2890.9637, -7.8) , workgroup_id))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (buf[virtual_gid] = 1) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0))))) / 1.0)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> (0u ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u) : buf[virtual_gid] = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec2(80013, 30151).t)))), 1, 1))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, false)), bool(bvec4(bool(bvec3(! (! (false)), true, false)), true, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) ? (_GLF_IDENTITY(0, 0 | (0))) : _GLF_FUZZED(_GLF_IDENTITY(30383, (30383) + 0)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_DEAD(false)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 0, 1)), min(int(ivec3(64, 0, 1)), int(ivec3(64, 0, 1)))))) / 1)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 0, 1)))) / 1))) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0))) << 0), _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + sqrt(0.0)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(false, true, false, false)), true)))))))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), true, false, true)))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1))))) | ivec2(0, 0)))), 4, 4)))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}
