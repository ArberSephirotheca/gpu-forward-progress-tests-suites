#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 uint _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 _GLF_struct_2 _f1;
 bvec4 _f2;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), false), false)))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          return;
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0)), ~ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0)), min(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0)), 0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0))))))))); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z = subgroup_local_id;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(num_workgroup)));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2x4(1.0), _GLF_struct_2(ivec3(1), _GLF_struct_0(vec3(1.0), uvec2(1u)), _GLF_struct_1(mat3x2(1.0)), 1u, 1), bvec4(true), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id)), min((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id))))) | (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(subgroup_local_id))))))) * workgroup_id);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, clamp(_GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) - 0u))))) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, clamp(_GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base, _GLF_struct_replacement_3.workgroup_base))) ^ 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_3.workgroup_base), 0u + (~ (_GLF_struct_replacement_3.workgroup_base))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) | (_GLF_struct_replacement_3.workgroup_base)))))), 0u + (~ (_GLF_struct_replacement_3.workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_3.workgroup_base), 0u + (~ (_GLF_struct_replacement_3.workgroup_base))), 0u + (_GLF_IDENTITY(~ (_GLF_struct_replacement_3.workgroup_base), 0u + (~ (_GLF_struct_replacement_3.workgroup_base)))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) + subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))), 1u))) - 0u), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), ~ (~ (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))))), _GLF_IDENTITY((uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u, min((uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u, (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, 0u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) : uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)))) / uvec4(1u, 1u, 1u, 1u)))) - 0u), (_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) << 0u)))) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (true ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid[2], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid[3])).a), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))).a), clamp(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a), (_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)) / 1u), _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))).a), clamp(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a), (_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)) / 1u), _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / 1u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), min(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)))) << uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u | (uint(uint(1u))))), min(1u, 1u))))) - 0u)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))).z, (true ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, 0u, 1u, 1u)), uint(uvec4(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), 1u, 0u, 0u)))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (true ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u), 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, max(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u)))))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a))))))) << 0u), uint(uint(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u)), 1u)), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, (true ? _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)) >> uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(159560u) : 0u)), 0u, 0u, 0u))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u))) | (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u), (uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u))))))) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.a)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (false ? _GLF_FUZZED((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)), GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))[2] >> subgroup_size)) : _GLF_struct_replacement_3.workgroup_base)) + subgroup_id * subgroup_size, 0u, 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (true ? _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))) : _GLF_FUZZED(90761u))), _GLF_IDENTITY(0u, 0u | (0u)), 1u, 1u)), (uint(uvec4(_GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), 0u, 1u, 1u))) - 0u)) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) << uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u)).a)))))))) << (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 1u * (5u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w = _GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) | (virtual_gid)) : _GLF_FUZZED(subgroup_local_id)));
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) ^ 0u)))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid), (max(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)) | (max(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))), (uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) & uvec4(172828u, 84512u, 119917u, 32554u)) + ((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))))))))).z + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z + 1) % subgroup_size)) - 0u)));
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) >> 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (! (false)), false, false)), true, false)), false || (bool(bvec3(bool(bvec3(! (! (false)), false, false)), true, false))))))))) || false)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, true))), true, true)))))))
              return;
            }
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(vec3(67.82, 7.8, -30.75).xx) : vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-474.411, 8698.6030, 55.69, 395.086))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) * mat2(1.0)))))))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, tan(0.0))), vec2(mat3x2(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, tan(0.0))), 0.0, abs(0.0), length(0.0), log(1.0)))))) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0), 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0))))), 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((- 5993.7671))), vec2(_GLF_FUZZED(9690.5992), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(865.468, -2.1)) : injectionSwitch.y)), injectionSwitch.y))))))))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(mat4x2((0.0) / 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), sin(0.0), 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0))))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(865.468, -2.1)) : injectionSwitch.y)), injectionSwitch.y)))))))))), ! (! (((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(mat4x2((0.0) / 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), sin(0.0), 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0))))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(865.468, -2.1)) : injectionSwitch.y)), injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(mat4x2((0.0) / 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), sin(0.0), 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0))))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(865.468, -2.1)) : injectionSwitch.y)), injectionSwitch.y)))))))))))))))))) || false))) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(false)) && true))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     do
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(83045) : 0))), (0 | 0) ^ ((0) | (0)))), ~ (_GLF_IDENTITY(~ (1 ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(83045) : 0))), (0 | 0) ^ ((0) | (0))))), (~ (1 ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(83045) : 0))), (0 | 0) ^ (_GLF_IDENTITY((0) | (0), (_GLF_IDENTITY((0) | (0), 1 * ((0) | (0)))) ^ 0)))))) - 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0))), ! (_GLF_IDENTITY(! (_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), max(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) - 0))))), (! _GLF_IDENTITY((_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))), ((_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0))))) || false)) && true)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))
              return;
             if(_GLF_DEAD(false))
              break;
             break;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) || false)))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, true, true)))))))))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w] = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-65418))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, clamp(1, 1, 1))), (0 + (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46578))), 1)))) ^ 0)), (buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w] = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (1) | 0))) : _GLF_FUZZED(-65418))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, clamp(1, 1, 1))), (0 + (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46578))), 1)))) ^ 0))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true) && ((! (false))), bool(bvec4(true && ((! (_GLF_IDENTITY(false, (false) || false)))), false, true, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))
          {
           int i = 0;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                    continue;
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-945.979)), vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
                          continue;
                         return;
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          continue;
                         return;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    continue;
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                       return;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(1u), uvec4(1u)))))) : _GLF_FUZZED((uvec4(16664u, 168868u, 171579u, 170498u) << subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(1u), uvec4(1u)))))) : _GLF_FUZZED((uvec4(16664u, 168868u, 171579u, 170498u) << subgroup_id)))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid))) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(1u), uvec4(1u)))))) : _GLF_FUZZED((uvec4(16664u, 168868u, 171579u, 170498u) << subgroup_id))))) >> uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))).x], uint(2), 4, 64, 4);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.17), _GLF_FUZZED(24.39)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6932.5405, 43.45)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4479.9242, -4.9)) : injectionSwitch)).y))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))))) && true))))) && true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              continue;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0))), 1.0)).x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) && true))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
              continue;
             return;
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)) | 0)); _injected_loop_counter --)
              {
               atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x], uint(2), 4, 64, 4);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))) / 1.0)))))))
              continue;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), min(((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))))), round(length(normalize(1.0)))))).y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
                {
                 for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             do
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1)))), (1) + 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7490.7645)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), sin(0.0), 1.0, 0.0, 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7490.7645)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), sin(0.0), 1.0, 0.0, 1.0, 1.0))) - 0.0)) > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                 return;
                                }
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  return;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 return;
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             do
                              {
                               return;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         return;
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.87)), bvec2(true, false))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.87)), bvec2(true, false))).x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.87)), bvec2(true, false))).x > injectionSwitch.y)))), false), true)))))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        return;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         do
                          {
                           if(_GLF_DEAD(false))
                            break;
                           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) >> 0), max(5, _GLF_IDENTITY(5, max(5, 5))))), (int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(5, 5)))))) - 0))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-6219.2270, -8.9)) : vec2(mat4x2(injectionSwitch, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))))).x), mix(float(_GLF_FUZZED(-7475.2538)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (true ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) : _GLF_FUZZED((_injected_loop_counter --)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(mat3(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5681.9514) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)))), max(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5681.9514) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5681.9514) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0)), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), (0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) | (_GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), (0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) << 0), 0, 0)), clamp(int(ivec3(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), (0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) << 0), 0, 0)), int(ivec3(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), (0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) << 0), 0, 0)), int(ivec3(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))), (0 + ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) << 0), 0, 0)))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(frexp(72.68, _injected_loop_counter))))) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))) ^ 0))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter --)
                            {
                             return;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8656.8600), _GLF_FUZZED(_GLF_IDENTITY(-6.9, (_GLF_IDENTITY(-6.9, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? -6.9 : _GLF_FUZZED(-7929.4161)))) / round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x > injectionSwitch.y))))
                                continue;
                               continue;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              break;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, injectionSwitch.y))) && true)))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               else
                {
                }
              }
            }
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
