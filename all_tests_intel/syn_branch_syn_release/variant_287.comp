#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), 0 | (((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), vec2(mat4x2(((injectionSwitch) * mat2(1.0)) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-289.480)), bool(false))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && true))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) / 1.0))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(92571))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-61.36, 598.289).r), _GLF_FUZZED(0.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = ((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), max(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))))))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.02), _GLF_FUZZED((8.1 * -4818.4936))), bvec2(false, false))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), max(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(9249.1642), clamp(_GLF_FUZZED(9249.1642), _GLF_FUZZED(9249.1642), _GLF_FUZZED(9249.1642)))), bool(false))))), injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec2(_injected_loop_counter != 1, true)))); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, cos(0.0))), clamp(vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, cos(0.0))), vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, cos(0.0))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, cos(0.0))), vec2(mat3(vec2(mat3x2(injectionSwitch, abs(0.0), 1.0, 0.0, cos(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))).x))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), true, true, true))))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, true, true)), (bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, true, true))) && true)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))).y), true)), (bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))).y), true))) && true))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))), true, true, true))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(((5.8 + 6319.2205) * 748.721))), bool(false))) < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | (0))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(36.06)), bvec2(true, false))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, 1.0 * (injectionSwitch.y)), 1.0, 0.0, abs(0.0))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(76.12))), injectionSwitch.y))))), (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), 0 | (_GLF_IDENTITY(max(1, 1), (max(1, 1)) / 1)))) | (max(1, 1))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-20267)))))))) * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) << 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
    {
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))), false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x, clamp(false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x, false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, ! (! (true))), false))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))), true && (! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))))))), true)))), false)))) && true) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)) : gl_WorkGroupID.x))))) / 1u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))))).y)) || false)))) || false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, (false ? _GLF_FUZZED(clamp(clamp(-84295, -53057, -63048), -81154, _injected_loop_counter)) : (0) >> _GLF_IDENTITY(0, (0) | (0))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6646.7457)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * _GLF_IDENTITY(1.0, max(1.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0), min(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), min(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), clamp(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), min(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec4(injectionSwitch, 1.0, 0.0))))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat4x3(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.0)))), float(_GLF_FUZZED(-5751.6066)), bool(false))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0)))), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)) * mat3(1.0)))), injectionSwitch)).y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(tanh(vec4(-1378.2271, -4177.5329, -8.3, -50.97)), vec4(63.30, 3.4, 7952.4476, -2758.7053)))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1)))) & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                  continue;
                 return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))), injectionSwitch)).x > injectionSwitch.y))))
                  continue;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) || false))));
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true), false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), max(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - 0.0)))), injectionSwitch.x))) || false)), false || (bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))) || false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))) || false)), false || (bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x))) || false)))))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))) || false)), false || (bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(false)))))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) / 1u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))))) ^ (subgroup_id * subgroup_size))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))), ((workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) | 0u)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(ivec2(clamp(1, 1, 1), 0))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false, true)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false, true)))))))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false, true)))))))), false, true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false, true)))))))), false, true)), false)), true, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_size))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))))) ? _GLF_FUZZED(61923u) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))), max((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))))) ? _GLF_FUZZED(61923u) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))))) ? _GLF_FUZZED(61923u) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (((subgroup_local_id + 1) % subgroup_size))), (true ? ~ (~ (((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(subgroup_size))))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))))) ? _GLF_FUZZED(61923u) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))))))))) | 0u), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u))), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) + 1, 0u))), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + 1))) % subgroup_size) / 1u)), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u))) | 0u)) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), min(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) / 1u) + 1, min(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), subgroup_local_id + 1)))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) / 1u) + 1, min(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1), subgroup_local_id + 1))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), uint(6u))), uint(6u))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id) / 1u, uint(uvec3((subgroup_local_id) / 1u, 0u, 1u)))) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))))) % subgroup_size)) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1), (min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) ^ 0u))))) : _GLF_FUZZED(num_workgroup))) % subgroup_size)))) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) | 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) / (0u ^ 1u))) * ((subgroup_size) | (subgroup_size))))), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (0u | 0u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) * ((subgroup_size) | (subgroup_size)))))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uvec3(25755u, 40559u, 129089u).g)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | (subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | (subgroup_size))))), clamp(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) * 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | (subgroup_size))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | (subgroup_size))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((subgroup_size) | (subgroup_size))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u))))) | 0u)) | 0u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), 0u, 0u)), min(uint(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), 0u, 0u)), uint(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true))))) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true))))) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))))), uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) && true))) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size))) - 0u)))) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) | 0u) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) % subgroup_size) - 0u)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(61923u) : ((subgroup_local_id + 1) % subgroup_size))))) << 0u))) | 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), max((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), 0u, (1u & 1u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) + 0)), 0), (false ? _GLF_FUZZED(ivec2(89737, 24198)) : ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) + 0)), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) + 0)), 0), (false ? _GLF_FUZZED(ivec2(89737, 24198)) : ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) + 0)), 0))))) ^ 0)), subgroup_local_id + 1))) % subgroup_size)) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, subgroup_local_id + 1)))) << (0u | 0u)) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), clamp(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 1u)), 0u + (uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 1u))))), subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))))) - 0u))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)) : _GLF_FUZZED(num_workgroup))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) << 0)))))) | (1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61923u, (61923u) >> (0u & 63778u)), clamp(_GLF_IDENTITY(61923u, (61923u) >> (0u & 63778u)), _GLF_IDENTITY(61923u, (61923u) >> (0u & 63778u)), _GLF_IDENTITY(61923u, (61923u) >> (0u & 63778u))))) : ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) - 0u)) % subgroup_size)))) | 0u), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) | (subgroup_local_id + 1))))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) | (subgroup_local_id + 1))))))) % subgroup_size)))), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size)), min((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size))))) ^ 0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)))))))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) || false, ! (! (_GLF_IDENTITY((_injected_loop_counter > 0) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), (bool(_GLF_IDENTITY(bool(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), ! (! (bool(bool(_injected_loop_counter > 0))))))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), (bool(_GLF_IDENTITY(bool(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), ! (! (bool(bool(_injected_loop_counter > 0))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), (bool(_GLF_IDENTITY(bool(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), ! (! (bool(bool(_injected_loop_counter > 0))))))))) || false))), false || (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), (bool(_GLF_IDENTITY(bool(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter > 0)), ! (! (bool(bool(_injected_loop_counter > 0))))))))) || false))))))), true, true, false)))) || false))))))); _injected_loop_counter --)
  {
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true, false, false))), (false) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false, true, true))) && true)))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))
        break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(82453) : _GLF_IDENTITY(int(7), (int(7)) * 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(82453) : _GLF_IDENTITY(int(7), (int(7)) * 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(82453) : _GLF_IDENTITY(int(7), (int(7)) * 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))) | ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(82453) : _GLF_IDENTITY(int(7), (int(7)) * 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false, false)), true && (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + (0 >> _GLF_IDENTITY(int(2), int(2)))) >> 0) | 0, _GLF_IDENTITY(max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0))))) ^ 0)), ~ (~ (max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), (_GLF_IDENTITY(~ (0 | 0), clamp(~ (0 | 0), ~ (0 | 0), ~ (0 | 0)))) - 0))), max(0 | 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(-91144) : 0 | 0)), 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (0 << _GLF_IDENTITY(int(3), int(3)))), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), min(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) ^ 0), max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0 | 0)) >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (max(0 | 0, 0 | 0)) | (max(0 | 0, 0 | 0))), _GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), min(_GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), 0 | ((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))) | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), min(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(0, 0))))))) | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), clamp((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), int(ivec2((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))))) | (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))), (false ? _GLF_FUZZED((_injected_loop_counter % 7452)) : _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), 0 ^ (max(0 | 0, 0 | 0))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, _GLF_IDENTITY(0, min(0, 0)) | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), _GLF_IDENTITY(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), _GLF_IDENTITY(int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0)), (int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0))) - 0)))))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | 0)))), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, _GLF_IDENTITY(0, max(0, 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), _GLF_IDENTITY(1, min(1, 1)), 0))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), clamp(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))))))), 1)))), 0))))) ^ 0)))))), (0 | 0) / 1)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), max(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))), int(6))), int(6)))), 1, 0, (0 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6)))), _GLF_IDENTITY(0, ~ (~ (0))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6)))))))))))))) | 0)), 0 | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + (0 >> _GLF_IDENTITY(int(2), int(2)))) >> 0) | 0, _GLF_IDENTITY(max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0))))) ^ 0)), ~ (~ (max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), (_GLF_IDENTITY(~ (0 | 0), clamp(~ (0 | 0), ~ (0 | 0), ~ (0 | 0)))) - 0))), max(0 | 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(-91144) : 0 | 0)), 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (0 << _GLF_IDENTITY(int(3), int(3)))), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), min(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) ^ 0), max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0 | 0)) >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (max(0 | 0, 0 | 0)) | (max(0 | 0, 0 | 0))), _GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), min(_GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), 0 | ((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))) | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), min(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(0, 0))))))) | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), clamp((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), int(ivec2((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))))) | (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))), (false ? _GLF_FUZZED((_injected_loop_counter % 7452)) : _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), 0 ^ (max(0 | 0, 0 | 0))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, _GLF_IDENTITY(0, min(0, 0)) | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), _GLF_IDENTITY(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), _GLF_IDENTITY(int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0)), (int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0))) - 0)))))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | 0)))), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, _GLF_IDENTITY(0, max(0, 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), _GLF_IDENTITY(1, min(1, 1)), 0))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), clamp(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))))))), 1)))), 0))))) ^ 0)))))), (0 | 0) / 1)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), max(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))), int(6))), int(6)))), 1, 0, (0 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6)))), _GLF_IDENTITY(0, ~ (~ (0))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6)))))))))))))) | 0)), max(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + (0 >> _GLF_IDENTITY(int(2), int(2)))) >> 0) | 0, _GLF_IDENTITY(max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0))))) ^ 0)), ~ (~ (max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), (_GLF_IDENTITY(~ (0 | 0), clamp(~ (0 | 0), ~ (0 | 0), ~ (0 | 0)))) - 0))), max(0 | 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(-91144) : 0 | 0)), 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (0 << _GLF_IDENTITY(int(3), int(3)))), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), min(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) ^ 0), max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0 | 0)) >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (max(0 | 0, 0 | 0)) | (max(0 | 0, 0 | 0))), _GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), min(_GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), 0 | ((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))) | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), min(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(0, 0))))))) | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), clamp((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), int(ivec2((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))))) | (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))), (false ? _GLF_FUZZED((_injected_loop_counter % 7452)) : _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), 0 ^ (max(0 | 0, 0 | 0))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, _GLF_IDENTITY(0, min(0, 0)) | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), _GLF_IDENTITY(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), _GLF_IDENTITY(int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0)), (int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0))) - 0)))))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | 0)))), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, _GLF_IDENTITY(0, max(0, 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), _GLF_IDENTITY(1, min(1, 1)), 0))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), clamp(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))))))), 1)))), 0))))) ^ 0)))))), (0 | 0) / 1)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), max(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))), int(6))), int(6)))), 1, 0, (0 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6)))), _GLF_IDENTITY(0, ~ (~ (0))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6)))))))))))))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + (0 >> _GLF_IDENTITY(int(2), int(2)))) >> 0) | 0, _GLF_IDENTITY(max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0))))) ^ 0)), ~ (~ (max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (0 | 0), (_GLF_IDENTITY(~ (0 | 0), clamp(~ (0 | 0), ~ (0 | 0), ~ (0 | 0)))) - 0))), max(0 | 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), _GLF_IDENTITY(0, 0 + (0)))) | 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(-91144) : 0 | 0)), 0 | 0)), 1, _GLF_IDENTITY(0, ~ (~ (0)))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (0 << _GLF_IDENTITY(int(3), int(3)))), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), min(_GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) ^ 0), max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0 | 0)) >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), (max(0 | 0, 0 | 0)) | (max(0 | 0, 0 | 0))), _GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), min(_GLF_IDENTITY((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))), 0 | ((_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))) | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), min(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(0, 0))))))) | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), clamp((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), int(ivec2((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), min(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))))) | (int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))), max(0 | 0, 0 | 0)), 1, 0))))), 1)))), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1))), (false ? _GLF_FUZZED((_injected_loop_counter % 7452)) : _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(max(0 | 0, 0 | 0), 0 ^ (max(0 | 0, 0 | 0))), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, _GLF_IDENTITY(0, min(0, 0)) | 0), max(0 | 0, 0 | 0)))))) << (0 >> _GLF_IDENTITY(int(8), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(0, 0)), max(0 | 0, 0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))), 1)))))), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0) | 0)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))))), 0)))))), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))) | (int(ivec3(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(max(0 | 0, 0 | 0), (_GLF_IDENTITY(max(0 | 0, 0 | 0), min(max(0 | 0, 0 | 0), _GLF_IDENTITY(max(0 | 0, 0 | 0), _GLF_IDENTITY(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), _GLF_IDENTITY(int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0)), (int(ivec2(min(max(0 | 0, 0 | 0), max(0 | 0, 0 | 0)), 0))) - 0)))))) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | 0)))), int(8))))), 1, 0))))), int(ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, max(0, 0)), max(0 | 0, _GLF_IDENTITY(0, max(0, 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), 1, 0)), (int(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), _GLF_IDENTITY(1, min(1, 1)), 0))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), clamp(ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0), ivec3(_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)), 1, 0))))))))), 1)))), 0))))) ^ 0)))))), (0 | 0) / 1)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), max(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))), int(6))), int(6)))), 1, 0, (0 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6)))), _GLF_IDENTITY(0, ~ (~ (0))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (~ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) - 0))), int(6)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 0))) + 0))), int(6)))) : _GLF_FUZZED(40342))), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 << _GLF_IDENTITY(int(0), int(0)))), clamp(int(6), int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec2(int(6), 1)), (int(ivec2(int(6), 1))) | (int(ivec2(int(6), 1))))))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0, ((_GLF_IDENTITY(int(6), (int(6)) * 1)) | 0) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), int(6)))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6)), 0 | (clamp(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (int(6)) >> (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), _GLF_IDENTITY(min(8, 8), (false ? _GLF_FUZZED(-3548) : min(8, 8)))))))))), int(6))))), int(6)))))))))))))) | 0))))))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED((+ 5.6)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), 0u | (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) - _GLF_IDENTITY(0u, (0u) | (0u))))), uint(subgroup_local_id))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(uint(subgroup_local_id), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (1u ^ 1u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | 0u)), (uint(subgroup_local_id)) << (1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id))), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) / 1u))) ^ 1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))))))), uint(uvec3(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))))))), 1u, 0u))), uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))))))), (uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << (_GLF_IDENTITY(1u ^ 1u, clamp(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u)))))))) >> 0u))))))), uint(uvec2(uint(subgroup_local_id), 1u)))) | (_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(_GLF_IDENTITY(uint(subgroup_local_id), min(uint(subgroup_local_id), uint(subgroup_local_id))), 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(uint(subgroup_local_id), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), max((_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(uint(subgroup_local_id), 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(uint(subgroup_local_id), 1u)))), (true ? (_GLF_IDENTITY(uint(subgroup_local_id), uint(uvec2(uint(subgroup_local_id), 1u)))) : _GLF_FUZZED(subgroup_local_id)))))))) + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) - 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-7.7), clamp(_GLF_FUZZED(-7.7), _GLF_IDENTITY(_GLF_FUZZED(-7.7), max(_GLF_FUZZED(-7.7), _GLF_FUZZED(-7.7))), _GLF_IDENTITY(_GLF_FUZZED(-7.7), min(_GLF_FUZZED(_GLF_IDENTITY(-7.7, float(vec3(_GLF_IDENTITY(-7.7, max(-7.7, -7.7)), 0.0, 0.0)))), _GLF_FUZZED(-7.7)))))), bool(false))) : _GLF_FUZZED(_GLF_IDENTITY(-5.2, mix(float(-5.2), float(_GLF_FUZZED(676.698)), bool(false)))))) > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))));
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.5, 52.62), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(7.5, 52.62), mix(vec2(_GLF_IDENTITY((vec2(7.5, 52.62))[0], ((vec2(7.5, 52.62))[0]) - 0.0), (vec2(7.5, 52.62))[1]), vec2(_GLF_FUZZED(91.78), _GLF_FUZZED(56.03)), bvec2(false, false)))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(5262.2454), (vec2(_GLF_IDENTITY(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))))[1]), vec2((vec2(_GLF_IDENTITY(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))))[0], _GLF_FUZZED(8394.8914)), bvec2(true, false))), vec2(_GLF_IDENTITY(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat4(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), determinant(mat2(sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0)))))))) * (injectionSwitch)))).x > injectionSwitch.y))) && true))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     int i = 0;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))))) && true)))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true, false)))))))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))))), bool(bvec2((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true))))), true)))))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, true && (false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), _GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))))), ((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true))))))))) && true)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) > injectionSwitch.y)))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec3(int(7), 1, 0), max(ivec3(int(7), 1, 0), ivec3(int(7), 1, 0)))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, abs(0.0), 1.0, 1.0, length(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), true, false))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), true, false)))))))))))))))
            return;
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * abs(vec2(1.0, 1.0))).y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), _GLF_IDENTITY(((_GLF_DEAD(false))) || false, bool(bvec2(((_GLF_DEAD(false))) || false, true)))))) && true)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true && (true))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), abs(0.0), 0.0), (false ? _GLF_FUZZED(mat2x3(-2.5, -1785.3617, 5353.2893, -3005.9789, -57.88, 6.4)) : mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), abs(0.0), 0.0))))), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), bool(bvec3(! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), true, false)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, sqrt(1.0), 0.0), (vec3(injectionSwitch.x, sqrt(1.0), 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(vec3(injectionSwitch.x, sqrt(1.0), 0.0), (vec3(injectionSwitch.x, sqrt(1.0), 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, sqrt(1.0), 0.0), (vec3(injectionSwitch.x, sqrt(1.0), 0.0)) * mat3(1.0)))))), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 0.0, 1.0, 0.0, 0.0))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(-1.6)))))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))))), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))) + (float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))))))) : _GLF_FUZZED(80989))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41274) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))), _GLF_IDENTITY(float(float(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))))), float(mat3x2(float(float(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), clamp((_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))), (_GLF_IDENTITY(-377.364 * -2.8, mix(float(-377.364 * -2.8), float(_GLF_FUZZED(8655.6121)), bool(false)))))))))), 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), 0.0, sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(75390, -61402, -16517, -35411).r)))) - 0)], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), min(_GLF_IDENTITY((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), mat2(1.0) * ((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0))), _GLF_IDENTITY((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), clamp((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0), (mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))))))), 1.0, round(length(normalize(1.0))), 1.0, 1.0)), vec2(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), 1.0, 1.0)), 0.0, 0.0)))).x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), sqrt(0.0), exp(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0)), mix(float(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), (mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-8.2, -0.5)))))) - tan(vec2(0.0, 0.0)))[1]))) - vec2(0.0, 0.0)))), 1.0, round(length(normalize(1.0))), 1.0, 1.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-25.97, -8145.9591, 4.1, -3979.3443)) : _GLF_IDENTITY(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0), (mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-1700.2855, -403.490, 0.1, 44.46, 8.5, 7.6, 3731.7413, -47.29, 8618.9662, 52.58, -5903.7982, -2.8, -9.4, 459.043, 46.12, -583.121)) : mat4(_GLF_IDENTITY(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0), (mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.9))), 1.0)), 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))))))).x, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(exp(0.0), float(mat3x2(exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(log(1.0), float(vec4(log(1.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2x3(float(mat2(0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0))), float(_GLF_FUZZED(-718.505)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))) + vec2(0.0, 0.0)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               continue;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y))))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-362.418) : injectionSwitch.y))))))), true, true, false))) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, cos(0.0), 0.0, sin(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, cos(0.0), 0.0, sin(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, cos(0.0), 0.0, sin(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))).y))))))))))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       continue;
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-610.890)), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-610.890)), bool(false))) > injectionSwitch.y)) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(1, (1) | 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter --)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(int(1), int(1))) & 51759)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
