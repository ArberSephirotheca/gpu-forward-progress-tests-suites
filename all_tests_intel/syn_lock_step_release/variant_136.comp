#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) && true) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-436.684) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, tan(0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, tan(0.0)), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, tan(0.0))) - vec2(0.0, 0.0)))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(sign(-3463.3681)) : injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))).y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-29.45))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), false || (! (_GLF_IDENTITY((false), ((false)) && true)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), (injectionSwitch.x > injectionSwitch.y)), false))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float((153859u - 48222u)))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(10.56)))), bool(true))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))))))) && true), false, _GLF_IDENTITY(true, (true) || false), false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(1.0)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true && (_GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true && (! (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true && (! (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true && (! (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true && (! (injectionSwitch.x < injectionSwitch.y)))))))))))))), true)), false || (bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && (! (injectionSwitch.x < injectionSwitch.y)), (true && (! (injectionSwitch.x < injectionSwitch.y))) && true))))))))), _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(bool(bvec3(true, false, true)), true, true))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, true, true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false))))), false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, true)))), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && true)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) * 1.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, log(1.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-1465.8352)), float(abs(1.0)), bool(true)))) * determinant(mat4(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(-61881))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat2x3(min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(-61881))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(step(faceforward(-4484.1077, 344.555, 0.3), 1.5)), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(step(faceforward(-4484.1077, 344.555, 0.3), 1.5))), bool(true))))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(9.8), _GLF_FUZZED((-5.0 + -136.309)), _GLF_FUZZED(-9619.6007)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.y, 0.0, 1.0))[1], float(mat3x2((vec3(injectionSwitch.y, 0.0, 1.0))[1], 0.0, 1.0, 1.0, 0.0, 1.0))), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, true, true))))), 1.0, 0.0, 0.0))), injectionSwitch.y), float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(9.8), _GLF_FUZZED((-5.0 + -136.309)), _GLF_FUZZED(-9619.6007)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.y, 0.0, 1.0))[1], float(mat3x2((vec3(injectionSwitch.y, 0.0, 1.0))[1], 0.0, 1.0, 1.0, 0.0, 1.0))), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, true, true))))), 1.0, 0.0, 0.0))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), transpose(transpose(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(9.8), _GLF_FUZZED((-5.0 + -136.309)), _GLF_FUZZED(-9619.6007)), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.y, 0.0, 1.0))[1], float(mat3x2((vec3(injectionSwitch.y, 0.0, 1.0))[1], 0.0, 1.0, 1.0, 0.0, 1.0))), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, true, true))))), 1.0, 0.0, 0.0))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))) : _GLF_IDENTITY(_GLF_FUZZED(-6944.0073), clamp(_GLF_FUZZED(-6944.0073), _GLF_FUZZED(-6944.0073), _GLF_FUZZED(-6944.0073))))))) + 0.0) : _GLF_FUZZED(-8.7))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0))), (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).y))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(606.420)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), max(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(abs(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(abs(1.0), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(-61881))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(step(faceforward(-4484.1077, 344.555, 0.3), 1.5)))))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mix(vec3(_GLF_FUZZED(9.8), _GLF_FUZZED((-5.0 + -136.309)), _GLF_IDENTITY(_GLF_FUZZED(-9619.6007), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9619.6007), clamp(_GLF_FUZZED(-9619.6007), _GLF_FUZZED(-9619.6007), _GLF_IDENTITY(_GLF_FUZZED(-9619.6007), float(vec2(_GLF_FUZZED(-9619.6007), 1.0))))), _GLF_FUZZED(-9619.6007), _GLF_IDENTITY(_GLF_FUZZED(-9619.6007), max(_GLF_FUZZED(-9619.6007), _GLF_FUZZED(-9619.6007)))))), vec3((vec3(injectionSwitch.y, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(injectionSwitch.y, 0.0, 1.0))[1], float(mat3x2((vec3(injectionSwitch.y, 0.0, 1.0))[1], 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 1.0))), (vec3(injectionSwitch.y, 0.0, 1.0))[2]), bvec3(true, true, true))))), 1.0, 0.0, 0.0))), injectionSwitch.y))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))).y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))).y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))).y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))).y)))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(cos(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))).y))))) : _GLF_IDENTITY(_GLF_FUZZED(-6944.0073), clamp(_GLF_FUZZED(-6944.0073), _GLF_FUZZED(-6944.0073), _GLF_FUZZED(-6944.0073))))))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))) : _GLF_FUZZED(_GLF_IDENTITY(-8.7, mix(float(_GLF_IDENTITY(-8.7, (_GLF_IDENTITY(-8.7, max(-8.7, -8.7))) / 1.0)), float(_GLF_FUZZED(7.2)), bool(false)))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, mix(float(_GLF_FUZZED(-655.704)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (false ? _GLF_FUZZED(-1.0) : injectionSwitch.y))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(11.89)), bool(false))))), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, true))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), false, true))), true, true, true)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, true))), true, true, true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(_GLF_IDENTITY(vec2((injectionSwitch.x) - 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0) * (vec2((injectionSwitch.x) - 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (! ((_GLF_IDENTITY(false, false || (false))))), true, false, true))))))) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), false, false))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false)), true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_IDENTITY(true, ! (! (true))), false || ((bool(false)) && _GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(true && (bool(bool(false))), ! (! (true && (bool(bool(false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)))), true && (_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x3(min(injectionSwitch, injectionSwitch), 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-440.529, 75.86)))).x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, false || (false))) && true)))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) - vec2(0.0, 0.0))))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), false, true))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, (false) && true) || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))))))))))), ((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(96.14), _GLF_FUZZED(-9.7)), bvec2(false, false))), injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, false, false)))) || false), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4(mat2(1.0))), (mat2(mat4(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(33.44) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * 1.0), float(_GLF_FUZZED(-3244.6289)), bool(false))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0))))), float(_GLF_FUZZED(2.3)), bool(false)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, cos(0.0), 1.0, 0.0, 1.0)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, false || (true)), true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) ^ 0u)))) | (workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) | (workgroup_size), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) | (workgroup_size) : _GLF_FUZZED(workgroup_id)))) / 1u)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u ^ (clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))) || false)))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 2)), 2)), clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 2)), 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), 2)), 2)), _GLF_IDENTITY(1, 0 | (1)) * (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9152.7612))))), 2)), 2)))), _GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), injectionSwitch.x))), 2)), 2)), 0 ^ (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), injectionSwitch.x))), 2)), 2)))))), _GLF_IDENTITY(2, (2) - 0)))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))), _GLF_IDENTITY(true, (true) && true), true))), (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
}
