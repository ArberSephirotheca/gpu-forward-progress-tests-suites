#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_DEAD(false))), true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.3, 153.298)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-542.719)), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-542.719)), bool(false))), false, false, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-542.719)), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-542.719)), bool(false))), false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), false, false)))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), false, false)))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), false, false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(138500u, _GLF_IDENTITY(clamp(138500u, _GLF_IDENTITY(138500u, min(138500u, 138500u)), 138500u), (clamp(138500u, _GLF_IDENTITY(138500u, min(138500u, 138500u)), 138500u)) + 0u)), 175735u, 47375u)) : gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - (1 ^ 1))], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec3(bvec2(! (! (false)), false), true))), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), false)))), true)))))))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false, true, false)))) && true)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), ! (! (_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))) && true)))))), bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), ! (! (_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))) && true)))))), bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))))), true))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), bool(bool((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))) && true, bool(bvec4((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true, true, false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, ((gl_WorkGroupSize.x) << 0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u), clamp(uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, 1u, 1u)))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY((gl_WorkGroupSize.x) << 0u, 0u ^ ((gl_WorkGroupSize.x) << 0u))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(55814u, num_workgroup, true)) : 0u)), 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))) - uvec3(0u, 0u, 0u))).x)), (gl_WorkGroupSize.x) << 0u)) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -3.9)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-4.5) : (injectionSwitch)[0])), _GLF_FUZZED(-682.809)), bvec2(true, false))).y), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(sqrt(0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 1.0, 0.0))).x > injectionSwitch.y), false, true)), false || (bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false)))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (true && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY((~ (workgroup_size)), (_GLF_IDENTITY((~ (workgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134014u, 149840u, 21438u)) : uvec3(workgroup_size, 1u, 1u))))))))))))) << 0u) >> 0u)), clamp((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (~ (workgroup_size)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), uint(uvec4((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u), (false ? _GLF_FUZZED(uvec3(21595u, 17537u, 176425u)) : uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), uint(uvec4((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), uint(uvec4((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u), (false ? _GLF_FUZZED(uvec3(21595u, 17537u, 176425u)) : uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), uint(uvec4((_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) >> 0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | _GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (workgroup_base) * 1u))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (workgroup_base) * 1u))) + subgroup_id * subgroup_size) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(444.602))), 0.0), mat2x3(mat2x4(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false)) && true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false)) && true))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), (~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), max(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), ~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))))))), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u)) << 0u)) + 1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), (subgroup_local_id + 1)))) >> _GLF_IDENTITY(0u, (0u) << 0u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (! (false || (_GLF_IDENTITY(false, (false) || false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, true, false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(max(vec2(-6930.6499, -680.805), vec2(-24.43, 92.12))) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 0.0, log(1.0), 0.0, length(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-610.444 + -294.972))), bool(false))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(69.57), min(_GLF_FUZZED(69.57), _GLF_FUZZED(69.57))))), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(40.89))), _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0)) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(2.0, 5.5, -7.3, 6.6)) : vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0))))))))), mix(float(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), float(_GLF_FUZZED(7.5)), bool(false))), 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(log2(-8.8))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(692.196)), float(1.0), bool(true))))))), clamp(float(mat3x2(_GLF_IDENTITY(clamp(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) * round(length(normalize(vec2(1.0, 1.0)))))), (true ? vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), min(_GLF_IDENTITY(0.0 + (0.0), clamp(0.0 + (0.0), 0.0 + (0.0), _GLF_IDENTITY(0.0 + (0.0), min(0.0 + (0.0), 0.0 + (0.0))))), 0.0 + (0.0)))), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) * round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) - 0.0)))) : _GLF_FUZZED(uintBitsToFloat(uvec4(73710u, 6399u, 73352u, 63908u))))))), mix(float(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), float(_GLF_FUZZED(7.5)), bool(false))), 1.0, abs(0.0), 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), mix(float(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), max(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(vec4(212.551, 0.8, -693.823, -29.91))))))))), float(_GLF_FUZZED(7.5)), bool(false))), (_GLF_IDENTITY(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))))), mix(float(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), max(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(abs(1.0)))), tan(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0))) + (0.0))), (true ? vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) + 0.0))) : _GLF_FUZZED(vec4(212.551, 0.8, -693.823, -29.91))))))))), float(_GLF_FUZZED(7.5)), bool(false)))) / 1.0), 1.0, abs(0.0), 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), min(_GLF_IDENTITY(0.0 + (0.0), (false ? _GLF_FUZZED(0.9) : 0.0 + (0.0))), 0.0 + (0.0))))))), mix(float(clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-196.998) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), float(_GLF_FUZZED(7.5)), bool(false))), 1.0, abs(0.0), 0.0, 1.0, 1.0))))))), 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, sqrt(0.0), 1.0, 1.0)), (float(mat2(1.0, sqrt(0.0), 1.0, 1.0))) + 0.0))), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))))))))), 0.0)), _GLF_IDENTITY((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false, false))))))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) + 0.0)), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))) * mat2(1.0))[0], (((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))) * mat2(1.0))[0]) / 1.0), ((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.9) : 1.0)), 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))) * mat2(1.0))[1]), vec2(_GLF_FUZZED((-0.4 - 9.7)), _GLF_FUZZED(504.814)), bvec2(false, false)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, length(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2((cos(vec2(0.0, 0.0)))[0], _GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], 0.0 + (_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], (false ? _GLF_FUZZED(57.65) : (cos(vec2(0.0, 0.0)))[1]))))), vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(5604.6913)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-909.319) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), min(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2((cos(vec2(0.0, 0.0)))[0], _GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], 0.0 + (_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], (false ? _GLF_FUZZED(57.65) : (cos(vec2(0.0, 0.0)))[1]))))), vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(5604.6913)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-909.319) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2((cos(vec2(0.0, 0.0)))[0], _GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], 0.0 + (_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[1], (false ? _GLF_FUZZED(57.65) : (cos(vec2(0.0, 0.0)))[1]))))), vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(5604.6913)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-909.319) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))))), 0.0))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))), bool(bvec3(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))), false, false)))))), bool(bvec4(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))), bool(bvec3(! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))), false, false)))))), false, true, true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
