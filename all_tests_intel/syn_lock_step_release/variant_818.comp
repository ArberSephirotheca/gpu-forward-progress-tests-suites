#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! ((false))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))).y)), false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))) > injectionSwitch.y))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(85.66, (85.66) * 1.0)) : injectionSwitch.x)), injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-834.727), (_GLF_FUZZED(_GLF_IDENTITY(-834.727, clamp(-834.727, -834.727, _GLF_IDENTITY(-834.727, _GLF_IDENTITY(float(mat3x2(-834.727, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0)), max(float(mat3x2(-834.727, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x2(-834.727, 0.0, 0.0, 1.0, 0.0, 1.0))))))))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), clamp(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x : _GLF_FUZZED(-834.727), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), max(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), true ? injectionSwitch.x : _GLF_FUZZED(-834.727))), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), (true ? true ? injectionSwitch.x : _GLF_FUZZED(-834.727) : _GLF_FUZZED(485.656)))))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-834.727, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -834.727 : _GLF_FUZZED(-723.948))), (false ? _GLF_FUZZED(radians(67.28)) : -834.727))), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727))), mix(float(_GLF_FUZZED(-85.69)), float(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0)), min((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))))))) / 1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), max(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), true ? injectionSwitch.x : _GLF_FUZZED(-834.727), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), true ? injectionSwitch.x : _GLF_FUZZED(-834.727), true ? injectionSwitch.x : _GLF_FUZZED(-834.727))))), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), max(true ? injectionSwitch.x : _GLF_FUZZED(-834.727), true ? injectionSwitch.x : _GLF_FUZZED(-834.727)))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727))), (true ? _GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727))) : _GLF_FUZZED(6326.1364)))), min((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-834.727, float(float(-834.727))))), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))))))) / 1.0), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727)))), min((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))))))) / 1.0), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-834.727, (false ? _GLF_FUZZED(radians(67.28)) : -834.727)))), min((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? injectionSwitch.x : _GLF_FUZZED(-834.727))))))) / 1.0)))) > injectionSwitch.y), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), 0.0, 0.0), mix(vec3(_GLF_FUZZED(float(28259u)), (vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), 0.0, 0.0))[1], (vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), 0.0, 0.0))[2]), vec3((vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), 0.0, 0.0))[0], _GLF_FUZZED((- 61.17)), _GLF_FUZZED(327.259)), bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))), max(float(vec3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(-834.727)) : _GLF_FUZZED(2.7))), 0.0, 0.0)), float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5498.6914)), float(0.0), bool(true))), 0.0)))), (float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(-834.727)), 0.0, 0.0))) / 1.0))) > injectionSwitch.y))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(175.144), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(175.144), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y) || false))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(175.144), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(175.144), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), _GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_IDENTITY(_GLF_FUZZED(37.27), clamp(_GLF_FUZZED(37.27), _GLF_FUZZED(37.27), _GLF_IDENTITY(_GLF_FUZZED(37.27), mix(float(_GLF_FUZZED(37.27)), float(_GLF_FUZZED(3.7)), bool(_GLF_IDENTITY(false, ! (! (false)))))))) : injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, log(1.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))).x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-16.99, 380.606)) : injectionSwitch)))).x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), true, true, false)))))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, 0u, 1u, (1u & 1u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-438.045), _GLF_FUZZED(3.5)), bvec2(false, false)))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-1074.4888))), float(injectionSwitch[1]), bool(true))))).y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-1074.4888))), float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(2.4) : injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) * 1)))], max(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1]))) - 0.0), _GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(injectionSwitch[1]), clamp(_GLF_IDENTITY(float(injectionSwitch[1]), (float(injectionSwitch[1])) - 0.0), float(injectionSwitch[1]), _GLF_IDENTITY(float(injectionSwitch[1]), max(_GLF_IDENTITY(float(injectionSwitch[1]), (true ? float(injectionSwitch[1]) : _GLF_FUZZED(7082.6107))), float(injectionSwitch[1]))))), float(_GLF_FUZZED(-31.37)), bool(false)))))))), bool(true))))).y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, false, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, false, true))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(575.205)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1962.5854) : injectionSwitch.y))), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1962.5854) : injectionSwitch.y))), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1962.5854), (true ? _GLF_FUZZED(-1962.5854) : _GLF_FUZZED(ldexp(log(-3355.8371), 73515)))) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1962.5854) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(552.893), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(63.41)), bvec2(true, false))).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1962.5854) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1962.5854) : injectionSwitch.y))))), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) ^ 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (true ? vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(abs(1.0), float(mat3(abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(1.3)), float(tan(0.0)), bool(true))), tan(0.0))), 0.0, 0.0, 1.0, tan(0.0)))), 1.0, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(length(5.2)), (true ? _GLF_FUZZED(length(5.2)) : _GLF_FUZZED(refract(5203.4632, 57.28, -6833.4011)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(acos(injectionSwitch))))).y)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3344.4103)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x)))), float(_GLF_FUZZED(-471.885)), bool(false))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))) : _GLF_FUZZED(3.1))))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(16.84, 547.011, -28.14, 0.3).q)), _GLF_IDENTITY(float(vec2(float(_GLF_FUZZED(vec4(16.84, 547.011, -28.14, 0.3).q)), 1.0)), clamp(float(vec2(float(_GLF_FUZZED(vec4(16.84, 547.011, -28.14, 0.3).q)), 1.0)), float(vec2(float(_GLF_FUZZED(vec4(16.84, 547.011, -28.14, 0.3).q)), 1.0)), float(vec2(float(_GLF_FUZZED(vec4(16.84, 547.011, -28.14, 0.3).q)), 1.0))))), bool(false))) < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))), workgroup_size)) & next_virtual_gid))), (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), min((0u), (0u))), _GLF_IDENTITY((0u), (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))), (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id)))) | 0u)))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id)))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))))))) + 0u)) * 1u) : (0u)))))))) << _GLF_IDENTITY(uint(6u), uint(6u))) + _GLF_IDENTITY(_GLF_IDENTITY(((true ? buf[virtual_gid] = 1 : _GLF_FUZZED((workgroup_size & next_virtual_gid)))), (((true ? buf[virtual_gid] = 1 : _GLF_FUZZED((workgroup_size & next_virtual_gid))))) * 1u), (false ? _GLF_FUZZED(uvec2(157215u, 92165u)[0]) : _GLF_IDENTITY(((true ? buf[virtual_gid] = 1 : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size & next_virtual_gid, (true ? _GLF_IDENTITY(workgroup_size & next_virtual_gid, 1u * (_GLF_IDENTITY(workgroup_size & next_virtual_gid, max(workgroup_size & next_virtual_gid, workgroup_size & next_virtual_gid)))) : _GLF_FUZZED(subgroup_local_id))))))), 0u ^ (((true ? buf[virtual_gid] = 1 : _GLF_FUZZED((workgroup_size & next_virtual_gid))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, false), false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || _GLF_IDENTITY(false, (false) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))))))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))))).x > injectionSwitch.y)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))))), _GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), max(_GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0)), vec4(mat2x4(vec4(injectionSwitch, 0.0, sqrt(0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), 1.0)))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false))), clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), sqrt(0.0))), max(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), max(_GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), clamp(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-44.13 + 851.461))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), (vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), max(_GLF_IDENTITY(clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), clamp(mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), min(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), clamp(mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))))), (false ? _GLF_FUZZED((3040.6513 - vec2(5.3, 308.937))) : _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false)), mix(vec2(_GLF_FUZZED(-27.33), (clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, sqrt(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, sqrt(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0))), 0.0, sqrt(0.0)))))))[1]), vec2((clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))[0], _GLF_FUZZED(-7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), clamp(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), max(vec2(vec4(injectionSwitch, 0.0, sqrt(0.0))), vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))))))))).x, determinant(mat4(0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))) : _GLF_FUZZED(-24.44))))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(refract(vec2(-778.689, 2923.4117), injectionSwitch, -3.7)) : injectionSwitch)).y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-24.44))))))))), ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(sin(injectionSwitch)) : vec2(vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.4))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), (false ? _GLF_FUZZED(1.8) : float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0))))), float(_GLF_FUZZED(2.3)), bool(false)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-24.44))))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.4))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), (false ? _GLF_FUZZED(1.8) : float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0))))), float(_GLF_FUZZED(2.3)), bool(false)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), true, false)), ! (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), true, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)))) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ((! (false))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), ~ (~ (uint(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))))))], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
