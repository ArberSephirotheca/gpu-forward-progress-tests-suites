#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))), ! (! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))))), true))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))), ! (! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))))), true))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), _GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77)))), 0.0, 1.0, length(0.0), 0.0))))) + vec2(0.0, 0.0)), injectionSwitch)), vec2(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0))), injectionSwitch)).y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true)) : _GLF_FUZZED(vec2(286.324, -6743.5848)))), mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), exp(vec2(0.0, 0.0)) * (vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(vec3(-4948.4867, 8470.4680, -7416.9652).z)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], clamp(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], max((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], (injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))])), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], _GLF_IDENTITY(float(mat3x2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(vec3(float(mat3x2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))], 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 1.0, 1.0)))), (injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)))))])), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-337.026)), float(injectionSwitch.y), bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true))) * mat2(1.0), ((mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true))) * mat2(1.0)) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - log(vec2(1.0, 1.0))))), vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77)))), 0.0, 1.0, length(0.0), 0.0))))) + vec2(0.0, 0.0)), injectionSwitch)), vec2(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), injectionSwitch)).y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(-402.862), _GLF_FUZZED(-834.466)), bvec2(false, false))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.0, min(_GLF_IDENTITY(-1.0, clamp(-1.0, -1.0, -1.0)), -1.0))), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, 1.0, sqrt(1.0)), (mat3x2((injectionSwitch), 1.0, 0.0, 1.0, sqrt(1.0))) * mat3(1.0))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, max(1, 1)))))))), 1))]), bvec2(true, true)), _GLF_IDENTITY(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4602.3423), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-269.304)), bvec2(true, false)))[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true))), vec2(vec2((mix(vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4602.3423), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-269.304)), bvec2(true, false)))[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true)))))) * mat2(1.0), ((mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.3), min(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.3))), _GLF_IDENTITY(_GLF_FUZZED(-1.0), min(_GLF_FUZZED(-1.0), _GLF_FUZZED(-1.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-20.02)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1)))), 1))]), bvec2(true, true))) * mat2(1.0)) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - log(vec2(1.0, 1.0))))), vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77)))), 0.0, 1.0, length(0.0), 0.0))))) + vec2(0.0, 0.0)), injectionSwitch)), vec2(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), injectionSwitch)).y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(-402.862), _GLF_FUZZED(-834.466)), bvec2(false, false))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - log(vec2(1.0, 1.0))))), vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77)))), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(550.948), _GLF_FUZZED(-18.16)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) - log(vec2(1.0, 1.0))))), vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(550.948), _GLF_FUZZED(-18.16)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) - log(vec2(1.0, 1.0))))), vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-6.8, -65.77))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), 0.0, 1.0, length(0.0), 0.0))))) + vec2(0.0, 0.0)), injectionSwitch)), vec2(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), injectionSwitch)).y) - 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(725.869), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(2.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | (1))))]), bvec2(true, true))), injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(-402.862), _GLF_FUZZED(-834.466)), bvec2(false, false))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, sin(0.0), 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + abs(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.2, clamp(0.2, 0.2, 0.2))), max(_GLF_FUZZED(0.2), _GLF_FUZZED(0.2)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.1)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-4768.4423)), float(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), bool(true))) - sin(0.0)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-6.8, -3.8))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09)), (vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.3)), bool(false)), clamp(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.3)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.3)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.3)), bool(false))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))), vec2(mat2x3(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))), 1.0, 1.0, 0.0, log(1.0)))))[1] : _GLF_FUZZED(1.2)))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true))))), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true))))))))))), true))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-384.281), min(_GLF_IDENTITY(_GLF_FUZZED(-384.281), max(_GLF_FUZZED(-384.281), _GLF_FUZZED(-384.281))), _GLF_FUZZED(-384.281))), _GLF_FUZZED(44.09)), _GLF_IDENTITY((vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09))), clamp((vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09))), (vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09))), (vec2(_GLF_FUZZED(-384.281), _GLF_FUZZED(44.09))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(vec2(5700.1337, -701.793))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.3)), bool(false))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))[1] : _GLF_FUZZED(1.2)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true)))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true)))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true)))))))))))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), _GLF_IDENTITY(true, ! (! (true))), true, true)))))))), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-231.529, -1.4)) : injectionSwitch)).x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, _GLF_IDENTITY(true, (true) || false), true)))))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, false, false, false))), true, true, true)))))))), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, (false) || false), false, false))), true, true, true)))))))), true))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))), true, true, true)))))))), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, false, false))), true, true, true)))))))), true))))), true), false))))))))).y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(8.3) : float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(false, ! (! (false))))), true)), bool(bvec3(bool(bvec4(false, true, false, true)), false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), bool(bool(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(vec4(4.8, 3.1, 612.690, -9.5).z), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) * 1)]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(vec4(4.8, 3.1, 612.690, -9.5).z), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(4.0), mix(float(_GLF_FUZZED(-820.959)), float(_GLF_FUZZED(4.0)), bool(true)))), vec2(_GLF_FUZZED(vec4(4.8, 3.1, 612.690, -9.5).z), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(vec4(4.8, 3.1, 612.690, -9.5).z), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), true), false, true))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(vec4(4.8, 3.1, 612.690, -9.5).z), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).x)) > injectionSwitch.y, false, false, false))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-1.4)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)), true, true, true))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bool(! (! (! (! (false))))))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bool(! (! (! (! (false)))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bool(! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))), false, false)), (bool(bvec3(! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bool(! (! (! (! (false)))))))), false, false))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) * uvec3(1u, 1u, 1u)))), 0u))) / uvec3(1u, 1u, 1u)).x) >> _GLF_IDENTITY(0u, ~ (~ (0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, true)))))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true)))), (true ? float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true)))) : _GLF_FUZZED(4.6))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), abs(1.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, length(abs(vec2(0.0, 0.0))), 0.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            barrier();
           barrier();
          }
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.72), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((float(192529u) * 8826.3336))), bvec2(_GLF_IDENTITY(true, bool(bool(true))), false))).y)) || (false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) || _GLF_IDENTITY(false, false || (false))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3162.4338)), bool(false))) > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))), false)), false || (bool(bvec4(false, false, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(728.660) : injectionSwitch.y)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.36)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), false, false)))) || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))), (! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)), false || (_GLF_IDENTITY(false, false || (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))), bool(bvec4((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) ^ 0u), _GLF_IDENTITY(uint(workgroup_base), max(_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), 0u | (uint(workgroup_base))), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u)))) << 0u)) | ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), uint(workgroup_base))), uint(workgroup_base), uint(workgroup_base))))), uint(workgroup_base))))) ^ 0u))))) | 0u)) + 0u) + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) * 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, true, false))) && (_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), min(0 ^ (4), _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) / 1)))), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) + 0))) * 1)) | 0)))) | (~ (0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), clamp(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0)))) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), (ivec4(0, 0, 1, 0)) | (ivec4(0, 0, 1, 0))))) ^ (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) + 0))) * 1)) | 0)))) | (~ (0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), clamp(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0)))) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), (ivec4(0, 0, 1, 0)) | (ivec4(0, 0, 1, 0))))) ^ (4)))), min(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) + 0))) * 1)) | 0)))) | (~ (0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), clamp(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0)))) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), (ivec4(0, 0, 1, 0)) | (ivec4(0, 0, 1, 0))))) ^ (4)))), ~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) + 0)), ((_GLF_IDENTITY(~ (0), (~ (0)) + 0))) * 1)) | 0)))) | (~ (0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), clamp(ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0), ivec4(0, _GLF_IDENTITY(0, 0 | (0)), 1, 0)))) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), (ivec4(0, 0, 1, 0)) | (ivec4(0, 0, 1, 0))))) ^ (4)))))))) << 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))))))), (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
  }
}
