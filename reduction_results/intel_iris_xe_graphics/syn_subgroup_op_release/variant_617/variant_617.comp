#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(((bool(bvec4((bool((! (! (bool(false)))))), true, true, false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false)) && true))
  return;
 if((false))
  return;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = (((true ? uint(uvec2(subgroup_size, 0u)) : (180786u))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = (uvec3(uvec4(gl_NumWorkGroups, (0u | 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if(((bool(bvec3(false, false, ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((true && (((((bool((bvec2(bvec3(bvec2(false, false), false))))) || false))))))
  return;
 uint workgroup_base = (~ (~ (workgroup_size))) * workgroup_id;
 uint virtual_gid = workgroup_base + ((subgroup_id) ^ (clamp(0u, 0u, ((false ? (workgroup_id) : 0u))))) * (~ (~ ((min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))))).x + subgroup_local_id;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 uint next_virtual_gid = (uint(uvec3(workgroup_base, (1u & 1u), 0u))) + (0u | (subgroup_id)) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + (((max((0u + (((subgroup_local_id + (clamp(((1) << (0 | ((((int((injectionSwitch.y)) * (min(0, ((0 | ((max((0) | (0), (0) | (0))))))))))) | int((injectionSwitch.x))))), 1, (clamp(((1) + 0), ((((1) ^ 0)) + 0), (int((min(ivec4(((((max((((1) + 0)), (((1) + 0))))) | ((((1) + 0)))) | 0), 0, 0, 1), ivec4(((((((1) / 1)) + 0)) | 0), 0, 0, 1)))))))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), ((((min((subgroup_local_id + (((clamp((((int(int(1)))) << (0 | 0)), 1, (clamp(((1) + 0), ((((1) ^ 0)) + 0), ((((1) + 0)) | 0)))))) | 0)), (1u * ((subgroup_local_id + ((int(((ivec4(((clamp((((int(int(1)))) << (0 | 0)), 1, (clamp(((1) + 0), ((((1) ^ 0)) + 0), ((((1) + 0)) | 0)))))) | 0, 1, 0, 1)) / ivec4((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) + 0u)))) | 0u);
 if((false))
  return;
 ((true ? buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1 : (((true ? (true ? next_virtual_gid : ((false ? (subgroup_id) : (((1u * (0u >> (uint(7u))))) | ((workgroup_size << num_workgroup)))))) : (49693u))))));
 if(subgroup_local_id + 1 < ((true ? GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid : ((num_workgroup / uvec2(85006u, 177043u))))).x)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(((((((bool((false || ((! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
    {
     if((false))
      {
       if((((injectionSwitch.x > (vec2(mat2((min(injectionSwitch, injectionSwitch)), 1.0, sqrt(1.0)))).y))))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[(((~ (~ ((1u * (((((~ ((0u ^ ((1u * (((uint((injectionSwitch.y)) * (clamp((~ (~ (~ ((next_virtual_gid))))), (((~ (next_virtual_gid)) - 0u)), ((~ ((((clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid))))) | (~ (~ (next_virtual_gid))))))))))))))))) << (0u | 0u))) ^ 0u)))))) * 1u))], uint(2), 4, ((64) >> 0), (clamp(4, 4, (clamp(4, ((4) ^ 0), 4)))));
   subgroupAll(true);
   if((false))
    return;
   if(((! ((bool(bvec4(! ((! (! ((bool((bvec3(bvec4(bvec3(((((((min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (((injectionSwitch.x > ((injectionSwitch.y) - abs(0.0))))))) || false), true, ((((false ? (- 461.330) : (1.0 * ((1.0 * ((min((max((mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))), (mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))))), (clamp((max((mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))), (mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))))), (max((mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))), (mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))))), (max((mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))), (mix(float((64.47)), float(injectionSwitch.x), bool((bool(bvec4(true, false, false, true)))))))))))))))))) < injectionSwitch.y))), false))))))))), true, false, false)))))))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
  }
}
