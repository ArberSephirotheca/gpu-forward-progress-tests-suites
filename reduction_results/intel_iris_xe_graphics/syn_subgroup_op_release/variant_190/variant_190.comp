#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.y = workgroup_size;
 uint workgroup_id = ((gl_WorkGroupID.x) ^ 0u);
 uint workgroup_base = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.y * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * (~ (~ ((((0u | (((subgroup_size)) | ((subgroup_size)))))) ^ 0u))) + subgroup_local_id;
 if((bool(bvec4((false), (bool((bvec2(bvec4(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))), (false || (true)), true))))), false, true))))
  return;
 uint next_virtual_gid = workgroup_base + (max((min(subgroup_id * (clamp(subgroup_size, (clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_id * (clamp(subgroup_size, (clamp(((false ? ((uint((~ (~ (uint(workgroup_size))))))) : subgroup_size)), subgroup_size, subgroup_size)), subgroup_size)))), subgroup_id * (clamp(subgroup_size, (clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)))) + (uint(uvec2((((~ (~ ((((max(subgroup_local_id + 1, (max((clamp((min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), ((((true ? (1u * (subgroup_local_id)) : (num_workgroup))) - uint((injectionSwitch.x)))))) + 1))) ^ 0u))))) % (max(subgroup_size, subgroup_size))), 0u)));
 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x = next_virtual_gid;
 if((false))
  barrier();
 ((buf[virtual_gid] = 1) << (max(0u, 0u)));
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((! (bool(bvec4(((false || (((! (! ((! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false))), false, true, true))))))))
    barrier();
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x], (clamp((clamp(uint((0 ^ (((2) ^ (0 << (((int(0))) + 0)))))), uint(((2) ^ (0 << (int(0))))), uint(((2) ^ (0 << (int(0))))))), uint(((2) ^ (0 << (((0 | ((int(((0) | (0)))) >> 0))))))), uint(((2) ^ (0 << (int(0))))))), 4, (max(((64) | ((min(64, 64)))), 64)), ((min((4), (4))) | (4)));
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size.x], ((true ? uint(2) : (workgroup_size))), 4, 64, 4);
   subgroupAll(true);
   if((false))
    {
     if((((false)) || false))
      barrier();
     return;
    }
   if((((false)) && true))
    return;
  }
}
