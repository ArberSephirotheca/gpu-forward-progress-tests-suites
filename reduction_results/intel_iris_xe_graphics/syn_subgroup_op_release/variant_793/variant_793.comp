#version 460

struct _GLF_struct_11 {
 mat3 _f0;
 uint _f1;
 mat3x2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 bvec4 _f1;
 mat2 _f2;
 bvec3 _f3;
 mat4 _f4;
 float _f5;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 bool _f2;
 vec4 _f3;
 int _f4;
 mat2x4 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 mat4 _f1;
 _GLF_struct_7 _f2;
 mat3x2 _f3;
 mat2 _f4;
 mat3x2 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uvec2 _f1;
 vec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 uint _f0;
 _GLF_struct_3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_8 _f3;
 float _f4;
 mat3x4 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_1 {
 uint workgroup_size;
 _GLF_struct_0 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((! (! (! (! (! (! ((false || (((true && ((false)))))))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((false)) && true))
  {
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat3x2(1.0), _GLF_struct_4(1u, _GLF_struct_3(mat4x2(1.0), uvec2(1u), ((false ? (vec3(31.18, - 638.587, 433.999)) : vec3(1.0))), true), mat3(1.0)), _GLF_struct_5(bvec4(true)), _GLF_struct_8(_GLF_struct_6(true, mat3x2(1.0)), mat4((max(1.0, 1.0))), _GLF_struct_7(1.0, ((((injectionSwitch.x > injectionSwitch.y)) ? (((mat3(- 49.18, 59.71, - 1.6, - 36.11, - 299.275, 5684.1016, 5578.9495, - 3855.8790, - 523.309)) * mat3(1.0))) : mat3(1.0))), mat4x2(1.0)), mat3x2(1.0), mat2(((clamp(((true ? mix(float(((- 9.2 / - 3.3))), float((mix(float((59.40)), float(((1.0) - 0.0)), bool(true)))), bool(true)) : (4.3))), mix(float(((- 9.2 / - 3.3))), float((mix(float((59.40)), float(((1.0) - 0.0)), bool(true)))), bool(true)), (mix(float(mix(float(((- 9.2 / - 3.3))), float((mix(float((59.40)), float(((1.0) - 0.0)), bool(true)))), bool(true))), float((433.516)), bool(((injectionSwitch.x > injectionSwitch.y))))))))), mat3x2(1.0), gl_SubgroupSize), 1.0, mat3x4(1.0), _GLF_struct_12(_GLF_struct_9(bvec2(true), mat3x2(1.0)), _GLF_struct_10(mat3x2(1.0), bvec4(true), mat2(1.0), bvec3(true), mat4((min(1.0, 1.0))), 1.0), (true && (true)), vec4(1.0), 1, mat2x4(1.0), _GLF_struct_11(mat3(1.0), ((1u) | (1u)), mat3x2(1.0), vec3(1.0))));
 if((false))
  barrier();
 if((((false)) && true))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))) && true)))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if(((bool(bool(false)))))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((false) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(gl_WorkGroupSize.x, _GLF_struct_0(uvec3(((1u) >> (0u << (uint(3u))))), uvec2(1u)), bvec2(true)));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_2._f0.workgroup_size * (~ (~ ((((uint(uvec3(uint(uvec3((workgroup_id) - 0u, 1u, 1u)), 1u, uint((injectionSwitch.x))))))))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = (((((~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_13._f3.subgroup_size)))) << 0u)) / 1u) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bvec4(true, true, false, false))) && (false))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false || (((! (! (((false) || false))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((! (! (bool(bvec4(false, true, false, true))))))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + ((subgroup_id) | (subgroup_id)) * _GLF_struct_replacement_13._f3.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_13._f3.subgroup_size);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if(((bool(bvec4(false, false, true, true)))))
    barrier();
  }
 if(((! ((true && (! (false)))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch) / vec2((injectionSwitch.y), (injectionSwitch.y))).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((false || ((! (! ((false || ((! ((! ((bool(bool(! (! (false || ((! (! (((true && ((bool(bvec4(false, false, ((((false) || false)) && true), false))))))))))))))))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((true && ((! (! (false)))))))
  {
   if((false))
    barrier();
   if(((((((bool(bvec4(false, false, true, false))) || ((! (! (false))))) || (false))) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((bool(bool(false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(((((bool(bvec4((((false || (((! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))) || false), true, ((injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((true && (false))))
    barrier();
   if(((bool(bvec2(false, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((! (! ((false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((false || (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((true && ((bool(bvec2((! (! (false))), true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(((((float(vec4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if((((false || ((false || (! ((! (! (! (false))))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < (clamp(_GLF_struct_replacement_13._f3.subgroup_size, _GLF_struct_replacement_13._f3.subgroup_size, _GLF_struct_replacement_13._f3.subgroup_size)))
  {
   if((false))
    {
     if(((! ((! (! (! (false))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((false) || false)))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((false) && true)))
    barrier();
   if((((bool((bvec3((bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((injectionSwitch.x < injectionSwitch.y)))), false))))))))))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((false) || false)))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((bool(bool((true && ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(((bool(bvec4(false, false, false, ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if((false || (((((mix(vec2((mix(float((83.94)), float((6.0)), bool(true))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (368.505)), bvec2(true, false))).x > injectionSwitch.y))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false) && true)))
      {
       if(((((false || ((! ((((injectionSwitch.x > injectionSwitch.y)) || (! ((! (! (((true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, (min(((int(ivec2((clamp((64), (64), (64))), 1))) ^ 0), 64)), 4);
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y) && (((! (! ((((bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))) || false))))))))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > (vec2((injectionSwitch.y), (injectionSwitch.y)) * (((injectionSwitch) - vec2(0.0, 0.0)))).y))))
      {
       if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((bool((bvec2(bvec4(bvec2((false), false), false, true))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((true && (false))))
        barrier();
       if((! (! ((false)))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((! (! ((false || ((injectionSwitch.x > (max(((true ? (max(injectionSwitch.y, injectionSwitch.y)) : (2.4))), injectionSwitch.y)))))))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((true && (false))))
          barrier();
        }
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > (clamp((mix(float((256.676)), float(injectionSwitch.y), bool(((injectionSwitch.x < (exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))))), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(((bool(bvec2((((((! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), true)))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(((((! ((false || (! (false))))) && true))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
 if((((bool(bvec4((! (! (((((! (! ((bool(bvec2(false, false))))))) && true))))), false, false, true))) && true)))
  {
   if((((false) && true)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((! (! ((((! (! (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, (! (! ((true && (false))))))))))))))))
    barrier();
   if((((injectionSwitch.x > (min((max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((((vec2(mat2x3(injectionSwitch, (max(((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0))))), 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false))
  barrier();
 if((false || ((((true && ((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(((true && ((bool(bool(((false) && true))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((bool(bvec2((! (! (true && ((bool(bvec2(false, true))))))), ((injectionSwitch.x < injectionSwitch.y))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((false || (false))))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 304.984)), bool(false)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (! (((((! (! (! (false)))))) && true)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
}
