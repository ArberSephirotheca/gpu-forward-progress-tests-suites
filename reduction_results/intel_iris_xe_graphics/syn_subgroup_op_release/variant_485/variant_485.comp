#version 460

struct _GLF_struct_11 {
 mat4x2 _f0;
 uint subgroup_local_id;
 vec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 mat4 _f1;
 mat2 _f2;
 mat3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 bvec3 _f1;
 ivec2 _f2;
 int _f3;
 vec2 _f4;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 mat2x3 _f1;
 _GLF_struct_3 _f2;
 uvec2 _f3;
 uint workgroup_size;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
 _GLF_struct_9 _f2;
 mat2 _f3;
 vec2 _f4;
 bool _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 ivec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint subgroup_size;
 bool _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(1u, _GLF_struct_0(mat2x3(1.0), ivec4(1), mat4(1.0))), gl_SubgroupSize, true);
 if(((bool(bvec4(false, false, true, false)))))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat4x2(((false ? (clamp(- 1402.3605, 9.1, 137.957)) : 1.0))), gl_SubgroupInvocationID, vec3(1.0), (exp(vec3(0.0, (min(0.0, (min((float(vec2(0.0, 1.0))), 0.0)))), 0.0)) * (clamp(((((max(vec3(1.0), vec3(1.0)))) - vec3(0.0, 0.0, 0.0))), ((max(vec3(1.0), (clamp(vec3(1.0), vec3(1.0), vec3(1.0)))))), (vec3(mat2x3(((max(((true ? vec3(1.0) : (vec3(5.6, 72.41, - 5489.4105)))), vec3(1.0)))), 1.0, 0.0, 1.0)))))));
 uint num_workgroup = (0u ^ (((gl_NumWorkGroups.x) ^ 0u)));
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(ivec2(1), mat2x3(1.0), _GLF_struct_3(uvec2(1u)), uvec2(1u), gl_WorkGroupSize.x, _GLF_struct_4(mat2(1.0))), mat2x3(1.0), _GLF_struct_9(vec4((float(vec3(1.0, sin(0.0), 0.0)))), uvec4(1u), mat4x3(1.0), _GLF_struct_6(mat2(1.0), 1), _GLF_struct_7(ivec2(1), bvec3(true), ivec2(1), 1, vec2(1.0)), _GLF_struct_8(mat2(1.0), ((true ? mat4(1.0) : (mat4(mat4x3(586.698, 1369.0895, 787.008, 991.589, - 0.5, 789.581, 1.9, - 43.54, - 8.9, 9.9, - 0.6, - 7.1))))), mat2(1.0), mat3(1.0), mat4x2(1.0))), mat2(1.0), vec2(1.0), (! (((((! (true))) || false) && true))), mat4x3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_10._f0.workgroup_size * (((uint(uint((uint(uvec3(workgroup_id, 0u, 1u)))))) / 1u));
 uint virtual_gid = workgroup_base + ((((false ? ((~ (~ (~ (workgroup_base))))) : subgroup_id))) - 0u) * _GLF_struct_replacement_2.subgroup_size + _GLF_struct_replacement_11.subgroup_local_id;
 if((((injectionSwitch.x > (vec2(((true ? injectionSwitch[0] : (- 1.8))), injectionSwitch[1])).y))))
  return;
 uint next_virtual_gid = (((((((((~ (((~ (workgroup_base + subgroup_id * _GLF_struct_replacement_2.subgroup_size + ((((((_GLF_struct_replacement_11.subgroup_local_id + 1) | 0u)) ^ 0u)) % (~ (~ (_GLF_struct_replacement_2.subgroup_size)))))) | (~ (((workgroup_base) / uint((injectionSwitch.y))) + ((subgroup_id) << 0u) * _GLF_struct_replacement_2.subgroup_size + ((_GLF_struct_replacement_11.subgroup_local_id + 1) % ((~ (~ (~ (~ (_GLF_struct_replacement_2.subgroup_size)))))))))))) | (((~ (((~ (workgroup_base + subgroup_id * _GLF_struct_replacement_2.subgroup_size + ((_GLF_struct_replacement_11.subgroup_local_id + 1) % (~ (~ (_GLF_struct_replacement_2.subgroup_size)))))) | (~ (workgroup_base + ((subgroup_id) << 0u) * _GLF_struct_replacement_2.subgroup_size + ((max((1u * ((_GLF_struct_replacement_11.subgroup_local_id + 1) % (~ (~ (_GLF_struct_replacement_2.subgroup_size))))), (((_GLF_struct_replacement_11.subgroup_local_id + 1) % (~ (~ (_GLF_struct_replacement_2.subgroup_size)))) - 0u))))))))) / 1u))) | 0u)) / 1u)))) / uint((injectionSwitch.y)));
 buf[virtual_gid] = ((1) >> 0);
 do
  {
   if(_GLF_struct_replacement_11.subgroup_local_id + 1 < _GLF_struct_replacement_2.subgroup_size)
    {
     atomicStore(buf[((((((true ? ((clamp(clamp(false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid)), ((false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))) * ((1u << (uint(1u))) >> (uint(1u)))), false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))), clamp(false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid)), ((false ? (workgroup_base) : ((clamp((max(clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid), clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))), clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid), clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))))) * ((1u << (uint(1u))) >> (uint(1u)))), false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))), ((clamp(false ? (((~ ((min(~ (uint((uvec2(0u, 0u) | (((uvec2(workgroup_base, 0u)) | (uvec2(workgroup_base, 0u))))))), ~ (uint((uvec2(0u, 0u) | (((uvec2(workgroup_base, 0u)) | (uvec2(workgroup_base, 0u))))))))))))) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid)), ((false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid))) * (((clamp(1u, 1u, 1u)) << (uint(1u))) >> (uint(1u)))), false ? (workgroup_base) : (clamp((clamp(next_virtual_gid, next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)))), next_virtual_gid, next_virtual_gid)))) << 0u)))) : (next_virtual_gid))) - uint((injectionSwitch.x))))))], uint((min((((0 >> (int(2))) | 0) ^ (2)), (((((0 >> (int(2))) | 0) ^ (2))) | ((((0 >> (int(2))) | 0) ^ (2))))))), 4, 64, 4);
     subgroupAll(false);
    }
   else
    {
     atomicStore(buf[(0u + (next_virtual_gid))], uint(2), 4, (clamp((min(64, 64)), (0 ^ (((64) | 0))), 64)), 4);
     do
      {
       subgroupAll((((true && ((false || (true && ((bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), (! ((! (((! (! (false))) || false))))), true, true))))))))) && ((bool(bool(true))))));
      }
     while((((min((min(injectionSwitch.x, injectionSwitch.x)), ((injectionSwitch.x) / 1.0))) > injectionSwitch.y)));
    }
   if(((! (! ((! ((! (! ((bool(bvec2((! (! ((bool(bvec4((! (! ((bool(bvec4(! (((false)) || false), false, true, true)))))), false, false, false)))))), false)))))))))))))
    return;
  }
 while((((! (((! ((bool(bvec4(false, false, true, true)))))) && true))) && true));
}
