#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = (((((~ (~ ((((~ (~ (subgroup_size))))) << ((clamp((0u + ((min((uint((injectionSwitch.x))) ^ 0u, (uint(uint((uint((injectionSwitch.x))) ^ 0u))))))), (0u + ((min((uint((injectionSwitch.x))) ^ 0u, (uint(uint((uint((injectionSwitch.x))) ^ 0u))))))), (0u + ((min((uint((injectionSwitch.x))) ^ 0u, (uint(uint((uint((injectionSwitch.x))) ^ 0u))))))))))))) - 0u)) | (~ (~ ((((~ (~ (subgroup_size))))) << ((0u + ((min((uint((injectionSwitch.x))) ^ 0u, (uint(uint((uint((injectionSwitch.x))) ^ 0u)))))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = (~ (~ ((max((0u | (min(((((clamp(workgroup_id, workgroup_id, workgroup_id)) << uint((injectionSwitch.x))))), ((((0u | (((true ? (clamp(workgroup_id, (min(workgroup_id, (((0u + (workgroup_id))) | (workgroup_id)))), workgroup_id)) : (subgroup_local_id))))))) ^ 0u)))), (0u | (min(((((clamp(workgroup_id, workgroup_id, (~ (~ (workgroup_id))))) << uint((injectionSwitch.x))))), (((((true ? (clamp(workgroup_id, workgroup_id, workgroup_id)) : (subgroup_local_id))))) ^ 0u)))))))));
 uint workgroup_base = ((true ? (~ (~ (((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) >> uvec3(0u, 0u, 0u))))) : (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size))).z * (min(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)).y;
 (1u * ((0u ^ (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = (0u ^ ((max((((0u + (((((injectionSwitch.x < injectionSwitch.y)) ? (1u * (((true ? (~ (((~ (workgroup_base)) * 1u))) : (subgroup_size))))) : (subgroup_size)))))) << uint((injectionSwitch.x))), (((! (((! (true)) && true))) ? (~ (min((max((((~ (workgroup_base)) * 1u)), (((~ (workgroup_base)) * 1u)))), (((~ (workgroup_base)) * 1u))))) : (subgroup_size)))))))))));
 uint virtual_gid = (~ (((~ (((((0u | ((((((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * (((uvec3(1u, 1u, (((~ ((max(((~ ((min(1u, 1u)))) | 0u), ~ ((min(1u, 1u)))))))) ^ uint((injectionSwitch.x)))) * (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size))) ^ uvec3(0u, 0u, 0u)).x + ((subgroup_local_id) | (((true ? subgroup_local_id : ((((num_workgroup --))) + 0u))))))) | 0u)) ^ 0u)))) * 1u)) / ((1u << (uint(6u))) >> (uint(6u))))) << 0u)));
 uint next_virtual_gid = ((true ? GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) / (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))).x : ((1u * (0u | ((0u ^ ((uaddCarry(subgroup_id, (clamp(num_workgroup, ((false ? (subgroup_id) : (~ ((min(~ (num_workgroup), ~ (num_workgroup))))))), (~ (((~ ((0u | (((false ? (170416u) : num_workgroup)))))) ^ (0u | (0u))))))), virtual_gid)))))))))) + ((uint(uvec3(((((uint(uvec3((((clamp((max(subgroup_local_id + 1, (0u ^ (subgroup_local_id + 1)))), (((max(subgroup_local_id + 1, (0u ^ (subgroup_local_id + 1))))) << 0u), (max(subgroup_local_id + 1, (0u ^ (subgroup_local_id + 1)))))) | (max(subgroup_local_id + 1, (0u ^ ((min(subgroup_local_id, (~ (((~ (subgroup_local_id)) | 0u))))) + 1)))))), 0u, ((1u << ((~ (~ (uint(1u)))))) >> (uint(1u)))))) * 1u))), (1u & 1u), uint((injectionSwitch.y))))) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x);
 (uint((injectionSwitch.x)) | ((~ (((~ (((true ? buf[virtual_gid] = 1 : (workgroup_size))))) / 1u)))));
 if(((((((true ? ((((subgroup_local_id) >> 0u)) / 1u) : (workgroup_base)))) << 0u) + (min(((1) >> ((0) - 0)), (((((min(1, 1))) - 0)) >> 0)))) | ((~ (~ ((((((0u | (((true ? subgroup_local_id : (min((workgroup_base), (workgroup_base)))) | (true ? subgroup_local_id : (min((workgroup_base), (workgroup_base)))))))))) << 0u) + (min(((1) >> 0), ((1) >> 0)))))))) < (~ (~ (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x))))
  {
   atomicStore(buf[((((0u ^ ((uint(uvec2((~ (~ ((1u * ((~ (~ (uint(uvec3((((((((((0u ^ (next_virtual_gid))) ^ ((1u | 1u) ^ ((1u) | ((max(1u, 1u))))))) - 0u)) / 1u)) | 0u), 1u, 1u)))))))))), 1u))))))) | ((0u) | (0u)))], uint((max((~ (~ (2))), ((2) ^ 0)))), (max(4, (~ (~ (4))))), 64, (~ (~ ((max(((false ? (- 52595) : 4)), 4))))));
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(((((bool(bool(! ((bool(bvec4(! (true), (((injectionSwitch.x < injectionSwitch.y)) && ((bool((bvec3(bvec3(bvec3(true, true, false)))))))), ((injectionSwitch.x > injectionSwitch.y)), false)))))))) || false)));
  }
}
