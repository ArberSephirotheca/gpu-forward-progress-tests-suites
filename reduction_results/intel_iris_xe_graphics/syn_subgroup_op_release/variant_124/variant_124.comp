#version 460

struct _GLF_struct_12 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat4 _f1;
 int _f2;
 mat2x4 _f3;
 mat4x2 _f4;
 uvec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat3 _f2;
 uvec2 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 mat2 _f1;
 mat4x2 _f2;
 _GLF_struct_7 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 ivec2 _f1;
 mat3 _f2;
 uint _f3;
 vec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_3 {
 uint _f0;
 vec4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat3 _f1;
 uvec3 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec4 _f1;
 mat3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_8 _f3;
 mat4 _f4;
 uint subgroup_size;
 _GLF_struct_13 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((! (((! ((! ((false || (! ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) || false)))))))
  return;
 if((true && ((false))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
   if((((! (((! (bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))) && ((injectionSwitch.x < injectionSwitch.y))))))))
    return;
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(_GLF_struct_0(bvec2((bool(bvec3((bool(bvec4(true, false, false, true))), true, true)))), bvec4(true), mat3(1.0), mat3(1.0)), uvec2(1u)), mat2x3(1.0), _GLF_struct_5(mat4x2(1.0), _GLF_struct_2(1, mat3(1.0), (clamp(uvec3(1u), uvec3(1u), uvec3(1u))), mat4x3(1.0), uvec2(1u)), _GLF_struct_3((0u + ((((true ? (1u) / 1u : (subgroup_id)))))), (min(vec4((mix(float(((((mix(float(float(mat3x4(true ? (float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : (43.67), 1.0, log(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, sqrt(0.0), 1.0, log(1.0)))), float((- 7.6)), bool(false))))))), float((vec2(4870.1657, 19.46).g)), bool(false)))), vec4(1.0))), mat4x2(1.0), bvec2(((true) || false)), mat4x2(1.0)), _GLF_struct_4(ivec3(1), ivec2(1), mat3((min((mix(float((((- 332.347) * round(length(normalize(vec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))))))), float(((((dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (1.0))) + determinant(mat2((injectionSwitch.x), 0.0, log(1.0), 0.0)))), (((injectionSwitch.x < injectionSwitch.y)) && ((((bool(bvec3(bool(true), false, false))) || false)))))), 1.0))), 1u, ((max(vec4(mat3x2(((true ? (vec4(1.0, 1.0, 1.0, 1.0) * (((true ? (mat4(1.0) * (((min((mat4(1.0) * ((vec4(1.0)) * mat4(1.0))), (vec4(1.0)) * mat4(1.0)))))) : (vec4(- 27.35, 6.6, 38.33, - 6380.3270)))))) : ((vec4(9.3, - 7.1, - 3.0, - 6.9))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), vec4(mat3x2(((true ? (vec4(1.0, 1.0, 1.0, 1.0) * (((true ? (mat4(1.0) * (((min((mat4(1.0) * ((vec4(1.0)) * mat4(1.0))), (vec4(1.0)) * mat4(1.0)))))) : (vec4(- 27.35, 6.6, 38.33, - 6380.3270)))))) : ((vec4(9.3, - 7.1, - 3.0, - 6.9))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), mat3x4(((1.0) / 1.0)))), _GLF_struct_8(_GLF_struct_6(vec2(1.0), true), mat2(1.0), mat4x2(1.0), _GLF_struct_7(mat3x2(1.0), uvec4(1u), bvec2(true), uvec4(1u)), ivec3(1)), mat4(1.0), gl_SubgroupSize, _GLF_struct_13(_GLF_struct_9(vec3(1.0), mat2x3(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_10(((ivec2(1)) ^ (ivec2(29319, 44500) & ivec2(0, 0)))), (((true ? mat3(mat4x3(mat3(1.0))) : ((mat3(3.3, 97.82, 89.80, - 1.3, - 8638.5191, - 8.3, 8.1, - 759.501, - 7.2) * mat3(3.1, - 3512.3588, 8.0, - 0.6, - 9752.4432, 9925.1686, 30.79, 3.4, - 16.62)))))), uvec2(1u), _GLF_struct_11(true, mat4(1.0), 1, mat2x4(1.0), mat4x2(1.0), uvec2(1u), ivec4(1)), _GLF_struct_12(true, mat3x2(1.0), mat2x3(((1.0) - 0.0)), ivec4(1), mat3x2(1.0)), mat4(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = ((((gl_NumWorkGroups.x) | ((((1u * (gl_NumWorkGroups.x))) - 0u)))) - 0u);
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if(((((clamp(injectionSwitch.x, injectionSwitch.x, (mix(float((- 7761.0821)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if(((false || (false))))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint workgroup_base = (0u + (workgroup_size)) * workgroup_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   if(((bool(bvec4((bool(bvec2(false, true))), false, false, true)))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if(((! (! (false)))))
        return;
       if((false))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = (((true ? clamp((((max(uint(((uint((workgroup_base + (((1u * (subgroup_id * (uint(uvec3(_GLF_struct_replacement_14.subgroup_size, 1u, 1u)))))) >> 0u) + subgroup_local_id))) / 1u)), uint(((uint((workgroup_base + (((1u * (subgroup_id * (uint(uvec3(_GLF_struct_replacement_14.subgroup_size, 1u, 1u)))))) >> 0u) + subgroup_local_id))) / 1u))))) << 0u), (uint(uvec3((max(workgroup_base + subgroup_id * (uint(uvec3(_GLF_struct_replacement_14.subgroup_size, 1u, 1u))) + subgroup_local_id, workgroup_base + subgroup_id * (uint(uvec3(((_GLF_struct_replacement_14.subgroup_size) << 0u), 1u, 1u))) + subgroup_local_id)), 1u, 0u))), workgroup_base + subgroup_id * (uint(uvec3(_GLF_struct_replacement_14.subgroup_size, 1u, 1u))) + subgroup_local_id) : (clamp((28058u), (28058u), (28058u))))));
 if((((! (! (bool(bvec3(false, true, true))))))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((((false || (false))) && true)))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + (min(subgroup_id * _GLF_struct_replacement_14.subgroup_size, subgroup_id * _GLF_struct_replacement_14.subgroup_size)) + ((subgroup_local_id + 1) % _GLF_struct_replacement_14.subgroup_size);
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((true && ((! (! ((false)))))))
  return;
 if((false))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_14.subgroup_size)
  {
   atomicStore(buf[(max(next_virtual_gid, (max((((0u | (next_virtual_gid))) >> 0u), next_virtual_gid))))], uint(2), 4, 64, (((min(4, 4))) - 0));
   if(((false || (false))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if(((true && (false))))
    return;
   if((false))
    return;
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      return;
     return;
    }
   subgroupAll(false);
   if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((bool(bvec3(false, true, false)))))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if(((((0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(((bool(bvec2((((injectionSwitch.x < injectionSwitch.y)) && (! (! ((bool(bvec3((false), true, false))))))), false)))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       if(((true && (false))))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((((mix(float((min(injectionSwitch.x, injectionSwitch.x))), float((52.06)), bool(false))) > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if(((true && ((((bool(bvec3(false, false, false))) && true))))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if(((((bool(bool(false))) && true))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
}
