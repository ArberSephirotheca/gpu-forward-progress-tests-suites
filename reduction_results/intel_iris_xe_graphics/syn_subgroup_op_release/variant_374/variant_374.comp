#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.w = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((vec2(- 6219.8198, 9.1).s)), bool(((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint workgroup_base = ((((((((min((((min((((((clamp((min(uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))))))) - uvec2(0u, 0u)) / uvec2(1u, 1u)), (uvec2(uvec2(((uvec2(0u, (uint((((mix(float((4.5)), float((injectionSwitch.x)), bool(true)))) - sin(0.0))) + (0u))) ^ ((uvec2(1u, 1u) << (uvec2(4u)))))) - uvec2(0u, 0u))))))) >> (uvec2(4u))), (((min((((((clamp((min(uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))), uvec2(0u, 0u) ^ ((uvec2(1u, 1u) << (uvec2(((false ? (subgroup_local_id) : 4u)))))))))) - uvec2(0u, 0u)) / uvec2(1u, 1u)), (uvec2(uvec2(((uvec2(0u, (uint((((mix(float((4.5)), float((injectionSwitch.x)), bool(true)))) - sin(0.0))) + (0u))) ^ ((uvec2(1u, 1u) << (uvec2(4u)))))) - uvec2(0u, 0u))))))) >> (uvec2(4u))))) * (min((GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy), (GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy))))) | (GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy)).y) >> 0u)) | 0u) * workgroup_id;
 ((((GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy.x = workgroup_base) * 1u)) - 0u);
 uint virtual_gid = (uvec2(uvec2(GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy))).x + ((0u >> ((~ (~ (uint(8u)))))) ^ (((min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) >> 0u))) + subgroup_local_id;
 uint next_virtual_gid = (max((~ ((((0u ^ (~ (GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy.x)))) - 0u))), GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.xy.x)) + (((0u) | 0u) + ((max(((subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)))) + ((uint(uvec4((((false ? (subgroup_id) : subgroup_local_id)) + 1) % subgroup_size, (((((0u ^ 1u) | (0u ^ 1u))) | (0u ^ 1u))), 1u, ((0u) << 0u)))));
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.z = next_virtual_gid;
 if((false))
  return;
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.z], (((~ (((max(0u ^ ((clamp(~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u)))))))), (min(0u ^ ((clamp(~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u)))))))), 0u ^ ((clamp(~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))), ~ (uint(uint(uint(uvec2((uint(uint(uint(2)))), 0u))))))))))))))))), 4, 64, (~ (~ ((int(ivec4(4, 1, 0, 0)))))));
   subgroupAll(false);
  }
 else
  {
   if((true && (((bool(bvec4(false, false, (true && (true)), true)))))))
    return;
   atomicStore(buf[GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidnum_workgroup.z], uint(2), 4, 64, 4);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((((mix(float((- 2.8)), float((float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, (injectionSwitch.x), 1.0, 1.0, 1.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), bool(true))) > (max((max((float(vec4(((false ? (vec2(- 74.98, - 45.74)) : injectionSwitch)).y, 0.0, 0.0, 1.0))), ((false ? (vec2(- 74.98, - 45.74)) : injectionSwitch)).y)), ((false ? (vec2(- 74.98, - 45.74)) : injectionSwitch)).y))))) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     return;
     if((false))
      return;
    }
   subgroupAll((((((injectionSwitch.x > injectionSwitch.y)) || (true))) && true));
  }
}
