#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((! (! ((! (! ((false))))))))
  {
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   return;
  }
 if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > (min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((bool(bvec4((false), true, true, true))))
  {
   if(((false || (false))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   return;
   if((((((true && (bool(bool(false))))) && true))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if(((((mix(float(((false ? (1.8) : (((clamp((min(((injectionSwitch.x) - 0.0), ((injectionSwitch.x) - 0.0))), ((injectionSwitch.x) - 0.0), ((injectionSwitch.x) - 0.0))) / 1.0))))), float((7.4)), bool(false))) > injectionSwitch.y))))
  {
   if((! ((! (! (! ((false))))))))
    return;
   if((((! (! (((bool(bvec3(false, (((injectionSwitch.x > injectionSwitch.y)) || ((! (! (((true) && true)))))), false))) || false)))))))
    {
     if((false))
      return;
     if(((false || (false))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = ((min(((((((((((uvec3((~ (~ (uvec3(gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) << uvec3(0u, 0u, 0u))) / uvec3(1u, (min(1u, 1u)), 1u))) | ((((((max(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))), (((gl_NumWorkGroups) | (((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u)).x;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((((false || (((((mix(float((955.322)), float(injectionSwitch.x), bool(((injectionSwitch.x < injectionSwitch.y))))) > (0.0 + (injectionSwitch.y))))) || false)))) && true)))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     if(((bool(bvec4(false, false, false, false)))))
      return;
     return;
    }
   if(((false || ((bool(bool(false)))))))
    return;
   if((! ((! (! (! ((! (! (((((! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if(((bool(bvec4(false, false, true, false)))))
  return;
 if((((injectionSwitch.x > (((((((mix(float((((min(((true ? injectionSwitch : (vec2(((((true ? (max((min(484.817, 484.817)), ((484.817) / (0.0 + (((determinant(mat2(1.0, 0.0, 0.0, 1.0))) / 1.0)))))) : (log(- 0.8)))) - 0.0)), 10.40)))), ((((false ? (injectionSwitch) : (vec2(0.0, 0.0) + (mat2(1.0) * (vec2(vec2(injectionSwitch)))))))))))) - vec2(0.0, 0.0)).x), float(((max(- 9.5, - 9.5)))), bool(false))) < ((injectionSwitch) / vec2(1.0, 1.0)).y) && true))) ? injectionSwitch.y : ((((true && ((! (! (((injectionSwitch.x < injectionSwitch.y))))))) ? (((clamp(vec4(- 14.15, ((- 808.301) - 0.0), (0.0 + (46.75)), 49.65), vec4(- 14.15, - 808.301, 46.75, 49.65), vec4(- 14.15, - 808.301, 46.75, 49.65)))) + (vec4(1.0, 1.0, 1.0, 1.0) * (((((vec4(((min((0.0), ((true ? (0.0) : (- 4.9))))) - 0.0), 0.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))) : (vec4((min(- 1871.7770, - 1871.7770)), 39.25, 57.20, 2.1))))[3])))))))
  return;
 if((true && ((false))))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((((false || ((false) && true)))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((bool(bool((bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if(((bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((! ((! (! ((bool(bool(! (! (! (((bool(bvec3((false), false, false))))))))))))))))
    {
     if((true && ((((false)) || false))))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > (((true && (true)) ? ((((injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y : (5.9)))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint virtual_gid = (((uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u))) | ((clamp(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u)), ((uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u))) | (uint(uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u)))))))));
 uint next_virtual_gid = workgroup_base + ((subgroup_id) / 1u) * subgroup_size + (((uint(uvec2((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1u))) + ((1) << 0)) % subgroup_size);
 ((buf[virtual_gid] = 1) >> (~ ((max((0u | (~ (0u))), ~ (0u))))));
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((false ? (subgroup_size) : subgroup_local_id + 1)) < ((uint(uvec2(uint(uvec4(subgroup_size, 0u, 1u, 0u)), 0u)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((! (! ((true && ((false)))))))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    return;
   if(((! (! ((true && (false)))))))
    return;
   subgroupAll((false || (false)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 else
  {
   if((! (! ((((bool(bool(((((! ((false || (! (((min(vec2(injectionSwitch[0], ((min(clamp(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, (clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), injectionSwitch))), clamp(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, (clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), injectionSwitch))))))[1]), vec2(injectionSwitch[0], ((min(clamp(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, (clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), injectionSwitch))), clamp(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, (clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), injectionSwitch))))))[1])))).x > (mix(vec2((min((injectionSwitch)[0], (max((injectionSwitch)[0], (injectionSwitch)[0])))), (- 748.811)), vec2((float(91307)), (injectionSwitch)[1]), bvec2(false, (false || (true))))).y))))))))))) && true))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if(((! (! ((false || (false)))))))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    return;
   subgroupAll(true);
   if(((((float((mix(vec3(((mix(vec3((vec3((max(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))[0], (- 42.61), (4.4)), vec3((- 908.956), (vec3((max(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, ((0.0) - 0.0), 1.0, 1.0))))[1], (vec3((max(injectionSwitch.x, ((injectionSwitch) * mat2(1.0)).x)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))[2]), bvec3(false, true, ((((injectionSwitch.x < injectionSwitch.y))) || false)))))[0], (- 7.9), (- 5.8)), vec3((- 90.91), (vec3((max(injectionSwitch.x, injectionSwitch.x)), (clamp((max(1.0, 1.0)), 1.0, ((1.0) / 1.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))[1], (vec3((max(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))[2]), bvec3(false, true, true))))) > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((bool(bvec3(bool(false), false, false)))))))
    return;
  }
 if((false || ((false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
}
