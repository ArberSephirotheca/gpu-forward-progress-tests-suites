#version 460

struct _GLF_struct_8 {
 float _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 mat2x3 _f3;
 int _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 int _f1;
 uvec2 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_5 {
 bool _f0;
 int _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 _GLF_struct_5 _f1;
 mat3x2 _f2;
 _GLF_struct_7 _f3;
 vec3 _f4;
 _GLF_struct_9 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec3 _f1;
 uvec2 _f2;
 mat4 _f3;
 mat3x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 vec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_3 {
 uint subgroup_local_id;
 uvec4 _f0;
 ivec3 _f1;
 _GLF_struct_0 _f2;
 bvec2 _f3;
 _GLF_struct_1 _f4;
 uvec4 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 bvec3 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (((max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    {
     if(((((min((mix(float(injectionSwitch.x), float((- 54.86)), bool(false))), ((injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(((! (false || ((! (false)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((mix(vec2((494.206), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (624.089)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y)))))).x > ((injectionSwitch.y) - 0.0)))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((bool(bvec4(false, false, ((injectionSwitch.x < (max((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), false)))))
        barrier();
       if((false))
        {
         if((((false) || false)))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec4(((! ((((true && (! ((false || (false)))))) && true)))), (((min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, true))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(vec2(1.0), _GLF_struct_5(true, 1, gl_SubgroupSize), mat3x2(1.0), _GLF_struct_7(mat4(1.0), 1, uvec2(1u), _GLF_struct_6(mat3x2(1.0), mat2x4(1.0))), vec3(1.0), _GLF_struct_9(_GLF_struct_8(1.0, mat2x3(1.0), mat3x2(1.0), mat2x3(1.0), 1, mat3x2(1.0))), (vec4(0.0, 0.0, ((0.0) + 0.0), 0.0) + (vec4((1.0 * (1.0))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false) && true)))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(gl_SubgroupInvocationID, (min(uvec4((clamp(1u, 1u, 1u))), uvec4(1u))), ivec3(((1) | int((injectionSwitch.x)))), _GLF_struct_0(mat2x3(1.0), mat2(1.0), 1u), bvec2(true), _GLF_struct_1(mat2x4(1.0), vec4(1.0), vec2(1.0)), uvec4(1u), _GLF_struct_2(mat2x3(1.0), ((min(mat3((injectionSwitch.y)) * (vec3(((true ? 1.0 : (8.0))))), mat3((((true ? injectionSwitch.y : (ldexp(- 290.885, - 15845)))))) * (vec3(1.0))))), uvec2(1u), ((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3x2(1.0), 1u)), bvec3(true));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((false) && true)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = (clamp((min(((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if((((injectionSwitch.x > injectionSwitch.y)) || ((((false)) || false))))
  {
   if(((false || (false))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((clamp(injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(((((((false ? (faceforward(vec2(5352.3131, - 1551.4594), vec2(vec4(- 6.5, 9.8, - 7.8, - 954.662)), injectionSwitch)) : mix(vec2((0.1), (((- 62.88)) / 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = ((gl_WorkGroupID.x) ^ 0u);
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * ((clamp((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id), (min((workgroup_id), (min((workgroup_id), (workgroup_id))))) | (workgroup_id))));
 if((((false) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + ((subgroup_id) >> 0u) * _GLF_struct_replacement_10._f1.subgroup_size + _GLF_struct_replacement_4._f0.subgroup_local_id;
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_10._f1.subgroup_size + ((_GLF_struct_replacement_4._f0.subgroup_local_id + (0 ^ (((max(clamp(1, ((1) | (1)), 1), clamp(1, ((1) | (1)), 1))))))) % _GLF_struct_replacement_10._f1.subgroup_size);
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 6.5)), bool(false)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(false, true)))))))
    barrier();
  }
 if((((false) || false)))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > ((clamp(float(vec3(injectionSwitch.y, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), float(vec3(injectionSwitch.y, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), float(vec3(injectionSwitch.y, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 buf[virtual_gid] = (((min(((1) >> (int(((((ivec3(0, ((1 << ((((clamp((0 | (int(0))), (0 | (int(0))), (0 | (int(0)))))) | (0 & 94361)))) >> (((((int(((0) | (0)))))) | 0) | ((int(0))))), 0))) | ((ivec3(0, ((1 << ((0 | (int(0))))) >> ((((bool(((bool(((injectionSwitch.x > injectionSwitch.y)))) || false))) ? (84184) : (clamp(((true ? ((int(0))) : (57621))), ((int(0))), ((int(0))))) | ((clamp((int(0)), ((true ? (int(0)) : (- 87302))), (int(0))))))))), 0)))) - ivec3(0, 0, 0))))), 1))) + 0);
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(_GLF_struct_replacement_4._f0.subgroup_local_id + 1 < (min(_GLF_struct_replacement_10._f1.subgroup_size, ((true ? _GLF_struct_replacement_10._f1.subgroup_size : ((workgroup_id & subgroup_id)))))))
  {
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     buf[next_virtual_gid] = 2;
     if((false))
      barrier();
     if(((((min(injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
    }
   while(false);
   if((! ((((! (((! (! (! ((((((false || ((! ((true && ((! (! ((false))))))))))) || false)) || false))))) || false))) && true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((true && ((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((false)) && (! (! (true)))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   subgroupAll(((true && (true && (((false) && true))))));
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((! (((! (! (bool(bvec3(! ((false)), true, ((injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false)) || false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((! (! (false))) || (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if(true)
    {
     buf[next_virtual_gid] = (((((((max(2, (((0 ^ (((2) - 0)))) ^ 0)))) >> int((injectionSwitch.x))))) * 1) | ((((max((int((clamp(ivec2(1 * ((2)), 1), ivec2(1 * (((((clamp(2, (~ (~ (2))), 2))))) << 0), 1), ivec2(1 * ((((2))) | 0), 1))))), (int((max(ivec4((int((clamp(ivec2(1 * ((2)), 1), ivec2(1 * (((((clamp(2, (~ (~ (2))), 2))))) << 0), 1), ivec2(1 * ((((2))) | (int(int((~ (~ ((min((0 ^ (0)), 0))))))))), 1))))), 0, 1, (1 & 1)), ivec4((int((clamp(ivec2(1 * ((2)), 1), ivec2(1 * (((((clamp(2, (~ (~ (2))), 2))))) << 0), 1), ivec2(1 * ((((2))) | (int(int((~ ((true ? (~ (0)) : (- 55349)))))))), 1))))), 0, 1, (1 & 1))))))))) >> int((injectionSwitch.x)))));
     if((false))
      {
       if(((false || (false))))
        barrier();
       barrier();
      }
     if((((((injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, ((injectionSwitch.x) - (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((((true && (false)) || (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
}
