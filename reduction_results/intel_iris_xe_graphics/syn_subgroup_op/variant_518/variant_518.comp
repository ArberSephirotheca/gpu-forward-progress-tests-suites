#version 460

struct _GLF_struct_7 {
 ivec4 _f0;
 mat3 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 vec3 _f1;
 mat3x2 _f2;
 vec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 ivec3 _f3;
 bvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 mat3x2 _f3;
 _GLF_struct_6 _f4;
 bvec4 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uint _f1;
 _GLF_struct_8 _f2;
 bvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint virtual_gid;
 ivec2 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat4 _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(gl_SubgroupSize, mat4((((0.0 + (min((clamp(max(1.0, 1.0), max(1.0, 1.0), (mix(float((float(mat2x4((0.0 + (max(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), float((0.8)), bool(((injectionSwitch.x > injectionSwitch.y))))))), max(1.0, 1.0))))))), (float(vec4(1.0, sqrt(1.0), 1.0, 0.0))), 1u));
 if((false))
  {
   if(((((mix(float((float(true))), float(injectionSwitch.x), bool(true))) > ((true ? injectionSwitch.y : (min(8.0, - 8884.6748))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9((bvec2(bvec3((((bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, true)), false, true))))), (! (! (((injectionSwitch.x < injectionSwitch.y)))))))), 1u, _GLF_struct_8(true, mat2x3(1.0), _GLF_struct_5(vec4(1.0), mat4x2(1.0), mat3x4((min(1.0, 1.0))), ivec3(((1) ^ 0)), bvec2(true), vec2((mix(float(1.0), float((6.0)), ((bool(false)) && true))))), mat3x2(1.0), _GLF_struct_6(mat4x3((clamp((clamp(((false ? (- 66.82) : (min(1.0, 1.0)))), 1.0, 1.0)), (clamp(((false ? (- 66.82) : (min(1.0, 1.0)))), 1.0, 1.0)), (max((clamp((((((bool(((bool(false)) || false)))) || false) ? (- 66.82) : (min(1.0, 1.0)))), 1.0, 1.0)), (clamp(((false ? (- 66.82) : (min(1.0, (float(mat4x3(1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0, 1.0))))))), (((true ? (vec3(mat4x2(mix(vec3(((float(mat3x2((0.9 + - 6.1), 1.0, 0.0, abs(0.0), (injectionSwitch.x), 1.0)))), (min((46.75), (46.75))), (vec3(1.0))[2]), vec3((min((vec3(1.0))[0], (vec3(1.0))[0])), ((((clamp((true ? (vec3(1.0))[1] : (- 8.5)), (true ? (float(((mat4((0.0 + ((clamp((vec3(1.0))[1], (vec3(1.0))[1], (vec3(1.0))[1])))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)) * mat4(1.0)))) : (- 8.5)), (min((true ? (vec3(1.0))[1] : (- 8.5)), (true ? (vec3(1.0))[1] : (- 8.5))))))) / cos(0.0))), ((mix(vec2((- 7.4), (vec2(34.66, 22.66))[1]), vec2((vec2(34.66, 22.66))[0], (8362.6618)), bvec2(true, ((false) && true)))).r)), bvec3(true, true, (false || (((false) || false))))), 1.0, 0.0, 1.0, length(vec3((min(0.0, 0.0)), 0.0, 0.0)), 0.0))) : (vec3((clamp(19.08, 19.08, (cos(0.0) * (mix(float((19.08)), float((- 3.0)), bool(false)))))), (float(mat4(9.2, (sqrt(tan(0.0)) + (0.0)), 1.0, 1.0, (sin(0.0) + (0.0)), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, (((((injectionSwitch.x < injectionSwitch.y)) ? 0.0 + (sin(0.0)) : (exp2(- 105.803))))), 0.0, 0.0, 1.0, 1.0))), - 27.35))))), mat3x2(1.0), vec3(1.0), mat2(1.0)), bvec4(true), _GLF_struct_7(ivec4(1), mat3(1.0), gl_SubgroupInvocationID)), bvec3(true), vec2(((float(((false ? (mat2x4(9987.7487, 633.740, 6.8, - 3.0, - 97.55, - 589.664, - 365.496, - 0.0)) : mat2x4(float((((true && (false)) ? (mat4x3(vec3(6946.6190, 82.97, 68.83), vec3(- 3.4, 5.2, 2.8), vec3(- 9.7, - 9.4, 1.6), vec3(9.4, - 300.709, - 7.9))) : mat4x3((float(vec2(1.0, 1.0))), 1.0, (dot(vec3(tan(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, (min(1.0, 1.0)), 0.0)))), 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0))))))));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((((((clamp(((injectionSwitch) * mat2(1.0)).x, ((injectionSwitch) * mat2(1.0)).x, ((injectionSwitch) * mat2(1.0)).x))) / (injectionSwitch.y)) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((! (! ((! (! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((bool(bool(false)))))
  barrier();
 if((false))
  barrier();
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = ((clamp((((clamp((gl_WorkGroupID), (gl_WorkGroupID), (((gl_WorkGroupID)) | ((gl_WorkGroupID)))))) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), (clamp(((((max((((~ (~ (((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), ((max((((~ (~ (((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u), ((max((((~ (~ (((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))) - uvec3(0u, 0u, 0u)), ((gl_WorkGroupID)) | (clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u))), ((((((((false ? (uvec3(17912u, 151706u, 100088u)) : (gl_WorkGroupID)))) | (((false ? (uvec3(17912u, 151706u, 100088u)) : (gl_WorkGroupID)))))) | (clamp((((uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))) + uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((! ((bool(bvec2(((! ((! ((bool(bool((false || (! ((bool(bvec3((bool(bvec4(bool(bvec3((((((bool((true && (bool(injectionSwitch.x > injectionSwitch.y)))))) && (true && (true))))), (false || (false)), false)), true, false, true))), ((injectionSwitch.x > injectionSwitch.y)), true))))))))))))) || false), true))))))))
  barrier();
 if((false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec4(1), mat3x4(1.0), mat3x4(1.0), _GLF_struct_3(ivec4(1), (~ (~ ((((uint(((((injectionSwitch.x > injectionSwitch.y)) ? (workgroup_base) : uint(uint(uvec4((workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + ((0u | (uint(((uvec2(((false ? (workgroup_id) : _GLF_struct_replacement_9._f2._f6.subgroup_local_id)), 1u)) >> uvec2(0u, 0u))))))), uint((max((injectionSwitch.y), (injectionSwitch.y)))), 0u, 0u))))))))) / ((1u ^ 1u) ^ (1u))))), ivec2(1), _GLF_struct_2(mat2x3(1.0), mat4x2(((false ? (- 75.84) : 1.0))))));
 if((false))
  {
   if((false))
    barrier();
   if(((((min(injectionSwitch.x, (abs(vec2(1.0, 1.0)) * (injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch) / (max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))))
      {
       if((((false)) || false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
     if(((((! ((! (! ((bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if(((((injectionSwitch.x < injectionSwitch.y)) && (((((((! (! (false)))) || ((injectionSwitch.x > injectionSwitch.y))) || (((false) || false)))) || false)))))
    {
     if((((bool(bvec4(((((true && ((! (! (injectionSwitch.x > (min(injectionSwitch, (vec2(0.0, 0.0) + (injectionSwitch)))).y)))))))), ((((injectionSwitch) / vec2((injectionSwitch.y), (injectionSwitch.y))).x > injectionSwitch.y)), false, (((mix(vec2(((2700.9696 / 7905.1813)), (((mix(float((injectionSwitch)[1]), float((- 1346.3591)), bool(false)))) - 0.0)), vec2((injectionSwitch)[0], (((clamp(187.007, 187.007, 187.007)) + - 40.61))), bvec2(true, false))).x > injectionSwitch.y)))))) && true))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if(((((vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + ((subgroup_id) - 0u) * _GLF_struct_replacement_1._f0.subgroup_size + (((((((clamp(_GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1, _GLF_struct_replacement_9._f2._f6.subgroup_local_id + 1)) ^ 0u)))) / 1u) % _GLF_struct_replacement_1._f0.subgroup_size);
 if((false))
  {
   if((! (! ((false)))))
    barrier();
   barrier();
  }
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > (mix(float((min(((float(- 16504) * - 2377.1113)), ((float(- 16504) * - 2377.1113))))), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if((((bool((bvec2(bvec4((bvec2(bvec3(bvec2((false), true), false))), true, false))))) && true)))
  barrier();
 if(((true && (false))))
  {
   if((((((false) || false)) && true)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[_GLF_struct_replacement_4._f3.virtual_gid] = 1;
 if((bool(bvec4((! (! ((((false) || false))))), false, true, true))))
  barrier();
 if((! (! (((_GLF_struct_replacement_9._f2._f6.subgroup_local_id + (max((((true ? (max(int(int(((max((1) - 0, (1) - 0))))), int(int(((1) - 0))))) : (28385)))), (((true ? (max(int(int(((1) - 0))), int(int(((1) - 0))))) : (28385)))))) < (0u + (((_GLF_struct_replacement_1._f0.subgroup_size)) | (0u ^ uint(((mix(float(injectionSwitch.x), float((2132.5325)), bool(false))))))))) || false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if(((true && (false)) || ((false))))
      barrier();
    }
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec2((false), false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   subgroupAll(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((! (! ((false || (false)))))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((! (((! ((false || ((true && (false)))))) && true)))))
      barrier();
     if((false))
      {
       if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((bool(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y)))))) || false))
        barrier();
       if((false))
        {
         if(((true && (! (! ((((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((((mix(float((37.66)), float(((false ? (9.5) : injectionSwitch.x))), bool(true))) > injectionSwitch.y) || false)))))
      barrier();
    }
   if((! (! (((! (! (((false)) && true))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 else
  {
   if((! (! ((false)))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if(((((false || (injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, (vec2(1.0, 1.0) * (injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (round(length(normalize(1.0))) * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((true && ((((! (! (((! ((bool(bvec4(! ((! (! (false)))), false, false, ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))))))
    barrier();
   subgroupAll(true);
   if((((true && ((true && ((((true && (((true && ((false || (false)))))))) || false))))) && true)))
    barrier();
   if((true && (((! (! (false)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if(((! (! (false)))))
        barrier();
       if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((! ((! (! ((! ((bool(bool(! ((bool((true && (bool(bool(bool(((! (! (! ((false)))))))))))))))))))))))))
      {
       if((((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : (length(fma(vec4(- 79.37, 3.4, 8.7, - 1.8), vec4(7.0, - 6.5, 873.643, - 6.4), vec4(- 9.7, (clamp(- 21.01, - 21.01, (min(- 21.01, ((- 21.01) / 1.0))))), 2.2, - 9.3)))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if(((true && ((false || (false))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((! (! ((false)))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((mix(float((- 9.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((! ((! (! (! (bool(bvec3((((false || ((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), ((injectionSwitch.x < (min((min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, false)))))) || false), true, ((injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((bool((bvec2(bvec2(bvec2(false, true))))))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false || ((! (! ((false)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
}
