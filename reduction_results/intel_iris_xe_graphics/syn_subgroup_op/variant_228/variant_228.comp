#version 460

struct _GLF_struct_32 {
 mat3x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
 uvec3 _f1;
 ivec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 ivec2 _f2;
 bvec2 _f3;
 int _injected_loop_counter;
 _GLF_struct_32 _f4;
} ;

struct _GLF_struct_28 {
 mat3x4 _f0;
 float _f1;
 mat4x2 _f2;
 vec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_34 {
 _GLF_struct_29 _f0;
 _GLF_struct_33 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 uvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 bvec2 _f1;
 vec3 _f2;
 bvec3 _f3;
 bvec4 _f4;
 mat3x2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 vec2 _f1;
 mat3 _f2;
 _GLF_struct_25 _f3;
} ;

struct _GLF_struct_22 {
 bvec4 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
 vec4 _f1;
 vec4 _f2;
 ivec3 _f3;
 mat3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 bvec2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_18 {
 int _f0;
 bool _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 uvec3 _f3;
 _GLF_struct_18 _f4;
} ;

struct _GLF_struct_27 {
 mat4x3 _f0;
 _GLF_struct_19 _f1;
 bvec3 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_26 _f4;
 int _injected_loop_counter;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_17 {
 uint workgroup_id;
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 bool _f1;
 _GLF_struct_12 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 bool _f0;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 bvec4 _f1;
 mat3 _f2;
 bvec4 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_14 {
 int _f0;
 _GLF_struct_11 _f1;
 bvec2 _f2;
 ivec3 _f3;
 _GLF_struct_13 _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 bvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 ivec4 _f1;
 mat2 _f2;
 ivec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 bvec4 _f3;
 bvec4 _f4;
 float _f5;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 bvec3 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 vec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat3x4 _f1;
 float _f2;
 mat3 _f3;
 mat4x2 _f4;
 vec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_9 {
 int _injected_loop_counter;
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint next_virtual_gid;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(_GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_29(_GLF_struct_28(mat3x4(1.0), 1.0, mat4x2(1.0), vec4(1.0), bvec3(true))), _GLF_struct_33(_GLF_struct_30(uvec4(1u), uvec3(1u), ivec4(1), vec3(1.0)), _GLF_struct_31(mat4x3(1.0), uvec3(1u)), ivec2(1), bvec2(true), int((injectionSwitch.y)), _GLF_struct_32(mat3x4(1.0), vec4(1.0))), vec4(1.0)); _GLF_struct_replacement_34._f1._injected_loop_counter > 0; _GLF_struct_replacement_34._f1._injected_loop_counter --)
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while((bool(bvec2(false, false))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(1, _GLF_struct_11(bvec3((false || ((bool(bvec3((! (! (true))), true, false)))))), bvec4(true), mat3(1.0), bvec4(true), _GLF_struct_10(true)), bvec2(true), ivec3(1), _GLF_struct_13(ivec2(1), true, _GLF_struct_12(ivec3(1), mat3x4(1.0)), mat4x3(1.0)), gl_SubgroupSize);
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
  }
 while(false);
 if((((((injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((true && ((! (! ((((bool((bvec2(bvec3(bvec2((sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y, false), true)))))))))))), false, ((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(false)
    {
     if((((((((false) && true)) && true))) && true))
      {
       for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter != (0 & - 76722); _injected_loop_counter --)
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     barrier();
     if((false))
      barrier();
    }
  }
 if(((bool(bvec4(false, false, true, true)))))
  {
   if((false))
    barrier();
   if((((((true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(true)
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(true)
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         else
          {
          }
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   for(_GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1, _GLF_struct_4(_GLF_struct_2(mat3x2(1.0), mat3x4(1.0), 1.0, mat3(1.0), mat4x2(1.0), vec3((min(((1.0) - 0.0), 1.0))), bvec3((bool(bvec4(true, true, false, ((injectionSwitch.x < injectionSwitch.y))))))), mat4(1.0), _GLF_struct_3(mat3(1.0), vec3(1.0), mat4x3(1.0))), _GLF_struct_8(mat4(1.0), _GLF_struct_5(bvec4(true), mat4x3(1.0), ivec4(1), bvec4(true), bvec4(true), 1.0), _GLF_struct_6(vec3(1.0), ivec4(1), mat2(1.0), ivec4(1), vec3(1.0)), bvec3(true), _GLF_struct_7(uvec3(1u), mat4x3(1.0), bvec3(true), bvec3(true), uvec3(1u)))); _GLF_struct_replacement_9._injected_loop_counter > 0; _GLF_struct_replacement_9._injected_loop_counter --)
    {
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false || (true)))
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     do
      {
       barrier();
      }
     while(false);
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(7))); _injected_loop_counter --)
    {
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(gl_WorkGroupID.x, _GLF_struct_16(_GLF_struct_15(vec2(1.0))));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_17.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_14.subgroup_size + subgroup_local_id;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if(((bool(bvec2(false, false)))))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((injectionSwitch.x < injectionSwitch.y))) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       do
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         barrier();
        }
       while(false);
      }
     barrier();
    }
   if((false))
    barrier();
  }
 else
  {
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat4x2(1.0)), (0u ^ (workgroup_base + subgroup_id * ((_GLF_struct_replacement_14.subgroup_size) ^ 0u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_14.subgroup_size));
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false) || false))
    {
    }
   else
    {
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(true)
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter < (0 | (0 ^ 1)); _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if(((! (! (false)))))
          barrier();
         if((false))
          barrier();
         do
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        barrier();
       do
        {
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
         if((false))
          {
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((bool(bvec2(bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), true, true, true)), true)))))
            {
             barrier();
            }
           else
            {
             if((false))
              barrier();
            }
          }
        }
       while(false);
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if((bool((bvec2(bvec2(bvec2((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, false, false))), false)))))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     for(_GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(mat4x3(1.0), _GLF_struct_19(mat2x3(1.0), mat4x3(1.0), ivec4(1), uvec3(1u), _GLF_struct_18(1, true)), bvec3(true), _GLF_struct_23(_GLF_struct_20(bvec3(true)), _GLF_struct_21(mat3x4(1.0), vec4(1.0), vec4(1.0), ivec3(1), mat3(1.0), mat4x2(1.0)), _GLF_struct_22(bvec4(true), mat3x2(1.0), bvec3(true), uvec4((max((clamp(1u, 1u, 1u)), 1u)))), bvec2(true), mat3x2(1.0)), _GLF_struct_26(_GLF_struct_24(ivec2(1), bvec2(true), vec3((clamp(((true ? 1.0 : (cos(- 199.405)))), 1.0, (mix(float((- 5100.2050)), float(1.0), bool(true)))))), bvec3(true), bvec4(true), mat3x2(1.0), uvec4(1u)), vec2(1.0), mat3(1.0), _GLF_struct_25(vec3(1.0), uvec2(1u), mat2x3(1.0))), int((injectionSwitch.x))); _GLF_struct_replacement_27._injected_loop_counter != 1; _GLF_struct_replacement_27._injected_loop_counter ++)
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      {
       do
        {
         if((false))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((int((injectionSwitch.y)) << (int(6))) >> (int(6))); _injected_loop_counter ++)
        {
         barrier();
         if((false))
          barrier();
        }
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((! (! ((bool(bvec3((bool(bvec3((false || (((injectionSwitch.x > injectionSwitch.y)))), false, true))), false, true))))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
    }
   do
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       while(false);
      }
     if((false))
      barrier();
    }
   while(false);
   if((false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(3))); _injected_loop_counter --)
  {
   if((! (! ((bool(bvec4(true, true, true, false)))))))
    {
     if((false))
      barrier();
    }
   else
    {
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = ((0 >> (int(5))) << (int(6))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((true && (bool(bvec4(! (! (subgroup_local_id + 1 < _GLF_struct_replacement_14.subgroup_size)), false, false, false)))))))
    {
     if((false))
      barrier();
     switch(int((injectionSwitch.x)))
      {
       case 74:
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         ivec3(- 84137, - 82276, 58657);
         if((false))
          barrier();
        }
       case 0:
       case 88:
       case 20:
       case 7:
       if(((((bool(bvec4(false, false, ((true) && true), true))) || false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if(((bool(bvec2(false, false)))))
                  barrier();
                 barrier();
                }
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 if((false))
                  barrier();
                }
               while(false);
              }
            }
           if((false))
            barrier();
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
           for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(2))) >> ((min(int(2), int(2))))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
            }
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(true)
        {
         if((false))
          {
           if((false))
            {
             if(((bool(bvec2(false, true)))))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       case 43:
       if((false))
        barrier();
       if(true)
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
        }
       case 60:
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((false) && true)))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if(true)
          {
           buf[_GLF_struct_replacement_1.next_virtual_gid] = 2;
          }
         else
          {
          }
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != ((- 31594) & 0); _injected_loop_counter --)
          {
           if(true)
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                }
              }
            }
           else
            {
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false);
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
               if((false))
                barrier();
              }
            }
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       case 25:
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if(true)
          {
           subgroupAll(false);
          }
         else
          {
          }
         if((false))
          barrier();
        }
       case 34:
       case 42:
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(true)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
        }
       else
        {
        }
       if(((! (! (false)))))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > (mix(float((- 272.531)), float(injectionSwitch.y), bool(true)))))))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               do
                {
                 barrier();
                }
               while((bool(bool(((injectionSwitch.x > injectionSwitch.y))))));
               if((false))
                barrier();
              }
             else
              {
              }
            }
           barrier();
           if(((false || (false))))
            barrier();
          }
         if(((((! (! (false)))) || false)))
          barrier();
        }
       if((false))
        barrier();
       break;
       case 37:
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
          {
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat2x3 _GLF_SWITCH_0_0v;
       if((false))
        barrier();
       if(((bool(bvec4(false, true, true, false)))))
        barrier();
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         if(((false || (false))))
          {
           do
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               barrier();
              }
             if((((false) || false)))
              barrier();
            }
           while(false);
          }
        }
       case 52:
       if((! (! (true))))
        {
         if((false))
          barrier();
         bvec3 _GLF_SWITCH_0_1v;
         if((false))
          barrier();
         max(uvec2(63291u, 84371u), workgroup_base);
         vec3 _GLF_SWITCH_0_2v;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if(true)
            {
             if((false))
              barrier();
             barrier();
            }
           else
            {
            }
           if((false))
            barrier();
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if((false))
          barrier();
        }
       default:
       do
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != (64982 & 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(false);
       for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       1;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   else
    {
     if(((((mix(vec2((max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2((966.850), (vec3(- 830.835, 8.2, - 16.90).t)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     buf[_GLF_struct_replacement_1.next_virtual_gid] = 2;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     subgroupAll((true && ((bool((false || (bool(true))))))));
     if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if((false))
        barrier();
       if((((true && (((injectionSwitch.x < injectionSwitch.y) && true))))))
        {
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > ((false ? (5748.4276) : injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if(true)
  {
   if((false))
    {
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
}
