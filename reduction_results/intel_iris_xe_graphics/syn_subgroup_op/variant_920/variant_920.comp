#version 460

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat3 _f1;
 vec2 _f2;
 vec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 bvec2 _f2;
 _GLF_struct_1 _f3;
 ivec2 _f4;
 _GLF_struct_2 _f5;
 uint workgroup_base;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 uint _f2;
 uvec3 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
  barrier();
 if((true && ((((bool(bvec4(! (! ((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, true, false))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((float(mat4x3(injectionSwitch.x, 1.0, (((dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0))) - 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(((bool(bvec4(((false) && true), true, true, true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if((((bool((bvec3(bvec4(bvec3((((bool((bvec2(bvec4(bvec2(bool(bvec4(false, false, false, false)), (true && (false))), ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))))))), true, true), true)))))) || false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((((false) && ((true) && (((injectionSwitch.x > injectionSwitch.y)) || (true))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || (((max((max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((bool(bvec3(false, true, (! (! (false))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((((bool(bvec2(injectionSwitch.x > (((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(((- 126.875 - - 6.7)), (- 322.264)), bvec2(false, false)))).y, false)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = (clamp((max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, ((max((min(((uvec3((clamp(uvec3((((true ? ((true ? (max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, ((0u) + 0u)))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) : (uvec3(40161u, 169217u, 121698u)))) : (uvec3(89024u, 128744u, 143561u)))))), uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)), uvec3((clamp(uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, (max(0u, 0u)), 0u))), (gl_WorkGroupSize) ^ ((true ? uvec3(0u, 0u, 0u) : (uvec3(62926u, 5104u, 17469u)))))))), uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), uvec3(((((((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) | (((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u)))))))), uvec3((clamp(uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), (~ (~ (uvec3(0u, 0u, 0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), uvec3(((max((gl_WorkGroupSize) ^ (min(uvec3(0u, 0u, 0u), ((true ? (uvec3(1u, 1u, ((1u) | (0u << (uint(3u))))) * (((uvec3(0u, 0u, 0u))) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) : (uvec3(193332u, 93247u, 23415u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))))))))).x;
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if(((false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! ((((((! (! (injectionSwitch.x > (clamp((min(injectionSwitch, injectionSwitch)).y, (clamp((min(injectionSwitch, injectionSwitch)).y, (min(injectionSwitch, injectionSwitch)).y, (min(injectionSwitch, injectionSwitch)).y)), (min(injectionSwitch, injectionSwitch)).y))))))) || false)))))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((false) && true)))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((true && (((false || (((false))))) || false))) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((bool(bvec4((! (! ((((((max((max(injectionSwitch.x, injectionSwitch.x)), (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false)))), false, true, false)))))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((bool((! (! (bool(false))))))))
      barrier();
     if(((bool(bool(false)))))
      barrier();
    }
   barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((false || (((false) || false)))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(bvec4(true), _GLF_struct_0(vec2(1.0), uvec3(1u)), bvec2(true), _GLF_struct_1(((max((vec2(((1.0) - 0.0))) * mat2(1.0), (((true ? mat2(1.0) : (mat2(9941.9467, 0.5, 3.8, 2303.5865)))) * ((vec2(((1.0) - 0.0))) * ((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))), (bvec3(bvec4((bvec3(bvec4(bvec3(true), true))), false))), mat3x2(1.0)), ivec2((0 | (1))), _GLF_struct_2(mat4x3(1.0), mat3((clamp(1.0, 1.0, 1.0))), vec2(1.0), vec3(((((min(mix(float((float(vec2((mix(float((min((1.0 * ((- 3709.2804))), (1.0 * (((clamp(- 3709.2804, - 3709.2804, - 3709.2804)))))))), float((0.9)), bool((((mix(float((float(mat2x4((clamp((mix(float(injectionSwitch.x), float((704.667)), bool(false))), (max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), ((dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))) * (0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), float((- 234.925)), bool(false))) < injectionSwitch.y))))), 0.0)))), ((false ? (101.611) : ((float((min(1.0, 1.0)))) / 1.0))), bool(true)), mix(float((((float(vec2((mix(float((1.0 * ((- 3709.2804)))), float((clamp((0.9), (0.9), ((false ? (674.226) : (0.9)))))), bool(((injectionSwitch.x < injectionSwitch.y))))), 0.0))) / 1.0))), float((min(1.0, 1.0))), bool(true)))))) / 1.0)), mat4x3(1.0)), workgroup_size * workgroup_id, mat4x2(1.0)), mat4x3(1.0), 1u, ((max(((uvec3((max(uvec3((max(uvec3(1u, 1u, 1u) * (max(uvec3(1u), (((max(uvec3(1u), ((uvec3(1u)) + ((uvec3(90073u, 3571u, 58991u) & uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))) ^ uvec3(((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_id) : 0u)), 0u, 0u))))), uvec3(1u, 1u, 1u) * (max(uvec3(1u), (max(uvec3(1u), uvec3(1u)))))))), (clamp(uvec3((max(uvec3(1u, 1u, 1u) * (max(uvec3(1u), (max(uvec3((0u | (1u))), uvec3(1u))))), uvec3(1u, 1u, 1u) * (max(uvec3(1u), (max(uvec3(1u), uvec3(1u)))))))), uvec3((max(uvec3(1u, 1u, 1u) * (((max(uvec3((((min(((1u) | (1u)), ((1u) | (1u))))) + 0u)), (max(uvec3(1u), uvec3(1u)))))) | ((max(uvec3((min(((1u) | (1u)), ((1u) | (1u))))), (max(uvec3(1u), uvec3(1u))))))), uvec3(1u, 1u, 1u) * (max(uvec3(1u), (max(uvec3((min(1u, 1u))), uvec3(1u)))))))), uvec3((max(uvec3(1u, 1u, 1u) * (max(uvec3(1u), (max(uvec3(1u), uvec3(1u))))), uvec3(1u, ((1u) >> 0u), 1u) * (max(uvec3(1u), (max(uvec3(1u), uvec3(1u))))))))))))))), max(uvec3(1u), (((max(uvec3(1u), uvec3(1u))) * ((uvec3(1u, 1u, 1u) << (uvec3(1u))) >> (uvec3(1u))))))))));
 uint virtual_gid = _GLF_struct_replacement_4._f0.workgroup_base + ((((0u ^ ((subgroup_id * subgroup_size)))) | ((true ? 0u : (115284u)))) >> 0u) + subgroup_local_id;
 if(((((float(mat3x2(injectionSwitch.x, 1.0, 1.0, (mix(float((float(46431))), float(1.0), bool(((injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = (max(_GLF_struct_replacement_4._f0.workgroup_base, (0u ^ (_GLF_struct_replacement_4._f0.workgroup_base)))) + subgroup_id * subgroup_size + ((true ? ((((clamp((subgroup_local_id + ((1) ^ 0)) % subgroup_size, (((((clamp(((((injectionSwitch.x > injectionSwitch.y)) ? (atomicMax(subgroup_size, workgroup_size)) : (((uint(uvec3((subgroup_local_id + 1), ((((true) && true) ? 0u : (143895u))), 0u)))) << 0u))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + (clamp((0 | (1)), 1, 1))) % subgroup_size)))) * 1u) | ((subgroup_local_id + 1) % subgroup_size)), ((((false ? (virtual_gid) : ((((uint(uint(((((~ (~ ((~ (~ (0u))) ^ (((subgroup_local_id + 1)) + 0u)))))) | (1u * ((subgroup_local_id + 1)))))))) * 1u) >> 0u))))) % subgroup_size))) << 0u)) : ((false ? subgroup_id : subgroup_id))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false || ((true && (bool((bvec2(bvec4(bvec2(((false)), false), false, ((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bool((! (! (((((injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((((false))) || false)) || false) && true))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((! ((((true) || false) && (((! (injectionSwitch.x > injectionSwitch.y)) && true)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((((false)) || false) || false)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > (max((vec2(mat3(injectionSwitch, 1.0, 0.0, abs(tan(0.0)), 0.0, 0.0, (dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0)))).y, injectionSwitch.y))))))
      barrier();
    }
   barrier();
   if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   ((buf[next_virtual_gid] = 2) | (0u ^ 0u));
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if((bool(bvec2((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, true, true))), false))))
      barrier();
     if((false))
      {
       if(((bool(bvec4(false, false, true, false)))))
        barrier();
       if(((((vec2(injectionSwitch[0], (mix(float((float(true))), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   buf[next_virtual_gid] = 2;
   if(((((float(((((injectionSwitch.x > injectionSwitch.y)) ? (mat4(- 5.6, 82.65, 6.1, 4574.2287, - 4705.3872, 0.5, - 878.166, 76.21, - 2.7, 866.697, 412.979, - 6.2, - 0.7, - 1.4, 710.178, - 7.0)) : mat4((max((mix(float((- 9.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), (mix(float(abs(1.0)), float(((((mix(float((float(mat2x4((((- 36.18)) + 0.0), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0)))), float(((8.8))), bool(((injectionSwitch.x > injectionSwitch.y))))) * 1.0)))), bool(false))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), log(1.0), 1.0, (injectionSwitch.y), 1.0, (max(0.0, 0.0))))))) > injectionSwitch.y))))
    {
     if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((true && ((false))))
      {
       if((false))
        {
         if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
    }
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if(((false || ((((! (! (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(true);
   if((false))
    {
     if(((true && (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if(((! ((((true && (! (((bool(bvec3((false) || ((injectionSwitch.x > injectionSwitch.y)), true, false))))))) && (! (! (true)))))))))
        barrier();
       if(((bool((bvec2(bvec2(bvec2(false, true))))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((bool(bvec4((bool(bool(false))), false, false, false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((false)) && true))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
}
