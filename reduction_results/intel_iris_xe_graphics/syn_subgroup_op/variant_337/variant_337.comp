#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(true)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if((((false) || false)))
    barrier();
  }
 else
  {
  }
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_size;
 if((false))
  barrier();
 GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz = GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz = GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id;
 if((false))
  {
   if((false))
    {
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if((((((false) || false)) && true)))
      barrier();
    }
   while((false || (false)));
   for(int _injected_loop_counter = (0 & int(false)); _injected_loop_counter < ((1 << (((int(1)) | 0))) >> (int(1))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(true)
        {
         if((((false) || false)))
          barrier();
         if((false))
          continue;
        }
       else
        {
        }
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
     if(((true && ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     if((false))
      barrier();
    }
   else
    {
    }
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((false) && true)))
        barrier();
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
    }
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != ((21250 % - 68794) & 0); _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if(((true) || false))
          {
           barrier();
           if((false))
            barrier();
          }
         else
          {
          }
        }
       if((false))
        barrier();
      }
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(true)
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         do
          {
           if((false))
            barrier();
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
          }
         while(false);
        }
       if(true)
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       return;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((! (! (bool(bvec4(false, true, true, true))))))))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       return;
      }
     GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.x;
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if((false))
    barrier();
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.w = subgroup_size;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(true)
  {
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(false)
    {
    }
   else
    {
     GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.y = subgroup_local_id;
    }
  }
 else
  {
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 do
  {
   if(false)
    {
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        barrier();
      }
     else
      {
       GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y = GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.y;
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          {
           if((((false) || false)))
            return;
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
  }
 while(false);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.y = GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y;
 if((false))
  {
   if(true)
    {
     barrier();
     if((false))
      barrier();
    }
   else
    {
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(true)
  {
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     return;
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 if((false))
  {
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     barrier();
     if((false))
      return;
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = ((1 << (int(5))) >> (((int(5)) << 0))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
       if((false))
        barrier();
      }
    }
   while(false);
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if(false)
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     else
      {
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
      }
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 if((((((false) && true)) && true)))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> (((int(6)) | 0))); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.x = num_workgroup;
   if((false))
    barrier();
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(((false || (false))))
        barrier();
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if(false)
  {
  }
 else
  {
   GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.x = GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.x;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 & - 60080); _injected_loop_counter --)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if(true)
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.x;
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (((false ? (_injected_loop_counter) : int(7))))) >> (int(7))); _injected_loop_counter != (0 + (0)); _injected_loop_counter --)
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    barrier();
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if((false))
  barrier();
 if((false))
  {
   do
    {
     barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
  }
 if(true)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(true)
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       do
        {
         if(((bool(bool((bool(bool(false))))))))
          barrier();
         if((false))
          {
           if(true)
            {
             if((false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
        }
       while(false);
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      {
       do
        {
         if((false))
          barrier();
         if((false))
          barrier();
         do
          {
           if((false))
            {
             for(int _injected_loop_counter = (0 ^ (54515 & 0)); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(true)
              {
               return;
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
          }
         while(false);
         barrier();
        }
       while(false);
      }
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         do
          {
           if((false))
            {
             if(((true && (false))))
              barrier();
             return;
            }
          }
         while((false || (false)));
        }
       if(false)
        {
        }
       else
        {
         if(true)
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.z = GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.xyz.z;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.y = workgroup_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(((bool(bool(false)))))
      barrier();
    }
   if((false))
    barrier();
   if(true)
    {
     if((false))
      barrier();
     barrier();
    }
   else
    {
     if((false))
      barrier();
    }
  }
 if(true)
  {
   GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.y;
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
   GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.w = GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.xyz.z * GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.w;
 GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.w = workgroup_base;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((false))
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         barrier();
        }
       barrier();
      }
     if(((! (! (((false) && true))))))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       return;
      }
     else
      {
      }
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       return;
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.z = GLF_merged2_0_3_76_3_1_14GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_sizeworkgroup_base.w;
 for(int _injected_loop_counter = (0 >> (((int(5)) << 0))); _injected_loop_counter != ((1 << (((true ? int(3) : (- 82743))))) >> (int(3))); _injected_loop_counter ++)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if(true)
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 if(((false || (false))))
  barrier();
 if(((! ((! (! (! (false))))))))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 if((false))
  barrier();
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      break;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        break;
       barrier();
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         do
          {
           if((false))
            return;
          }
         while(false);
         barrier();
        }
       if((false))
        {
         do
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                 if(((true && (false))))
                  barrier();
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           return;
          }
         while((! (! (false))));
         if((false))
          barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         barrier();
         if((false))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         break;
        }
       if(((bool(bvec2(false, false)))))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if(((false || (false))))
      barrier();
    }
   while(false);
   if((false))
    barrier();
   if(((true && ((false || (false))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.w + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.w);
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter < ((0 ^ 1) | 1); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  {
   do
    {
     barrier();
    }
   while(false);
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x = next_virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if(true)
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if(false)
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
   else
    {
     return;
    }
  }
 if(true)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
             if((false))
              barrier();
            }
           while(false);
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         break;
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        {
         if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
         return;
        }
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if(true)
      {
       if((false))
        barrier();
       if(true)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       return;
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              barrier();
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), true, false)))))
          barrier();
         barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if((false))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1) - 0) << ((clamp(int(6), int(6), int(6))))) >> ((int(ivec4((0 ^ (int(6))), 0, 1, 0))))); _injected_loop_counter ++)
      {
       return;
      }
     if((false))
      barrier();
    }
   if((! (! (true))))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < (((1 << (int(3))) >> (int(3))) | 1); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y)) || (false)))
        {
         if((false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         if((((false) || false)))
          barrier();
         if((false))
          barrier();
        }
       return;
      }
     if((false))
      barrier();
     barrier();
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
    }
   for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     if(true)
      {
       if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = (0 & 63160); _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        return;
       barrier();
       if((((((false) && true)) || false)))
        barrier();
      }
    }
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   do
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(1))); _injected_loop_counter --)
        {
         return;
         if((false))
          barrier();
        }
      }
     if((false))
      barrier();
    }
   while(false);
  }
 else
  {
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   if((false))
    barrier();
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  {
   if(((false || (false))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(true)
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if(((bool(bvec2(false, true)))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if(true)
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      return;
    }
   else
    {
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     do
      {
       barrier();
       if((false))
        barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter != (int((injectionSwitch.x)) << (int(8))); _injected_loop_counter --)
  {
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
          }
        }
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     while(false);
     if(false)
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if((false))
          barrier();
         return;
         if((false))
          barrier();
        }
       while(false);
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         return;
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             return;
            }
          }
         while(false);
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((false || (false))))
          barrier();
        }
       while(false);
       if((false))
        {
         do
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(false);
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((false) && true)))
        {
         if((false))
          barrier();
         do
          {
           return;
          }
         while(false);
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((bool(bvec2(bool(bvec2(false, false)), false))))))
        barrier();
       return;
      }
     for(int _injected_loop_counter = ((1) | (1)); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
        }
      }
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if(((((bool(bvec3(false, false, false)))) || false)))
  barrier();
 if(true)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    barrier();
  }
 if(true)
  {
   if((! (! (((false) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
        }
       while(false);
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        barrier();
      }
    }
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter != (64116 & (0 << (int(4)))); _injected_loop_counter --)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
           if(((bool(bvec2(false, false)))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   if(((bool((bvec2(bvec3(bvec2(false, true), true)))))))
                    barrier();
                   barrier();
                  }
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              return;
            }
           if((false))
            barrier();
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((false))
                  return;
                 barrier();
                }
               if(((! (! (false)))))
                barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((false))
                {
                 if(true)
                  {
                   if((false))
                    barrier();
                   return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       return;
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                }
               return;
               if(((bool(bvec2(false, false)))))
                barrier();
              }
            }
           else
            {
            }
           if((false))
            barrier();
          }
         do
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         while((bool(bvec3(false, true, false))));
         if((false))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               continue;
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               break;
              }
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(false);
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             return;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            return;
           if(true)
            {
             do
              {
               barrier();
               if((false))
                barrier();
              }
             while(false);
            }
           else
            {
            }
          }
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                barrier();
               return;
               if((false))
                barrier();
              }
            }
          }
         if((false))
          barrier();
         return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while((! (! (false))));
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((true && (false))))
                barrier();
               return;
              }
             barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
             if((false))
              barrier();
            }
           if((false))
            return;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if((false))
    barrier();
  }
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x] = 1;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if(true)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             return;
             if((false))
              barrier();
            }
           if(false)
            {
             if((false))
              barrier();
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
               if(((! (! (false)))))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> (int(0))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           break;
          }
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         else
          {
           if((false))
            {
             if(((true && (false))))
              barrier();
             continue;
            }
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          break;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             barrier();
             if((((false) && true)))
              barrier();
            }
          }
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         break;
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(false)
  {
  }
 else
  {
   if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_sizesubgroup_size.w)
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x] = 2;
        }
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       do
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if(((bool((bvec3(bvec4(bvec3(false, true, ((injectionSwitch.x < injectionSwitch.y))), true)))))))
            barrier();
           continue;
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            continue;
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           if((((false) && true)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               break;
              }
             barrier();
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((int((injectionSwitch.y)) << (int(0))) >> ((clamp(int(0), int(0), int(0))))); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((bool((bvec2(bvec3(bvec2(false, false), true)))))))
              barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
           break;
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         if((! (! (false))))
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            {
             if((false))
              {
               do
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != ((int((injectionSwitch.x))) | 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 barrier();
                 if((false))
                  barrier();
                }
               while(false);
               if((false))
                barrier();
              }
             if(true)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  return;
                }
               else
                {
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               if((false))
                barrier();
               barrier();
               if((false))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 while(false);
                }
               if((false))
                barrier();
              }
             if((false))
              barrier();
            }
          }
        }
       while(false);
       do
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(true)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if(((! (! ((bool(bvec2(false, true))))))))
            barrier();
           do
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(((bool((bool(bvec4(bool(((injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
            {
             do
              {
               barrier();
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((bool(bvec2(false, true))))
          {
           if((false))
            barrier();
          }
         else
          {
           barrier();
          }
         if((false))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     subgroupAll(false);
     do
      {
       if((false))
        barrier();
       if((false))
        break;
      }
     while(false);
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if(((true && (false))))
          barrier();
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           barrier();
          }
        }
       while(false);
       if((false))
        {
         if(((bool(bool(false)))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(4))); _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((false))
        barrier();
       if((false))
        barrier();
       buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x] = 2;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     subgroupAll(true);
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     barrier();
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
}
