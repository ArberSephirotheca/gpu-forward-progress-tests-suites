#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((! (! (true && ((false || (((false)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((false) && true)))
  return;
 if((((injectionSwitch.x > (vec2(mat2x3(injectionSwitch, 1.0, ((0.0) * ((false ? (1195.6403) : 1.0))), abs(1.0), 0.0))).y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (min((injectionSwitch)[1], (injectionSwitch)[1]))), (clamp(vec2((- 52.32), (min((- 9969.4451), (- 9969.4451)))), vec2((- 52.32), (min((- 9969.4451), (- 9969.4451)))), vec2((- 52.32), (min((- 9969.4451), (- 9969.4451)))))), bvec2(false, false))).y))))
    return;
   if((((((! (! (bool((bvec3(bvec3(bvec3(((clamp(max((vec2(1.0, 1.0) * ((max(injectionSwitch, injectionSwitch)))), injectionSwitch), max((vec2(1.0, 1.0) * ((max(injectionSwitch, injectionSwitch)))), injectionSwitch), (min(max((vec2(1.0, 1.0) * ((max(injectionSwitch, injectionSwitch)))), injectionSwitch), max((vec2(1.0, 1.0) * ((max(injectionSwitch, injectionSwitch)))), injectionSwitch)))))).x > injectionSwitch.y, false, true)))))))))))))
    {
     if(((! (! (false)))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if(((((((vec2(mat2((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0))).x > injectionSwitch.y) || false)))))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))) > (clamp(injectionSwitch.y, (min(((true ? injectionSwitch.y : (357.002))), injectionSwitch.y)), injectionSwitch.y))))))
  return;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((true ? ((workgroup_size * workgroup_id) + 0u) : (0u ^ ((workgroup_size)))));
 if((false))
  return;
 uint virtual_gid = ((((max(((~ (~ ((max((0u ^ ((((min((((clamp(workgroup_base, ((true ? workgroup_base : (subgroup_size))), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id) | (max(((0u) - 0u), 0u))), (clamp(workgroup_base, ((true ? workgroup_base : (subgroup_size))), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id))) | ((clamp(workgroup_base, (((bool(bvec3(true, false, ((injectionSwitch.x < injectionSwitch.y))))) ? workgroup_base : (subgroup_size))), workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id) - ((((0u >> (uint(0u))) + (0u))) | 0u)))))), ((((max((0u & (65793u % 54892u)), ((true ? (0u & (65793u % 54892u)) : (subgroup_local_id))))) ^ (((uint(uvec4(((max((((clamp(workgroup_base, workgroup_base, workgroup_base)) >> uint((max((injectionSwitch.x), (injectionSwitch.x)))))), (((((clamp(workgroup_base, workgroup_base, workgroup_base)) >> uint((injectionSwitch.x))) * 1u)))))), 0u, 1u, 0u))) << 0u))) / 1u)) + subgroup_id * subgroup_size + subgroup_local_id))))) / (uint(uvec2(1u, 0u)))), max((clamp(workgroup_base, workgroup_base, workgroup_base)) + (0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id, (((clamp(workgroup_base, workgroup_base, workgroup_base)) / 1u)) + (clamp(subgroup_id * subgroup_size, (uint(uvec2((min(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) | (0u >> (uint(0u)))))), 1u))), subgroup_id * subgroup_size)) + subgroup_local_id))))) >> 0u);
 if((false))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + ((subgroup_id * (~ (~ (subgroup_size)))) | (subgroup_id * (((((((((clamp((~ (~ (((0u | 0u) | ((~ (~ (subgroup_size)))))))), (~ (~ (((0u | 0u) | ((((~ (~ (subgroup_size)))) - 0u)))))), (~ (~ (((0u | ((0u) | (((0u) | (0u))))) | ((~ (~ (subgroup_size)))))))))) | 0u)))) | 0u)) | 0u) | (((false ? (workgroup_size) : (~ (~ (((0u | 0u) | ((~ (~ (subgroup_size)))))))))))))) + (((((((clamp(((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), ((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), (0u | (((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))))))) | ((((subgroup_local_id) + ((0u << ((0u | (uint((((uint((~ (~ (uint(6u))))))) - 0u)))))) + ((1u * (((0u) | 0u)))))) + 1))) | ((min((clamp(((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), ((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), (0u | (((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))))))) | ((((subgroup_local_id) + ((0u << ((0u | (uint((((uint((~ (~ (uint(6u))))))) - 0u)))))) + ((1u * (((0u) | 0u)))))) + 1)), (clamp(((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), ((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))), (0u | (((min((((((subgroup_local_id) + ((((((true ? (uint(uvec3(0u << ((0u | (min((uint(6u)), (uint(6u)))))), 1u, 0u))) : (subgroup_size)))) >> 0u)) + (max((((0u)) | ((0u))), (0u))))) + 1)) << 0u), (((min((((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1), (((subgroup_local_id) + ((0u << ((0u | (min((uint(6u)), (uint(6u))))))) + (max((((0u)) | ((0u))), (0u))))) + 1))) >> 0u))))))))) | ((((subgroup_local_id) + ((0u << ((0u | (uint((((uint((~ (~ (uint(6u))))))) - 0u)))))) + ((1u * (((0u) | 0u)))))) + 1)))))))) / uint((injectionSwitch.y))) % subgroup_size);
 if(((((min(injectionSwitch.x, (mix(vec2((- 36.21), (- 3.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, (! (! (true)))))).x)) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) && (! ((! (! (! (true))))))))))))
    return;
   if(((bool(bool(((! (! (((vec2(vec4(injectionSwitch, 0.0, (max(1.0, 1.0))))).x > injectionSwitch.y))))))))))
    return;
   if((bool(bvec3(((((((bool(bvec3(bool(bvec2((((((true ? injectionSwitch.x : (76.43))) > injectionSwitch.y))), true)), true, true))))) || ((! ((bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))) || false), true, false))))
    return;
   if((false))
    return;
   return;
  }
 if((true && ((false))))
  return;
 if((false))
  return;
 if((false))
  return;
 (~ (~ (buf[virtual_gid] = 1)));
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(((((clamp(injectionSwitch.x, injectionSwitch.x, (mix(float(injectionSwitch.x), float((113.283)), bool(false))))) > injectionSwitch.y))))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((bool((bvec3(bvec3(bvec3((false), true, true)))))))
    return;
   subgroupAll(false);
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(((true && ((((! ((! (! (! (((((bool(bvec4((((injectionSwitch.x < injectionSwitch.y)) && (! (! ((bool(bool(((false) && true)))))))), true, ((injectionSwitch.x < injectionSwitch.y)), (bool(bool(false)))))) || false)) && true)))))))))))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false || (((((false || (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if((false))
      return;
     return;
     if((((! (! ((false || (((! (! (injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
    }
   buf[next_virtual_gid] = 2;
   if((false))
    return;
   if(((! (((((! (! (! ((false))))) && ((true) || false))) || false)))))
    {
     if((false))
      return;
     return;
    }
   if(((true && (((bool((bvec2(bvec3(bvec2(((true && (false)) && true), true), true))))))))))
    return;
   subgroupAll(true);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((((! ((bool(bvec3(! ((bool(bvec2((((true && (false))) || false), true)))), true, false)))))) || false)))
    {
     if((false))
      return;
     if(((((true && (false))) && true)))
      return;
     if((((false) && true)))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
      }
     return;
    }
   if((false))
    return;
   if((((! (! ((false)))) || false)))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((bool(bool((false || ((false)))))))
  return;
}
