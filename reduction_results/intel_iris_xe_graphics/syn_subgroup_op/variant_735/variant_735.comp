#version 460

struct _GLF_struct_11 {
 uvec2 _f0;
 bvec4 _f1;
 bvec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 ivec4 _f1;
 uint subgroup_local_id;
 bvec2 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 bool _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 ivec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_6 {
 uint _f0;
 uint _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 _GLF_struct_6 _f1;
 vec2 _f2;
 _GLF_struct_7 _f3;
 mat3 _f4;
 _GLF_struct_8 _f5;
 float _f6;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat2x3 _f1;
 mat2 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 vec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec2 _f2;
 mat2 _f3;
 uint _f4;
 bool _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 _GLF_struct_5 _f2;
 vec3 _f3;
 mat2 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4x2 _f1;
 vec3 _f2;
 uint subgroup_size;
 mat3x4 _f3;
 uvec3 _f4;
 bvec4 _f5;
 int _f6;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if((false))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(((1u) | 0u), mat4x2(1.0), vec3(1.0), gl_SubgroupSize, mat3x4(1.0), uvec3(1u), bvec4(true), ((false ? (max(44772, 51080)) : 1)));
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((true && (((bool(bvec4((! ((bool(bvec4(! (((injectionSwitch.x > injectionSwitch.y))), false, ((injectionSwitch.x > injectionSwitch.y)), false))))), true, true, true)))))))
      return;
    }
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_3(_GLF_struct_1(uvec2(((false ? ((subgroup_id)) : 1u))), mat4x2(1.0), uvec3(1u), mat3(1.0), bvec4(true)), _GLF_struct_2(uvec3(1u), bvec3(true)), uvec2(1u), (transpose(((((false ? (mat2(- 5908.4346, 5.9, - 8840.5902, 2.0)) : (transpose(transpose(transpose(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)))), 1u, true), vec4(1.0), _GLF_struct_5(mat3(1.0), mat3(1.0), _GLF_struct_4(1u, mat2x3(1.0), mat2(1.0), (bvec2((bvec3(bvec3(bvec3(bvec2(true), false)))))), mat3x4(1.0), vec4(((1.0) / ((true ? (min((float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, ((max((max(float(float(0.0)), float(float(0.0)))), float(float(0.0))))), 1.0, 0.0))), 1.0)) : (((- 8808.2764) / 1.0)))))), uvec2(1u))), vec3(((((injectionSwitch.x > injectionSwitch.y)) ? (- 4.5) : (max(1.0, 1.0))))), mat2(((mix(float(float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), float((- 304.955)), bool(false))))), _GLF_struct_9(mat4x2(1.0), _GLF_struct_6(1u, 1u, uvec3(1u)), vec2(1.0), _GLF_struct_7(uvec2((max(((1u) | (0u | 0u)), 1u))), ivec4(1), vec3(1.0)), (transpose(transpose(mat3(1.0)))), _GLF_struct_8(mat4((1.0 * (((min((1.0), (1.0))) - log(1.0))))), (clamp(uvec3(1u), uvec3(1u), ((((((! (! ((bool(bool((injectionSwitch.x < injectionSwitch.y)))))))) && true)) ? ((uvec3(1u)) | (uvec3(1u))) : (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base))))), uvec3(1u)), 1.0), _GLF_struct_12(_GLF_struct_10(mat2(1.0), ivec4(((true ? 1 : (95328)))), gl_SubgroupInvocationID, bvec2(true)), true, _GLF_struct_11(uvec2(1u), bvec4(true), bvec2(true), mat2x4(1.0))));
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
  {
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.y = num_workgroup;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((! (! (! (! (((! (! (false)))))))))))
  return;
 if((false))
  return;
 uint workgroup_size = (uvec3((~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(((false) || ((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(((bool(bvec2(false, true)))))
    return;
   if((false))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = int((mix(float((min((injectionSwitch.y), (min((injectionSwitch.y), (injectionSwitch.y)))))), float((367.628)), bool(false)))); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
        continue;
      }
     return;
    }
  }
 uint workgroup_id = (0u ^ (gl_WorkGroupID.x));
 if((((false) && true)))
  {
   if((false))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
    {
     if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 if((false))
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = ((((~ (~ ((1 << (((int((int(((ivec2(7, 1)) + ivec2(0, 0)))))) - 0))) >> (((false ? (- 26405) : int(7)))))))) | ((1 << (((int((int(((ivec2(7, 1)) + ivec2(0, 0)))))) - 0))) >> (((false ? (- 26405) : int(7))))))); (true && (_injected_loop_counter != (~ (((~ ((max(((0 ^ 0) & - 45055), ((0 ^ 0) & - 45055))))) | (~ ((max(((0 ^ 0) & - 45055), ((0 ^ 0) & - 45055)))))))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 uint workgroup_base = (0u ^ ((min(workgroup_size * (0u | (((((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y) / uint((max((injectionSwitch.y), (injectionSwitch.y)))))) | (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y) / uint((max((injectionSwitch.y), (injectionSwitch.y))))))))), (0u ^ (workgroup_size * (0u | (((((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y) / uint((max((injectionSwitch.y), (injectionSwitch.y)))))) | (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y) / uint((max((injectionSwitch.y), (injectionSwitch.y)))))))))))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 (1u * (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z = workgroup_base));
 uint virtual_gid = (min(((min(((0u >> ((1u * (uint(3u))))) ^ ((((uint(uvec3((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), 1u, 1u)))) << 0u))), (((true ? GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z : (workgroup_size)))))) >> 0u) + (min(subgroup_id * (((0u | (uint(((uvec4(((uint(uvec4((~ (((~ (_GLF_struct_replacement_0.subgroup_size)) - 0u))), 0u, 0u, 0u))) + 0u), (0u & 121570u), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))), subgroup_id * (uint(uvec4((~ (~ (_GLF_struct_replacement_0.subgroup_size))), 0u, 0u, 0u))))) + (((0u) * 1u) ^ (_GLF_struct_replacement_13._f6._f0.subgroup_local_id)), GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * _GLF_struct_replacement_0.subgroup_size + _GLF_struct_replacement_13._f6._f0.subgroup_local_id));
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = ((virtual_gid) | (virtual_gid));
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + (min((clamp(subgroup_id, subgroup_id, (0u | ((uint((clamp(uvec4(subgroup_id, 1u, uint((injectionSwitch.x)), 0u), uvec4(subgroup_id, 1u, uint(((mat2((injectionSwitch.y)) * (((injectionSwitch)) - (max(vec2(0.0, 0.0), (abs(vec2(1.0, 1.0)) * (((vec2(0.0, 0.0)) * mat2(1.0)))))))).x)), 0u), uvec4(subgroup_id, 1u, uint((injectionSwitch.x)), 0u))))))))), subgroup_id)) * ((false ? (num_workgroup) : _GLF_struct_replacement_0.subgroup_size)) + (((true ? (~ (~ ((((((uint(uvec4((min(0u, 0u)), 1u, 1u, 0u))) ^ ((((((clamp((uint((injectionSwitch.x)) | (_GLF_struct_replacement_13._f6._f0.subgroup_local_id)), (uint((injectionSwitch.x)) | (_GLF_struct_replacement_13._f6._f0.subgroup_local_id)), ((true ? (((uint((injectionSwitch.x))) * ((1u << (uint(0u))) >> (uint(0u)))) | (_GLF_struct_replacement_13._f6._f0.subgroup_local_id)) : (num_workgroup)))))) / (((0u + (1u)) << (uint(1u))) >> (uint(1u))))) / uint((injectionSwitch.y))))) + 1)) ^ 0u) % _GLF_struct_replacement_0.subgroup_size))) : (num_workgroup))));
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x = (clamp(next_virtual_gid, next_virtual_gid, (uint((injectionSwitch.x)) + (next_virtual_gid))));
 if((false))
  return;
 for(int _injected_loop_counter = 0; (((injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != 1)); _injected_loop_counter ++)
  {
   if((false))
    return;
  }
 if((false))
  {
   do
    {
     return;
     if((false))
      return;
    }
   while((bool((false || (bool(false))))));
  }
 if((false))
  return;
 if((false))
  return;
 if(false)
  {
  }
 else
  {
   buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x] = 1;
   if((false))
    return;
   if(((((! (! ((bool(bvec2(false, false)))))))) || false))
    return;
  }
 if(((((mix(vec2(((max(injectionSwitch, (max(injectionSwitch, injectionSwitch)))))[0], (float(mat4x3(((max(injectionSwitch, (max(injectionSwitch, injectionSwitch)))))[1], (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, sqrt(0.0))))), vec2((812.354), ((+ 6129.6670))), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     do
      {
       return;
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(((! (! ((((0u ^ (min((0u + (_GLF_struct_replacement_13._f6._f0.subgroup_local_id + (((false || (true)) ? 1 : (ivec2(- 12448, 60713).r))))), _GLF_struct_replacement_13._f6._f0.subgroup_local_id + ((true ? (clamp(1, 1, 1)) : (((((ivec2(- 12448, 60713).r) ^ 0)) | (ivec2(- 12448, 60713).r))))))))) < _GLF_struct_replacement_0.subgroup_size) && (((vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))))))
  {
   if(((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec2(false, true)))))))
    return;
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x] = 2;
    }
   if((false))
    return;
   subgroupAll(false);
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), false, false, false))))
    {
     buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x] = (clamp((min(2, 2)), 2, (~ (~ (2)))));
     if((false))
      return;
     if(((((clamp(((injectionSwitch) - abs(vec2(0.0, 0.0))).x, ((injectionSwitch) - abs(vec2((1.0 * (0.0)), 0.0))).x, ((injectionSwitch) - abs(((vec2(0.0, 0.0)) * mat2(1.0)))).x)) > injectionSwitch.y))))
      return;
    }
   else
    {
     if((((bool(bvec4((bool(bool(((vec2(injectionSwitch[0], injectionSwitch[1])).x > (((vec2(0.0, 0.0) + ((max(injectionSwitch, (mix(vec2((3223.0120), (2.1)), vec2((injectionSwitch)[0], (float(float((injectionSwitch)[1])))), bvec2(true, true)))))))) / vec2(1.0, 1.0)).y)))), true, true, false))))))
      return;
     if((false))
      {
       do
        {
         if((false))
          return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((((((((clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y))) && true))) && ((injectionSwitch.x < injectionSwitch.y))) && (((! (! (injectionSwitch.x < injectionSwitch.y)))))))
        {
         do
          {
           if((((false) || false)))
            return;
          }
         while(false);
        }
       else
        {
        }
       if(true)
        {
         return;
         if((false))
          return;
        }
       else
        {
        }
       if((false))
        return;
      }
     if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, ((injectionSwitch.x > injectionSwitch.y)), true))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       if((((((((true && ((injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : (vec2(72.14, 96.77)))).x > injectionSwitch.y))))
        return;
      }
     return;
    }
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((false) && true)))
        break;
       for(int _injected_loop_counter = ((((((0) << 0)) ^ 0) << (((false ? (63606) : int(3))))) << (int(3))); _injected_loop_counter != (0 ^ 1); _injected_loop_counter ++)
        {
         do
          {
           if((false))
            continue;
           subgroupAll(true);
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(false);
        }
      }
     else
      {
      }
    }
   while(false);
  }
}
