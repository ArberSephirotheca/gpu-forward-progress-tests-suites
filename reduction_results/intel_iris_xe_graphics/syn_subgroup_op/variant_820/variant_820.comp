#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y = num_workgroup;
 uint workgroup_size = (clamp((uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), (max((((uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)) | (clamp((((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (((gl_WorkGroupSize) | (uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))))))), (((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)))))).x;
 uint workgroup_id = (uint(uvec3(((0u | 0u) | (gl_WorkGroupID.x)), ((1u << (uint(2u))) >> (uint(2u))), 1u)));
 uint workgroup_base = workgroup_size * (~ (~ (((0u | (((max((~ (~ (workgroup_id))), (min((~ (~ (workgroup_id))), (~ (~ (workgroup_id))))))))))) ^ 0u)));
 uint virtual_gid = workgroup_base + (((max(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id, GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id)) << uvec3(0u, 0u, 0u))).z * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + (clamp(((~ (~ ((min(0u, 0u))))) ^ (((true ? GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z : (((subgroup_local_id)) | ((subgroup_local_id))))))), (0u ^ (((true ? GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z : (subgroup_local_id))))), (0u ^ (((true ? GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z : (subgroup_local_id))))))) * (uint(((true ? (clamp((clamp(uvec2((((true ? ((true ? (false ? (atomicCompSwap(workgroup_base, subgroup_local_id, workgroup_base)) : subgroup_size) : (workgroup_id))) : (subgroup_size)))), 1u), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))) : (((max((true ? uvec2(((0u ^ ((~ ((max(~ ((125449u)), ~ ((125449u)))))) | ((0u ^ (125449u)))))), 97064u) : (((((uvec2(176844u, 113621u)) | (uvec2(176844u, 113621u))))) / uvec2(1u, 1u))), ((((~ (~ ((bool((bvec2(bvec2(bvec2(true, true)))))) ? uvec2(((~ ((max(~ ((125449u)), ~ ((125449u)))))) | (((min(0u ^ (125449u), 0u ^ (125449u)))))), 97064u) : (uvec2(176844u, (uint((((uvec3(uvec3(uvec3(113621u, 1u, 0u))))) / ((uvec3(1u, 1u, 1u) << (uvec3(2u))) >> (uvec3(2u))))))))))))) ^ ((uvec2(0u, 0u)) | (uvec2(0u, 0u)))))))))))) + ((min((subgroup_local_id + 1), (((true ? subgroup_local_id : (workgroup_size))) + ((1) / 1)))) % subgroup_size);
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid;
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x] = 2;
   subgroupAll(false);
  }
 else
  {
   buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x] = ((((int(ivec2(((((clamp(2, (0 | (2)), ((2) / ((1) ^ 0))))) / 1) ^ (int((float(mat4x3((min((((float(mat4x3(((true ? (injectionSwitch.x) : (112.062))), 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, (injectionSwitch.x), 1.0, 0.0, 1.0))) * 1.0)), (injectionSwitch.x))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, (injectionSwitch.x), 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(((true ? length(normalize(vec3(1.0, 1.0, 1.0))) : (distance(vec4(- 444.263, 52.19, 9219.0602, 9848.3560), vec4(- 6.4, - 8.5, 3985.2123, 33.61)))))), length(vec2(0.0, 0.0)))))) + (0))), (max((int(ivec4(((1) / 1), 0, (((1 * ((min(1, 1))))) | (1)), 1))), 1))))) * 1)));
   subgroupAll((bool(bvec3((! (! (true && (((! (! ((true && (true)))))))))), false, true))));
  }
}
