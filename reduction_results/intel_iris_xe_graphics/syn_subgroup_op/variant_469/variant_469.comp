#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid;
 if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(((((((! (! (false)))) && ((! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(((((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = (min((max(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(((((bool(bool((bool(bvec3((((mix(vec2((9.1), ((max(injectionSwitch, injectionSwitch)))[1]), vec2(((max(injectionSwitch, injectionSwitch)))[0], (clamp((max((1086.1774), (1086.1774))), (1086.1774), (1086.1774)))), bvec2(true, false))).x > injectionSwitch.y)), false, false))))))) || false)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((bool((bool(bvec4(((true && (((((false || (bool(false)))) && true)) || false))), false, true, false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_base = (min(((workgroup_size) - 0u), workgroup_size)) * (clamp(workgroup_id, workgroup_id, ((((workgroup_id) >> 0u) * 1u))));
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) ^ 0u) + subgroup_local_id;
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = (((uint(uvec3(virtual_gid, 1u, uint((injectionSwitch.y)))))) | (max(0u, 0u)));
 if((((false)) || false))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((false))
    {
     if(((((true && (injectionSwitch.x > (mix(((((injectionSwitch.x < injectionSwitch.y)) ? (clamp(float((8.1)), float((8.1)), float((8.1)))) : (- 302.916))), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
     if(((! ((bool(bvec4(! (false), false, false, true)))))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + (min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * (((((clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (((true && (false)) ? (uvec4(149995u, 12533u, 72792u, 135168u)) : GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)).z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z))) - 0u) | (((((((clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z)))))) - 0u) - 0u)) - 0u)))), ((((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * (((clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, ((((true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z : (subgroup_size)))) - uint((injectionSwitch.x)))))) - 0u)) ^ 0u) | ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * (((clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, ((((true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z : (subgroup_size)))) - uint((injectionSwitch.x)))))) - 0u)) ^ 0u))))) + ((((((subgroup_local_id) - 0u) + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) * 1u));
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid;
 if((false))
  barrier();
 buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((1u * ((((clamp(((uint((uvec4(0u, 0u, 0u, 0u) | (((uvec4(((((uint(uvec2((min(subgroup_local_id, subgroup_local_id)), 1u))))) >> (min((min(0u, 0u)), 0u))), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)))))) / 1u), uint(((((uvec4(1u, 1u, 1u, 1u) * ((uvec4(((((uint(uvec2((max(((clamp(0u + ((min(subgroup_local_id, subgroup_local_id))), 0u + ((min(subgroup_local_id, subgroup_local_id))), ((~ (~ ((0u + ((min(subgroup_local_id, subgroup_local_id))))))) * 1u)))), (0u + ((min(subgroup_local_id, subgroup_local_id)))))), 1u))))) >> 0u), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, (~ (~ (0u))))))), uint(((((false ? (uvec4((clamp(67211u, 67211u, (clamp(67211u, 67211u, 67211u)))), 165187u, 161833u, 110841u)) : uvec4(((((uint(uvec2((((min(subgroup_local_id, subgroup_local_id))) >> 0u), 1u))))) >> 0u), 0u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)))))) | (subgroup_local_id)) + 1)) < GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z)
  {
   buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x] = 2;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((! (! (! ((((! (false))) || false))))))))))
    barrier();
   subgroupAll(false);
   if((false))
    barrier();
  }
 else
  {
   buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   subgroupAll(true);
   if((false))
    barrier();
  }
}
