#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((! (! (bool((bvec2(bvec3(bvec2(false, ((injectionSwitch.x < injectionSwitch.y))), true))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec2(false, false)))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((bool(bvec3((false), true, true))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((bool(bvec2((false), false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((! (! ((false)))))
  barrier();
 if((((false) || (true && (false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if(((bool(bool(((((((((true ? injectionSwitch.x : (clamp(- 289.364, 6.7, 5.5))))) - 0.0) > injectionSwitch.y)) && true)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((((((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bool(((((false || (bool(bool((bool(bvec4((bool((false || ((bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))), (! (! (true))), false, false)))))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (mat2((((true ? injectionSwitch.y : (- 45.47))))) * (injectionSwitch)).y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((1u * (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))));
 if((false))
  barrier();
 if((! (! (((((max(injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = (min((((((true ? (workgroup_base) << 0u : ((virtual_gid & workgroup_base)))))) | (((workgroup_base) << 0u))) + ((subgroup_id * (~ (~ (subgroup_size)))) | 0u) + ((~ (~ (((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size), (0u | ((max((uint(uvec2(((uint((injectionSwitch.x)) ^ ((((workgroup_base) << 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | 0u))), 1u))), ((((((((uint(uvec3((((workgroup_base) >> 0u)), ((1u << (uint(6u))) >> (uint(6u))), uint((injectionSwitch.y))))) * 1u)) | (workgroup_base))) << 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | 0u)))))));
 if((false))
  barrier();
 if(((((((bool((((true && (bool(injectionSwitch.x > injectionSwitch.y)))) && true))) && true))))))
  barrier();
 if((((injectionSwitch.x < injectionSwitch.y)) && (bool(bool(((false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((((clamp(mat2((injectionSwitch.y)) * (injectionSwitch), mat2((injectionSwitch.y)) * (injectionSwitch), mat2((injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((((bool((bvec3((bvec3(bvec3(bvec3(bvec3(((((injectionSwitch.x > injectionSwitch.y))) && true), false, false))))))))) && true))))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(((bool(bvec4((false || (false)), false, false, false)))))
    barrier();
  }
 if((false))
  barrier();
 if((((bool(bvec4((false), false, false, ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(((((mix(vec2((injectionSwitch)[0], (310.934)), vec2((- 39.24), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((clamp(injectionSwitch, ((injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 buf[virtual_gid] = ((1) / (((1) | (1)) | 0));
 if(((((max((mix(vec2(((((mat2(1.0) * ((vec2(0.0, 0.0) + (injectionSwitch))))) / vec2(1.0, 1.0)))[0], ((false ? (- 2.1) : (clamp((((mix(float(89.18 / float(82451)), float((491.497)), bool(false))))), (((mix(float(89.18 / float(82451)), float((491.497)), bool(false))))), (((mix(float(89.18 / float(82451)), float((491.497)), bool(false)))))))))), vec2(((true ? 1.2 : 753.517)), ((((mat2((((float(vec3(1.0, 1.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) / 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), bvec2(false, true))), (mix(vec2(((((mat2(1.0) * (injectionSwitch))) / vec2((max(1.0, 1.0)), 1.0)))[0], (((mix(float(89.18 / float(82451)), float((491.497)), bool(false)))))), vec2(((true ? 1.2 : 753.517)), ((((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), (bvec2(bvec3((bvec2(bvec4(bvec2(false, true), false, true))), ((injectionSwitch.x < injectionSwitch.y))))))))).x > (mix(float((20.03)), float(injectionSwitch.y), bool(true)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((((max(((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((bool(bvec4(((~ (((uint(uvec4(clamp(~ (0u), ~ (0u), ~ (0u)), 1u, 1u, 0u)))))) + (subgroup_local_id + 1)) < ((1u * ((((subgroup_size) << 0u)))) | (subgroup_size)), false, false, (((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((false) || false)))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((((injectionSwitch.x > (float(mat4x3((((min(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))) * round(length(normalize(vec2(1.0, ((1.0) * 1.0)))))), (injectionSwitch.y), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 0.0)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   subgroupAll(false);
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   subgroupAll(true);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) && (false || (true))))))
    {
     if((false))
      barrier();
     if(((true && ((bool(bvec4(((false) || false), true, false, true)))))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (min(injectionSwitch.y, ((false ? (409.441) : (((float(float(injectionSwitch.y)))) * 1.0)))))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((bool((((injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))
      barrier();
     if((false))
      barrier();
     if(((! ((! (((! (((! ((true && (true)))) && true))) && (! (! ((bool(bvec4(false, true, true, true)))))))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (! ((bool(bvec3(false, true, false))))))))
    barrier();
  }
 if((false))
  barrier();
}
