#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((((float(mat2((float((((false ? (mat4(mat3x2(- 1.4, - 498.902, - 46.95, 8.6, - 0.6, - 399.453))) : ((mat4(1.0) * (mat4(injectionSwitch.x, 0.0, (injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, ((false ? (- 99.49) : 1.0)), 1.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, log(1.0), 1.0))) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool((bool(bvec4(bool(false), ((injectionSwitch.x > injectionSwitch.y)), true, ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if((! (! ((false || ((true && ((false)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
  barrier();
 if(((bool(bvec2(((injectionSwitch.x > (0.0 + (injectionSwitch.y)))), true)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = ((max(uint(((clamp(0u, 0u, 0u)) | ((false ? (subgroup_size) : (0u | (0u | (((uint(((((workgroup_size) - 0u)) | 0u))))))))))), uint(((min(((((true ? 0u : (subgroup_local_id)))) ^ 0u), (((0u ^ (((true ? 0u : (~ (~ (((false ? (num_workgroup) : (subgroup_local_id))))))))))) | (((((true ? 0u : (subgroup_local_id)) | (0u << (uint(1u)))))))))) | (((true ? (0u >> (uint(6u))) | (((((min(uint(workgroup_size), uint(workgroup_size)))) >> 0u))) : (workgroup_id))))))))) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + (0u ^ (subgroup_local_id));
 uint next_virtual_gid = (((((clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) | ((clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))) | ((((((clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) | ((clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))) * 1u))) + ((((subgroup_local_id + ((1) | 0))) | ((subgroup_local_id + ((1) | 0)))) % (min(subgroup_size, subgroup_size)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(((((((vec2(0.0, 0.0) + (injectionSwitch))) - vec2((injectionSwitch.x), (injectionSwitch.x))).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((! ((! (! (! (((injectionSwitch.x > ((((injectionSwitch.y) - 0.0)) / 1.0)))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = (0 + (1));
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, (mix(float(injectionSwitch.y), float((- 92.71)), bool(false)))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((subgroup_local_id) | ((((~ (~ (subgroup_local_id))) / ((1u << (uint(5u))) >> (uint(5u))))))) + ((1) ^ 0) < subgroup_size)
  {
   if(((bool(bvec3((bool(bool((! (! ((true && (false)))))))), (! (! (true))), (((clamp(injectionSwitch, (((mat2(0.0, 0.0, 0.0, 0.0) + ((transpose(transpose(mat2(1.0)))))) * ((injectionSwitch) * mat2(1.0)))), injectionSwitch)).x < (min(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   (0u | (buf[next_virtual_gid] = 2));
   subgroupAll(false);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((! ((! ((bool(bool(((! (! ((! (((! (! (bool((bvec2(bvec4(bvec2(! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))), true), true, true))))))))))))) && true)))))))))
    {
     if((false))
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   buf[next_virtual_gid] = 2;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((false || (((injectionSwitch.x > injectionSwitch.y))))) || false)))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((! (! ((false || (false || (((bool(bvec3((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y) || false), ((injectionSwitch.x < injectionSwitch.y))))))), false, (bool(bool(false)))))))))))))))
          barrier();
         barrier();
        }
       if((false))
        {
         if(((bool(bvec3((true && ((! (! (false))))), true, true)))))
          {
           if(((((min((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if((((false)) || false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((bool((bvec2(bvec2(bvec2((false || (((injectionSwitch.x > injectionSwitch.y)))), false))))))) && ((true) || (bool((! (! (bool(false))))))))))
        {
         if((false))
          barrier();
         if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(((bool(bool((((max(((min((injectionSwitch.x), (((clamp(((injectionSwitch.x > injectionSwitch.y)) ? (- 38.57) : (injectionSwitch.x), ((injectionSwitch.x > injectionSwitch.y)) ? (- 38.57) : (injectionSwitch.x), (mix(float((3786.7436)), float(((injectionSwitch.x > injectionSwitch.y)) ? (- 38.57) : (injectionSwitch.x)), bool(true))))))))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((true && ((((injectionSwitch.x > (float(mat4x3((min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((bool((bvec3(bvec4(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, true), ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if((false))
    barrier();
   if((false))
    barrier();
   if((false || ((false))))
    {
     if(((true && ((((false || (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((! (! ((! (! ((false))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
}
