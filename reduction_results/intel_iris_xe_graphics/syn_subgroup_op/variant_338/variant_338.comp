#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((false || (false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((! (! ((bool(bvec2(false, true))))))) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((! (! ((false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((~ (~ ((clamp(((min(uint(uvec2(subgroup_local_id + (max(1, (0 + ((int((~ ((clamp(~ (ivec2((clamp(((int(int((1))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (ivec2((clamp((((0 + (int(int((1))))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (clamp((ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)))))))))))))), 1u)), uint(uvec2(subgroup_local_id + (max(1, (0 + ((int((~ ((clamp(~ (ivec2((clamp(((int(int((1))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (ivec2((clamp((((0 + (int(int((1))))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (clamp((ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)))))))))))))), 1u))))), subgroup_local_id + (max(1, (0 + ((int((~ ((clamp(~ (ivec2((clamp(((int(int((1))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (ivec2((clamp((((0 + (int(int((1))))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (clamp((ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)))))))))))))), subgroup_local_id + (max(1, (0 + ((int((~ ((clamp(~ (ivec2((clamp(((int(int((1))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (ivec2((clamp((((0 + (int(int((1))))))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), ~ (clamp((ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)), (ivec2((clamp(((int(((int((1))) | 0)))) - 0, ((int(int((1))))) - 0, ((int(int((1))))) - 0)), 1)))))))))))))))))))) % (clamp(((((subgroup_size) << 0u)) << 0u), subgroup_size, subgroup_size)));
 buf[virtual_gid] = (int(int(1)));
 if(subgroup_local_id + 1 < (min(subgroup_size, subgroup_size)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((((1 << (int(0))) >> (int(0))) << (int(4))) >> ((((min(int(4), int(4)))) | 0))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((! (((! ((false))) && true)))) || false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     buf[next_virtual_gid] = 2;
    }
   subgroupAll(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   subgroupAll(true);
  }
 if((false))
  barrier();
}
