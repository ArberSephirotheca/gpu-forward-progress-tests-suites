#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((90.66)), bool(((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((clamp(uint((~ ((max((~ (~ (~ ((max(uvec2((min(((((0u) | (0u)) | (((gl_WorkGroupID.x)) | 0u)) + 0u), ((max(((min((min(((0u | (gl_WorkGroupID.x))), ((0u | (min((gl_WorkGroupID.x), (gl_WorkGroupID.x))))))), ((0u | ((~ (~ (((((uvec3(0u, 0u, 0u) ^ (uvec3(((uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))))) | ((uvec3(((uvec4((uvec3(0u, 0u, 0u) ^ (uvec3(((uvec3(gl_WorkGroupID)) - uvec3(0u, 0u, 0u))))), 0u)) + uvec4(0u, 0u, 0u, 0u)))))))))).x))))) + 0u), (0u | (gl_WorkGroupID.x)))) + 0u))), 0u), uvec2((min(((((0u) | (0u)) | (((gl_WorkGroupID.x)) | 0u)) + 0u), ((max(((min((min(((((0u | (gl_WorkGroupID.x))) | ((false ? (workgroup_size) : 0u)))), ((0u | (((false ? (subgroup_id) : uint(((uvec4((((gl_WorkGroupID.x)) - 0u), 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))))))), ((0u | (gl_WorkGroupID.x))))) + 0u), (0u | (gl_WorkGroupID.x)))) + 0u))), 0u))))))), ~ ((max(uvec2((min(((((((0u) | (0u)) | (((gl_WorkGroupID.x)) | 0u)) + 0u)) / 1u), ((max(((min((min(((((0u | ((clamp((((uvec3(0u, 0u, 0u) + (((gl_WorkGroupID) << uvec3(0u, 0u, 0u))))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, gl_WorkGroupID.x, gl_WorkGroupID.x)))))) | 0u), ((0u | (gl_WorkGroupID.x))))), ((0u | (gl_WorkGroupID.x))))) + 0u), (0u | (gl_WorkGroupID.x)))) + 0u))), 0u), uvec2((min(((((0u) | (0u)) | (((gl_WorkGroupID.x)) | 0u)) + 0u), (((0u ^ (max(((min(((false ? (subgroup_size) : (clamp((min(((0u | (gl_WorkGroupID.x))), ((0u | (gl_WorkGroupID.x))))), (min(((0u | (gl_WorkGroupID.x))), ((0u | (gl_WorkGroupID.x))))), (min(((0u | (gl_WorkGroupID.x))), ((0u | (gl_WorkGroupID.x))))))))), ((0u | (gl_WorkGroupID.x))))) + 0u), (0u | (gl_WorkGroupID.x)))))) + 0u))), 0u))))))))), ((uint(uvec2((((((clamp(((0u | (gl_WorkGroupID.x)) + 0u), ((0u | (gl_WorkGroupID.x)) + 0u), ((0u | (gl_WorkGroupID.x)) + ((false ? ((num_workgroup + num_workgroup)) : ((0u) >> 0u))))))) << 0u)) << 0u), (((~ ((uint(uvec4(~ (((0u) | (0u))), 0u, 1u, 1u)))))) | 0u)))) | (uint((max(uvec2(((0u | ((0u + (gl_WorkGroupID.x)))) + 0u), 0u), uvec2(((0u | ((0u + (gl_WorkGroupID.x)))) + 0u), ((((injectionSwitch.x > injectionSwitch.y)) ? (num_workgroup) : 0u)))))))), uint(uvec2(((0u | (gl_WorkGroupID.x)) + 0u), ((0u) | (((0u ^ 0u)) << 0u))))))));
 if(((! ((false || (! (false)))))))
  return;
 if((false))
  return;
 uint workgroup_base = (((((max((((true ? (false ? ((0u | ((uint(uvec3(workgroup_size, 1u, 1u)))))) : 1u * (uint(uvec3((clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), ((0u ^ (0u)) | ((uint(uvec2(1u, 0u))))), 1u)))) : (subgroup_local_id))) | (uint(((true ? uvec4(uint((injectionSwitch.x)), 0u, 0u, 0u) : (uvec4(28453u, 56139u, 92758u, 166000u))))))), (((true ? (false ? ((0u | ((uint(uvec3(workgroup_size, 1u, 1u)))))) : 1u * (uint(uvec3((clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), ((0u ^ (0u)) | ((uint(uvec2(1u, 0u))))), 1u)))) : (subgroup_local_id))) | ((true ? (false ? ((0u | ((uint(uvec3(workgroup_size, 1u, 1u)))))) : 1u * (uint(uvec3((clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), ((0u ^ (0u)) | ((uint((((uvec2((clamp(uvec2(uvec2(1u, 0u)), uvec2(uvec2(1u, 0u)), uvec2(uvec2(1u, 0u)))))) - uvec2(0u, 0u))))))), 1u)))) : (((((subgroup_local_id) << 0u)) ^ ((0u) >> 0u))))))))))));
 if((false))
  return;
 uint virtual_gid = workgroup_base + (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, ((true ? subgroup_id : (workgroup_id))) * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((clamp((((min((subgroup_local_id + ((1) << 0)), (subgroup_local_id + ((((1)) + 0) << 0))))) / 1u), ((((max((uint(uint(((((((((((subgroup_local_id + ((1) << 0))) | ((subgroup_local_id + ((1) << 0))))) >> 0u)) | 0u)) ^ (0u << (uint(7u))))) | ((subgroup_local_id + ((((1) << 0)) << 0)))))), ((((((((subgroup_local_id + ((1) << 0))) | ((subgroup_local_id + ((1) << 0))))) | ((subgroup_local_id + ((1) << 0)))) / 1u)) << (0u | 0u))))) | ((((min((max((uint(uint(((((subgroup_local_id + ((1) << 0))) | (((min(subgroup_local_id + ((1) << 0), subgroup_local_id + ((1) << 0))))))) | ((subgroup_local_id + ((((1) << 0)) << 0)))))), ((((((((subgroup_local_id + ((1) << 0))) | ((subgroup_local_id + ((1) << 0))))) | ((subgroup_local_id + ((1) << 0)))) / 1u)) << (0u | 0u)))), (max((uint(uint(((((subgroup_local_id + ((1) << 0))) | ((subgroup_local_id + ((1) << 0))))) | ((subgroup_local_id + ((((1) << 0)) << 0)))))), ((((((((subgroup_local_id + ((1) << 0))) | ((subgroup_local_id + ((1) << 0))))) | ((subgroup_local_id + ((1) << 0)))) / 1u)) << (0u | 0u))))))) - 0u)))), (0u ^ ((((((min(min(subgroup_local_id, ((false ? (0u ^ ((0u | ((subgroup_local_id))))) : subgroup_local_id))), min(subgroup_local_id, ((false ? (subgroup_local_id) : subgroup_local_id)))))) + ((1) << 0)))) << 0u)))) % subgroup_size);
 buf[virtual_gid] = 1;
 if((((true ? (false ? (num_workgroup) : ((true ? subgroup_local_id : (workgroup_base))) + 1) : (73341u)))) < subgroup_size)
  {
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
  }
 else
  {
   if((false))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    return;
   subgroupAll((false || ((! ((bool(bool(! (true)))))))));
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
}
