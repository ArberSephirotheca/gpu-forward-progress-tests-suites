#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (~ (((false ? (subgroup_id) : ~ (gl_WorkGroupID.x)))));
 uint workgroup_base = (~ ((((clamp(~ ((((true ? ((uint(((((uvec2(workgroup_size, 1u)) ^ (clamp(uvec2(0u, (((0u ^ (0u))) - 0u)), uvec2(0u, 0u), uvec2(0u, 0u))))) << uvec2(0u, 0u))))) | 0u : (subgroup_local_id)))) * (uint(uvec4(workgroup_id, 0u, 1u, (0u ^ (((false ? (subgroup_size) : (min(1u, 1u)))))))))), ~ ((((((uint(uvec2(workgroup_size, 1u))) - 0u))) | 0u) * (uint(uvec4(workgroup_id, 0u, 1u, 1u)))), ~ ((((((uint(uvec2(workgroup_size, 1u)))) | 0u) * (uint(uvec4(workgroup_id, 0u, 1u, ((clamp((uint(uvec2(((((uint(uvec3(1u, 0u, 0u))) + 0u))), 0u))) + (0u & 85305u), (uint(uvec2(((((uint(uvec3(1u, 0u, 0u))) + 0u))) + (0u & 85305u), (0u ^ 0u)))), ((false ? (subgroup_size) : ((((uint(uvec3(1u, 0u, 0u))) + 0u))) + (((max((0u & 85305u), (0u & 85305u)))) >> 0u)))))))))) - (clamp(((0u) ^ 0u), 0u, 0u)))))))) | ((((~ (~ (clamp(~ (((((false || (true)) ? ((uint(((((uvec2(workgroup_size, 1u)) ^ uvec2(0u, 0u))) << uvec2(0u, 0u))))) | 0u : (subgroup_local_id)))) * (uint(uvec4((~ (~ (workgroup_id))), 0u, 1u, 1u)))), ~ ((((uint(uvec2(workgroup_size, 1u)))) | 0u) * (uint((clamp(uvec4(workgroup_id, 0u, 1u, 1u), (((~ (~ (uvec4(workgroup_id, 0u, 1u, 1u))))) * uvec4(1u, 1u, 1u, 1u)), uvec4(workgroup_id, 0u, 1u, 1u)))))), ~ ((clamp((((((uint(uvec2(workgroup_size, 1u)))) | 0u) * (uint(uvec4(workgroup_id, 0u, 1u, (((((min((~ (((~ ((uint(uvec3(1u, 0u, 0u))))) - 0u))), (clamp((uint(uvec3(1u, 0u, 0u))), (uint(uvec3(1u, 0u, 0u))), (uint(uvec3(1u, 0u, 0u))))))) + 0u))) + (0u & 85305u)))))) / 1u), (((uint(uvec2(workgroup_size, 1u)))) | 0u) * (uint(uvec4(workgroup_id, 0u, 1u, (((((uint(uvec3(1u, 0u, 0u))) + (max(0u, 0u))))) + (0u & 85305u))))), (((uint(uvec2(workgroup_size, 1u)))) | 0u) * (((false ? (subgroup_id) : (0u | (uint(uvec4(workgroup_id, 0u, 1u, (((max((((uint(uvec3(1u, 0u, 0u))) + 0u)), (0u | ((((uint(uvec3(1u, 0u, 0u))) + 0u))))))) + (((0u) >> 0u) & 85305u)))))))))))))))))))));
 uint virtual_gid = ((true ? ((min(((max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + ((subgroup_id) + (0u << (((uint(8u)) >> (0u & 39902u))))) * subgroup_size + subgroup_local_id)) >> 0u), max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) : (((clamp((uint(uvec3((workgroup_base), 0u, 0u))), (workgroup_base), (workgroup_base)))) - (0u << (((uint(8u)) >> 0u))))));
 uint next_virtual_gid = ((((((((((~ (((~ ((((0u | 0u) | (0u | 0u))) | (((workgroup_base) / uint((clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))))))) | (~ ((((0u | 0u) | (0u | 0u))) | (((workgroup_base) / uint((clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))))) ^ 0u) / 1u)) + subgroup_id * subgroup_size + ((min((max((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size)) << 0u) * uint((injectionSwitch.y))));
 buf[virtual_gid] = 1;
 if((clamp(((subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   ((buf[next_virtual_gid] = ((((true ? ((injectionSwitch.x > injectionSwitch.y)) ? (- 48540) : (((false ? (- 52258) : (2))) + 0) : (- 52071)))))) - 0u);
   subgroupAll(false);
  }
 else
  {
   buf[next_virtual_gid] = (0 + (0 ^ ((((2)) << int(((1.0 * ((min(injectionSwitch.x, injectionSwitch.x))))))))));
   subgroupAll((bool(((bvec3(bvec3((bvec3(bvec3((bvec3((bvec3(bvec3((bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(true, true, false), true)))))))))))))))))))));
  }
}
