#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((((! (! (((! (! (bool(bool((bool(bvec2((injectionSwitch.x > (min(injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])))).y), false)))))))))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if((((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(((bool(bvec2(false, true)))))
  return;
 uint next_virtual_gid = (1u * (workgroup_base + subgroup_id * subgroup_size + ((min((((0u | ((~ (~ ((subgroup_local_id + 1))))))) >> 0u), (subgroup_local_id + 1))) % subgroup_size)));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(((((! (true && ((true && ((! (false))))))) && (true && ((bool(bvec2(true, false)))))))))
    return;
   buf[next_virtual_gid] = 2;
   if((((((false || ((false || (true)))) && ((false || (bool(bvec4((bool((bool(bvec2(bool((((((! (! ((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y)))) || false)) && true))), false))))), false, false, true))))))))))
    return;
   subgroupAll(false);
  }
 else
  {
   buf[next_virtual_gid] = 2;
   subgroupAll((((bool((! (! (bool((false || (true)))))))) && true)));
   if((((! (! (((((mat2(1.0) * ((exp(vec2(0.0, 0.0)) * (injectionSwitch)))).x > injectionSwitch.y)) && true)))))))
    return;
  }
}
