#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((bool(bvec4((injectionSwitch.x > (min((mix(float((max(injectionSwitch.y, injectionSwitch.y))), float((6.7)), bool(false))), (clamp((mix(float((max(injectionSwitch.y, injectionSwitch.y))), float((6.7)), bool(false))), (mix(float((max(injectionSwitch.y, injectionSwitch.y))), float((6.7)), bool(false))), (mix(float((max(injectionSwitch.y, injectionSwitch.y))), float((6.7)), bool(false)))))))), ((injectionSwitch.x > injectionSwitch.y)), false, ((injectionSwitch.x < injectionSwitch.y)))))))) || false))
      {
       if((false))
        barrier();
       if((((true && ((! (! ((((((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true)))
        {
         if((false || (((((bool((bvec3(bvec4(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y))), true))))) || false))))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if(((bool(bvec2((false || (false)), false)))))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
            return;
           barrier();
          }
         return;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if(((! ((true && (! (((injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((((mix(float((mix(float(injectionSwitch.x), float((- 5510.7282)), bool(false)))), float((0.9)), bool(false))) > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if(((true && (false))))
        {
         if((false))
          barrier();
         return;
        }
       if((((false) || false)))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(((((mix(float((- 9.1)), float((1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
        }
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((false))
        return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((! ((false || ((! (! (! (((((((bool((bvec2(bvec4((bvec2(bvec4(bvec2(((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y)), false), false, (true && (false))))), false, true)))))) && ((injectionSwitch.x < injectionSwitch.y)))) && true)))))))))))
    return;
   if(((! (! ((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((bool(bool(bool(bvec4(false, false, true, ((injectionSwitch.x < injectionSwitch.y))))))))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((false)) && true))
  {
   if((false))
    {
     if((((injectionSwitch.x > (mix(vec2((float(((mat2x3(((true ? (injectionSwitch)[0] : (- 63.95))), 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (3842.8655)), vec2((vec3(- 30.15, - 62.71, - 94.89).z), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  return;
 if((! ((! ((bool(bvec3(! (! ((false))), false, true))))))))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((((false) || (((! ((! (! (! ((false || (false))))))))) || false))))
  barrier();
 if((false))
  {
   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > ((((injectionSwitch.x > injectionSwitch.y)) ? (373.183) : ((false ? (- 751.195) : injectionSwitch.y))))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((((((bool(bool((bool((false || (bool(bool(bvec3(((((injectionSwitch.x > injectionSwitch.y)) ? (injectionSwitch) : (vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y, false, true)))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false || ((false))))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((true && ((((((min(injectionSwitch, injectionSwitch)).x > (min(injectionSwitch, injectionSwitch)).y) || false)))))))
  {
   if((false))
    return;
   if((false))
    {
     if((((false || ((injectionSwitch.x > ((vec2(0.0, 0.0) + ((vec2(mat2(vec2((mat2x3(((mat3x4((transpose(transpose(mat2x3(injectionSwitch, 1.0, exp(0.0), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0)))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0)))))).y))))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((((false) || false)))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((! ((((bool(bvec2(! ((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y))), false))) && true)))))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    return;
   if((((false || (! (! (false)))))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! ((bool((bvec2(bvec2(bvec2(! ((! (! (((injectionSwitch.x > injectionSwitch.y)))))), true))))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if(((bool(bvec2((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))), ((injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if((! (! ((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if(((bool(bool((bool(bvec3(bool(bvec4((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), true, ((injectionSwitch.x < injectionSwitch.y)), false)), true, true))))))))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(((((((! (! (false))) && true))) || false)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(((bool(bvec4(false, false, true, true)))))
      barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))) && true))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > (mix(vec2((vec3(- 8.3, 2.6, 4368.4879).z), ((6.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
     barrier();
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), (max(float((238.125)), (mix(float(float((238.125))), float((582.506)), bool(false))))), bool(((false) || false))))))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 uint workgroup_size = ((gl_WorkGroupSize.x) * 1u);
 if((false))
  return;
 if((false))
  return;
 uint workgroup_id = (max((~ ((clamp(((~ ((clamp(gl_WorkGroupID, ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)) >> 0u), ~ ((clamp(gl_WorkGroupID, ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x), ~ ((clamp(gl_WorkGroupID, ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x))))), gl_WorkGroupID.x));
 uint workgroup_base = (((((((max(workgroup_size, workgroup_size)) ^ 0u))) | ((true ? (workgroup_size) : (165644u)))) * (max((min(workgroup_id, workgroup_id)), (~ (~ ((min(workgroup_id, workgroup_id)))))))) | ((((max(workgroup_size, (uint(((false ? (uvec4(2606u, 163324u, 44029u, 74114u)) : uvec4(workgroup_size, uint((injectionSwitch.y)), 1u, 1u)))))))) | ((true ? (workgroup_size) : (165644u)))) * (min(workgroup_id, workgroup_id))));
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((true && ((false)))) && true))
  {
   if((false))
    barrier();
   if((bool(bvec3((((false)) && true), true, true))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if(((((! (! (bool(bvec4(((bool((bool((bvec2(bvec4(bvec2(bool((bool(bool(false)))), true), false, false))))))) && true), ((injectionSwitch.x > injectionSwitch.y)), false, ((injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   barrier();
   if(((bool(bvec4(false, false, true, ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    {
     if((false))
      {
       if(((true && (false))))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((false ? (1.6) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * (min((~ (~ (subgroup_size))), subgroup_size)) + ((((1u * (((0u | (((subgroup_local_id + 1) % subgroup_size))))))) | ((1u * (((0u | (((subgroup_local_id + 1) % subgroup_size)))))))) / 1u);
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((false || (false))))
  return;
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if(((true && (false || ((false))))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          return;
        }
       barrier();
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((! (bool(bvec2((! ((((false)) && true))), false)))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((! (! ((! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((bool(bvec4(bool(bvec4(false, true, false, true)), false, true, true))))))))))))))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
       if((false))
        return;
       if((false))
        return;
       if(((((! (! (((injectionSwitch.x > injectionSwitch.y) && true))))))))
        return;
      }
     barrier();
     if((false))
      return;
    }
   return;
  }
 if(((((((injectionSwitch.x < injectionSwitch.y)) && ((false || (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   return;
   if(((! (! (false)))))
    barrier();
  }
 if(((((0u | (((((uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u))) / 1u)) | ((min(uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u)), (clamp(uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u)), uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u)), uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u))))))))))) | 0u)) < subgroup_size)
  {
   if((! (! ((false)))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
     if((false))
      {
       if(((! (! (false)))))
        return;
       barrier();
      }
    }
   if((false))
    return;
   buf[next_virtual_gid] = 2;
   subgroupAll((false || (false)));
   if(((! (! (false)))))
    return;
   if((false))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((((bool(bvec3((false || ((((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)), false))) && true)))
      return;
     barrier();
    }
   ((buf[next_virtual_gid] = 2) / ((1u) ^ 0u));
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   if((bool(bvec4((true && ((false))), false, ((injectionSwitch.x > injectionSwitch.y)), false))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if(((! (! (((false) || false))))))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((! (! (((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   subgroupAll(((true) && true));
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((! (! ((! (((! ((! ((bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true))))))) && true))))))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((((false)) && true))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))) && ((injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((! (! (false)))))
      return;
     return;
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
}
