#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > ((false ? (sin(injectionSwitch)) : injectionSwitch)).y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((! (! (false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if((((! (! ((bool(bool((! (! ((((false) && true))))) || (bool(bvec2(false, true))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint workgroup_size = (((max(gl_WorkGroupSize, gl_WorkGroupSize)) | ((min((uvec3(0u, 0u, 0u) | (max(gl_WorkGroupSize, gl_WorkGroupSize))), max(gl_WorkGroupSize, gl_WorkGroupSize)))))).x;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 uint workgroup_base = workgroup_size * (((uint(uvec3((max(workgroup_id, workgroup_id)), 0u, 0u)))) | ((uint(uvec3((max(workgroup_id, workgroup_id)), 0u, 0u)))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((max((max(((max(workgroup_base + subgroup_id * subgroup_size + (((((((max(subgroup_local_id + 1, (max(subgroup_local_id, subgroup_local_id)) + 1))) | (subgroup_local_id + 1))) + 0u)) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (uint(uint((((((false ? (workgroup_size) : ((((((max(subgroup_local_id + (min(1, 1)), (1u * ((max(subgroup_local_id, subgroup_local_id)) + 1)))) << uint((((injectionSwitch.x)) / 1.0))))) | (subgroup_local_id + 1))) + (1u * (0u)))))) % subgroup_size))))))), ((max(workgroup_base + subgroup_id * subgroup_size + (((((((max(subgroup_local_id + 1, (max(subgroup_local_id, subgroup_local_id)) + 1))) | (subgroup_local_id + 1))) + 0u)) % subgroup_size), (~ (~ ((clamp(workgroup_base + subgroup_id * subgroup_size + (uint(uint((((((false ? (workgroup_size) : ((((((max(subgroup_local_id + (min(1, 1)), (1u * ((max(subgroup_local_id, subgroup_local_id)) + 1)))) << uint((injectionSwitch.x))))) | (subgroup_local_id + 1))) + (1u * (0u)))))) % subgroup_size)))), (uint(uvec4(workgroup_base + subgroup_id * subgroup_size + (uint(uint((((((false ? (workgroup_size) : ((((((max(subgroup_local_id + (min(1, 1)), (1u * ((max(subgroup_local_id, subgroup_local_id)) + 1)))) << uint((injectionSwitch.x))))) | (subgroup_local_id + 1))) + (1u * (0u)))))) % subgroup_size)))), 1u, 0u, 1u))), ((workgroup_base + subgroup_id * subgroup_size + (uint(uint((((((false ? (workgroup_size) : ((((((max(subgroup_local_id + (min(1, 1)), (1u * ((max(subgroup_local_id, subgroup_local_id)) + 1)))) << uint((injectionSwitch.x))))) | (subgroup_local_id + 1))) + (1u * (0u)))))) % subgroup_size))))) | (workgroup_base + subgroup_id * subgroup_size + (uint(uint((((((false ? (workgroup_size) : ((((((max(subgroup_local_id + (min(1, 1)), (1u * ((max(subgroup_local_id, subgroup_local_id)) + 1)))) << uint((injectionSwitch.x))))) | (subgroup_local_id + 1))) + (1u * (0u)))))) % subgroup_size)))))))))))))))), ((max(workgroup_base + (min(subgroup_id, subgroup_id)) * subgroup_size + (((((((max(subgroup_local_id + 1, (max(subgroup_local_id, subgroup_local_id)) + 1))) | (subgroup_local_id + 1))) + 0u)) % subgroup_size), workgroup_base + (max((min((0u ^ (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + (((uint(uint((((((((((max(subgroup_local_id + (min(1, 1)), (1u * (((((min(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))) / 1u)) + 1)))) << uint((injectionSwitch.x))))) | (subgroup_local_id + 1))) + (1u * (0u)))) % subgroup_size))))) / 1u)))))) >> uint(((min((mix(float(injectionSwitch.x), float((495.143)), bool(false))), injectionSwitch.x)))));
 if((false))
  {
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(((! (! ((! (! (((false) && true)))))))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 buf[virtual_gid] = 1;
 if(((subgroup_local_id + (clamp((min(1, ((1) ^ 0))), (((false || (false)) ? ((min(- 8634, - 8634))) : 1)), ((1) / 1))) < subgroup_size) && ((injectionSwitch.x < injectionSwitch.y))))
  {
   ((buf[next_virtual_gid] = 2) >> 0u);
   if((((injectionSwitch.x > (max((((float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), ((injectionSwitch.y) / 1.0)))))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   subgroupAll(false);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
    }
   if(((true && (((false || (((true && (false))))) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
       if(((true && (false))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
        }
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   (0u ^ (buf[next_virtual_gid] = 2));
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(true);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((true && ((false)))) && true))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if((false))
    return;
   if(((bool(bool(false)))))
    return;
   return;
   if((false))
    return;
  }
}
