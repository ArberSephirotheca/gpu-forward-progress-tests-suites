#version 460

struct _GLF_struct_31 {
 uvec2 _f0;
 uint _f1;
 mat3 _f2;
 ivec2 _f3;
 mat2 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_32 {
 ivec4 _f0;
 _GLF_struct_31 _f1;
} ;

struct _GLF_struct_29 {
 int _f0;
 int _f1;
 mat2x3 _f2;
 bool _f3;
 int _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
 mat4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_27 {
 bvec4 _f0;
 uint _f1;
 uvec4 _f2;
 float _f3;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
 uvec4 _f1;
 bool _f2;
 mat3x2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_30 {
 uvec2 _f0;
 vec2 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 mat4x2 _f4;
 _GLF_struct_28 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 uvec2 _f1;
 mat4 _f2;
 float _f3;
 mat2x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 int _f1;
 vec3 _f2;
} ;

struct _GLF_struct_22 {
 uvec2 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 mat2x3 _f1;
 _GLF_struct_23 _f2;
 ivec2 _f3;
 _GLF_struct_24 _f4;
 mat2x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 mat2x4 _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 mat3 _f1;
 vec2 _f2;
 bvec2 _f3;
 mat3 _f4;
 bvec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat2 _f1;
 uvec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 bool _f3;
 _GLF_struct_20 _f4;
 float _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_33 {
 float _f0;
 uint num_workgroup;
 bvec3 _f1;
 bvec2 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_25 _f4;
 _GLF_struct_30 _f5;
 _GLF_struct_32 _f6;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 vec3 _f1;
 uvec4 _f2;
 bvec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 ivec2 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 uvec2 _f3;
 float _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 _GLF_struct_11 _f1;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 mat4 _f1;
 float _f2;
 bvec4 _f3;
 ivec3 _f4;
 mat4x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 bvec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat4x2 _f3;
 uint _f4;
 bvec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_7 _f3;
 uint subgroup_size;
 mat4x2 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12;
 if((false))
  {
   if(((((! (! (false)))) || false)))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! ((true && (false)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (float(((false ? (- 23.63) : float((clamp(injectionSwitch.y, injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((! ((((true && (! ((bool(bool(false)))))) && true))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((! (! ((true && (((((! (! ((((! (! (false)))) && true))))) && true))))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > ((false ? (injectionSwitch) : injectionSwitch)).y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false || ((false || ((((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((false || (bool(bvec2(((((bool(bvec4(false, false, true, true))) && true))), true))))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec3(false, true, true)))))
    barrier();
   if((((bool(bvec2((((injectionSwitch) + log(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), true))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec2(1), _GLF_struct_0(mat3x2(1.0), 1u), _GLF_struct_3(_GLF_struct_1((((((~ (((~ (((ivec4(1)) ^ ivec4(0, 0, 0, 0))))) << ivec4(0, 0, 0, 0))))) | ivec4(0, 0, 0, 0)) + (((ivec4(- 75123, 83414, 49948, - 56806) & ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)))), mat4x3(1.0), mat3(1.0), mat4x2(1.0), 1u, bvec4(true), uvec2(((((min((((1u)) | 0u), (1u)))) ^ 0u) / 1u))), _GLF_struct_2(mat4x2((float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0), _GLF_struct_7(mat3x2(1.0), mat4((max((min(1.0, ((1.0) * ((1.0) / 1.0)))), (clamp(1.0, (clamp(1.0, 1.0, 1.0)), (clamp(1.0, 1.0, 1.0))))))), _GLF_struct_4(uvec3(1u), uvec3(1u), mat4x3(1.0)), _GLF_struct_5(vec3(1.0)), _GLF_struct_6(((ivec2(0, 0) << (ivec2(1))) ^ (ivec2(1))), ((mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, (min((mix(float(1.0), float((687.360)), bool(false))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), 1.0, bvec4(true), ivec3(1), mat4x3(1.0), 1u), bvec4(true), mat3x2(1.0)), gl_SubgroupSize, mat4x2(1.0));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false || (((((! (! (((((((clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), ((true ? max(injectionSwitch.x, injectionSwitch.x) : (- 9.9)))))) > ((injectionSwitch.y) - length(vec2(0.0, (min((min(0.0, 0.0)), 0.0)))))))) || false))))) && true)))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((((false) && true)) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false) && true)))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec4((false || (false)), (bool(bvec4(false, true, false, true))), false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(1.0, gl_NumWorkGroups.x, bvec3(true), bvec2(true), _GLF_struct_21(_GLF_struct_17(mat3(1.0), uvec4(1u)), _GLF_struct_18(ivec2(1), mat2((clamp(1.0, 1.0, (mix(float(1.0), float((vec2(- 9.4, - 419.653).y)), bool(false)))))), uvec3((clamp((uint((injectionSwitch.x)) ^ (1u)), (clamp((~ (~ (1u))), 1u, 1u)), ((1u) / 1u)))), bvec3(true)), _GLF_struct_19(((min(min((~ ((clamp(~ ((~ (~ (uvec2(1u))))), ~ ((~ (~ (((uvec2(1u)) | ((min(uvec2(1u), uvec2(1u))))))))), ~ ((~ (((~ (uvec2(1u))) | uvec2(0u, 0u))))))))), uvec2(1u)), (max(min((~ ((clamp(~ ((~ (~ (uvec2(1u))))), ~ ((~ (~ (((uvec2(1u)) | ((min(uvec2(1u), uvec2(1u))))))))), ~ ((~ (((~ (uvec2(1u))) | uvec2(0u, 0u))))))))), uvec2(1u)), min((~ ((clamp(~ ((~ (~ (uvec2(1u))))), ~ ((~ (~ (((uvec2(1u)) | ((min(uvec2(1u), uvec2(1u))))))))), ~ ((~ (((~ (uvec2(1u))) | uvec2(0u, 0u))))))))), uvec2(1u))))))), mat3(1.0), vec2(1.0), bvec2(true), mat3(1.0), bvec2(true), ivec3(1)), true, _GLF_struct_20(bvec2(true), mat2x4(1.0), true, mat4(1.0)), 1.0, ivec4(1)), _GLF_struct_25(_GLF_struct_22(uvec2(1u)), mat2x3(1.0), _GLF_struct_23(vec4(1.0), 1, vec3(1.0)), ivec2(1), _GLF_struct_24(ivec3(1), uvec2(1u), mat4(1.0), 1.0, mat2x3(1.0), mat3x2(1.0)), mat2x3((0.0 + (1.0))), mat2x3(1.0)), _GLF_struct_30(uvec2(1u), vec2(1.0), _GLF_struct_26(ivec4(1), uvec4(1u), true, mat3x2(1.0), uvec3(1u)), _GLF_struct_27(bvec4(true), 1u, ((uvec4(1u)) << ((uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1.0), mat4x2(1.0), _GLF_struct_28((min((clamp(ivec3(1), ivec3(1), ivec3(1))), ivec3(1))), mat4(1.0), mat3(1.0)), _GLF_struct_29(1, 1, mat2x3(1.0), true, 1, mat2x3(1.0))), _GLF_struct_32(ivec4(1), _GLF_struct_31(uvec2(1u), 1u, mat3(1.0), ivec2(1), ((mat2(1.0)) * mat2(1.0)), ivec2(((1) | ((~ (~ (1)))))), 1)));
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.y = _GLF_struct_replacement_33.num_workgroup;
 if((false))
  {
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 if(((bool(bvec4(false, true, true, true)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false)) && true))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 if((! (! ((false)))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((! (! ((true && ((bool(bvec4((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)), (! (((! (true)) && true))), false))), true, true, true)))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((! (! ((((false)) && true)))))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = (uvec3(uvec4(gl_WorkGroupID, 1u))).x;
 if((false))
  barrier();
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(((false || (false))))
  {
   if(((false || (((false || (bool(bool(false)))))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((true && ((false))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((! ((bool(bvec3(! ((false)), false, false))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false || ((false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((false))
      barrier();
     if(((! (! ((true && (false)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if((false))
  {
   if((((((((vec2(mat2(injectionSwitch, 1.0, (((true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : (8.2))))))).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(bvec4(true), ivec2(1), _GLF_struct_13(bvec3(true), vec3(1.0), uvec4(1u), bvec2(true), mat4(1.0)), _GLF_struct_14(bvec4(true), GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x)), uvec2(1u));
 if((false))
  {
   if((false))
    barrier();
   if(((bool(bool(false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! (! ((false)))) || false)))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 uint virtual_gid = (~ (~ ((((uint(uvec3((min(_GLF_struct_replacement_16._f0._f3.workgroup_base + _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_struct_replacement_8.subgroup_size + _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_struct_replacement_16._f0._f3.workgroup_base + _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_struct_replacement_8.subgroup_size + _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)), 0u, 1u)))) >> 0u))));
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z = (((true && (true)) ? virtual_gid : (virtual_gid)));
 if((false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_16._f0._f3.workgroup_base + _GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_struct_replacement_8.subgroup_size + ((_GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % _GLF_struct_replacement_8.subgroup_size);
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x = (uint(uvec4(((next_virtual_gid) - 0u), (0u >> (((uint(4u)) / 1u))), (0u | 0u), uint((injectionSwitch.x)))));
 if(((bool(bvec3(bool(bool((((injectionSwitch.x > injectionSwitch.y))))), true, true)))))
  barrier();
 if(((((bool(bvec2(false, true)))) && ((injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(((((((false || (! (! ((((bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), false, (bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, false))), true))))))))))) || false))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! ((((injectionSwitch.x > injectionSwitch.y)) || (! ((((! ((((! (! (((((injectionSwitch.x < injectionSwitch.y)) && (true && (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z] = 1;
 if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    barrier();
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((clamp((984.881), (((984.881)) * 1.0), (984.881)))), bool(false)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(_GLF_struct_replacement_12.GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + (~ (min(((clamp(~ (int(ivec2((1), 1))), ~ (1), ~ (1)))), ((clamp(~ (int(ivec2((1), 1))), ~ (1), ~ (1))))))) < _GLF_struct_replacement_8.subgroup_size)
  {
   buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x] = 2;
   if(((bool(bool(false)))))
    barrier();
   subgroupAll(false);
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
   buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if((false))
    {
     if(((! (((false || ((! (bool(bvec3((false), true, false))))))) && true))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
}
