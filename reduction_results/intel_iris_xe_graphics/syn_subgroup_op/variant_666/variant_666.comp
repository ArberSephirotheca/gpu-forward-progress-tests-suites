#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(((((bool(bvec3(injectionSwitch.x > (max(injectionSwitch.y, ((injectionSwitch.y) / 1.0))), true, true)))))))
  return;
 if((false))
  return;
 if(((! ((false || (! ((bool((bvec2((((bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(((bvec2(bvec4((bvec2(bvec4((bvec2(bvec2(bvec2(bvec4(bvec2((bvec2(bvec3(bvec2((! (! (! ((((! (! ((! ((false || ((false || (false))))))))) || false)))))), true), true)))), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x < injectionSwitch.y)), false))), true, false)))), false, false)), (! (((! (((true) && true))) || false))), false)), true, true))))))))))))))))
  return;
 if((((false) || false)))
  return;
 if(((! (! ((! (! (false))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((false)) && true))
  return;
 if((((((injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + (((false ? (workgroup_id) : ((((((uint((injectionSwitch.x)) ^ (0u | ((false ? (workgroup_size) : subgroup_id * (((max(uint((uvec2(0u, 0u) | ((uvec2(uvec3(uvec2((subgroup_size), 1u), 0u)))))), uint((uvec2(0u, 0u) | ((uvec2(uvec3(uvec2((subgroup_size), 1u), 0u))))))))) | 0u)))))) << 0u)))) >> 0u))) + (0u + (((((((subgroup_local_id + (0 + ((true ? (min((1), (int(ivec2((1), 1))))) : (- 29856))))) | (((((subgroup_local_id + (clamp(1, (max(1, 1)), (int(((true ? ivec2(1, 1) : (ivec2(- 80916, - 76256)))))))))) + 0u)) - 0u)))) - 0u) % subgroup_size)));
 ((((((bool(bvec3(bool(bvec4((false || ((false || ((bool(bvec3(((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y)))), true, true))))))), true, false, false)), true, true)))) ? (119132u) : buf[virtual_gid] = 1))) | (0u << (uint(5u))));
 if(((bool(bool(false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((false || (false))) && true)))
    return;
   return;
   if(((! (! (false)))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > (mix(((((float(mat4x2(float(mat3(((float((1754.6151))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / round(length(normalize(vec2(1.0, 1.0)))))), float((1.0 * (injectionSwitch.y))), bool(true)))))))
  return;
 if((false))
  return;
 if(subgroup_local_id + (0 | (1)) < subgroup_size)
  {
   if((false))
    return;
   buf[next_virtual_gid] = 2;
   subgroupAll(((bool(bvec3(bool(bvec4(false, true, false, true)), true, false)))));
  }
 else
  {
   if(((true && (false))))
    return;
   if((((((true && ((false)))) && true)) || false))
    {
     if((false))
      return;
     return;
    }
   buf[next_virtual_gid] = 2;
   if((((false)) || false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   subgroupAll(true);
   if((false))
    return;
   if((((injectionSwitch.x > ((max((dot(vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(1.0, 1.0, 0.0))), (dot(vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(1.0, 1.0, 0.0))))) + ((vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y))))))
    return;
   if(((((false || (false))) || false)))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
