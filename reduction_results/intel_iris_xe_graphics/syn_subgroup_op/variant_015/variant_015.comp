#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((bool(bvec4((((((! (! (bool(bvec2((true && (((false)))), false)))))) || false)) && true), true, ((((injectionSwitch.x > injectionSwitch.y))) && true), false))))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((((injectionSwitch.x > injectionSwitch.y) && true)) || false)))))
    return;
   return;
   if((false))
    return;
  }
 if(((((((clamp((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((bool(bvec4((false), true, true, false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (~ (~ (gl_NumWorkGroups.x)));
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((((((((clamp((((injectionSwitch.x) + 0.0)), (((injectionSwitch.x) + 0.0)), (((injectionSwitch.x) + 0.0))))) / 1.0) - 0.0) > (clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) / determinant(mat2(1.0, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if(((! (! (false)))))
      return;
     if((false))
      {
       if(((((mix(vec2((clamp((float(mat3x4((injectionSwitch)[0], 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))), (injectionSwitch)[0], (injectionSwitch)[0])), (- 8.4)), vec2((8610.2383), (injectionSwitch)[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))).x > (clamp(injectionSwitch.y, injectionSwitch.y, (min((min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
        return;
       if((((false) && true)))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((((false) || false)) || false)))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint workgroup_size = (uvec3((max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))).x;
 if(((true && (false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if(((((vec2(mat3(injectionSwitch, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = ((gl_WorkGroupID.x) - 0u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = (min((((((uint((injectionSwitch.x)))) | 0u) << 0u) | (workgroup_base + subgroup_id * subgroup_size + (max(subgroup_local_id, subgroup_local_id)))), (uint((injectionSwitch.x)) | ((max(((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | 0u), ((((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u)) | 0u)))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((bool(bvec3(false, false, false)))))
  return;
 if(((((! (! (((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, ((injectionSwitch.x > injectionSwitch.y)), true))) && true))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = ((min((max((workgroup_base + subgroup_id * (max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + subgroup_id * (uint(uvec3((clamp((uint(uvec2(((min(((~ ((~ (~ (~ (subgroup_size))))))), ((max((~ ((~ (~ (~ (subgroup_size)))))), (min((~ ((((~ (~ (~ (subgroup_size)))))) | (0u & 65769u))), (~ ((~ (~ (~ (subgroup_size))))))))))))) << 0u), (uint((0u | (uint(((1u) | (1u)))))))))), subgroup_size, ((0u << (uint(4u))) ^ (subgroup_size)))), 0u, 0u))) + ((((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + (0 | (1))) % subgroup_size)))), (workgroup_base + subgroup_id * (max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + subgroup_id * (uint(uvec3((clamp((uint(uvec2(((min(((~ ((~ (~ (~ (subgroup_size))))))), ((max((~ ((~ (~ (~ (subgroup_size)))))), (min((~ ((((~ (~ (~ (subgroup_size)))))) | (0u & 65769u))), (~ ((~ (~ (~ (subgroup_size))))))))))))) << 0u), (uint((0u | (uint(((1u) | (1u)))))))))), subgroup_size, ((0u << (uint(4u))) ^ (subgroup_size)))), 0u, 0u))) + ((((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + (0 | (1))) % subgroup_size)))))), (workgroup_base + subgroup_id * (max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + subgroup_id * (uint(uvec3((clamp((uint(uvec2(((min(((~ ((~ (~ (~ (subgroup_size))))))), ((max((~ ((~ (~ (~ (subgroup_size)))))), (min((~ ((((~ (~ (~ (subgroup_size)))))) | (0u & 65769u))), (~ ((~ (~ (~ (subgroup_size))))))))))))) << 0u), (uint((0u | (uint(((1u) | (1u)))))))))), subgroup_size, ((0u << (uint(4u))) ^ (subgroup_size)))), 0u, 0u))) + ((((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + (0 | (1))) % subgroup_size)))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if(((! (! (bool(bool((false || ((((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((! (! (((injectionSwitch.x < injectionSwitch.y)) && ((! (! ((false))))))))))
  return;
 if(((((! (((! ((((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))) && true)))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((bool(bvec4((false), true, ((false) && true), true))))
    {
     if((((bool(bvec3((false) || ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), true))))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((bool(bvec3((! (! (((bool(bvec3(((((injectionSwitch.x > injectionSwitch.y))) && true), true, false))))))), false, ((true) && true)))))
    {
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if(((bool(bvec2(false, true)))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if((false))
        return;
       return;
       if((false))
        return;
       if((bool(bvec3((false), true, ((injectionSwitch.x < injectionSwitch.y))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch) * vec2((injectionSwitch.y), (injectionSwitch.y))).x > injectionSwitch.y))))
          {
           if((false))
            return;
           if((false))
            return;
           if((false))
            return;
           return;
          }
         if((false))
          return;
         return;
         if((false))
          return;
        }
      }
     if((false || (((((mix(float(injectionSwitch.x), float((vec4(13.76, 48.85, - 79.30, - 581.067).t)), bool(((injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((false) || false)))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if(((((float(mat4(((mix(float(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), float((- 369.822)), bool(false)))), 0.0, (dot(vec3((((min(((mix(float((- 4.9)), float((0.0) - 0.0), bool(true)))), 0.0))) / 1.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))), 1.0, 1.0, determinant(mat3((mix(float((vec4(- 512.617, - 1301.8309, 578.827, 2.0).g)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, (min(0.0, 0.0)), 0.0, 1.0, 0.0)), 1.0, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, tan(0.0), 0.0))), 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0))) > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         if(((bool(bvec4(false, true, true, false)))))
          return;
         return;
        }
       if((((injectionSwitch.x > (min(((false ? (5.1) : injectionSwitch.y)), injectionSwitch.y))))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   ((buf[next_virtual_gid] = 2) - (uint((injectionSwitch.x)) ^ (0u)));
   if(((! (! (false)))))
    return;
   if(((((! ((! (! (! (((true && (bool(bvec3((bool((bvec3((bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true, true)))) && true)))))))))))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         return;
        }
       return;
       if((false))
        {
         if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(((! (! (false)))))
      return;
     if((false))
      return;
    }
   if(((bool(((false || (bool(bool(((((bool(false)) || false)) && true))))))))))
    {
     if((false))
      return;
     if(((((! (! (((max(vec2(vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, abs((injectionSwitch.y)))), vec2(vec4((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, abs((injectionSwitch.y))))))).x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((false) && true) || (false))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((bool(bool((false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   subgroupAll((! (! (false))));
   if(((! (! (! (! ((! (! ((((bool(bool(((bool(bvec3(false, false, true))) && true))))))))))))))))
    {
     if((((false || ((bool(bvec2(((((((injectionSwitch.x < injectionSwitch.y)) && (! (! ((((false) || false)))))))) && true), true)))))) || false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
   if((false))
    {
     if((((((true ? injectionSwitch : (vec2(- 9.3, - 89.20)))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(((! (! (false)))))
    {
     if((false))
      return;
     return;
    }
   buf[next_virtual_gid] = 2;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if(((((mix(vec2((injectionSwitch)[0], (- 187.680)), vec2((21.86), (injectionSwitch)[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))).x > (max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(((bool(bvec4(false, false, ((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y)), false)))))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           return;
          }
         if((((((((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
          return;
         return;
        }
      }
     if((false || ((false))))
      {
       if((bool(bool((false || ((((((bool((bvec2(bvec2((bvec2(bvec4(bvec2(! ((bool(((bvec2(bvec4(bvec2((bvec2((bvec3(bvec3(bvec3(bvec2(bvec2(! ((bool(bvec2(false, false)))), false)), ((injectionSwitch.x > injectionSwitch.y))))))))), true, true))))))), ((((((injectionSwitch.x < injectionSwitch.y)) ? ((mix(vec2((- 40.70), (3.2)), vec2(((mix(vec2((129.249), (float(- 15474))), vec2((mat2((injectionSwitch.y)) * (injectionSwitch))[0], (mat2(((max((1.0 * (injectionSwitch.y)), ((injectionSwitch.y) / 1.0))))) * (injectionSwitch))[1]), bvec2(true, (false || (true))))))[0], (mat2((injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).x : (((14.19)) / 1.0))) > injectionSwitch.y))), false, ((true) && true)))))))))) || ((false || (! (! (false))))))))))))))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
       if(((! (! (false)))))
        return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((! (((! (((! (! ((! (! (false))))))) && ((injectionSwitch.x < injectionSwitch.y)))) || false))))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((bool(bvec3(bool(bvec2(false, false)), false, true))))))
        return;
       return;
      }
     return;
     if(((bool(bool(false)))))
      return;
     if((false))
      return;
    }
   subgroupAll(true);
  }
}
