#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (max(workgroup_size, (((min((clamp(workgroup_size, ((uint(uvec3(((0u + ((0u | (workgroup_size)))) / 1u), 0u, 1u)))), workgroup_size)), ((workgroup_size) | 0u)))) | (workgroup_size)))) * workgroup_id;
 uint virtual_gid = (min((~ ((((0u ^ (((~ (workgroup_base + (((0u ^ ((uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))))) | ((((min(((0u ^ (((min((1u * (uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))), ((false ? ((~ subgroup_local_id)) : uint(uvec3(subgroup_id * (clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)))))))))) << 0u, ((false ? (subgroup_size) : ((0u ^ ((uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))))) << 0u)))) << 0u))))) + (max(((subgroup_local_id) + ((false ? (subgroup_id) : 0u))), ((max((subgroup_local_id), (subgroup_local_id))) + 0u)))))))) - 0u)) + 0u)), ((false ? (workgroup_base) : (~ (clamp((~ ((min((~ (~ ((uint(uvec3((((uint(uvec3((((uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)))) - 0u), ((uint(uvec3((1u) * uint((injectionSwitch.y)), 1u, 0u)))), 0u)))) - 0u), 1u, 0u)))))), ((min(((true ? ~ (~ (workgroup_base)) : (num_workgroup))), ~ (~ (workgroup_base))))))))), (~ (~ ((1u * ((((~ ((min((uint(uvec3(((max((((min(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), (((clamp(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u))))) >> 0u))))) - 0u, (((min(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), (((clamp(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u))))) >> 0u))))) - 0u))), ((((uint(uvec3((1u) * uint((injectionSwitch.y)), ((1u) | (1u)), 0u))))) ^ 0u), 0u))), ((min(((true ? ~ (~ (~ (~ ((workgroup_base))))) : ((((max(num_workgroup, num_workgroup))) | (num_workgroup))))), (min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))))))))) | ((~ ((min((uint(uvec3(((max((((min(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), (((clamp(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u))))) >> 0u))))) - 0u, (((min(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), (((clamp(uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u)), uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, 0u))))) >> 0u))))) - 0u))), ((((uint(uvec3((1u) * uint((injectionSwitch.y)), ((1u) | (1u)), 0u))))) ^ 0u), 0u))), ((min(((true ? ~ (~ (~ (~ ((workgroup_base))))) : ((((max(num_workgroup, num_workgroup))) | (num_workgroup))))), (min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))))))))))))))), (~ ((min((uint(uvec3(((((false ? (uint(- 1.3)) : (uint(uvec4(workgroup_base, ((1u << (uint(5u))) >> (uint(5u))), 0u, (uint(uvec2(0u, (0u >> (uint(4u)))))))))))) - 0u), ((uint(uvec3(((clamp(1u, (min(1u, 1u)), (~ (~ (1u)))))) * uint((injectionSwitch.y)), 1u, 0u)))), 0u))), ((min(((true ? ~ (~ ((uint(uvec2(workgroup_base, 1u))))) : (num_workgroup))), ~ (((~ (workgroup_base)) | (((~ (workgroup_base)) - 0u)))))))))))))))) + subgroup_id * subgroup_size + subgroup_local_id));
 atomicStore(write_val, ((((0u << (uint(0u))) | ((((true ? (max((min((~ (~ ((min((((((min(((1u) / 1u), ((1u) / 1u)))) * 1u)) / 1u), 1u))))), (min((((((min(((1u) / 1u), ((1u) / 1u)))) * 1u)) / 1u), 1u)))) * (uint(virtual_gid)), (((true ? min((((true && (((injectionSwitch.x > injectionSwitch.y)))) ? (num_workgroup) : 1u)), 1u) : (clamp(59450u, workgroup_base, write_val))))) * (~ ((uint(uint(~ ((1u * ((uint(virtual_gid)))))))))))) - (0u | ((0u) ^ 0u)) : ((-- workgroup_size))))))))), (((((((min((clamp((int(((((ivec3((max(4, 4)), 1, 1)) | ((ivec3(0, 0, 0)) >> ivec3(0, 0, 0)))) >> ivec3(0, 0, 0)))), (int(((((ivec3((max(4, 4)), 1, 1)) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), (int(((((((ivec3((max(4, 4)), 1, 1))) * ivec3(1, 1, 1)) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))), (min((int(ivec3(4, 1, 1))), (((((int(ivec3(4, 1, 1)))) | ((int(ivec3(4, 1, 1)))))) * 1))))) | (min((clamp((int(((((ivec3((max(4, 4)), 1, 1)) | ((ivec3(0, 0, 0)) >> ivec3(0, 0, 0)))) >> ivec3(0, 0, 0)))), (int(((((ivec3((max(4, 4)), 1, 1)) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), (int(((((((ivec3((max(4, 4)), 1, 1))) * ivec3(1, 1, 1)) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))), (min((int(ivec3(4, 1, 1))), (((((int(ivec3(4, 1, 1)))) | ((int(ivec3(4, 1, 1)))))) * 1))))))) | (min((((int((clamp((clamp(ivec3(4, 1, 1), ivec3(4, 1, 1), ivec3(4, 1, 1))), ivec3(((4) ^ 0), 1, 1), ivec3(4, (((max((0 + (((1) | ((clamp(1, 1, 1)))))), (0 ^ ((0 + (((1) | ((clamp(1, 1, 1))))))))))) - 0), 1)))))) / int((injectionSwitch.y))), (min((int((ivec3(0, 0, 0) + (ivec3(4, 1, 1))))), (((int(ivec3(4, 1, 1)))) ^ ((0 ^ (0 << (int(8))))))))))))) - 0), 64, 0);
 (0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(write_val))));
}
