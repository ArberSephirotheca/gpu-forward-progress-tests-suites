#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((((! ((false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((false))
    return;
   return;
  }
 if(((! (! (false))) || (((! ((false || (! (false)))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((! (! ((false)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((((((max(max(((min(vec2(((true ? mat2(injectionSwitch, sqrt(1.0), 1.0) : (mat2(- 27.42, 8847.7976, 873.166, - 4.7))))), vec2(((true ? mat2(injectionSwitch, sqrt(1.0), 1.0) : (mat2(- 27.42, 8847.7976, 873.166, - 4.7)))))))), injectionSwitch), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) && true))
    {
     if(((((! (((! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      return;
     if((bool(bool((false)))))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = ((min((((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(((false || (false))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((bool(bvec4((((! ((false || (! (((((mix(float((clamp(((injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x))), float((97.15)), bool(false))) > injectionSwitch.y)) && true)))))))), false, true, true))))
    return;
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     if((((true && (true)) && (false))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
   if(((((((false || ((cos(0.0) * ((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > (min((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))) || false))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((((((((! (! (! (! ((! (! ((false)))))))))) || false)) && true)) || false)))
  {
   if((((false || (((injectionSwitch.x > injectionSwitch.y)) || ((false || ((false)))))) || (false))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = ((((true ? ((((workgroup_base) / 1u)) | (((false ? (subgroup_size) : workgroup_base)))) : (subgroup_size))) + ((true ? subgroup_id * subgroup_size : (write_val)))) >> uint((injectionSwitch.x))) + (max(subgroup_local_id, subgroup_local_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(virtual_gid), (((min((0 + ((((((1 | 1) ^ 1) ^ (int((injectionSwitch.x)) ^ (((clamp(4, 4, 4))))))) | 0))), (0 + ((((((((1 | 1) ^ 1) ^ (int((clamp((injectionSwitch.x), (injectionSwitch.x), (min((injectionSwitch.x), (injectionSwitch.x)))))) ^ (((clamp(4, 4, 4))))))) - int((injectionSwitch.x)))) | 0)))))) | 0), (~ (~ (64))), 0);
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 (0u | (buf[virtual_gid] = ((~ (~ ((((((clamp(0u, 0u, 0u))) + 0u)) << (((((0u ^ 0u) - 0u) | ((clamp((0u ^ 0u) - 0u, (0u ^ 0u) - 0u, (0u ^ 0u) - 0u))))))) ^ (((0u + (((((injectionSwitch.x < injectionSwitch.y)) ? (uint(subgroupAllEqual((max(write_val, write_val))))) * 1u : (subgroup_local_id)))))))))))));
}
