#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   do
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          break;
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            return;
          }
         if((false))
          continue;
         if((false))
          {
           if((false))
            break;
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if((false))
              return;
             if((false))
              {
               if((false))
                break;
               return;
              }
             return;
             if((false))
              break;
            }
           if(false)
            {
             if((false))
              break;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                continue;
               return;
              }
             return;
            }
           if((false))
            break;
          }
         if((false))
          break;
         if(true)
          {
           do
            {
             if(((true && (false))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  break;
                 return;
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           while(((false) && true));
           if(((bool(bool(false)))))
            continue;
           if((false))
            return;
           if((false))
            {
             if((false))
              return;
             continue;
             if((false))
              return;
            }
          }
         else
          {
           if((((false) && true)))
            continue;
           do
            {
             if((false))
              return;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(true)
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if((false))
            return;
           return;
          }
         else
          {
          }
         if((false))
          return;
        }
       if((false))
        continue;
       if(false)
        {
         if((false))
          break;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            return;
           if((false))
            return;
          }
         else
          {
           if((false))
            return;
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            continue;
           if((false))
            {
             if((false))
              break;
             continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if((false))
          break;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            return;
           return;
           if((false))
            continue;
          }
         else
          {
          }
        }
       if((false))
        break;
      }
     if((false))
      continue;
     if((false))
      {
       if((false))
        break;
       break;
      }
     if((false))
      return;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if(false)
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        continue;
       break;
      }
     if((false))
      {
       if((false))
        return;
       continue;
      }
     if((false))
      continue;
     if(true)
      {
       if((false))
        return;
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
           if(((bool(bool(false)))))
            {
             if((false))
              continue;
             if((false))
              break;
             if((false))
              return;
             if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
              return;
             if((false))
              continue;
             if((false))
              continue;
             break;
            }
           if((false))
            continue;
           if((false))
            continue;
           if((false))
            break;
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               break;
              }
             if((false))
              {
               if((false))
                break;
               continue;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 continue;
                }
               if(((false || (false))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 continue;
                }
               continue;
               if((false))
                return;
              }
             break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              break;
            }
           if((false))
            continue;
           if(((bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), true)))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              break;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    continue;
                   continue;
                  }
                 if((false))
                  return;
                 continue;
                }
               break;
              }
             if((false))
              {
               do
                {
                 if((false))
                  break;
                 return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                {
                 if((false))
                  return;
                 break;
                }
              }
             return;
            }
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             if(((! (! (false)))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               return;
              }
             break;
            }
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if((false))
              return;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               if(((bool(bvec2(false, true)))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               do
                {
                 if(false)
                  {
                   if((false))
                    return;
                  }
                 else
                  {
                   return;
                   if((false))
                    continue;
                  }
                 if((false))
                  continue;
                }
               while(false);
               if((false))
                break;
               if((false))
                break;
               if((false))
                return;
              }
             if((false))
              break;
             return;
             if((false))
              break;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(((! (! (false)))))
            return;
          }
        }
       if((false))
        {
         if((false))
          break;
         if((false))
          {
           if((false))
            break;
           return;
          }
         break;
        }
       if((((((((injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
        continue;
       if((false))
        continue;
       if((false))
        break;
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         if((false))
          continue;
         if(true)
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           if((false))
            {
             if((false))
              return;
             return;
            }
           if((false))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     else
      {
       if((false))
        continue;
       if((false))
        {
         if((false))
          continue;
         return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
     if((false))
      {
       if(((! (! (false)))))
        continue;
       if((false))
        break;
       continue;
      }
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       break;
       if((false))
        continue;
      }
    }
   while(false);
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      return;
     if(((bool((bvec3(bvec4(bvec3(false, false, false), false)))))))
      continue;
     break;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       continue;
      }
     if((false))
      {
       if((false))
        continue;
       break;
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         continue;
        }
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     break;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      break;
     break;
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     do
      {
       return;
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   while(false);
  }
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bool(false)))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((true && (bool(bvec2(false, true)))))))
      {
       for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter != ((1 << (int(5))) >> ((((~ (~ (int(5))))) + 0))); _injected_loop_counter ++)
        {
         return;
        }
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if((false))
    return;
   if(((! (! (false)))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((false) && true)))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      return;
     return;
    }
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      return;
    }
   if((false))
    return;
   if((((false) || false)))
    return;
   do
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           if((false))
            {
             if((false))
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    continue;
                   if((false))
                    return;
                   return;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if((false))
              break;
             return;
            }
           if((false))
            {
             if(((false || ((bool(bool(false)))))))
              continue;
             if((false))
              continue;
             continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if((false))
            continue;
           if(((false || (false))))
            {
             if((false))
              return;
             continue;
            }
           if((false))
            break;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           if((false))
            {
             if((false))
              continue;
             return;
            }
          }
         if((false))
          break;
         if(true)
          {
           if(((! (! (((false) || false))))))
            return;
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         do
          {
           if((false))
            break;
           if((false))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               if((false))
                return;
               continue;
              }
             return;
             if((false))
              break;
            }
           if((false))
            continue;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          break;
         if((false))
          continue;
         if((false))
          return;
         if((false))
          return;
         if((false))
          break;
         for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((false))
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              continue;
             return;
            }
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               if((false))
                return;
               do
                {
                 return;
                }
               while(false);
               if((false))
                {
                 if((false))
                  break;
                 continue;
                }
              }
             if((false))
              return;
            }
           while(false);
           if((false))
            continue;
           if((false))
            continue;
           if((false))
            {
             if((false))
              {
               if((false))
                return;
               return;
              }
             return;
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if((false))
          return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(false)
          {
          }
         else
          {
           if((false))
            return;
           if((false))
            continue;
           if((false))
            return;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             if((false))
              continue;
             return;
            }
          }
         if((false))
          {
           if((false))
            break;
           break;
          }
        }
       if((false))
        {
         if((false))
          break;
         continue;
        }
       if((false))
        return;
      }
     if((false))
      break;
    }
   while(false);
   return;
   if((false))
    return;
   if(((bool((false || (bool(false)))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((false) && true)))
          return;
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
    }
   else
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        break;
       if((false))
        {
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
    }
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(((bool(bvec2(false, false)))))
        {
         if(((true && (((false) && true)))))
          return;
         return;
        }
      }
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(((! ((! (! (! (false))))))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(((true && (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & int((injectionSwitch.y))); _injected_loop_counter ++)
          {
           if((false))
            break;
           return;
           if((false))
            break;
          }
        }
       while((! (! (false))));
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
      }
     return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec3(false, true, true)))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | ((0 >> (int(8))) >> (int(6)))); _injected_loop_counter --)
    {
     return;
    }
   if((((false) || false)))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = (0 >> (int(5))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if(((bool(bool(false)))))
        break;
       return;
       if((false))
        return;
       if((false))
        {
         if((false))
          break;
         break;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if((false))
    return;
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if((false))
        continue;
       return;
      }
     while(false);
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    return;
   if(((bool(bool(false)))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if(false)
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    return;
   if((false))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     else
      {
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
    {
     if((false))
      return;
     if((false))
      return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if((false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if((false))
    break;
   if((false))
    break;
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      break;
    }
   while((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true))));
  }
 while((bool(bvec3(false, true, false))));
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         if((false))
          continue;
         if((false))
          {
           if((false))
            return;
           return;
          }
         break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          break;
        }
       if((false))
        {
         if((false))
          continue;
         break;
         if((false))
          break;
        }
       if((false || (true)))
        {
         if(false)
          {
          }
         else
          {
           if(((bool(bool((true && (((injectionSwitch.x > injectionSwitch.y)))))))))
            break;
           if(false)
            {
            }
           else
            {
             return;
             if((false))
              {
               if((false))
                break;
               break;
              }
             if(((bool(bool((! (! (false))))))))
              return;
            }
           if((false))
            continue;
           if(((false || (false))))
            break;
           if((false))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     do
      {
       if((false))
        {
         if((false))
          break;
         break;
        }
       return;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       break;
      }
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if((false))
        break;
       if((false))
        {
         if((false))
          return;
         continue;
        }
       if((false))
        {
         if((false))
          break;
         return;
        }
      }
     if((false))
      continue;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(true)
      {
       if((false))
        return;
      }
     else
      {
       if((false))
        return;
      }
     if((false))
      return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 do
  {
   if((false))
    {
     do
      {
       return;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 while(false);
 if((false))
  {
   do
    {
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   while(false);
  }
 for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
  {
   if(((bool(bool(false)))))
    {
     if(((! (! ((bool(bvec2(false, true))))))))
      continue;
     if((false))
      break;
     continue;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      break;
     break;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      continue;
     if((false))
      {
       if((false))
        break;
       if((false))
        break;
       return;
      }
     if(false)
      {
      }
     else
      {
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       return;
      }
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    break;
   if((false))
    continue;
   if((false))
    break;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     continue;
    }
   if((false))
    break;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      continue;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      continue;
     break;
    }
   if((false))
    {
     if((false))
      break;
     continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(3))); _injected_loop_counter --)
  {
   if(false)
    {
     if(false)
      {
       if(((true && (false))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        continue;
      }
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          break;
         continue;
        }
       if((false))
        return;
      }
     else
      {
       if((false))
        break;
       if((false))
        continue;
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          continue;
         if((false))
          return;
         continue;
        }
       break;
      }
     if((false))
      break;
    }
   else
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          continue;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            {
             if((false))
              break;
             return;
            }
           return;
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
     if(true)
      {
       do
        {
         if((false))
          continue;
         if((false))
          {
           if(((! (! (false)))))
            {
             if((false))
              continue;
             continue;
             if((false))
              break;
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          {
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               return;
              }
             else
              {
              }
            }
           if((false))
            break;
           if((false))
            continue;
           if(false)
            {
             if((false))
              {
               if((false))
                return;
               continue;
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if((false))
              break;
             if((false))
              continue;
             if((false))
              break;
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                continue;
               if((false))
                return;
              }
             else
              {
              }
             if((false))
              {
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if((false))
                    return;
                   continue;
                  }
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               return;
               if((false))
                {
                 if((false))
                  return;
                 return;
                 if((false))
                  break;
                }
              }
            }
          }
         if((false))
          {
           do
            {
             return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            continue;
           if(((! (! (false)))))
            break;
           return;
          }
         if((false))
          {
           if((false))
            return;
           if((false))
            break;
           if((false))
            continue;
           if((false))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
             return;
            }
           return;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               if(((! (! (false)))))
                break;
               break;
              }
             do
              {
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(false);
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 return;
                }
               if((false))
                continue;
               continue;
              }
            }
           return;
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          continue;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              break;
             break;
            }
           continue;
          }
         return;
        }
       if(((bool(bvec2(false, true)))))
        {
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             return;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              {
               if((false))
                return;
               return;
              }
            }
           else
            {
             if((false))
              continue;
            }
           return;
          }
         while(false);
         if((false))
          continue;
        }
       if(((bool(bvec3(false, false, false)))))
        break;
       if((false))
        return;
       if((false))
        continue;
       for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != (- 26857 & 0); _injected_loop_counter --)
        {
         if((false))
          return;
        }
       if((false))
        return;
      }
     else
      {
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
        }
       else
        {
         if((((false) && true)))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               continue;
              }
             if((((bool(bool(bool(bvec2(false, true))))))))
              continue;
            }
           else
            {
             if(((false || (false))))
              {
               if(true)
                {
                 if((false))
                  continue;
                 return;
                 if((false))
                  continue;
                }
               else
                {
                 if((false))
                  continue;
                 if((false))
                  break;
                }
              }
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              break;
             if((false))
              break;
             if((false))
              return;
            }
           if((false))
            return;
           if((false))
            {
             if((false))
              return;
             continue;
            }
           return;
          }
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                 if((false))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(((true && (false))))
                  return;
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    break;
                   continue;
                  }
                 if(true)
                  {
                   if((false))
                    break;
                   return;
                   if((((false) || false)))
                    {
                     if((false))
                      return;
                     continue;
                    }
                   if((false))
                    continue;
                  }
                 else
                  {
                  }
                }
               if((false))
                continue;
              }
             else
              {
              }
             if((false))
              return;
             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 58794); _injected_loop_counter --)
              {
               if((false))
                break;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if((false))
            return;
           if((false))
            return;
           if((false))
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              continue;
             if((false))
              break;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
           if((false))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             if((false))
              return;
             break;
            }
           return;
          }
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          break;
         return;
        }
      }
    }
  }
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        break;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         continue;
        }
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! ((false || (false)))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(((bool(bvec2(false, true)))))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      break;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(true)
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
             if((false))
              continue;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            return;
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
          }
         if((false))
          continue;
         if((false))
          continue;
        }
       return;
      }
     if((false))
      continue;
    }
   if((false))
    return;
   if((false))
    return;
   if(((bool((bool(bvec4(bool(false), false, true, true)))))))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        continue;
       if(true)
        {
         if(false)
          {
           if((false))
            return;
          }
         else
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             buf[virtual_gid] = uint(subgroupAllEqual(write_val));
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if((false))
              return;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
       if((false))
        return;
       if(true)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              break;
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
            }
           return;
          }
        }
       else
        {
        }
       if((false))
        return;
      }
     else
      {
       if((false))
        {
         if((false))
          break;
         continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          continue;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         if(false)
          {
          }
         else
          {
           if((false))
            continue;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if((((false) || false)))
          continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if(((bool(bvec3(((false) && true), false, true)))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
           return;
          }
         if((false))
          break;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           return;
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           break;
          }
         if((false))
          break;
        }
      }
    }
   if((false))
    return;
   if(((false || (false))))
    return;
   if(((false || ((bool(bool(false)))))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if((false))
        return;
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if((false))
            {
             if((false))
              break;
             return;
            }
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
           return;
          }
         do
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(false);
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (~ (~ (0))); _injected_loop_counter --)
          {
           if((false))
            continue;
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             break;
            }
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(((! (! (false)))))
          return;
        }
       if((false))
        return;
       if((false))
        return;
      }
     if((false))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           do
            {
             return;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((false))
          continue;
         return;
        }
      }
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      break;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if((false))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
          }
         return;
         if((false))
          return;
         if((false))
          return;
        }
       if(((false || (false))))
        {
         if((false))
          return;
         return;
        }
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     do
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(false);
     if((false))
      return;
     if((((((false) || false)) || false)))
      {
       if((false))
        return;
       if(false)
        {
        }
       else
        {
         return;
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(((! ((true && (! (false)))))))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
          }
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if((false))
        return;
       return;
      }
    }
   if(true)
    {
     if((false))
      return;
     if(((bool(bool(false)))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
         if((false))
          return;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if((bool(bvec2(false, true))))
      {
      }
     else
      {
       return;
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         return;
        }
      }
    }
   else
    {
     if((false))
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     if(false)
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          return;
         return;
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(true)
        {
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
          }
         if((false))
          {
           for(int _injected_loop_counter = (int((injectionSwitch.y)) ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              continue;
             return;
            }
           if((false))
            return;
          }
        }
       else
        {
         if((false))
          return;
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((! (! ((false || (true))))))
        {
         if((false))
          return;
        }
       else
        {
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if((false))
            return;
           if((false))
            return;
           if(false)
            {
             if((false))
              return;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 do
                  {
                   return;
                   if((false))
                    return;
                  }
                 while(false);
                }
               else
                {
                }
               if(((false) && true))
                {
                 if((false))
                  return;
                }
               else
                {
                 if(((false || (false))))
                  return;
                 if((false))
                  return;
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(false)
          {
          }
         else
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
           if((false))
            return;
           if((false))
            {
             if((false))
              return;
             if((false))
              return;
             if((false))
              return;
             if(true)
              {
               return;
              }
             else
              {
              }
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              {
               if((false))
                return;
               return;
               if((false))
                return;
              }
             return;
             if((false))
              return;
            }
           if((false))
            return;
           if((false))
            return;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              return;
            }
           if(true)
            {
             return;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((false))
            return;
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((false))
                return;
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                return;
              }
             else
              {
               return;
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 if((false))
                  return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            break;
           if((false))
            return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if((false))
            {
             if((false))
              {
               if((false))
                return;
               return;
              }
             if(true)
              {
               if((false))
                break;
               return;
               if(((true && (false))))
                {
                 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                  continue;
                 continue;
                }
              }
             else
              {
              }
             if((false))
              return;
             if((false))
              break;
            }
          }
         while(false);
         if(false)
          {
          }
         else
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              return;
             if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
              return;
             if((false))
              return;
             if((false))
              return;
             if((false))
              return;
             if((false))
              return;
            }
           else
            {
            }
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((bool(bool(((injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(false)
        {
         if((false))
          {
           if(((false || (false))))
            return;
           return;
          }
        }
       else
        {
         if((false))
          return;
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         return;
         if((false))
          return;
        }
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   do
    {
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((true && (false))))
  {
   if(false)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     if((false))
      return;
    }
   else
    {
     if(((((bool(bvec2(false, false)))) && true)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = (((max(1, 1))) >> 0); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(1))) >> (((((int(1)) - 0)) / 1))); _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            return;
           continue;
          }
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
     if((false))
      return;
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
}
