#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if(((((vec2(((((mix(float(float(mat2(injectionSwitch[0], 0.0, 1.0, 1.0))), float((161.426)), bool(((injectionSwitch.x > injectionSwitch.y)))))) * 1.0)), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((true && (((bool((bvec2((bvec3(bvec4(bvec3(bvec2(false, true), true), true)))))))))))
  {
   if((false))
    barrier();
   if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(((((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(((((bool(bool(((injectionSwitch.x > injectionSwitch.y) || false))))))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((bool(bvec4(false, true, (! (! (true))), true)))))
      barrier();
     if((false))
      barrier();
    }
   if(((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(((! (! (false)))))
    barrier();
  }
 if((false))
  {
   if((((((false) && true)) || (((! (! ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (0.0 + ((mix(float((53.88)), float(injectionSwitch.y), bool(true)))))))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((((false)) && true)) && true))
      barrier();
     barrier();
    }
   if(((false || (false))))
    barrier();
   barrier();
  }
 if(((((bool(bool(false))) || false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((true && ((false))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((! ((! (((! (! (false))) && true)))))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = ((uint(((uvec4((((subgroup_id) / 1u)) ^ 0u, uint((injectionSwitch.x)), 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)))));
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if(((true && (false))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((true && (! (! (false)))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((! ((false || ((! (! (! (((true && ((bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool((! (! (bool(false))))))))
      {
       if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > ((false ? (- 7.3) : injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if(((((! (! (false)))) && true)))
      barrier();
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], ((true ? injectionSwitch[1] : (- 3845.7752))))).y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((! ((false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((((((((min(((injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))) && true)) && true)))
    barrier();
   barrier();
  }
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && (bool(bvec4(false, true, true, false)))))))
    barrier();
   barrier();
  }
 if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)) && ((((injectionSwitch.x) + (((abs(1.0) * (false ? (503.684) : 0.0))))) < injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((false) || (! (((! (false)) && true))))))
      barrier();
     if(((! (! (((false) && true))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, abs((dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, abs(1.0), 0.0))).y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! (! ((false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec4(((false) && true), true, false, false)))))
      barrier();
     barrier();
    }
  }
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 if(((bool((bvec2(bvec2((bvec2(bvec4(bvec2(false, false), false, ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id) - ((0u) << 0u));
 if((((false) && true)))
  barrier();
 if((((injectionSwitch.x > (max(injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bvec2((false || (((injectionSwitch.x > injectionSwitch.y)))), true)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false || ((((true && (true)) && (((! ((bool(bvec3(! ((! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true))))))))))))
  {
   if((false))
    barrier();
   if(((((((((! (! (injectionSwitch.x > injectionSwitch.y))))) && true)) || ((((injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! (! (bool(bvec4((bool((bvec3(bvec4(bvec3(false, true, true), false))))), true, true, true))))))))
    barrier();
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, ((((1.0 * ((true ? injectionSwitch.x : (max(1.4, 70.31)))))) < (vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((((((((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) || (true && (false))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((true && (((((((mix(vec2((7.3), (((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], ((- 7.3 - 4.9))), bvec2(true, false))).x > injectionSwitch.y)))) && true))))
    barrier();
   if((false))
    barrier();
   barrier();
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((! (! ((! ((! (! (! ((((injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (vec2(0.0, 0.0) + ((((vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y))))
    {
     if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)), true))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((bool(bvec2((((((injectionSwitch.x) - 0.0) > (float(vec2((min(injectionSwitch, injectionSwitch)).y, 1.0)))))) && true, false)))) || false))))
  {
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((true && (! (((false || ((! (! (((false || (! ((((injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))))))
    {
     if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((true && ((! (! ((injectionSwitch.x > (max(injectionSwitch, ((min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y)))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((bool((bvec3(bvec3(bvec3(((false) || false), false, true))))))) || false)))
      barrier();
     if((false))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if(((bool(bvec2(false, true)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((false || (false))))
      barrier();
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false)) || false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bvec3((bool(bvec2(false, true))), true, false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((false || (false))))
    barrier();
   if(((((min(injectionSwitch, (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0))))).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((bool(bvec2((bool(bvec2((true && ((false))), true))), true))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((((true && (bool(bool(false))))))) && ((injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(((((bool(bvec4((((float(vec3((mix(float((- 8.4)), float(injectionSwitch.x), bool(true))), sin(0.0), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))) > injectionSwitch.y) && true), true, true, false)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((bool(bool((false)))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((bool(bvec4(((bool(bvec2(false, false)))), true, true, ((injectionSwitch.x < injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (((injectionSwitch.x > (((min(injectionSwitch, injectionSwitch)).y) / 1.0)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((false || ((bool(bvec3(false, true, false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 uint workgroup_base = ((((min(((uint(uint(((((workgroup_size) >> 0u)) >> (uint(uvec4(((0u) | (0u)), 1u, 1u, 0u)))) * workgroup_id)))), ((uint(uint((1u * ((((((((clamp(((workgroup_size) >> 0u), ((workgroup_size) >> 0u), ((workgroup_size) >> 0u)))) >> (uint(uvec4(((0u) | (0u)), 1u, 1u, 0u))))) ^ 0u)) << 0u))) * workgroup_id)))))) | 0u)) | 0u);
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((bool(bvec2((! ((! (! (! ((false))))))), (false || (false))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || (false || (false)))))
  barrier();
 if((false))
  barrier();
 if(((! (! (bool((bvec2(bvec2(bvec2((((injectionSwitch.x > injectionSwitch.y))), true))))))))))
  barrier();
 uint virtual_gid = workgroup_base + ((((false ? (78924u) : (min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)))) + 0u)) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z;
 if((((false) || false)))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((((mix(vec2((injectionSwitch)[0], (- 94.06)), vec2((5495.5642), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 atomicStore(write_val, (max((((((min(uint(virtual_gid), ((((false) || false) ? (((max((max((min((workgroup_base), (workgroup_base))), (min((workgroup_base), (workgroup_base))))), (min((workgroup_base), (workgroup_base)))))) ^ uint((injectionSwitch.x))) : ((uint(virtual_gid)) | 0u))))) >> (0u & 177247u)) * uint((injectionSwitch.y))))), uint(virtual_gid))), 4, 64, 0);
 if((true && ((! (! (((((false || (false)))) || (true && (false)))))))))
  {
   if((false))
    barrier();
   if(((((((((max(injectionSwitch.x, (((min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y) && true)) && true)))))
    barrier();
   if((((((false ? (vec2(5.4, 75.99)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((((! (! ((false || (injectionSwitch.x > ((true ? (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : (- 890.708)))))))))) || ((false || (! ((((! (! (! (((false))))))) && true)))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((((vec2(mat3(injectionSwitch, 1.0, ((true ? 1.0 : (265.736))), 0.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(((((bool(bvec4(false, true, false, ((injectionSwitch.x < (clamp((max(injectionSwitch.y, injectionSwitch.y)), (max(injectionSwitch.y, injectionSwitch.y)), (max(injectionSwitch.y, injectionSwitch.y))))))))) && true))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((false))
  {
   if((false))
    barrier();
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(injectionSwitch[(min((max(0, 0)), 0))], ((clamp(float(((mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, (max(1.0, (min(((1.0) - 0.0), 1.0)))))) + mat4x3((min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(((mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, (mix(float(0.0), float((8367.4087)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (min(float(((mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, (mix(float((8.4)), float((clamp((max(1.0, 1.0)), 1.0, 1.0))), bool(((injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, (min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), ((((float(((mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, (mix(float((8.4)), float((clamp((max(1.0, 1.0)), 1.0, 1.0))), bool(((injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, (min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0)) - 0.0)))))))).y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((false || ((((clamp((vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, (injectionSwitch.y), 0.0))), injectionSwitch, injectionSwitch)).x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((((injectionSwitch.x < injectionSwitch.y)) && (! (! ((((true && ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))
      barrier();
     barrier();
    }
   if(((((bool(bool(false))) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((! (! ((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
