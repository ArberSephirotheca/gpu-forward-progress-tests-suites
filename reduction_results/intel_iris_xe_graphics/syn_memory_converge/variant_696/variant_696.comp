#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((false)) || false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((true && (((((max(injectionSwitch.x, (vec2(injectionSwitch[0], injectionSwitch[1])).x)) > ((min(mix(float(((((((false) || false)) || false) ? 19.47 : - 78.30))), float((max((max(((((injectionSwitch.x < injectionSwitch.y)) ? ((((injectionSwitch.x > (vec2(mat4x3((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, (mix(float((max(((false ? (7.5) : sqrt(1.0))), sqrt(1.0)))), float((- 3.4)), bool(false))), (injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))).y)) ? (injectionSwitch) : injectionSwitch)) : (injectionSwitch))), ((((injectionSwitch.x < injectionSwitch.y)) ? ((((injectionSwitch.x > (vec2(mat4x3((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, sqrt(1.0), (injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, (mix(float(1.0), float((- 556.257)), bool(((injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))).y)) ? (injectionSwitch) : injectionSwitch)) : (injectionSwitch))))).y, ((min(((((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? (((clamp(((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((injectionSwitch)) - vec2(0.0, 0.0)))) : injectionSwitch, ((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((injectionSwitch)) - vec2(0.0, 0.0)))) : injectionSwitch, ((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((injectionSwitch)) - vec2(0.0, 0.0)))) : injectionSwitch)))) : (injectionSwitch)), ((((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? ((((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((injectionSwitch)) - vec2(0.0, 0.0)))) : injectionSwitch)) : (injectionSwitch))))).y))), ((bool(((bool(bvec2((true && (((bool(bvec3(true, true, false)))))), true))) && (((min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false)), mix(float((((((float((transpose(transpose(mat2x3(false ? 19.47 : - 78.30, 1.0, 0.0, abs(1.0), 0.0, 1.0)))))) / 1.0))))), float((max((max(((((injectionSwitch.x < injectionSwitch.y)) ? ((((injectionSwitch.x > (vec2(mat4x3((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, sqrt((max((max(1.0, 1.0)), 1.0))), (injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize((min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))))))).y)) ? (injectionSwitch) : injectionSwitch)) : (injectionSwitch))), ((((injectionSwitch.x < injectionSwitch.y)) ? ((((injectionSwitch.x > (vec2(mat4x3((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, sqrt(1.0), (injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))).y)) ? (injectionSwitch) : injectionSwitch)) : (injectionSwitch))))).y, ((min(((((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? ((((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((((vec2(mat4((((injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, (injectionSwitch.y), 0.0))) * mat2(1.0)))) - sin(vec2(0.0, 0.0))))) : injectionSwitch)) : (injectionSwitch)), ((((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? (((true ? (((injectionSwitch.x > injectionSwitch.y)) ? (min((injectionSwitch), (((injectionSwitch)) - vec2(0.0, ((false ? (256.380) : 0.0)))))) : injectionSwitch) : (fract(vec2(37.50, - 1886.8800)))))) : (injectionSwitch))))).y))), ((((bool(((bool(bvec2((true && (((bool(bvec3(true, true, false)))))), true))) && ((injectionSwitch.x < injectionSwitch.y)))))) && true) || false)))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if(((bool(bvec2(bool(bvec4(((bool(bool(((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y)))))))), false, false, (((bool(bvec2((false || (injectionSwitch.x < injectionSwitch.y)), true))))))), false)))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 uint workgroup_size = (0u ^ (gl_WorkGroupSize.x));
 if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((((bool(bool(bool(bvec2((true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))
    {
     if((false))
      return;
     return;
    }
   return;
   if(((! (! (false)))))
    return;
  }
 uint workgroup_id = (((uvec3(191738u, 167437u, 80334u) & uvec3(0u, 0u, 0u)) ^ (uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x;
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((! ((true && (! ((bool(bvec4((bool(bvec3((((! (! ((false || ((clamp((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))) && true), false, ((true) && true)))), true, true, false))))))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * (clamp(subgroup_size, ((subgroup_size) - 0u), subgroup_size)) + subgroup_local_id;
 atomicStore(write_val, (((~ (~ ((max(uint(virtual_gid), uint(virtual_gid))))))) * (((~ (~ (1u << (uint(1u)))))) >> (uint(1u)))), ((4) ^ ((0) << 0)), (min(64, 64)), 0);
 buf[virtual_gid] = (~ (~ ((((((((! (! (false))) ? (((atomicAnd(workgroup_size, num_workgroup))) / 1u) : ((uint(subgroupAllEqual(write_val))) >> 0u))) << 0u)) | ((0u) / uint((injectionSwitch.y))))))));
 if((false))
  {
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   return;
  }
 if(((((! (! (bool(bvec2(true, true)))))) && (! (! ((((false)) && true)))))))
  return;
 if((((false || (bool(bvec4((true && (((false) || false))), false, false, true)))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
}
