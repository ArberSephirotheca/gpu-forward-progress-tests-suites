#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 while(false);
 if((false))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  {
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     do
      {
       if((false))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(false);
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = (int(ivec2(1, ((1 << (int(1))) >> (int(1)))))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > (0 << (int(1))); _injected_loop_counter --)
    {
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       do
        {
         if(false)
          {
          }
         else
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             do
              {
               if(false)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                     if((false))
                      barrier();
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                 if(((bool(bvec4((false || (false)), false, false, true)))))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != (int((injectionSwitch.x)) >> (int(4))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                   if(true)
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(true)
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                             barrier();
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                     if((! ((! (! (! (false)))))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     if((false))
                      {
                       do
                        {
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       while(false);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                  }
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             while((! (! (false))));
            }
           while((! (! (((false) || false)))));
           do
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false);
          }
        }
       while(false);
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       else
        {
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(false);
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(false)
  {
  }
 else
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
         if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       while(false);
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if(((! (! ((true && (false)))))))
  barrier();
 do
  {
   do
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 & - 73460); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while((bool(bvec3(false, true, false))));
  }
 while(false);
 do
  {
   if(true)
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 << ((((clamp(int(1), int(1), int(1)))) >> 0))); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
       if(((! ((true && (! (false)))))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
             if((false))
              barrier();
            }
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter > (clamp(int((injectionSwitch.x)), int((injectionSwitch.x)), int((injectionSwitch.x)))); _injected_loop_counter --)
        {
         if((false))
          barrier();
        }
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 | 1) | 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
          {
           if((false))
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
             if((false))
              barrier();
             if(((false || (false))))
              {
               if(true)
                {
                 if((false || (false)))
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
               else
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                }
               barrier();
              }
             if(true)
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                barrier();
              }
             else
              {
              }
             if(((bool(bvec2(false, true)))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if((false))
            barrier();
           if((false))
            {
             if(((bool(((bool(false)) && true)))))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
        }
      }
    }
   if((false))
    barrier();
  }
 while(false);
 if(false)
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if((((false) || false)))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       if((bool(bool(true))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       else
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (0 ^ 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(true)
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
            }
           if(((! (! (false)))))
            barrier();
           if((false))
            {
             if(((false) || false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
      }
     else
      {
       if((false))
        barrier();
      }
    }
   if(false)
    {
     if(((bool(bvec4((false || (false)), false, true, false)))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   else
    {
     if((((((false) && true)) || false)))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             barrier();
            }
           else
            {
            }
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(true)
      {
       do
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           if((false))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
            }
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if(true)
          {
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             for(int _injected_loop_counter = ((1 | 1) ^ 1); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                {
                 do
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if(true)
                      {
                       if(true)
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       if((false))
                        barrier();
                       if(true)
                        {
                         if(true)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((bool(bvec3(true, false, true))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(false);
                 barrier();
                }
               for(int _injected_loop_counter = (0 ^ (1 | 0)); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((! (! (true))))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
             if(((! (! ((! (! (false))))))))
              {
               if((false))
                barrier();
               do
                {
                 do
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                  }
                 while(false);
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(false);
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         do
          {
           if((false))
            {
             if((false))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             barrier();
            }
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if(true)
              {
               if((false))
                barrier();
               barrier();
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         while(false);
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if((false))
          {
           do
            {
             for(int _injected_loop_counter = (1 & int((injectionSwitch.y))); _injected_loop_counter != (0 << (int(3))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           while(false);
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((! (! (true))))
            {
             barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
        }
       while(false);
      }
     else
      {
       if((false))
        barrier();
      }
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(true)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       do
        {
         if((false))
          {
           for(int _injected_loop_counter = (int((injectionSwitch.x)) | 0); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = (((0 ^ 0) >> (int(8))) >> (int(1))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != (max(1, 1)); _injected_loop_counter ++)
                {
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              barrier();
             if((false))
              barrier();
            }
          }
        }
       while(false);
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(((bool(bvec2(false, false)))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         do
          {
           barrier();
           if((false))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if((false))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(true)
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   if(((false || (false))))
    barrier();
  }
 if(true)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(true)
      {
       if((false))
        barrier();
       do
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = (0 >> (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if(true)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
           if((false))
            {
             if(((! (! (false)))))
              {
               if((false))
                barrier();
               barrier();
              }
             do
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(2))) >> ((min(int(2), int(2))))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               if((false))
                barrier();
               do
                {
                 if((false))
                  {
                   if((false))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
               while(false);
               for(int _injected_loop_counter = (0 >> (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
               if((false))
                barrier();
               if((false))
                barrier();
               for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                 for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 | 0) ^ 0); _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                       barrier();
                      }
                    }
                  }
                }
              }
             while(false);
            }
          }
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         else
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(false)
              {
              }
             else
              {
               if((false || (true)))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       else
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
      }
     else
      {
       if(((((bool(bvec4(false, false, false, true))) && true))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
    }
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    {
     do
      {
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     while(false);
     if(true)
      {
       if(true)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
          }
         else
          {
           if(((bool(bvec3(false, false, true)))))
            barrier();
          }
         do
          {
           if((false))
            barrier();
          }
         while(false);
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(false);
     if((false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < ((int((injectionSwitch.y)) << (((int(1)) + 0))) >> (int(1))); _injected_loop_counter ++)
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      {
       if(((! ((true && (! (false)))))))
        barrier();
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
         if((false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter > (((0 << (int(5))) >> (int(8))) & - 94186); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(true)
      {
       do
        {
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(true)
          {
           if((false))
            barrier();
           do
            {
             barrier();
            }
           while(false);
          }
         else
          {
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            barrier();
          }
        }
      }
     else
      {
      }
     if((! (! (false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             for(int _injected_loop_counter = (0 >> ((~ ((max(~ (int(2)), ~ (int(2)))))))); _injected_loop_counter < (0 | 1); _injected_loop_counter ++)
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        {
         if(((false || (false))))
          barrier();
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         barrier();
        }
       if((false))
        barrier();
       if(true)
        {
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
       else
        {
        }
      }
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        {
         if((false))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(false)
            {
            }
           else
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if((false))
      {
       for(int _injected_loop_counter = (0 << ((max(int(4), int(4))))); _injected_loop_counter < (((1 << (((int(2)) | (int(2))))) >> (int(2))) & 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
           if((false))
            {
             do
              {
               if((false))
                {
                 for(int _injected_loop_counter = (((31686 % 39060) >> 13077) & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                  }
                 barrier();
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             while(false);
             if((false))
              barrier();
             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(0))); _injected_loop_counter --)
              {
               if((false))
                barrier();
              }
             if(false)
              {
              }
             else
              {
               barrier();
               if((false))
                barrier();
              }
            }
           do
            {
             if((false))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
            }
           while(false);
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if(true)
          {
           if((false))
            {
             do
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(6))); _injected_loop_counter --)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 do
                  {
                   if(((! (! (false)))))
                    barrier();
                  }
                 while(false);
                 if((false))
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(false);
            }
          }
         else
          {
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if((((bool(bvec4(bool((bvec2(bvec2(bvec2(false, true))))), true, false, false))))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(((bool(bvec2(false, false)))))
          {
           for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (min(((int((injectionSwitch.y))) + 0), int((injectionSwitch.y)))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
            }
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = (0 << (int(1))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if((false))
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               if((false))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (((int(2)) - 0))); _injected_loop_counter --)
                {
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                  }
                }
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if(true)
          {
           if((false))
            {
             if(true)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 for(int _injected_loop_counter = ((1 << (((int(3)) | 0))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((false))
                barrier();
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << (int(6))); _injected_loop_counter --)
                {
                 if((false))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                         barrier();
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = (((1 & 1) << (((int(1)) - 0))) >> ((int(ivec4(int(1), 1, 0, 1))))); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = (int(ivec2(0, 1))); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           do
                            {
                             barrier();
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > ((0 | 0) << (int(3))); _injected_loop_counter --)
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                                {
                                 if((false))
                                  barrier();
                                }
                               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = (max(0, 0)); _injected_loop_counter < 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                            }
                           if((false))
                            barrier();
                          }
                         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           if((false))
                            {
                             if((((false) && true)))
                              barrier();
                             if(true)
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           do
                            {
                             if((false))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           while(false);
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
             barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((((! (! (bool((bvec2(bvec2(bvec2(false, true)))))))))))
            barrier();
          }
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(false)
      {
      }
     else
      {
       atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
      }
     do
      {
       if(true)
        {
         for(int _injected_loop_counter = ((0 << (int(4))) | 0); _injected_loop_counter < (1 & (1 & 1)); _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         if((false))
          {
           if(true)
            {
             if(false)
              {
              }
             else
              {
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
               if((false))
                barrier();
               if((false))
                barrier();
               barrier();
              }
            }
           else
            {
             if((false))
              barrier();
            }
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(false);
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
     for(int _injected_loop_counter = (int((injectionSwitch.y)) ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (0 << (int(6))); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           barrier();
           do
            {
             if((false))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if((false))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while((bool(bvec2(false, true))));
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               if(true)
                {
                 barrier();
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 69079); _injected_loop_counter --)
            {
             if((false))
              barrier();
             if(true)
              {
               if(((true && (false))))
                {
                 if((false))
                  {
                   if(false)
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                    }
                  }
                 do
                  {
                   do
                    {
                     if((false))
                      barrier();
                     if(((! (! (false)))))
                      barrier();
                     do
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       if((false))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     while(false);
                     if((false))
                      barrier();
                     barrier();
                     do
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((false))
                          barrier();
                         do
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               if((false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                }
                               if(false)
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                               barrier();
                              }
                             do
                              {
                               barrier();
                               if((false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                              }
                             while(false);
                             if((false))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       else
                        {
                        }
                      }
                     while(false);
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
              }
             else
              {
              }
            }
           if(((bool(bvec4(false, false, false, false)))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         do
          {
           if((false))
            barrier();
           if(true)
            {
             barrier();
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if((false))
          {
           if((((false) || false)))
            barrier();
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 >> (((int(8)) | (int(8))))); _injected_loop_counter --)
            {
             do
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               barrier();
              }
             while((! (! (false))));
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((false))
              barrier();
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
               if((false))
                barrier();
              }
             do
              {
               if((false))
                barrier();
              }
             while(false);
            }
           if(((bool(bvec2(false, true)))))
            barrier();
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
       if((false))
        barrier();
       do
        {
         if((false))
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while((((bool(bvec4(false, true, false, true)))) && true));
            }
           if((false))
            barrier();
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   if(true)
    {
     if((false))
      {
       do
        {
         if((false))
          barrier();
        }
       while(false);
       barrier();
      }
    }
   else
    {
    }
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     if((false))
      barrier();
    }
   while(false);
   buf[virtual_gid] = uint(subgroupAllEqual(write_val));
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     do
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (int((injectionSwitch.y)) | 1); _injected_loop_counter != ((false ? (92219) : 0)); _injected_loop_counter --)
            {
             barrier();
            }
           if((false))
            barrier();
          }
        }
       else
        {
        }
       if((false))
        barrier();
      }
     while(false);
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec2(false, false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
         barrier();
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
            {
             if(false)
              {
               if(true)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if((false))
                barrier();
               do
                {
                 barrier();
                }
               while(false);
               if((false))
                barrier();
              }
            }
           if((false))
            barrier();
          }
         if((((! (! (bool((bvec2(bvec4(bvec2(false, false), true, true))))))))))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if(true)
              {
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(true)
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                    }
                  }
                 else
                  {
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if(((! (! (false)))))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(((bool(bvec4(false, true, false, ((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if((false))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((false))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            {
             for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     do
      {
       do
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       while(false);
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
        }
      }
     while((! (! (false))));
    }
  }
 while(false);
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 do
  {
   do
    {
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true, true)))))
            barrier();
          }
         else
          {
          }
         if(false)
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if(((bool(bool(false)))))
            barrier();
          }
         else
          {
           if(false)
            {
            }
           else
            {
             if(true)
              {
               if((true && (true)))
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 & 1) << (((int(0)) >> 0))) >> (((int(0)) / 1))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                           if((((false) && true)))
                            {
                             for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           barrier();
                          }
                         do
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         if((false))
                          barrier();
                         if((((false) || false)))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = (0 << (((int(4)) | (int(4))))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = ((1 << ((max(int(4), (~ (~ (int(4)))))))) >> ((0 ^ (int(4))))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                {
                                 if((false))
                                  barrier();
                                }
                               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                              }
                             if((false))
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             for(int _injected_loop_counter = ((1 << (int(3))) >> ((clamp(int(3), int(3), int(3))))); _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                              {
                               barrier();
                              }
                             if((false))
                              barrier();
                            }
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             for(int _injected_loop_counter = (min(int((injectionSwitch.x)), ((false ? (_injected_loop_counter) : int((injectionSwitch.x)))))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                              }
                             if((false))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           else
                            {
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if((false))
                                barrier();
                              }
                             while(false);
                             for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                              }
                            }
                           do
                            {
                             if((false))
                              {
                               for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                             do
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                             while(false);
                             if((false))
                              {
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             if(true)
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             else
                              {
                               do
                                {
                                 if((false))
                                  barrier();
                                }
                               while(false);
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               barrier();
                              }
                             if((false))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if(((! (! (false)))))
                            {
                             if((false))
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                             do
                              {
                               barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             do
                              {
                               if((false))
                                barrier();
                              }
                             while(false);
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         else
                          {
                           do
                            {
                             if((false))
                              barrier();
                             if((false))
                              {
                               do
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 if((false))
                                  barrier();
                                }
                               while(false);
                               if(false)
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                {
                                 if((false))
                                  {
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             if((false))
                              {
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           if((bool(bvec3(true, true, true))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       while(false);
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   do
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       do
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                          }
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                          }
                         while((bool(bvec4(false, false, false, true))));
                         if(false)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                        }
                       while(false);
                      }
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = (max(((0) | 0), 0)); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     if((false))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if((false))
                          barrier();
                        }
                       while(false);
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((false) && true))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       if((((bool(bvec4(bool(bvec2(false, true)), false, false, true))))))
                        barrier();
                      }
                     do
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(true)
                        {
                         for(int _injected_loop_counter = ((0 >> (int(5))) | 0); _injected_loop_counter != ((1 << (((int(3)) >> 0))) >> (((((int(3)) | 0)) / 1))); _injected_loop_counter ++)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (false)))))))
                          barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                          }
                         if(true)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                         barrier();
                         if((false))
                          barrier();
                        }
                      }
                     while(false);
                    }
                   do
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         barrier();
                         if((false))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   while(((false) || false));
                   for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 ^ 0) ^ 0); _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if((false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                       do
                        {
                         if((false))
                          barrier();
                        }
                       while(false);
                       for(int _injected_loop_counter = ((1) << 0); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         do
                          {
                           barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          barrier();
                        }
                      }
                    }
                   do
                    {
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   do
                    {
                     if(((true && (false))))
                      {
                       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
                        barrier();
                       barrier();
                      }
                    }
                   while(false);
                   if(true)
                    {
                     if(((false || (false))))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       barrier();
                      }
                     if(((true && (false))))
                      barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(false);
                    }
                  }
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 for(int _injected_loop_counter = (1 & (0 ^ int((injectionSwitch.y)))); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       do
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = (~ (~ (1))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
             else
              {
               if((false))
                barrier();
              }
             if(((bool((true && (bool(false)))))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 barrier();
                }
               else
                {
                }
              }
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if(false)
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((int((injectionSwitch.y)) << (int(2))) >> (int(2))); _injected_loop_counter ++)
            {
             if(((false || (false))))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if((false))
                barrier();
               barrier();
               if((false))
                barrier();
               if((false))
                {
                 for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != ((1 << (int(7))) >> ((max(int(7), int(7))))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             do
              {
               if((false))
                {
                 if((false))
                  barrier();
                 if(((false || (false))))
                  barrier();
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    barrier();
                  }
                 while(false);
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if(true)
              {
               if((false))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
             else
              {
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(false)
            {
            }
           else
            {
             if((false))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if(((! (! (false)))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if(false)
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & int((injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if(true)
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (clamp((0 ^ (0)), 0, 0)); _injected_loop_counter --)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         barrier();
                        }
                       if((false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
            }
           if((false))
            barrier();
           if((false))
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
             do
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 barrier();
                }
               else
                {
                }
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if((((false) && true)))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         do
          {
           barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         for(int _injected_loop_counter = ((((1 << (int(5))) >> (int(5))) << (int(1))) >> ((int(int(((true ? int(1) : (30672)))))))); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
        }
       if((false))
        barrier();
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           else
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
              }
            }
           if((false))
            barrier();
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          barrier();
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          barrier();
        }
       else
        {
         do
          {
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               while(false);
               if((false))
                barrier();
              }
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                }
               if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                {
                 if(((! (! (false)))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     do
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                     while(false);
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
              }
             if(false)
              {
              }
             else
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               do
                {
                 if(((! (! ((bool(bvec3(false, false, true))))))))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while((true && (false)));
              }
            }
          }
         while(false);
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
   while(false);
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(false);
 if((false))
  barrier();
 if((false))
  barrier();
}
