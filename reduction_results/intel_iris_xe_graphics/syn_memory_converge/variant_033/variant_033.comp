#version 460

struct _GLF_struct_2 {
 uvec2 _f0;
 vec2 _f1;
 uint _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 uvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 int _f1;
 bvec4 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 float _f1;
 float _f2;
 int _f3;
 mat2 _f4;
 _GLF_struct_1 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint _f1;
 mat4x3 _f2;
 mat3 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(bvec4(true), 1, bvec4(true), workgroup_size * workgroup_id), 1.0, 1.0, 1, mat2(1.0), _GLF_struct_1(ivec4(1), uvec3(1u), uvec3(1u)), _GLF_struct_2(uvec2(1u), ((vec2(1.0)) * mat2((injectionSwitch.y))), 1u, 1.0)), 1u, mat4x3(1.0), mat3(1.0));
 uint virtual_gid = _GLF_struct_replacement_4._f0._f0.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint((min(virtual_gid, virtual_gid))), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
}
