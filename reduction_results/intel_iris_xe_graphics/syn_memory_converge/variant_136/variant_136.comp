#version 460

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 uvec2 _f3;
 vec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_base;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(((bool(bvec4(false, true, false, false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((! (! (! (! (bool(bvec2((true && ((((injectionSwitch.x > (float(mat4((((min(((false ? (1172.0047) : injectionSwitch.y)), ((injectionSwitch.y) - 0.0)))) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sin(tan(0.0)), tan((1.0 * (0.0))), 1.0, 0.0)))))))), (bool(bvec4(true, false, false, false)))))))))))))
  {
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((bool(bvec4(false, false, ((false || (true && ((! (! (((false)) || false))))))), true)))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((((! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((bool(bvec2((false || (((injectionSwitch.x > injectionSwitch.y)))), false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (mix(vec2((float(true)), (vec4(306.985, - 484.018, 97.97, 0.1).p)), vec2(((max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > (max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((((((! (! ((false || ((((! (! ((bool(bvec2(((injectionSwitch.x < ((false ? (((- 6.5)) * 1.0) : injectionSwitch.y)))), false))))))) || false)))))) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false || ((false))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((true && ((((false) && true)))))
  {
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if(((! (! (bool(bvec4(((((bool(bvec4(false, (true && (false)), (true && (false)), true))) && true))), true, true, false)))))))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = (max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if((((injectionSwitch.x > ((1.0 * ((injectionSwitch.y))) - 0.0)))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((bool((bvec2(bvec4(bvec2((false), ((false) || false)), false, false))))))
    barrier();
  }
 if(((true && (false))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize.x) - 0u);
 if((false))
  barrier();
 if((false))
  barrier();
 if((((false)) || false))
  barrier();
 uint workgroup_id = (~ (~ (gl_WorkGroupID))).x;
 if((false))
  {
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2((((max((min(injectionSwitch.x, (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y)), false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(ivec3(1), _GLF_struct_0(true, mat2x4(1.0), mat3x4(1.0), ivec2(((((((false ? (59727) : 1))) - 0)) - 0))), _GLF_struct_1(mat3x2(1.0), mat3(1.0)), uvec2(1u), vec2(1.0), uvec3(1u)), workgroup_size * workgroup_id);
 if(((((false || (((! (! (bool((false || (bool(injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if((false))
    barrier();
   if((bool(bvec4((false), true, true, false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((bool(bvec4(true && (false), ((injectionSwitch.x < injectionSwitch.y)), true, true))))))
      barrier();
     barrier();
    }
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((((((false ? (floor(vec2(3.4, - 8103.8183))) : injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((bool(bvec3(false, false, true)))))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if(((true && ((true && ((! (! (false)))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false || ((false || ((false))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((false) || false)))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if(((((bool(bvec3(false, true, false)))) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((false) || false)))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((((false)) && true)) && true))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (false)))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
       if((bool(bool((false)))))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if(((! (((true && (! (! (! (false))))))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if(((! ((bool((! (! (bool(! (true && ((((false) && true))))))))))))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((((false ? (injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (263.165)), vec2((- 4.4), (injectionSwitch)[1]), bvec2(false, true))).y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((bool(bvec2((! (! (((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if((false))
    barrier();
   if(((false || (((! (! ((false))))) || false))))
    barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = ((true ? _GLF_struct_replacement_3.workgroup_base + (uint((injectionSwitch.x)) ^ ((((max(subgroup_id, subgroup_id)) * subgroup_size) | ((max(subgroup_id, ((subgroup_id) >> 0u))) * subgroup_size)))) : (num_workgroup))) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((bool(bvec3(((((bool((bvec3(bvec3(bvec3(! (! ((false))), (bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) || (false)), true))), false)))))))) || false), false, true))) && true)))
  {
   if(((true && (((((bool((bvec3((bvec3(bvec3(bvec3(bvec3(((true && (bool(bvec4((injectionSwitch.x > ((((true ? injectionSwitch : (vec2(823.504, (max(5973.0481, 5973.0481))))))) - vec2(0.0, 0.0)).y), true, false, false))))), (bool(bvec3((bool(bool(false))), true, false))), false)))))))))) && true))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((((((true && (false || (injectionSwitch.x > injectionSwitch.y))))))) && true)))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((true && ((false))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((vec2(((false ? (mat4(- 53.86, 57.31, - 4.9, 2556.4247, - 6.6, 3.7, - 85.75, - 2.3, 3783.5141, 22.61, - 758.774, - 7.2, - 31.68, 24.56, 4.5, 724.326)) : mat4(((true ? injectionSwitch : (vec2(- 72.89, 9538.4596)))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, (injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, (mix(float(0.0), float((0.9)), bool(false))), (dot(vec3(sqrt(0.0), 1.0, sqrt(0.0)), vec3((min(((0.0) * 1.0), (clamp(0.0, 0.0, 0.0)))), 1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, ((true ? (max(0.0, 0.0)) : (6138.5892))), 1.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((false)) || false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(((true && ((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > (max(((vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), cos(length(0.0)))))), injectionSwitch)).y))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! ((! (! (! (false))))))))
    barrier();
   if((false))
    {
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((((mix(vec2(((true ? (min((injectionSwitch)[0], (injectionSwitch)[0])) : (- 983.837))), (injectionSwitch)[1]), vec2((- 50.74), (((vec3(514.513, 122.982, 8.7)) * mat3(1.0)).t)), bvec2(((true && ((injectionSwitch.x > injectionSwitch.y)))), false))).x > injectionSwitch.y)) || (injectionSwitch.x > (max((vec2((transpose(transpose(mat4((max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), cos(0.0), (injectionSwitch.x), 1.0)))))), injectionSwitch)).y))))))
  {
   if((false))
    barrier();
   if(((((bool(bvec2((((! ((bool(bvec4(! ((false || ((((false || (bool(bvec2(false || (false), (((max(injectionSwitch.x, (min((mix(float((- 88.20)), float(injectionSwitch.x), bool(true))), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, (injectionSwitch.x)))))))) < ((injectionSwitch.y) * (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, tan(0.0)))))))))))))))), false, true, false))))))) && ((injectionSwitch.x < injectionSwitch.y)), false)))) || false)))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((true && ((bool(bool((((! (! ((((max(injectionSwitch, ((((true ? injectionSwitch : (vec2(0.9, 14.99))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y) || false))))) && true))))))))))
    barrier();
   if((((((bool(bvec3(bool(bvec3((((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false), true, (bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), (((clamp(injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)), (float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y)), true, true))))), false, ((! (! ((((true)) || false) || ((injectionSwitch.x > injectionSwitch.y))))))))))) && ((injectionSwitch.x < injectionSwitch.y)))))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((! ((bool(bvec4(! ((((injectionSwitch.x > injectionSwitch.y)))), (! (! (false))), true, true))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   if(((! ((false || (! (((! (! ((false))))) && true)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > ((min((min((((float(mat2(1.0 * (injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), tan(0.0), 0.0))))) - 0.0, ((1.0 * (injectionSwitch.y))) - 0.0)), (float(mat4x2((clamp(((1.0 * (injectionSwitch.y))) - 0.0, ((1.0 * (injectionSwitch.y))) - 0.0, ((1.0 * (injectionSwitch.y))) - 0.0)), sin(0.0), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))))))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((false) || false)))
          barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((bool(((bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false)))))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((bool(bvec4((((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y) && true))))))))), false, ((injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
  }
 if((((false || ((bool(bool((! (! (bool(bvec3((((bool(bvec3(((bool(bvec4((false) && true, false, false, false)))), true, ((! (! (bool(bvec2(false, true)))))))))) || false), ((injectionSwitch.x < injectionSwitch.y)), false)))))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
}
