#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((false || (bool(bool(false)))))))
  barrier();
 if(((((true && (false)) && true))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (~ (((~ ((max(~ (0u ^ (~ (gl_WorkGroupSize.x))), (max(~ (0u ^ (~ (gl_WorkGroupSize.x))), ~ (0u ^ (~ (gl_WorkGroupSize.x))))))))))));
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((! (((((! (bool(bvec2((bool(bvec2(((((! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true), true))), true)))) && true)) || false)))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = (clamp((~ (~ ((max((~ (uvec3(0u, 0u, 0u) | ((clamp((((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u)), (((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u)), (((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u))))))), (~ (uvec3(0u, 0u, 0u) | ((clamp((((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u)), (((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u)), (((~ (gl_WorkGroupID))) ^ uvec3((clamp((((false ? (subgroup_local_id) : (0u) | (0u)))), 0u, 0u)), 0u, 0u)))))))))))), gl_WorkGroupID, (min(gl_WorkGroupID, (((uvec3(uvec4((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), 1u)))) | (uvec3(126166u, 32098u, 149347u) & uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))))))).x;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + (((((((0u ^ (1u * (1u * (((subgroup_id * subgroup_size) - 0u)))))) | (1u * (1u * (((subgroup_id * subgroup_size) - 0u)))))) << 0u))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, ((int(((ivec3(((~ (~ ((clamp((max((max((min(0, 0)), (((min(0, 0))) + 0))), (min(0, 0)))), 0, 0))))) * 1), 0, 1)) | (ivec3(((clamp((min(0, 0)), 0, 0)) * 1), 0, 1)))))));
 if((false))
  {
   if((((bool(bvec4(((false || (false))), ((injectionSwitch.x < injectionSwitch.y)), false, true))) && true)))
    barrier();
   if(((bool(bvec3(((((min(clamp(((false ? (- 1595.3237) : ((injectionSwitch.x) * 1.0))), injectionSwitch.x, (float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0)))), (max(clamp(((false ? (- 1595.3237) : ((injectionSwitch.x) * 1.0))), injectionSwitch.x, (float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0)))), clamp(((false ? (- 1595.3237) : ((injectionSwitch.x) * 1.0))), injectionSwitch.x, (float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0))))))))) > (max(injectionSwitch.y, injectionSwitch.y)))), true, true)))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) || (false))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual((0u | (((write_val) / 1u)))));
}
