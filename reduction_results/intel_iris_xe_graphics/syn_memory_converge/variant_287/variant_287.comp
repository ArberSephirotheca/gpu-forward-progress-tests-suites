#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((((((clamp(float(mat3x4((float(mat4x3((mix(vec2((- 75.03), (- 85.10)), vec2((injectionSwitch)[0], (injectionSwitch)[((1) << 0)]), bvec2(true, true))).x, length(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4((float(mat4x3(((max(mix(vec2((- 75.03), (- 85.10)), vec2((injectionSwitch)[0], (injectionSwitch)[((1) << 0)]), bvec2(true, true)), mix(vec2((- 75.03), (- 85.10)), vec2((injectionSwitch)[0], (injectionSwitch)[((1) << 0)]), bvec2(true, true))))).x, length(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4((float(mat4x3((mix(vec2((- 75.03), (((- 85.10)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[((1) << 0)]), bvec2(true, (! (! (true)))))).x, length(0.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) < injectionSwitch.y)) && ((((bool((bvec3(bvec3(bvec3(((bool(bvec4(bool((bvec2(bvec4(bvec2(false, (true && ((bool((true && ((false || (bool(false)))))))))), true, false)))), true, false, true)))), false, true)))))) && true))))))
  {
   if((! (! ((! (! ((false))))))))
    return;
   if(((! (! (false)))))
    {
     if((((((injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if(((! ((false || (((! (((false)) || ((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false) && true)))
  return;
 uint num_workgroup = ((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 if((bool(bvec4((false), ((injectionSwitch.x > injectionSwitch.y)), true, false))))
  {
   if(((! (! (false)))))
    return;
   if((((true && (bool((bvec3(bvec4(bvec3(((false) || false), ((injectionSwitch.x > injectionSwitch.y)), true), false)))))))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x < injectionSwitch.y)) && ((false || ((false))))))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > (min(injectionSwitch.y, (mix(float((3.5)), float(injectionSwitch.y), bool(true)))))))))
  return;
 uint workgroup_size = (uvec3((((((max(1u, 1u)) / 1u))) ^ 0u), 1u, 1u) * ((((((clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))).x;
 if((false))
  {
   if((((((clamp(((0.0 + (clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))), ((0.0 + (injectionSwitch.x))), (max((float(vec3(((0.0 + (injectionSwitch.x))), 0.0, 0.0))), ((0.0 + (injectionSwitch.x))))))) - 0.0) > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))) && ((injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(((((! (! (false))) || false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((workgroup_base + subgroup_id * subgroup_size + (0u ^ (subgroup_local_id))) / ((1u << (uint(1u))) >> (uint(1u))));
 if((false))
  return;
 if((((injectionSwitch.x > (float(mat3x2(injectionSwitch.y, (mix(float((mix(float(0.0), float((- 1.6)), bool(false)))), float((- 2.9)), bool(false))), sqrt(sqrt(1.0)), 1.0, 1.0, 0.0)))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if(((false || (((! (((! (((true && (injectionSwitch.x > ((injectionSwitch) * vec2(1.0, 1.0)).y))))) && true))))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  return;
 if((((bool(bool(false))) || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((! (! (! (! ((false || ((bool(bvec3((((((false || (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((! (! ((false)))))
      return;
     return;
    }
   if(((! (((false || ((((! (false)))) || false)) && true)))))
    return;
   if((((bool(bvec3((! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if(((((vec2(injectionSwitch[0], (clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
        return;
       if(((((mix(float(((9.3 * - 2631.0792))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((true && (false || (false))))))
        return;
       return;
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((((false) || false)))
            {
             if((((((((bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false))
              {
               if((false))
                return;
               return;
              }
             if((false))
              return;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((bool(bvec2((((false) && true)), true))))
            {
             if((false))
              {
               if((false))
                return;
               return;
              }
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             return;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((false))
          {
           if((((((bool(bool((true && ((injectionSwitch.x > (float(mat2(injectionSwitch.y, abs(1.0), 1.0, sqrt(1.0)))))))))) && true)))))
            return;
           return;
          }
         return;
         if((false))
          return;
         if((false))
          return;
        }
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((bool(bvec4((bool(bvec4((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) || ((injectionSwitch.x > injectionSwitch.y))), false, false, false))), false, true, false))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if(((((! (! (true && (((false || (injectionSwitch.x > (mix(float((- 15.30)), float(injectionSwitch.y), bool(true))))))))))))))
      {
       if((false))
        return;
       if(((true && ((bool(bvec2(false, false)))))))
        return;
       return;
      }
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((true && ((false))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), ((1 * (int(ivec3(((4) << 0), 1, 0))))), 64, 0);
 if(((((((true && ((mix(((false ? ((vec2(53.81, - 1.2) / asinh(injectionSwitch))) : (max(vec2((2.1), (- 3975.7442)), vec2((float((1.0 * (float((2.1)))))), (- 3975.7442)))))), vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), ((mix(vec2((5.3), (injectionSwitch)[1]), vec2(((max(injectionSwitch, injectionSwitch)))[0], (- 8603.9409)), bvec2(true, false))))[1]), bvec2((bool(bool((bool(bvec4(true, ((injectionSwitch.x < injectionSwitch.y)), false, true)))))), true))).x > injectionSwitch.y))))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((((false) && true)))
    return;
   return;
   if((! (true && ((((! ((false)))) || false)))))
    {
     if((false))
      return;
     if((bool(bvec4((false), false, true, true))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(((((((! ((true && (((! ((! (! (false)))))) && ((injectionSwitch.x < injectionSwitch.y))))))) || false) && true))))
  return;
 buf[virtual_gid] = ((((false ? (workgroup_id) : false ? (((((atomicAdd(virtual_gid, ((workgroup_id) ^ 0u)))) >> (0u | 0u)) >> (0u >> (((0u | ((uint((0u | (4u))))))) * 1u)))) : uint(subgroupAllEqual(write_val))))));
 if(((true && (((true && ((bool(bvec4(! (! (false)), false, true, true))))))))))
  {
   if((! (! (((((((bool(bvec3(((((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), false, true))) || (false || ((! (! ((! ((bool(bvec3(! (false), false, true)))))))))))))) && true)))))
    {
     if((false))
      return;
     return;
    }
   if(((bool(bvec4((((((injectionSwitch.x < injectionSwitch.y)) && (false))) || false), false, false, false)))))
    {
     if((false))
      return;
     if((((bool((bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))))))))
      return;
     if((false || (((true && (false))))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if(((! (! ((false || (((false) && true))))))))
    return;
   if(((bool(bvec4(false, false, false, false)))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((((false) || false)) || false)))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if(((((mat2(1.0) * (injectionSwitch)).x > ((true ? (vec2((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : (vec2(((- 56.60) - 0.0), 3075.6443)))).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
  }
}
