#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 ((GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id) >> (clamp((max((0u ^ ((((uint((injectionSwitch.y)) << (uint(5u))) >> (uint(5u))) * ((false ? (workgroup_size) : ((max(0u, 0u)))))))), (((uint((injectionSwitch.y)) << (uint(5u))) >> (uint(5u))) * ((false ? (workgroup_size) : ((max(0u, 0u)))))))), (((uint((injectionSwitch.y)) << (uint(5u))) >> (uint(5u))) * ((false ? (workgroup_size) : ((max(0u, 0u)))))), (((uint((injectionSwitch.y)) << (uint(5u))) >> (uint(5u))) * ((false ? (workgroup_size) : ((max(0u, 0u)))))))));
 uint workgroup_base = (uint((injectionSwitch.x)) | (workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z));
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y = ((workgroup_base) << 0u);
 uint virtual_gid = ((0u + (((((~ ((0u ^ (~ (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y))))) ^ 0u)) + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x + subgroup_local_id))) / 1u);
 do
  {
   atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
  }
 while((! ((false || ((((! (! (! ((bool(bvec4((false || (((((((((((false)) || false) || false))) || false) || false)) && true))), false, false, true))))))) || false)))))));
 do
  {
   if((false))
    return;
  }
 while((bool(((bvec2(bvec4(bvec2(((bvec3(bvec3(bvec3(bvec3(bvec3(bvec2((bool(bvec3((((((max(((false ? ((min(- 6.8, (mix(float(- 6.8), float((9.3)), bool(false)))))) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false))), true, true))), false), false)))))))), false, false)))))));
 buf[virtual_gid] = ((((uint(subgroupAllEqual(write_val))) | 0u)) << (((true ? (0u & 26940u) : (num_workgroup))) | (0u | 0u)));
}
