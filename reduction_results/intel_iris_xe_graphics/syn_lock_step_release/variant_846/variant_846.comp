#version 460

struct _GLF_struct_36 {
 mat4 _f0;
} ;

struct _GLF_struct_35 {
 uvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_34 {
 uvec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_37 {
 _GLF_struct_34 _f0;
 vec3 _f1;
 _GLF_struct_35 _f2;
 bool _f3;
 _GLF_struct_36 _f4;
} ;

struct _GLF_struct_33 {
 bvec2 _f0;
} ;

struct _GLF_struct_31 {
 mat3x2 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_30 {
 bool _f0;
 ivec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 ivec4 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 bvec4 _f4;
 vec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_32 {
 mat2x3 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 mat4x2 _f3;
 _GLF_struct_31 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_38 {
 mat4x3 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 _GLF_struct_37 _f3;
 uint subgroup_local_id;
 uvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_26 {
 bvec3 _f0;
 float _f1;
 uvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_24 {
 uint _f0;
 ivec2 _f1;
 vec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_27 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 uvec4 _f2;
 _GLF_struct_26 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 mat4 _f1;
 vec3 _f2;
 bvec3 _f3;
 bvec4 _f4;
 mat4 _f5;
 bool _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 mat2 _f2;
 _GLF_struct_22 _f3;
 uvec4 _f4;
 bool _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 uvec2 _f1;
 bool _f2;
 uint subgroup_size;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_15 {
 bool _f0;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 uvec3 _f3;
 _GLF_struct_15 _f4;
 float _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_27 _f4;
 ivec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 uint workgroup_id;
 int _f1;
 vec3 _f2;
 ivec3 _f3;
 mat2 _f4;
 mat4x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat4x3 _f1;
 bool _f2;
 uint _f3;
 mat4x3 _f4;
 vec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 mat3 _f1;
 ivec3 _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 bool _f1;
 vec3 _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_5 {
 int _f0;
 bvec2 _f1;
 ivec3 _f2;
 vec4 _f3;
 bvec3 _f4;
 vec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 uvec3 _f1;
 ivec2 _f2;
 mat2x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_11 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (mix(float((- 4.8)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(((true && ((((injectionSwitch.x > injectionSwitch.y)) || (false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_16(bvec4((false || ((bool(bvec4((bool(bool(true))), true, true, true)))))), mat3x2(1.0), ivec4(1), uvec3(1u), _GLF_struct_15(true), 1.0, bvec3(true)), _GLF_struct_17(mat2x3(1.0), vec3(((float(mat3x4(((clamp(((1.0) / 1.0), 1.0, (clamp(1.0, 1.0, 1.0))))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0))) + 0.0))), _GLF_struct_19(mat3(1.0), ((((injectionSwitch.x > injectionSwitch.y)) ? (uvec2(49599u, 76313u)) : (uvec2(1u, 1u) * (uvec2(1u))))), true, gl_SubgroupSize, _GLF_struct_18(uvec4(1u))), _GLF_struct_23(_GLF_struct_20(bvec3(true), mat4(1.0), vec3(1.0), bvec3(true), bvec4(true), mat4(1.0), true), _GLF_struct_21(ivec4(1), uvec2((0u | (1u))), bvec4((! (! (true))))), mat2(1.0), _GLF_struct_22(mat4x3(1.0)), uvec4(1u), true, ivec2(((1) << 0))), _GLF_struct_27(_GLF_struct_24((max((min(((1u) << 0u), 1u)), 1u)), ivec2(1), (mix(vec4(((+ 3.5)), (vec4((mix(float((5119.8197)), float(1.0), bool(true)))))[1], (vec4((mix(float((5119.8197)), float(1.0), bool(true)))))[2], (vec4((mix(float((5119.8197)), float(1.0), bool(true)))))[3]), vec4((vec4((mix(float((5119.8197)), float(1.0), bool(true)))))[0], (- 8.7), (19.73), (716.645)), bvec4(true, false, ((injectionSwitch.x > injectionSwitch.y)), false))), mat4(1.0)), _GLF_struct_25(ivec2(1), bvec3(true)), (~ (min((~ (uvec4(1u))), (~ (uvec4(1u)))))), _GLF_struct_26(bvec3(true), (mix(float((39.53)), float((min(1.0, (float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), bool(true))), uvec4(1u), uvec3(1u)), mat2x3(1.0)), ivec3(1), mat4x2(1.0));
 if(((true && ((! (false || (((true && (! ((bool(bool(((! ((! (false)))) && true)))))))))))))))
  {
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((((((! (! ((! (! ((false))))))) || false) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(mat4x3(1.0), _GLF_struct_32(mat2x3(1.0), _GLF_struct_29(bvec2(true), ivec4(1), ivec4(1), mat2x4((mix((mix(float((float(184943u))), float(float(1.0)), bool(true))), float((- 95.46)), bool(false)))), bvec4(true), ((false ? (vec2(12.60, 7665.2263)) : vec2((max((min(1.0, 1.0)), (min(1.0, 1.0))))))), vec3(1.0)), _GLF_struct_30((! (! (((true) || false)))), ivec4(1), (clamp(ivec3(1), ivec3(1), ivec3(1)))), mat4x2((determinant(mat4(1.0, 0.0, (max((min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, (max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, (min(0.0, 0.0)), 0.0, 1.0)) * ((clamp((clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), _GLF_struct_31(mat3x2(1.0), uvec3(1u), mat2x3(1.0), mat3x4(1.0), bvec4(true)), ivec3(1)), _GLF_struct_33(bvec2((false || (((true)) || false)))), _GLF_struct_37(_GLF_struct_34(uvec3(1u), bvec3(true)), vec3(1.0), _GLF_struct_35((~ (~ (uvec3(1u)))), bvec4(true)), ((true) && true), _GLF_struct_36(mat4(1.0))), gl_SubgroupInvocationID, uvec2(1u), true);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint num_workgroup = ((gl_NumWorkGroups.x) >> 0u);
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((false) && true)))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(_GLF_struct_12(bvec2((bool(bvec4((((injectionSwitch.x > (mix(vec2((170.317), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 3.4)), bvec2(true, false))).y)) || ((false || (false || ((true)))))), true, ((injectionSwitch.x < injectionSwitch.y)), true)))), mat3x2(1.0), mat3x2((abs(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) * ((max(1.0, 1.0))))))), ((((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).x, 1, vec3(1.0), ivec3(1), mat2((0.0 + ((float(mat3x2((clamp(1.0, 1.0, 1.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, determinant(((transpose(transpose(((mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (((true ? ((mat4(1.0, 0.0, (((((injectionSwitch.x < injectionSwitch.y)) ? mix(float((- 8765.3721)), float(0.0), bool((((max((mix(vec2((injectionSwitch)[0], (9911.2837)), vec2((1.3), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x < injectionSwitch.y)))) : (- 64.55)))), ((false ? ((mix(float((1.6)), float(- 4061.4902), bool(true)))) : (min((max((0.0 + (0.0)), 0.0)), (max((0.0 + (0.0)), 0.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, (max(0.0, 0.0)), 1.0, (((min(((false ? (ldexp(acos(- 92.16), bitfieldInsert(- 5786, - 92861, - 86589, 526))) : 0.0) - 0.0), false ? (ldexp(acos(- 92.16), (((int((max(ivec4(bitfieldInsert(- 5786, - 92861, - 86589, 526), 0, 0, int((injectionSwitch.x))), ivec4(bitfieldInsert(- 5786, - 92861, - 86589, 526), 0, 0, int((injectionSwitch.x))))))) * 1)))) : 0.0)))), 0.0, 0.0, 0.0, (1.0 * (1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (clamp(((true ? 0.0 : (27.86))), (clamp(0.0, 0.0, 0.0)), (max(0.0, 0.0)))))) : (mat4(328.277, 2714.9143, - 7990.3843, 5249.5850, 5.7, - 5.0, 909.117, 9821.4697, 220.278, 8198.6572, 7.9, 9.2, - 3.4, - 1187.8045, 677.777, 7068.2715)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))))))), 1.0)))))), mat4x2(1.0), bvec2(true));
 if((false))
  barrier();
 if(((true && ((! (! (false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_1(_GLF_struct_0(bvec4(true), true, uvec2(1u)), workgroup_size * _GLF_struct_replacement_14.workgroup_id), _GLF_struct_6(_GLF_struct_2(vec3(1.0), uvec3((clamp((clamp(1u, 1u, 1u)), 1u, ((false ? (subgroup_id) : 1u)))))), _GLF_struct_3(vec4(1.0), uvec3(1u), ivec2(1), mat2x3(1.0), (((! ((((! (! (! (bool(bvec3(true && (((! (! (false))) || (true))), true, true))))))) && ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_struct_4((bvec3(((bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((bool(bvec4(true, false, false, true))))), false)))))))), bvec2(true)), _GLF_struct_5(1, (bvec2(bvec4(bvec2(true), false, false))), ivec3(1), vec4(1.0), (bvec3(bvec4(bvec3(true), true))), vec3(1.0), mat2x3(1.0))), true, _GLF_struct_10(_GLF_struct_7(mat3x2(1.0), true, ((vec3(mat3x4(((false ? (vec3(6.3, - 0.8, 1.1)) : mat3(1.0) * (vec3(1.0)))), 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, cos((mix(float(0.0), float((- 55.38)), bool(false)))), 1.0)))), mat3x4(1.0), 1.0), _GLF_struct_8(mat4x2(1.0), mat3(1.0), ivec3(1), 1u, bvec4(true)), _GLF_struct_9(1, mat4x3(1.0), true, ((1u) + (max(((uint((max(((false ? (55.06) : (injectionSwitch.x))), (injectionSwitch.x))))) | 0u), uint((injectionSwitch.x))))), mat4x3(1.0), vec2(1.0), uvec4(1u))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((((((max(((vec2(1.0, 1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_11._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_28._f2.subgroup_size + _GLF_struct_replacement_38.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_11._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_28._f2.subgroup_size + ((((max((_GLF_struct_replacement_38.subgroup_local_id + (((int((max(ivec2(1, 0), ivec2(1, 0))))) >> 0))), (_GLF_struct_replacement_38.subgroup_local_id + 1))) / 1u)) % _GLF_struct_replacement_28._f2.subgroup_size);
 if(((false || (! (! ((((injectionSwitch.x > (clamp(injectionSwitch, ((injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if(((false || (false))))
        {
         if(((((((((injectionSwitch.x < injectionSwitch.y))) || false) && ((! (! ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > ((false ? (9.9) : (mat2(1.0) * (injectionSwitch)).y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((bool(bvec4((bool(bool(false))), false, true, false)))))
    barrier();
  }
 buf[virtual_gid] = ((0 | 0) ^ (1));
 if((false))
  barrier();
 if((false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(((2) * ((1 << (int(0))) >> (int(0))))), 4, (((int(ivec3(64, 0, 1)))) | (64)), ((4) ^ (97164 & 0)));
 if((false))
  barrier();
 if((false || ((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec3((bool(((bool((((injectionSwitch.x > injectionSwitch.y))))) && ((injectionSwitch.x < injectionSwitch.y))))), false, false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
}
