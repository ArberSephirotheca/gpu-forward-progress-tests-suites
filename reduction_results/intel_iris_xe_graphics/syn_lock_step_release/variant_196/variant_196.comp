#version 460

struct _GLF_struct_8 {
 bool _f0;
 bvec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bvec3 _f2;
 _GLF_struct_8 _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 mat2x3 _f3;
 mat4 _f4;
 uvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 uint subgroup_size;
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 ivec3 _f1;
 uvec4 _f2;
 uint _f3;
 _GLF_struct_3 _f4;
 mat3x2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec3 _f1;
 vec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat4x2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_9 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((((vec2((max(1.0, (1.0 * (((false ? (99.58) : 1.0)))))), 1.0) * (((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))))).x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(1, mat4x2((mix(float((- 822.177)), float(((true ? 1.0 : (- 7.1)))), bool(true)))), _GLF_struct_1(_GLF_struct_0(1u, uvec3(1u), vec3(1.0), ivec2(1))), _GLF_struct_5(_GLF_struct_2(gl_SubgroupSize, mat2x4(1.0)), ivec3(1), uvec4(1u), 1u, _GLF_struct_3(true), mat3x2(1.0), _GLF_struct_4(mat4(1.0), mat2x3(1.0), uvec2(1u), mat2x3((clamp(1.0, 1.0, (float(mat4x3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), mat4(1.0), uvec4(1u), vec3(1.0))), _GLF_struct_9(_GLF_struct_6(mat3x2(1.0), mat4x3((mix(float(1.0), float((243.306)), bool(false)))), mat3x4(1.0), mat3x2((mix(float((max((mix(float((float(false))), float((float((min((float(mat4x3(float(((clamp((true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, (injectionSwitch.x), 1.0, 1.0))), float(((clamp((true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77)))))))))), bool(true))), (mix(float((float((min((float(mat4x3(float(((clamp((true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, (injectionSwitch.x), 1.0, 1.0))), float(((clamp((true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77), (true ? - 0.8 : 67.77)))))))))), float((- 9.8)), bool(false)))))), float((clamp((clamp(1.0, (clamp((min((mix(float(1.0), float((15.70)), ((bool(false)) || false))), 1.0)), (float((transpose(transpose(((true ? mat2(1.0, (injectionSwitch.y), 0.0, 1.0) : (mat2(49.91, - 410.437, ((1.0 * (float(float((mix(float((0.3)), float((clamp(769.586, 769.586, 769.586))), bool(true)))))))), - 3359.9506))))))))), 1.0)), (0.0 + ((true ? (1.0) : (3.1)))))), ((true ? ((true ? (clamp(1.0, (clamp((min((mix(float(1.0), float((15.70)), ((bool(false)) || false))), 1.0)), (float((transpose(transpose(((true ? mat2(1.0, (injectionSwitch.y), 0.0, 1.0) : (mat2(49.91, - 410.437, ((1.0 * (float(float((mix(float((0.3)), float((clamp(769.586, 769.586, 769.586))), bool(true)))))))), - 3359.9506))))))))), 1.0)), (0.0 + ((true ? (1.0) : (3.1)))))) : (845.702))) : (433.708))), (clamp(1.0, (clamp((min((mix(float(1.0), float((15.70)), ((bool(false)) || false))), 1.0)), (float((transpose(transpose(((true ? mat2(1.0, (injectionSwitch.y), 0.0, 1.0) : (mat2(49.91, - 410.437, ((1.0 * (float(float((mix(float((0.3)), float((clamp(769.586, 769.586, 769.586))), bool(true)))))))), - 3359.9506))))))))), 1.0)), (0.0 + ((true ? (1.0) : (3.1))))))))), bool(((true) && ((((injectionSwitch.x < injectionSwitch.y))) || ((bool(bvec3(((false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))))), 1.0, mat3x4(1.0)), _GLF_struct_7(mat4(1.0), mat4x3(((false ? (exp(3.0)) : 1.0))), mat2(1.0), (((((false ? ((max(- 2166.4391, - 2166.4391))) : (max(0.0, (max(0.0, 0.0)))) + (1.0)))) - determinant(mat4(0.0, (min(((0.0 + (max(0.0, 0.0)))), 0.0)), 0.0, (clamp(0.0, 0.0, 0.0)), 0.0, ((0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan((float((min((max(vec3(0.0, 1.0, ((0.0) * 1.0)), vec3(0.0, 1.0, ((0.0) * 1.0)))), (max(vec3(0.0, 1.0, ((0.0) * 1.0)), vec3(0.0, 1.0, ((0.0) * 1.0))))))))), (0.0 + ((clamp(0.0, (1.0 * (0.0)), 0.0)))), 0.0, 0.0))))), bvec3(true), _GLF_struct_8(true, bvec2(true), uvec4(1u)), true));
 if(((((((bool(bvec2(false, false)))) || false)) && ((injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((((false) || false)))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((((bool(bvec2(((((! ((true && (! (((injectionSwitch.x > injectionSwitch.y))))))))) || false), false))) || false))) || false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((true && (false)) || (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((min(injectionSwitch.x, injectionSwitch.x)) > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 uint num_workgroup = (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if((! ((bool(bvec4(bool((bvec3(bvec3(bvec3((! ((false))), true, false))))), false, true, true))))))
  barrier();
 if((! (! ((false)))))
  barrier();
 if(((bool(bvec4(false, true, false, false)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (~ (~ ((clamp(gl_WorkGroupID, ((gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID))))).x;
 uint workgroup_base = (((0u | (max((~ (~ ((workgroup_size)))), (workgroup_size))))) / 1u) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_10._f3._f0.subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = ((false ? (128055u) : ((min((((0u ^ (0u)) | ((true ? (true ? ((min(0u | ((~ (~ ((((min(workgroup_base, ((workgroup_base) >> 0u)))) | ((max(workgroup_base, workgroup_base)))))))), (0u | (0u)) | (((workgroup_base) | ((max((uint(uvec2(workgroup_base, 1u))), workgroup_base)))))))) + (min(subgroup_id * ((_GLF_struct_replacement_10._f3._f0.subgroup_size) * 1u), subgroup_id * ((_GLF_struct_replacement_10._f3._f0.subgroup_size) * 1u))) : (subgroup_id)) : (workgroup_id))))), (true ? ((min(0u | ((((min(workgroup_base, ((workgroup_base) >> 0u)))) | ((max(workgroup_base, workgroup_base))))), (0u | (0u)) | ((((true ? (workgroup_base) : (workgroup_base))) | ((max((uint(uvec2(workgroup_base, 1u))), workgroup_base)))))))) + (min(subgroup_id * ((_GLF_struct_replacement_10._f3._f0.subgroup_size) * 1u), subgroup_id * ((_GLF_struct_replacement_10._f3._f0.subgroup_size) * 1u))) : (subgroup_id))))))) + ((subgroup_local_id + ((~ (~ ((1)))) << 0)) % _GLF_struct_replacement_10._f3._f0.subgroup_size);
 buf[virtual_gid] = 1;
 if((((((bool(bool(((min((max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))) && ((injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], ((((uint(uint(((max(uint(2), uint(2)))) / 1u))))) | ((uint(uvec4(uint(2), 1u, 1u, (0u >> (uint((uint(((uvec3((uint(uvec4(5u, (0u << (uint(5u))), 0u, 0u))), 1u, 0u)) | (((uvec3((uint(uvec4(5u, (0u << (uint(5u))), 0u, 0u))), 1u, 0u)) | (uvec3((uint(uvec4(5u, (0u << (uint(5u))), 0u, 0u))), 1u, 0u))))))))))))))), (int(ivec2(4, 0))), (max(64, 64)), 4);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), (((mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0))))) / (max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
}
