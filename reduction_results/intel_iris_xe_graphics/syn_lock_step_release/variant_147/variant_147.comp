#version 460

struct _GLF_struct_9 {
 mat3 _f0;
 int _f1;
 vec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 float _f1;
 uvec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat4x2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_8 {
 uint subgroup_size;
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_5 {
 uint subgroup_id;
 _GLF_struct_2 _f0;
 uvec3 _f1;
 _GLF_struct_3 _f2;
 float _f3;
 _GLF_struct_4 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((! (! ((false)))))
  {
   if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupID, _GLF_struct_2(_GLF_struct_0(mat4x3(1.0), uvec2(1u)), _GLF_struct_1(vec4(1.0))), uvec3(1u), _GLF_struct_3(((vec4(1.0)) + vec4(0.0, 0.0, 0.0, (((mix(float((4864.5508)), float((clamp(0.0, 0.0, ((0.0) / 1.0)))), bool(true)))) / 1.0)))), 1.0, _GLF_struct_4(ivec3(1)));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_8(gl_SubgroupSize, _GLF_struct_6(uvec2((clamp(1u, 1u, 1u))), mat4x2(1.0), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))), _GLF_struct_7(vec3(1.0), 1.0, uvec3(1u), mat3x2(1.0))), _GLF_struct_10(_GLF_struct_9(((((((injectionSwitch.x) + 0.0) < injectionSwitch.y)) ? mat3(1.0) : ((mat3(- 571.735, - 5.0, 1162.1143, - 417.811, ((((false ? (- 7.2) : float(mat3x2(float(vec3(5.8, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), sqrt(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0)))))), 4063.9572, - 4.9, 3.3, - 1.4) - (2240.8561))))), (min(((1) | (((1) ^ 0))), 1)), vec2(((true ? 1.0 : (7860.7113)))), mat3(1.0))));
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if(((true && (bool(bvec2((((false)) || false), true))))))
    barrier();
   barrier();
   if(((! (! ((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! ((((! (((! (false)) || false)))) && true))))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = (~ (~ ((~ (~ (gl_NumWorkGroups.x))))));
 uint workgroup_size = (~ (((~ (gl_WorkGroupSize)) - uvec3((((1u * (0u))) / 1u), 0u, ((0u) << 0u))))).x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false)) && true))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((! (! (false)))) && true)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = (min((min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id));
 uint virtual_gid = (~ (~ (workgroup_base))) + ((((uint(uvec4((~ (~ (((~ (~ ((((max((uint(uint(((_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size) | (_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size))))), ((_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size) | (_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size)))) | ((_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size) | ((~ (~ (((_GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size) << 0u))))))))))) ^ 0u)))), 1u, (~ ((1u * (~ ((max((max(1u, 1u)), 1u))))))), uint((injectionSwitch.y))))) / 1u))) + (~ (~ ((((min(true ? subgroup_local_id : (num_workgroup), true ? subgroup_local_id : (num_workgroup))))))));
 uint next_virtual_gid = ((workgroup_base + _GLF_struct_replacement_5.subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size + (((clamp(((subgroup_local_id + 1) * 1u), subgroup_local_id + 1, subgroup_local_id + 1))) % (uint((injectionSwitch.x)) | ((max(((true ? _GLF_struct_replacement_11._f0.subgroup_size : (((((injectionSwitch.x < injectionSwitch.y)) ? ((workgroup_base) | 0u) : (num_workgroup)))))), (((uint(uvec4(((((true ? _GLF_struct_replacement_11._f0.subgroup_size : (workgroup_base)))) >> 0u), 0u, 1u, 1u)))) | 0u))))))) - 0u);
 (1u * (buf[virtual_gid] = 1));
 atomicStore(buf[next_virtual_gid], uint((min((max((clamp(2, (min(2, 2)), 2)), (clamp(2, (min(2, 2)), 2)))), (clamp(2, (min(2, 2)), 2))))), ((4) - 0), 64, (min(4, 4)));
}
