#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (~ (~ (gl_WorkGroupID.x)));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + (0u ^ (subgroup_id)) * subgroup_size + ((subgroup_local_id) ^ (1u ^ 1u));
 uint next_virtual_gid = workgroup_base + (0u ^ ((uint(uvec2((min(((((subgroup_id * subgroup_size) ^ ((0u) | 0u))) | 0u), ((((subgroup_id * subgroup_size) ^ ((0u) | 0u))) | 0u))), ((false ? ((98701u | (uint(uvec4(((num_workgroup) | ((max(num_workgroup, num_workgroup)))), 0u, 1u, (0u | 0u)))))) : 0u))))))) + (((((((0u + ((uint(((((uvec3(((subgroup_local_id) / 1u), 1u, (~ (~ ((uint(uvec3(1u, ((uint((((injectionSwitch) + vec2(0.0, 0.0)).x))) ^ 0u), (min((((((false ? (87003u) : 1u * ((0u ^ ((max(0u, 0u))))))))) | 0u), (0u ^ ((max(0u, 0u)))))))))))))) << uvec3(0u, 0u, 0u))) | (uvec3(((((subgroup_local_id) / 1u)) - 0u), 1u, (~ (~ ((uint(uvec3(1u, uint((injectionSwitch.x)), (0u ^ ((max(0u, 0u))))))))))))))) + 1)))) | (((0u + ((uint(((((uvec3(((subgroup_local_id) / 1u), 1u, (~ (~ ((uint(uvec3(1u, uint((((injectionSwitch) + vec2(0.0, 0.0)).x)), (min((((1u * ((0u ^ ((max(0u, 0u))))))) | 0u), (0u ^ ((max(0u, 0u)))))))))))))) << uvec3(0u, 0u, 0u))) | (uvec3(((subgroup_local_id) / 1u), 1u, (~ (~ ((uint(uvec3(1u, uint((injectionSwitch.x)), (0u ^ ((max(0u, 0u))))))))))))))) + 1))))) | (~ (~ (((clamp(((0u >> (uint(5u))) | (0u >> (uint(5u)))), ((0u >> (uint(5u))) << 0u), 0u >> (uint(5u)))))))))) % subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[((next_virtual_gid) << 0u)], (0u ^ (uint(2))), 4, (((min(((((64) | (64))) - 0), ((64) - 0)))) - 0), 4);
}
