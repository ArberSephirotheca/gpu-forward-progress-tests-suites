#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > (mix(float((66.39)), float((float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0)))), bool(true)))))))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if(((((float(vec4(injectionSwitch.x, abs((clamp(1.0, 1.0, 1.0))), abs((0.0 + (0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
  {
   if((false || ((true && ((false))))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if(((true && (false))))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((! (! ((bool(bvec2((false), true)))))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((((bool(bool((false))))) || false)) || false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        {
         if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), false, false)))))
          return;
         barrier();
        }
       return;
       if((false))
        {
         if((bool((bvec2(bvec3(bvec2((false), false), ((injectionSwitch.x > injectionSwitch.y))))))))
          return;
         barrier();
        }
       if((((false) || false)))
        return;
      }
    }
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((((false)) || false))
  {
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((((injectionSwitch.x > ((injectionSwitch.y) + (dot(vec4(1.0, 1.0, (injectionSwitch.y), 0.0), vec4(0.0, 0.0, 0.0, 1.0))))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((! (! ((((false)) || false)))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((((true && (bool(bvec2((false || (injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y)), false)))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((((false) && true)) && true)))
    {
     if((((bool(bool((false))))) || false))
      {
       if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((((true && ((bool(bvec2(! (bool((true && (bool(((bool(bool(! (false)))))))))), false))))))))
          barrier();
         if((false))
          barrier();
         return;
         if((false))
          {
           if((false))
            {
             if(((! (! (! (! ((false))))))))
              {
               if((false))
                return;
               barrier();
              }
             if(((((false) && true) || ((true && (false))))))
              return;
             barrier();
            }
           return;
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        return;
       if((false))
        {
         if(((! (! (! ((false || ((! (false))))))))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              return;
             barrier();
            }
           if((false))
            return;
           if((false))
            {
             if((((false) && true)))
              barrier();
             return;
            }
           return;
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          return;
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((((false || ((! (! (((bool(bool(false)))))))))) || false))
        barrier();
       if((bool((true && (bool((false)))))))
        return;
       if((((false) || false)))
        return;
      }
     if((false))
      {
       if(((! (! ((! (! (false))))))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((((((((injectionSwitch.x > injectionSwitch.y)) ? (- 22.43) : (max((min(((float(mat2x4(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(0.0), (injectionSwitch.x))), 1.0, cos(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0)))), injectionSwitch.x)), (min(((float(mat2x4(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(0.0), (injectionSwitch.x))), 1.0, cos(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0)))), injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((((sqrt(abs(vec2(1.0, 1.0))) * (((injectionSwitch) * mat2((injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     if(((((vec2(injectionSwitch[((0) * 1)], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((! ((true && (! (((true && ((bool(bvec4((true && (false)), false, true, false))))))))))))
      {
       if((false))
        return;
       if(((true && (false))))
        return;
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((! (! ((((! (! ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)))))))) && true))))))))
    return;
   if(((((clamp((vec2(mat3x4(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((bool(bvec4((((((! (! ((false))))) || false)) && true), false, true, true))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
    barrier();
   return;
   if((((((true ? injectionSwitch : (round(vec2(- 577.188, 2643.9389))))).x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((bool(bvec4((false), true, false, true))))
    barrier();
   barrier();
  }
 if(((((((clamp((vec2(mat2x3(((vec2(mat3x4(((false ? (injectionSwitch) : mat2((injectionSwitch.y)) * (injectionSwitch))), 0.0, 0.0, 1.0, 1.0, ((true ? 0.0 : (- 24.78))), 1.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0), sin(0.0), 0.0, 0.0))).x, (vec2(mat2x3(((vec2(mat3x4(mat2((injectionSwitch.y)) * (injectionSwitch), 0.0, ((0.0) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0), sin(0.0), 0.0, 0.0))).x, (vec2(mat2x3(((vec2(mat3x4(mat2((injectionSwitch.y)) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0), sin(0.0), 0.0, 0.0))).x)) > injectionSwitch.y)))) || false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if(((! (! ((! (! (false))))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
  }
 if((false))
  return;
 uint workgroup_base = (~ ((min(~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)))));
 if(((! ((((((bool((bvec2(bvec2((bvec2(bvec4(bvec2((((bool(bvec4(! (false), ((false) && true), ((injectionSwitch.x > injectionSwitch.y)), false))) && true) || false), false), false, true))))))))))) && true)))))
  {
   if((((false) || false)))
    return;
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((! (! ((false)))))
    {
     if((false))
      return;
     return;
     if(((((bool(bvec3(false, false, true)))) || false)))
      return;
    }
   if((((true && (true && (false))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((bool(bvec4(bool(((false) && true)), true, true, true)))))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    return;
   return;
  }
 if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    {
     if(((((! (! (false)))) || false)))
      barrier();
     if(((bool(bvec2((false || (false)), false)))))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if(((false || (false))))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 uint virtual_gid = (((((((min(((true ? ((workgroup_base) << 0u) : (subgroup_local_id))) + subgroup_id * subgroup_size + subgroup_local_id, (1u * ((((uint(uint(workgroup_base))) + (max(subgroup_id * subgroup_size, ((subgroup_id * (((uint(uvec3(subgroup_size, 0u, 0u)))) * uint((injectionSwitch.y)))) | (subgroup_id * subgroup_size)))) + subgroup_local_id)) >> ((uint(uvec4((min(uint(uvec4(0u, 0u, (0u ^ (0u)), 1u)), uint(uvec4(0u, 0u, (0u ^ (0u)), 1u)))), 1u, 0u, 0u))))))))) - 0u)) + ((0u) ^ 0u))) >> 0u);
 if((false))
  barrier();
 if((false || (((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((! (! ((bool(bool(injectionSwitch.x > (min((min(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   return;
   if(((! (! (false)))))
    return;
  }
 uint next_virtual_gid = (((false ? (workgroup_size) : ((((true ? 1u : (num_workgroup))) * (workgroup_base + subgroup_id * subgroup_size + ((min(((0u | ((((((max(subgroup_local_id, subgroup_local_id))) >> 0u)) | (subgroup_local_id)) + (((((((((((min(1, 1))) | ((max(1, 1))))) << ((0 | 0) | 0)) + 0)) << 0)) / int((injectionSwitch.y))))))) % subgroup_size, (min((((subgroup_local_id) | (((subgroup_local_id) | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + (((max(((true ? (~ (((true ? ~ ((((min(1, 1))) | ((max(1, 1))))) : (42181))))) : (52934))), (((max((min(1, 1)), (min((((~ (~ (1)))) / 1), 1))))) | ((max(1, 1))))))) << ((0 | 0) | 0))), (((subgroup_local_id) | (subgroup_local_id)) + (((max(((true ? (~ ((((false || (true)) ? ~ ((((min(1, 1))) | ((max(1, 1))))) : (42181))))) : (52934))), (((0 | ((((min((max((min(1, 1)), (min(1, 1)))), (max((min(1, 1)), (min(1, 1))))))) | ((max((min(1, 1)), (min(1, 1))))))))) | ((((max(1, 1))) - 0)))))) << ((0 | 0) | 0))))) % subgroup_size)))))))) | (((1u * (1u * (workgroup_base + ((subgroup_id * subgroup_size) | 0u) + ((min((((subgroup_local_id) | (subgroup_local_id)) + (((((((min(1, 1))) | ((max(1, 1))))) << ((0 | 0) | 0)) + 0))) % ((subgroup_size) | (subgroup_size)), (((subgroup_local_id) | (subgroup_local_id)) + (((max((~ (((true ? ~ ((((min((min((((0 ^ (1)) | 0)), 1)), 1))) | ((max(1, 1))))) : (42181))))), (((min(1, 1))) | ((max(1, 1))))))) << ((0 | 0) | 0))) % subgroup_size)))))))));
 if((false))
  {
   if(((((mix(float(injectionSwitch.x), float((938.586)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if(((((injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec4(false, false, true, true)))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((! (! ((((((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)) && true))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   barrier();
  }
 if((false))
  return;
 if((((! ((bool(((bool((bool(bvec3(! (bool((bvec2(((bvec2(bvec2(bvec2(bvec4(((bvec2(bvec3(bvec2(bvec2((bvec2(bvec4(bvec2(bvec2(((((false || ((false || ((injectionSwitch.x > ((clamp((false ? (injectionSwitch) : injectionSwitch), (false ? (injectionSwitch) : injectionSwitch), (false ? (injectionSwitch) : injectionSwitch)))).y))))))) && true), false)), true, true))))), false)))), true, true)))))))))), true, ((injectionSwitch.x < injectionSwitch.y))))))) || false))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((bool(bvec3((false), false, ((injectionSwitch.x < injectionSwitch.y))))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
