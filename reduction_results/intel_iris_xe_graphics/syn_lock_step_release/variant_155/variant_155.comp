#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((true && ((bool(bvec3((! (! (false))), true, false)))))))
  {
   if((false))
    barrier();
   if((bool((bvec2(bvec3(bvec2((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) && true), true), true))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((bool(bool((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((((((false || (! (((! (((! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))) && ((injectionSwitch.x < injectionSwitch.y))) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((((! (! (bool(bvec4(true, true, true, false)))))) && (((! ((true && (! (false))))))))) && true))
  {
   if(((((true && (((injectionSwitch.x > (mix(float(injectionSwitch.y), float((7.7)), bool(false))))))) || false))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize.x) / 1u);
 uint workgroup_id = (~ (~ ((0u ^ (gl_WorkGroupID.x)))));
 uint workgroup_base = ((min((workgroup_size * workgroup_id), (workgroup_size * workgroup_id))) | (0u ^ (0u)));
 uint virtual_gid = (~ ((clamp((~ (~ (((~ ((((((true ? (((workgroup_base + subgroup_id * subgroup_size) | 0u)) : (subgroup_size)))) + 0u)) >> 0u)) | (~ ((((min((((true ? (((((workgroup_base + (~ (~ (subgroup_id))) * subgroup_size)) | 0u) | ((0u) >> 0u))) : (subgroup_size)))), ((max(((((true ? (((workgroup_base + subgroup_id * subgroup_size) | 0u)) : (subgroup_size))))), ((((true ? (((workgroup_base + subgroup_id * subgroup_size) | 0u)) : (subgroup_size))))))) << 0u))) + 0u)) >> 0u)))))), ~ (((((((workgroup_base + subgroup_id * ((((max(false ? ((0u ^ 0u) | ((max((workgroup_base), (workgroup_base))))) : (false ? (workgroup_base) : subgroup_size), false ? ((0u ^ 0u) | ((max((workgroup_base), (workgroup_base))))) : (false ? (workgroup_base) : subgroup_size))))))) | 0u)))) << 0u) | ((((min((((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : workgroup_base)) + (1u * (subgroup_id)) * ((false ? (((workgroup_base)) << 0u) : subgroup_size))) + 0u)) | 0u, (((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : workgroup_base)) + (1u * (subgroup_id)) * ((false ? (((workgroup_base)) << 0u) : subgroup_size))) + 0u)) | 0u)))))), (min((max((uint(uvec4((((((max(~ (((workgroup_base + subgroup_id * subgroup_size) | 0u)), ~ (((((workgroup_base + subgroup_id * subgroup_size) | 0u)) | 0u))))) | (~ (((workgroup_base + subgroup_id * subgroup_size) | 0u))))) << 0u), 1u, 1u, 0u))), (((((max(~ (((workgroup_base + subgroup_id * subgroup_size) | 0u)), ~ ((((((((1u << (uint(5u))) >> (uint(5u))) * ((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))) | 0u)) | 0u))))) | (~ (((~ (~ ((workgroup_base + subgroup_id * subgroup_size)))) | 0u))))) << 0u))), (((((max(~ (((workgroup_base + subgroup_id * subgroup_size) | 0u)), ~ (((((workgroup_base + subgroup_id * subgroup_size) | 0u)) | 0u))))) | (~ (((workgroup_base + subgroup_id * subgroup_size) | 0u))))) << 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((max(((((((((((min(subgroup_local_id + 1, (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) >> 0u)) | (subgroup_local_id + 1))) >> 0u)) | 0u)) % (((1u * (subgroup_size))) ^ (((0u) | (0u)) << (uint(7u)))), (((((1u * ((((((((subgroup_local_id + 1)) * 1u) | (subgroup_local_id + 1))) >> (min(((0u) | 0u), 0u)))) % subgroup_size))) | (~ (~ (0u))))) | ((min((1u * (((((((0u | 1u) * ((subgroup_local_id + 1) | ((uint((uvec2(1u, 1u) * (uvec2(uint(((true ? ((uvec4((max((((subgroup_local_id + ((true ? 1 : (25765))))) << 0u), (subgroup_local_id + ((true ? 1 : (25765)))))), 0u, (1u | 1u), 0u)) ^ uvec4(0u, 0u, 0u, 0u)) : ((min(((uvec4(50891u, 111489u, 93665u, 198930u)) | uvec4(0u, 0u, 0u, 0u)), uvec4(50891u, 111489u, 93665u, 198930u))))))), 1u)))))))))) >> 0u)) % subgroup_size)), (max((1u * ((((((subgroup_local_id + 1) | (subgroup_local_id + 1))) >> 0u)) % (((min(subgroup_size, (min(subgroup_size, subgroup_size))))) | (subgroup_size)))), (1u * (clamp(((((((clamp((subgroup_local_id + 1) | (subgroup_local_id + 1), (((true ? ((subgroup_local_id + 1) << 0u) : (num_workgroup)))) | (((subgroup_local_id + 1) >> (0u << (uint(5u))))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))) >> 0u)) % subgroup_size), (min(((((((clamp((subgroup_local_id + 1) | (subgroup_local_id + 1), (((true ? ((subgroup_local_id + 1) << 0u) : (num_workgroup)))) | (((subgroup_local_id + 1) >> (0u << (uint(5u))))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))) >> 0u)) % subgroup_size), ((((((clamp((subgroup_local_id + 1) | (subgroup_local_id + 1), (((true ? ((subgroup_local_id + 1) << 0u) : (num_workgroup)))) | (((subgroup_local_id + 1) >> (0u << (uint(5u))))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))) >> 0u)) % subgroup_size))), ((((((clamp((subgroup_local_id + 1) | (subgroup_local_id + 1), (((true ? ((subgroup_local_id + 1) << 0u) : (num_workgroup)))) | (((subgroup_local_id + 1) >> (0u << (uint(5u))))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))) >> 0u)) % subgroup_size)))))))))))));
 if((false))
  barrier();
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint((((true && (((true)) && true)) ? 2 : (93662)))), 4, 64, 4);
 if((false))
  barrier();
 if((false))
  barrier();
 if((true && ((bool(bvec2((false), false))))))
  barrier();
 if(((false || (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((bool((bvec3(bvec3(bvec3((true && (((((bool(bvec3(! (! (((((false) || false))) || false)), false, true))) || false))))), false, false))))))) && true)))
  barrier();
}
