#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false) && true)))
  return;
 if((! (! (! (! (((false))))))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((((false) || false) || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((((bool(((bvec3(bvec4(bvec3((bvec3(bvec3((bvec3(bvec4(bvec3(bvec3((false), false, false)), true))))))), true)))))) || false)))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  return;
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if(((! (! (false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((bool(bvec4((bool(bvec2(false, true))) || ((false || (false))), true, true, false))))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((! (! ((false)))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((bool(bvec4(true && (false), false, ((injectionSwitch.x > injectionSwitch.y)), false))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > (min((min(injectionSwitch.y, ((injectionSwitch.y) * 1.0))), injectionSwitch.y))))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > ((false ? (float(((mat2x4((- 847.014), length(vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0))), abs(cos(0.0)), 1.0, 0.0, 1.0, 1.0)) * mat2(1.0)))) : ((injectionSwitch.y) * 1.0)))))))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(((false || (false))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint next_virtual_gid = ((workgroup_base) | 0u) + subgroup_id * subgroup_size + ((((false ? (subgroup_size) : subgroup_local_id + 1))) % subgroup_size);
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if(((((true) && true) && (false))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((! (! ((false || (((! (! (bool(bvec2((((((injectionSwitch.x > injectionSwitch.y)) && true)) && true), false))))))))))))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(((bvec2(bvec2((bvec2(bvec2(bvec2(bvec2(bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if(((! (! ((true && (false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if(((false || ((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(((((injectionSwitch.x > injectionSwitch.y))) && true), false)))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if(((((bool(bvec4((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true, true))) && ((injectionSwitch.x < injectionSwitch.y))))))
    return;
   if((false))
    return;
  }
 if((((true && (subgroup_local_id + 1 < subgroup_size)) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if(((! (! (false)))))
      return;
     if(((false || (((false) || false)))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((((vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if(((true && (false))))
    {
     if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
     return;
    }
   if((((((((false)) || false)) || false)) && true))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((! (! ((! (! ((false))))))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           if((((false) || false)))
            return;
           return;
          }
         return;
        }
       return;
       if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
      }
     if((false))
      return;
     if((false))
      {
       if((((false) && true)))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((false) && true)))
    {
     if((false || ((false))))
      return;
     if(((bool(bool((bool(bvec2(false, false))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (false))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
     if(((! ((bool(bvec3((! (! (! (false)))), true, false)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(((bool(bvec3(false, false, true)))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((true && (((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
      return;
    }
   int i = 0;
   if((false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, (((clamp(0, 0, 0))) * 1));
   if((false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
  }
 if((false))
  return;
 if((false))
  return;
}
