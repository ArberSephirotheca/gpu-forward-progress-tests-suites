#version 430

struct _GLF_struct_9 {
 mat2x3 _f0;
 ivec2 _f1;
 float _f2;
 uvec4 _f3;
 mat3 _f4;
 float _f5;
 vec3 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec2 _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 bvec4 _f4;
 mat2 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uint virtual_gid;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 ivec2 _f1;
 int _f2;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 bool _f3;
 mat4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 _GLF_struct_2 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((true && ((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(((true && (false))))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((false) && true)))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((false) && true)))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((false ? (4.2) : (float(vec2(injectionSwitch.x, 1.0))))) > (vec2(injectionSwitch[0], injectionSwitch[(max(1, 1))])).y))))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   if(((! (! ((false || ((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     return;
    }
   if((true && ((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((((false) || false)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
     if(((false || (false))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(1), _GLF_struct_1(_GLF_struct_0(mat3(1.0), mat3x2((float(mat3x2(((1.0) + ((false ? (3524.2646) : (1.0 * ((float(mat3x4((min((float(vec3((clamp(((true ? ((((injectionSwitch.x > injectionSwitch.y)) ? (- 0.9) : (dot((vec2((abs(1.0) * ((float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : (98.63))), ((true ? ((((injectionSwitch.x > injectionSwitch.y)) ? (- 0.9) : (dot((vec2((abs(1.0) * ((float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : (98.63))), ((true ? ((((injectionSwitch.x > injectionSwitch.y)) ? (- 0.9) : (dot((vec2((abs(1.0) * ((float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : (98.63))))), 0.0, 1.0))), ((true ? ((((injectionSwitch.x > injectionSwitch.y)) ? (- 0.9) : (dot((vec2((abs(1.0) * ((float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : (98.63))))), ((1.0) - 0.0), (((min(0.0, 0.0)) - 0.0)), (clamp(0.0, (max(0.0, 0.0)), (clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, (injectionSwitch.x), (clamp(sqrt(1.0), sqrt(1.0), ((true ? sqrt(1.0) : (- 90.08))))), 1.0, 1.0, 0.0, sqrt(0.0))))))))), 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))))), mat2x4(1.0), ((true) || false), (transpose(transpose(mat4(1.0)))), mat2x3(1.0)), (max(vec3(1.0), vec3(1.0))), mat4x2(1.0), mat2x3(1.0), bvec4(true)), bvec3(true), _GLF_struct_2(mat4x3(1.0), gl_SubgroupSize));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((bool((! (! (bool((false) && true)))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = ((((gl_WorkGroupSize.x)) ^ 0u) >> (0u ^ (0u)));
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((! (! (false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
       if((false))
        return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  return;
 uint workgroup_base = (min(((true ? workgroup_size : ((min((0u | (workgroup_id)), workgroup_id))))), ((true ? workgroup_size : (workgroup_id))))) * ((workgroup_id) ^ ((clamp(0u, 0u, 0u)) | 0u));
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((! (((! ((false))) && (((bool(bvec4(true, false, false, true)))) && true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((false || (false))))
    return;
   if((((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((true && ((false))))
    {
     if((((false) && true)))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1, _GLF_struct_4(uvec2(1u), ivec2(1), 1), _GLF_struct_6(_GLF_struct_5(bvec2(true), workgroup_base + (1u * (((max(uint(uvec2(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u)), uint(uvec2(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u))))))) + subgroup_local_id, bvec3(true)), mat2x3(1.0)), _GLF_struct_10(uvec4(1u), mat4(1.0), _GLF_struct_7(vec3(1.0), ((bvec2(bvec2(bvec2((bvec3(bvec4(bvec3(bvec2((bool((bool(bool(bool(((true) || false)))))))), true), false)))))))), 1.0), _GLF_struct_8(vec2(((1.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(1.0)), bvec4(((((true) || (false || (false)))) || false)), mat2(1.0), _GLF_struct_9(mat2x3(1.0), ((((((((ivec2(1)) >> ivec2(0, 0))) | (ivec2(1)))) ^ ivec2(0, 0)) | ivec2(0, 0))), ((false ? (exp2(- 6.8)) : 1.0)), uvec4(((true ? 1u : (uint(9249.0682))))), mat3(1.0), 1.0, ((vec3(1.0)) + vec3(0.0, 0.0, 0.0)))));
 if((((false) && true)))
  return;
 uint next_virtual_gid = (~ (~ (((workgroup_base + subgroup_id * (0u | ((((uint(uvec2((((clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size))) - 0u), 1u))))) + 0u))) / 1u) + (((clamp(subgroup_local_id + 1, (((uint((~ (~ (uint((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))) | (((subgroup_local_id + 1) | 0u))), (((min(((0u | ((subgroup_local_id + 1)))), ((0u | ((subgroup_local_id + (0 ^ (1)))))))) >> 0u) ^ 0u)))) % _GLF_struct_replacement_3._f3.subgroup_size))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((true && ((false || (bool((bvec2(bvec4(bvec2((false || (false)), true), false, false)))))))))))
  {
   if((false))
    return;
   return;
  }
 if(((bool((bvec3(bvec3(bvec3(((false)) || false, false, true))))))))
  return;
 if(((bool(bvec2(false, true)))))
  {
   if(((true && (false))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 buf[_GLF_struct_replacement_11._f2._f0.virtual_gid] = 1;
 if((true && ((((injectionSwitch.x > ((true ? ((injectionSwitch) - vec2(0.0, 0.0)) : (vec2(- 4.2, 5.0)))).y))))))
  {
   if((false))
    return;
   return;
  }
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((bool(bvec4((false), (((max(injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, ((false ? (- 988.774) : injectionSwitch.x)))))) < injectionSwitch.y)), true, true))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > ((true ? injectionSwitch.y : (8.5)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((! (! (false)))))
            return;
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(((! (! (false)))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(((true && (false))))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((((vec2(mat3(injectionSwitch, 0.0, 0.0, determinant(mat4((length(vec3(0.0, 0.0, 0.0)) + ((clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (float(mat4(((min(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0, 1.0, (injectionSwitch.y), length(((0.0) / 1.0)), 0.0, sqrt(0.0), (dot(vec4(1.0, 0.0, ((true ? (clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))) : (689.535))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), (float(mat3x2((0.0 + (1.0)), abs(1.0), 0.0, sqrt(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, sin(0.0)))), 0.0, (injectionSwitch.x), tan(0.0), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0)), exp(0.0), (0.0 + ((clamp(log(1.0), log(1.0), log(1.0))))), (clamp(0.0, 0.0, (float(vec2(0.0, sqrt(1.0)))))), length(log(vec4(1.0, 1.0, 1.0, 1.0)))))).x) / 1.0) > (mat2(1.0) * (injectionSwitch)).y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((bool(bvec2(((((injectionSwitch) / vec2(1.0, 1.0)).x > ((((injectionSwitch.y) * 1.0)) + tan(0.0)))), true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false || ((false))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((! (! (false)))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > ((clamp(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))
  return;
 if(((! (! ((false || (false)))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if((! (! ((! (! ((false))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_struct_replacement_3._f3.subgroup_size)
  {
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((((true ? (((max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x : (- 5.2))) > injectionSwitch.y))))
    {
     if(((bool(bool(false)))))
      return;
     if((false || (((false || (false))))))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       if((((false) || false)))
        {
         if((false))
          return;
         if(((bool(bool(false)))))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        {
         if(((true && (false))))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if(((((vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   int i = (clamp(0, 0, ((0 ^ ((0))) * ((1) | (((1) - 0))))));
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! (! (false)))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false || ((false))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((((((false) || false)) && true)))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if(((((((! (! (bool(bvec2((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), true)))))))) || false)))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   atomicStore(buf[next_virtual_gid], uint((clamp(2, 2, 2))), 4, 64, 0);
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      {
       if(((true && (false))))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if(((! (! ((true && (false)))))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     return;
     if((false))
      return;
     if(((((vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if(((bool(bool(false)))))
    {
     if((false))
      return;
     if(((true && (false))))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
}
