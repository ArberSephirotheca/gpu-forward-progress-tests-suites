#version 430

struct _GLF_struct_3 {
 mat4 _f0;
 mat4 _f1;
 bvec2 _f2;
 ivec2 _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uvec3 _f1;
 bvec3 _f2;
 int _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 uvec3 _f2;
 vec3 _f3;
 vec4 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(gl_SubgroupSize, vec4((max((clamp((1.0 * (1.0)), (clamp(((1.0) - 0.0), (clamp(1.0, 1.0, 1.0)), 1.0)), (((((! (! (((true) || false)))) ? (min((max((float(((false ? (mat4x2(- 7.0, - 7.1, - 61.10, 2.1, (min(- 969.103, - 969.103)), - 7.1, 398.843, - 1.9)) : mat4x2((clamp((((max(min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))), min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))))))), (max((((max(min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, (float((max(vec4((max(((0.0) / 1.0), 0.0)), abs(1.0), 0.0, 1.0), vec4((max(((0.0) / 1.0), 0.0)), abs(1.0), 0.0, ((1.0) / sqrt(1.0))))))))))), float(((((false ? (5.6) : (clamp(float(1.0), float(1.0), float(1.0)))))) + 0.0))), min((float(((mat2x4(float(float((max(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))))))), (((max(min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))), min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, ((min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))))))))), (((max(min((float(((mat2x4(float(float(1.0)), 1.0, (max(((0.0) - 0.0), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, (clamp(0.0, (min(((0.0) / 1.0), 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(1.0))), min((float(((mat2x4(float(float(1.0)), 1.0, 0.0, 1.0, 0.0, ((min(float((mat3(1.0) * (mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, ((true ? 0.0 : (- 929.781))), 0.0, (injectionSwitch.x), 1.0, (dot(vec4(abs(0.0), (max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0), vec4(sin(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0))))))), float((mat3(1.0) * (mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, ((false ? (0.3) : 0.0)), 0.0, 0.0, (injectionSwitch.x), 1.0, (dot(vec4(abs(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4((max((min((((min(sin(0.0), ((sin(0.0)) / 1.0))) / 1.0)), (((min(sin(0.0), ((sin(0.0)) / 1.0))) / 1.0)))), ((true ? (((min(sin(0.0), ((sin(0.0)) / 1.0))) / 1.0)) : (- 6879.7443))))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0)))))))))), 0.0, 1.0)) + mat2x4(((0.0) / 1.0), (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float((1.0 * (1.0))))))))))), 1.0, 0.0, (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(((0.0) / 1.0), 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, length((max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))), ((true ? (((float(float(1.0)))) * 1.0) : (8.1))))), (float(float(1.0))))) : ((clamp(fract(- 9.8), fract(- 9.8), fract(- 9.8))))))) - 0.0))), 1.0)))), _GLF_struct_4(_GLF_struct_1(uvec4(1u), mat4x2(1.0)), _GLF_struct_2(vec3(1.0), uvec3(((1u) * 1u)), bvec3(true), 1, 1.0), _GLF_struct_3(((false ? ((transpose(transpose(mat4(- 7064.9095, 728.662, 2861.2444, 127.823, - 3.8, - 2004.3959, 524.782, 5.1, 36.76, ((5.7) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), - 27.54, 60.81, - 3.8, - 757.474, - 7.8, 4.3))))) : mat4((min(1.0, 1.0))))), mat4(1.0), bvec2(true), (min(ivec2(1), ivec2(1))), bvec2(true), mat3(1.0))), uvec3(1u), vec3(1.0), vec4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * (((max(_GLF_struct_replacement_5._f0.subgroup_size, (clamp(_GLF_struct_replacement_5._f0.subgroup_size, _GLF_struct_replacement_5._f0.subgroup_size, _GLF_struct_replacement_5._f0.subgroup_size))))) - 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size + ((min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f0.subgroup_size, ((~ (~ ((0u + (((((false ? (num_workgroup) : subgroup_local_id))) >> 0u))) + 1)))) % _GLF_struct_replacement_5._f0.subgroup_size)));
 buf[virtual_gid] = 1;
 if((false || (((subgroup_local_id + 1) | (subgroup_local_id + (clamp(((((1) | (1))) << 0), ((1) | (1)), (max(((1) | (1)), (max((~ (~ ((min((((int((injectionSwitch.y)) * (((1) | (1))))) ^ 0), (((int((injectionSwitch.y)) * (((1) | (1))))) ^ 0)))))), (((int((injectionSwitch.y)) * (((1) | (1))))) ^ 0))))))))) < _GLF_struct_replacement_5._f0.subgroup_size)))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], ((uint(2)) + (min((~ (~ (0u))), 0u))), 4, 64, 0);
  }
 else
  {
   atomicStore(buf[(min(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 0);
  }
}
