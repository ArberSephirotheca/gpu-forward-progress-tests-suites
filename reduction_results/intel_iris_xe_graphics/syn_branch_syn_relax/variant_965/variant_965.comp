#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((((((! (! ((max((float(vec4(((((injectionSwitch.x > injectionSwitch.y)) ? (- 352.653) : injectionSwitch.x)), tan(0.0), 1.0, (float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0))))))), (float(mat3x4(injectionSwitch.x, 0.0, (log(1.0) + (max(((clamp((((clamp(((min((0.0), (0.0))) / 1.0), min((0.0), (0.0)), min((0.0), (0.0)))))) / 1.0, (((clamp(((min((0.0), (0.0))) / 1.0), min((0.0), (0.0)), min((0.0), (0.0)))))) / 1.0, (((clamp(((min((0.0), (0.0))) / 1.0), min((0.0), (0.0)), min((0.0), (0.0)))))) / 1.0))), (0.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0))))) < injectionSwitch.y)))) || false))) && ((((((injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))))))
  {
   if(((! (! ((bool((bvec3(bvec4(((bvec3(bvec3(bvec3(bvec4((bvec3(bvec4(bvec3(((false) || false), true, (true && (true))), false))), false)))))), true))))))))))
    {
     if(((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(((((vec2(mat2x3(((injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
        return;
       if(((! (! (false)))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if(((false || (bool(bvec2((false), false))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((! (! ((false)))))
        return;
       return;
      }
     return;
    }
   if((((bool(bvec2(bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), false)), false))))))
    return;
  }
 if((false))
  return;
 if((((false) || false)))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((! ((bool(bvec3(((((injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (false), ((injectionSwitch.x > injectionSwitch.y)), true))))), false, false)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((! (! (false)))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if(((bool(bvec4(false, false, true, false)))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) || false), false))))))
    return;
   if((((((((((false)) || false) || false)) && true)) && true)))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((false))
  return;
 if((false))
  {
   if((bool((bool(bvec3(bool((false)), true, false))))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((bool((bvec3(bvec3(bvec3((((bool((bool(bvec3(bool(bool(bvec3((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), (false || (true)), false, false))), (! (! (false))), (! (! (((! (! (bool(bvec3(true, ((injectionSwitch.x > injectionSwitch.y)), false)))))))))))), true, true))))))), false, false))))))) && true))
  {
   if((((! ((! (! (false))) || ((! ((injectionSwitch.x > ((false ? (1704.4193) : injectionSwitch.y)))))))))))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * (clamp(workgroup_id, workgroup_id, workgroup_id));
 if((false))
  return;
 if((false))
  return;
 if(((((float((mat4(1.0) * (mat3x4((max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), sin(0.0), 0.0, 0.0))))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > ((true ? (min(injectionSwitch.y, injectionSwitch.y)) : (- 5440.0331)))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((false || ((bool(bvec2((((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) || false), ((injectionSwitch.x < injectionSwitch.y))))) && true)))))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((true && (((((clamp(injectionSwitch, (min(injectionSwitch, (vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)).x > injectionSwitch.y))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * ((((((min(((((true ? ((((((((injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : ((workgroup_size | subgroup_id)))) | ((((((injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : ((workgroup_size | subgroup_id)))) >> 0u))))) ^ 0u) : (atomicAdd(subgroup_id, workgroup_id)))) * 1u)) * 1u, (min((((((subgroup_size) * 1u)) * 1u) ^ 0u), ((false ? (workgroup_base) : (((((((subgroup_size) >> 0u)) * 1u)) * 1u) | ((((subgroup_size) * 1u)) * 1u))))))))) + (min(0u, ((0u) >> 0u))))) | ((((((min((((((((((injectionSwitch.x > ((injectionSwitch.y) + 0.0))) ? (subgroup_size) : subgroup_size))) - 0u)) * 1u)) * 1u, (0u ^ (((clamp(((subgroup_size) * 1u), (min(((subgroup_size) * 1u), ((subgroup_size) * 1u))), ((subgroup_size) * 1u)))) * 1u))))) + ((0u) / (min(1u, (min(1u, 1u))))))) >> 0u)))) + subgroup_local_id;
 uint next_virtual_gid = ((workgroup_base + subgroup_id * (~ ((max(((true ? ~ ((~ (~ (((subgroup_size)) >> 0u)))) : (workgroup_base))), ((~ ((~ (~ (((subgroup_size)) >> 0u))))) ^ 0u))))) + ((((uint(uvec2((0u | ((subgroup_local_id + 1) % subgroup_size)), (((((((((0u | 0u) | ((1u << (uint(7u))))) >> (uint(7u)))) * 1u)) | ((((0u | 0u) | ((1u << (uint(7u))))) >> (uint(7u)))))) | ((~ ((uint(uvec4(~ ((((0u | 0u) | ((1u << (uint(7u))))) >> (uint(7u)))), 1u, 1u, 1u)))))))))) * ((1u << (uint(0u))) >> (uint(0u))))))) * 1u);
 if((false))
  return;
 ((buf[virtual_gid] = 1) + 0u);
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(subgroup_local_id + 1 < (max(subgroup_size, subgroup_size)))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint((clamp(2, (int(ivec3(2, 1, (((1) << (min(0, ((((true ? 0 : ((false ? (i) : (i)))))) << 0)))) ^ 1)))), 2))), 4, 64, ((0) - 0));
   if(((((false || ((! (! (((bool(bvec4(bool(bvec3(false, false, ((true) || false))), true, ((injectionSwitch.x < injectionSwitch.y)), true))) && true))))))))))
    return;
  }
 else
  {
   if((! (! ((false || ((! (! ((false))))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if(((! ((! (! (((bool((! (! (bool((! (false))))))))) || false)))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
     if(((! (! (true && ((false)))))))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false || ((false))))
    {
     if((false))
      return;
     return;
    }
  }
}
