#version 430

struct _GLF_struct_32 {
 uvec3 _f0;
 uint _f1;
 int _f2;
} ;

struct _GLF_struct_31 {
 bool _f0;
 vec4 _f1;
 mat2x3 _f2;
 float _f3;
 bvec3 _f4;
 ivec3 _f5;
 float _f6;
} ;

struct _GLF_struct_30 {
 mat4 _f0;
 bvec4 _f1;
 mat4 _f2;
 bvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 uvec2 _f1;
 vec4 _f2;
 uvec4 _f3;
 uvec4 _f4;
 bvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_33 {
 uvec2 _f0;
 _GLF_struct_28 _f1;
 int i;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 bool _f3;
 uvec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 vec3 _f1;
 mat3x2 _f2;
 vec4 _f3;
 int _f4;
 bvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 bool _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 uint _f0;
 ivec3 _f1;
 bvec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
 mat2x3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
} ;

struct _GLF_struct_24 {
 uvec4 _f0;
 _GLF_struct_21 _f1;
 mat2x3 _f2;
 _GLF_struct_22 _f3;
 uvec4 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
} ;

struct _GLF_struct_27 {
 float _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_24 _f3;
 vec2 _f4;
 uint subgroup_size;
 _GLF_struct_26 _f5;
} ;

struct _GLF_struct_14 {
 uint workgroup_id;
 ivec2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 float _f3;
 mat4 _f4;
 mat4x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 ivec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 bvec3 _f1;
 bvec2 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_15 _f4;
 mat4x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat2x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 ivec4 _f3;
 bvec2 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_5 {
 uint _f0;
 uint next_virtual_gid;
 uint _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 float _f1;
 mat3 _f2;
 ivec4 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat2x4 _f1;
 float _f2;
 vec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat4x2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 ivec2 _f4;
 float _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 ivec3 _f1;
 mat4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 _GLF_struct_0 _f1;
 uint subgroup_local_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! ((false || (! (((false) || false))))))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((((bool(bool(bool(((! (! ((! (! (bool(bvec3(bool(((false) || false)), true, true))))))))))))))))
  {
   if(((false || (false))))
    {
     if((((! (! ((injectionSwitch.x > (((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0)).y)))))))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(((1.0) - 0.0), _GLF_struct_17(mat4x3(1.0)), _GLF_struct_20(_GLF_struct_18(mat3(1.0), vec3(1.0)), _GLF_struct_19(mat2x4(1.0), bvec3(true)), uvec2(1u)), _GLF_struct_24(uvec4(1u), _GLF_struct_21(bvec4(true)), mat2x3(1.0), _GLF_struct_22(ivec3(1), mat2x3(1.0), mat3(1.0)), uvec4(1u), _GLF_struct_23(1u, ivec3(1), bvec4(true), true)), vec2(1.0), gl_SubgroupSize, _GLF_struct_26(_GLF_struct_25(vec3(1.0), (((false ? (vec3(1.0, 7161.3873, - 0.3)) : mat3(1.0) * (vec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) + ((vec3(1.0))))))), mat3x2(1.0), vec4(1.0), 1, bvec4(true), uvec3(1u)), true, mat2(1.0), 1.0));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(true, _GLF_struct_0((max(((uvec3(1u)) | uvec3(0u, (~ (((~ (0u)) * 1u))), 0u)), ((((uvec3(1u)) - uvec3(0u, 0u, 0u))) | (uvec3(1u))))), ivec3((min(1, 1))), mat4(1.0), uvec3(((1u) << (0u >> (uint(4u)))))), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (((clamp((~ (((((max((~ (gl_WorkGroupSize.x)), (0u + ((~ (((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) >> (uvec3(5u)))).x))))))) | ((((~ ((~ (~ (gl_WorkGroupSize))).x))) | ((~ (gl_WorkGroupSize.x))))))) + 0u)), (~ (((((((max((~ ((1u * ((uint(uvec3(gl_WorkGroupSize.x, (0u ^ 1u), 0u))))))), (0u + ((~ (gl_WorkGroupSize.x))))))) | ((((((((((false ? (subgroup_id) : ~ (((((gl_WorkGroupSize.x) + 0u)) | (gl_WorkGroupSize.x)))))) / 1u))) | ((~ (gl_WorkGroupSize.x))))) ^ 0u))) / 1u))) + 0u)), (~ (((((max((~ (gl_WorkGroupSize.x)), (((0u) / 1u) + (((max(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x))))))))) | ((((~ (gl_WorkGroupSize.x))) | ((~ (((clamp(uint(uint(gl_WorkGroupSize.x)), uint(uint(gl_WorkGroupSize.x)), uint(uint(gl_WorkGroupSize.x)))))))))))) + 0u))))) | ((~ (((((max((~ (gl_WorkGroupSize.x)), (0u + ((~ (gl_WorkGroupSize.x))))))) | ((((~ ((((~ (((~ (gl_WorkGroupSize.x)) >> 0u)))) | 0u)))) | ((((~ ((max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) | (((~ ((max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))))) + 0u))));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat2x3(1.0), bvec3(true), bvec2(true), _GLF_struct_13(_GLF_struct_12(uvec2(1u), ivec4(1), mat2(1.0))), _GLF_struct_15(_GLF_struct_14(gl_WorkGroupID.x, ivec2(1), ivec2(1), mat4x3(1.0), 1.0, mat4(1.0), mat4x3(1.0), mat4x3(1.0))), mat4x3(1.0), mat4x2(((true ? 1.0 : (7626.0767)))));
 if((false))
  return;
 if(((((! ((((! (! (! ((true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_16._f4._f0.workgroup_id;
 if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)))
  return;
 if(((false || ((true && ((((clamp(injectionSwitch.x, (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))
  return;
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * ((_GLF_struct_replacement_27.subgroup_size) - 0u) + _GLF_struct_replacement_1.subgroup_local_id;
 if(((! ((false || (! (bool((bvec2(bvec2((bvec2(bvec2(bvec2(((! ((true && (! ((! (! (false))))))))), true)))))))))))))))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_2(vec3(1.0), mat2x4(1.0), 1.0, vec3(1.0), uvec3(1u)), mat4x2(1.0), _GLF_struct_3(mat4(1.0), 1.0, mat3(1.0), ivec4(1), (min(ivec3((((((((clamp((0.0 + (injectionSwitch.x)), (((false ? (30.97) : ((vec2(mat4x3(injectionSwitch, abs((injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, log(exp(0.0)), 1.0, 1.0, 1.0))).x) / 1.0))), injectionSwitch.x)) < injectionSwitch.y)) ? (0 ^ (1)) : ((false ? (23811) : (- 33429)))))) | 0)), ivec3(((((bool(bvec4(((bool(bvec4(bool(bvec4(((clamp((0.0 + (injectionSwitch.x)), ((max((max((injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x))) / 1.0), injectionSwitch.x)) < injectionSwitch.y), true, true, true)), false, true, true)))), false, true, false)))) ? 1 : (- 33429)))))), uvec4(1u))), 1u, _GLF_struct_5(((max((1u), (uint(uint((1u)))))) >> 0u), (((0u | (workgroup_base)) + subgroup_id * _GLF_struct_replacement_27.subgroup_size) | (workgroup_base + (clamp((uint(uvec2((((((uint(uvec3(subgroup_id, 0u, 0u)))) + 0u)) - 0u), 1u))), ((subgroup_id) | (subgroup_id)), subgroup_id)) * _GLF_struct_replacement_27.subgroup_size)) + ((_GLF_struct_replacement_1.subgroup_local_id + 1) % _GLF_struct_replacement_27.subgroup_size), 1u), _GLF_struct_6(1u, mat2((float(vec2(1.0, 1.0)))), ((~ (((~ ((ivec4(1)) / ivec4(1, 1, 1, 1)))) << ivec4(0, 0, 0, 0))))), ivec2(1), 1.0, _GLF_struct_10(_GLF_struct_7(mat4x2(1.0), uvec4(1u), mat2(1.0)), 1.0, _GLF_struct_8(true, mat2x4(((min(float(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), mat3x2(1.0)), ivec4(1), bvec2(true), _GLF_struct_9(ivec3(1))));
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool(bvec4(false, true, true, true)))))
  return;
 if(_GLF_struct_replacement_1.subgroup_local_id + 1 < _GLF_struct_replacement_27.subgroup_size)
  {
   if((false))
    return;
   _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_33(((uvec2(uvec4((uvec2(1u)) | (uvec2(1u)), uint((injectionSwitch.x)), ((0u) / 1u))))), _GLF_struct_28(ivec3(1), ivec2(1), mat3x4(1.0), bvec4(((((false || ((false || (bool((bvec3(bvec3(bvec3(true, true, false))))))))))) && ((true) || false)))), 0, _GLF_struct_29(mat3(1.0), uvec2(1u), vec4(1.0), uvec4(1u), uvec4(((true ? ((1u) | 0u) : (virtual_gid)))), bvec3(true), mat3x4(1.0)), _GLF_struct_30(mat4(1.0), bvec4(((true) || (! (! (false))))), mat4(1.0), bvec2(true), uvec2(1u)), _GLF_struct_31((((bool(bvec4(true, ((injectionSwitch.x > injectionSwitch.y)), true, true))) && true)), vec4(1.0), mat2x3(1.0), 1.0, bvec3(true), ivec3(1), 1.0), _GLF_struct_32(uvec3(1u), 1u, 1)), bvec3(true), mat2x3(1.0), true, uvec4(1u), (min(ivec3(1), ivec3(1))));
   atomicStore(buf[_GLF_struct_replacement_11._f2.next_virtual_gid], uint(2), 4, ((64) | (64)), (clamp((max(0, ((0) * 1))), 0, 0)));
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_11._f2.next_virtual_gid], uint(2), 4, 64, 0);
   if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
  }
 if((false))
  return;
}
