#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((true && (((false || (((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((! (((! ((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))) && ((injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((true && ((false))))
  barrier();
 if((false))
  {
   if(((bool(bvec3(false, true, (true && (false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y)) || ((! (! ((((false) || ((injectionSwitch.x > (clamp((max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (min((vec2(vec3(injectionSwitch, 0.0))), (min(injectionSwitch, injectionSwitch)))))), (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (min((vec2(vec3(injectionSwitch, 0.0))), (min(injectionSwitch, injectionSwitch)))))), (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (min((vec2(vec3(injectionSwitch, 0.0))), (min(injectionSwitch, injectionSwitch)))))))).y))))))))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((((! ((true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > (float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((false))
    return;
   if(((true && ((true && (false))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if(((! (! ((! (! (false))))))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(((((float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((bool(bool(false))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          return;
         barrier();
         if((false))
          barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((false))
        return;
      }
     barrier();
    }
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(((false || ((bool(bvec2(false, true)))))))
    {
     if((false))
      {
       if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! ((! (! (((bool(bvec4(((false) && true), false, ((injectionSwitch.x < injectionSwitch.y)), false)))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((true && (((((max(float(mat3((((min(injectionSwitch, injectionSwitch)).x) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3(((injectionSwitch.x) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((((true ? injectionSwitch.x : (float(subgroup_id)))) > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((((false) && true)))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((bool(bvec4((bool(bvec3((false), true, true))), (((bool(bvec3(((injectionSwitch.x < (vec2((mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, abs((injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0)))))).y)), true, true))) && ((injectionSwitch.x < injectionSwitch.y)))), false, true))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((false) && true)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
            return;
           return;
          }
         return;
        }
       barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    return;
   if(((false || ((bool(bvec2(false, true)))))))
    barrier();
   if((false))
    barrier();
   if(((bool((bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((false || (false || ((false))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = (((true ? uint(uvec2(gl_WorkGroupSize.x, 0u)) : (num_workgroup))));
 if((false))
  return;
 if((bool((bvec3(bvec4(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true), true))))))
  barrier();
 if(((! (! (false)))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((bool(bvec2(false, true)))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((max(workgroup_size, workgroup_size)) * workgroup_id) | 0u);
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if(((((max(injectionSwitch, injectionSwitch)).x > ((false ? (round(float(82738))) : injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   return;
   if((! (! ((! (! ((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((false)) && true))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if(((((bool(bvec4(false, false, true, false)))) || false)))
  {
   if((false))
    barrier();
   if(((((injectionSwitch.x > (clamp(injectionSwitch.y, ((false ? (clamp(((max((clamp(float(float((float(mat3x4((- 4.3), (injectionSwitch.x), (injectionSwitch.y), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), float(float((float(mat3x4((- 4.3), (injectionSwitch.x), (injectionSwitch.y), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), float(float((float(mat3x4((- 4.3), (injectionSwitch.x), (injectionSwitch.y), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), float(float((float(mat3x4((- 4.3), (injectionSwitch.x), (injectionSwitch.y), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), (- 4.3), (- 4.3))) : injectionSwitch.y)), injectionSwitch.y)))) || (! (! ((((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((bool(bvec4((bool(bool((false)))), false, ((injectionSwitch.x < injectionSwitch.y)), false))))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((((((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true))) && true))) && true))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((! (! ((false)))))
        {
         if((((false) || false)))
          return;
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((((vec2(mat2x3((min(injectionSwitch, injectionSwitch)), 1.0, 0.0, (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0))).x > injectionSwitch.y))))))
  barrier();
 if(((bool(bvec4(bool(bvec4((false), ((injectionSwitch.x < injectionSwitch.y)), (! (! (true))), false)), false, true, true)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((uint(uvec2(((subgroup_local_id) << 0u), 1u))) + 1) % subgroup_size);
 if((((injectionSwitch.x < injectionSwitch.y)) && (((bool(bool(false)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((((false)) || false))
  {
   if((((injectionSwitch.x > ((float(vec2((clamp(float((mat2x3(mat2x3(mat2x3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec3((1.0 * (1.0)), 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), float((mat2x3(mat2x3(mat2x3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec3((1.0 * (1.0)), 1.0, 1.0)))), 1.0, determinant(mat4(0.0, (clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, (float(((vec3(((true ? 0.0 : (3.8))), 0.0, 0.0)) * mat3(1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), float((mat2x3(mat2x3(mat2x3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec3((((1.0 * (1.0))) - 0.0), 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), exp(0.0)))))))))
    {
     if((false))
      return;
     if((bool(bvec3((((bool(bvec3((true && ((((injectionSwitch.x > injectionSwitch.y))))), true, false)))) && true), true, false))))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    return;
   if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    return;
   if(((! ((! (! (! ((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))
    {
     if((false))
      {
       if(((false || (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      {
       if((((! (! ((false) || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if((((false) || false)))
          barrier();
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          {
           if((! ((bool(bvec4(! ((false)), false, false, false))))))
            barrier();
           barrier();
           if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               return;
              }
             if((false))
              barrier();
             barrier();
            }
          }
         return;
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) && true)))
    return;
   if((((true && (bool(((bool(((bool((bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))))))) || false)))))))
    barrier();
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((true && (((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     return;
    }
   if(((((max(injectionSwitch.x, ((((injectionSwitch.x) - 0.0)) - 0.0))) > (min((min((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if(((bool(bool(false)))))
      barrier();
     if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
      return;
     return;
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((bool(bool(bool(bvec4(((false) || false), (bool(bool(true))), true, true))))))))
    return;
   return;
  }
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if(((! (! (false)))))
    {
     if((((false) || false)))
      barrier();
     return;
    }
  }
 if((! (! ((false)))))
  {
   if((false))
    return;
   return;
   if((false))
    {
     if((((! ((! (! (! (bool(bvec2(false, true)))))))))))
      barrier();
     return;
    }
  }
 if((false))
  return;
 if(((! (! ((false || (false)))))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && (((! (! (bool(bvec4(false, (bool(bvec2(true, true))), true, true))))))))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    barrier();
   if((((! (! (bool(bvec3((((bool(bvec4(false, true, false, false))))), true, ((injectionSwitch.x < injectionSwitch.y)))))))) || false))
    barrier();
  }
 if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
  {
   if((false))
    barrier();
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 if(((((((bool(bool(bool((bvec2(bvec4(bvec2(bool(bvec4(false, true, true, true)), false), true, false)))))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(((! ((! (! (! (false))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((true && ((((false)) && true))))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  {
   if(((((min((min(injectionSwitch.x, ((true ? injectionSwitch.x : (- 2.2))))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(((bool((bool(bool(bool(false))))))))
    barrier();
  }
 buf[virtual_gid] = 1;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if(subgroup_local_id + (((0 ^ (1))) | (min(0, ((0) >> 0)))) < (0u | (subgroup_size)))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if(((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(((false || ((! (! (false)))))))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if(((! (! ((true && (((! (! ((((injectionSwitch.x > (((true ? vec2(((transpose(transpose((mat3(mat3x4(((false ? (mat3(- 9064.3540, 5645.2862, - 87.22, 2964.6873, 0.0, - 22.18, 7.5, - 2.2, 5383.1697)) : (mat3((vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))) : (injectionSwitch)))).y)) && ((injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (float(mat3x4(injectionSwitch.y, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   int i = 0;
   if((false))
    {
     if((false))
      return;
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((((((! (! ((bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true, true, false)))))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((bool(bool(false))) && true))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((((injectionSwitch.x > ((injectionSwitch.y) - determinant(mat3(0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 else
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((true && ((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((! (! ((bool(bool(false))))))))
      barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if(((((bool(bvec4(! (! (bool(bvec4((false || (false)), false, true, true)))), false, true, true)))))))
    barrier();
   if((! (! ((false)))))
    {
     if(((! (! (false)))))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
       if(((! (! (false)))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if((((((false ? (- 420.511) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if((! (! ((false)))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (max((max(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).y))))
      return;
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) && ((((injectionSwitch.x < injectionSwitch.y))) && true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if(((! ((bool(bvec4(! (false), false, false, false)))))))
        {
         if((false))
          return;
         barrier();
        }
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
       if(((bool(bool(false)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((((! (! ((((true && (false || (bool(bvec3(bool(bool(((((injectionSwitch.x > injectionSwitch.y)) && true)))), false, true))))))))))))) && true))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x < injectionSwitch.y)) && ((! (! ((false)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((((false) || false)))
    {
     if((false))
      return;
     barrier();
     if(((! (! (false)))))
      barrier();
    }
   if((((injectionSwitch.x > (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y))))
    {
     if(((((injectionSwitch.x > injectionSwitch.y)) || ((false || (false))))))
      return;
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((false || ((bool(bvec3(false, false, true)))))))
      {
       if(((((true && ((true && (false))))) && (bool(bvec3(true, true, false))))))
        barrier();
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, (0 | (((((((min((false ? (- 34997) : (0 ^ (((64) | (64))))), (clamp((((false ? (- 34997) : (0 ^ (((64) | (64)))))) + 0), (false ? (- 34997) : (0 ^ (((64) | (64))))), (false ? (- 34997) : (0 ^ (((64) | (64)))))))))))) ^ 0) | ((min(64, ((64) / 1))))))), 0);
   if((false))
    barrier();
  }
 if((((! (! (false))) || (((false) && true)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((bool(bvec4((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))) || false))
      barrier();
    }
   return;
   if((false))
    return;
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((! (! ((false)))))
    barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(((! (! ((! (! ((! (! ((((! (! (false))))) || false)))))))))))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
}
