#version 430

struct _GLF_struct_3 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x3 _f1;
 uint _f2;
 bvec2 _f3;
 int _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 ivec4 _f4;
 ivec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint subgroup_size;
 ivec2 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((! (! (! ((! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), false)))) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(mat4((1.0 * (((1.0) * round(length((float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, (dot(vec2(0.0, 0.0), vec2(exp(0.0), 1.0))), 1.0, 1.0, exp(0.0), 0.0, 0.0, abs(0.0)))))))))), _GLF_struct_0(mat2x4((float(mat4x3(1.0, 1.0, ((0.0) + 0.0), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))), _GLF_struct_1(mat2x3((float(mat2x3((clamp(1.0, 1.0, 1.0)), 0.0, 1.0, sqrt((injectionSwitch.x)), 0.0, 1.0)))), ivec2(((1) << 0))), _GLF_struct_2(uvec3(1u), mat2x3(1.0), 1u, bvec2(true), 1, mat4x2(((max(min((max((float(vec3(1.0, 1.0, 1.0))), (float(vec3(1.0, 1.0, ((true ? 1.0 : (refract(((true ? ((- 9454.1541) * 1.0) : (1.5))), 1.3, 8.4))))))))), 1.0), min((float(vec3(1.0, 1.0, 1.0))), 1.0)))))), ivec4(1), ivec4(1), _GLF_struct_3(ivec4(1), 1)), gl_SubgroupSize, ivec2(1));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((bool(bool((! ((! (! (! ((((false || ((((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), (! ((bool(bvec2(! (false), false))))), false, false)))))) && true)))) || false)))))))))))
  barrier();
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 if((false))
  barrier();
 if(((((((injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((false) && true)))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((mat2((injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (bool(bvec2((bool((false || (bool((bool(bvec3((! (((false) || false))), true, (false || (false)))))))))), false))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = ((true ? ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : (uvec3(((((175978u) >> 0u)) + ((0u) * 1u)), 95470u, 25557u)))).x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((((0.0 + (injectionSwitch.x))) * cos(0.0)) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((false) && true)))
  barrier();
 if((((((((((false ? ((vec2(injectionSwitch[0], (mat2(1.0) * (injectionSwitch))[1]))) : (mat2((injectionSwitch.y)) * (vec2((mat2x4(mat4(mat2x4((((false ? (injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), ((((injectionSwitch.x > injectionSwitch.y)) ? (- 9451.1075) : 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))))))))).x) / 1.0) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = (max((min(gl_WorkGroupID.x, ((((gl_WorkGroupID.x) - 0u)) | 0u))), gl_WorkGroupID.x));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((bool(bvec4((bool(bvec4((false), true, false, false))), false, false, false))))
    barrier();
   if((((((false) && true)) && ((injectionSwitch.x < injectionSwitch.y)))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((! ((bool(bvec2(! ((false)), false))))))
    {
     if((((injectionSwitch.x > ((true ? (vec2(injectionSwitch[0], (max(injectionSwitch[1], injectionSwitch[1])))) : (injectionSwitch))).y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 uint workgroup_base = ((workgroup_size) | (workgroup_size)) * workgroup_id;
 if(((bool(bvec4(false, false, (((true && (true))) && true), true)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((((true && (bool(bool(((injectionSwitch.x > (((vec2((max(injectionSwitch, (vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) + abs(vec2(0.0, 0.0)))).y))))))) && true))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = ((false ? (subgroup_local_id) : workgroup_base)) + (min(((subgroup_id * ((true ? (((~ (~ (_GLF_struct_replacement_5.subgroup_size)))) << 0u) : (uint(4715.1180))))) | (((subgroup_id * (((~ (~ (((((_GLF_struct_replacement_5.subgroup_size)) | ((_GLF_struct_replacement_5.subgroup_size))) ^ ((0u) >> uint((injectionSwitch.x)))))))) << (min(0u, 0u)))) | (clamp(0u, 0u, 0u))))), subgroup_id * ((((min(((~ (~ (_GLF_struct_replacement_5.subgroup_size)))), (max(((~ (~ (_GLF_struct_replacement_5.subgroup_size)))), ((~ (~ (_GLF_struct_replacement_5.subgroup_size)))))))) << 0u)) | (((min(((~ (~ (_GLF_struct_replacement_5.subgroup_size)))), (max(((~ (~ (_GLF_struct_replacement_5.subgroup_size)))), ((~ (~ (_GLF_struct_replacement_5.subgroup_size)))))))) << 0u))))) + subgroup_local_id;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((! (! (((true && ((bool((! (! (bool(((! (! ((false))))))))))) && true)))))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = ((workgroup_base + (((0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % ((_GLF_struct_replacement_5.subgroup_size) | 0u))) | ((((true ? (((workgroup_base + (((0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % ((_GLF_struct_replacement_5.subgroup_size) | 0u)))) >> 0u) : (subgroup_local_id)))) | ((workgroup_base + (((0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % ((_GLF_struct_replacement_5.subgroup_size) | 0u))))));
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(((((bool(bvec3(false, true, false))) && true))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((max((min(subgroup_local_id, (1u * (subgroup_local_id)))), subgroup_local_id)) + ((1) ^ 0) < _GLF_struct_replacement_5.subgroup_size)
  {
   int i = 0;
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(((~ (clamp((~ (((max((max(2, 2)), 2)) | (int(ivec3((max((max(2, 2)), 2)), 0, 1)))))), (~ (((max((max(2, 2)), 2)) | (int(ivec3((max((max(2, 2)), 2)), 0, 1)))))), (((int(ivec4((int(int((~ (((max((max(2, 2)), 2)) | (int(ivec3((max((max(2, 2)), 2)), 0, 1))))))))), (0 | 0), 0, 0))) | 0))))))), 4, 64, 0);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], (clamp(uint(2), uint(2), uint(2))), 4, (min((max(((64) ^ 0), ((64) ^ 0))), 64)), 0);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)))
  barrier();
}
