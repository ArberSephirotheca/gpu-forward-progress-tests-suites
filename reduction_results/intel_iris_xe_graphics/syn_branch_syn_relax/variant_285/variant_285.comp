#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (((((((0u << ((((clamp(uint((~ (max((~ ((0u ^ (7u)))), (~ ((0u ^ (7u)))))))), uint(((true ? ((7u) | ((((clamp(7u, 7u, 7u)))) / 1u)) : (atomicExchange(subgroup_size, subgroup_id))))), uint(((7u) | ((max(7u, 7u))))))))) >> 0u)) + ((gl_NumWorkGroups.x) >> 0u)))) | 0u) >> 0u));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + (((min((clamp((1u * ((((0u ^ (false ? (subgroup_local_id) : (min(subgroup_id, subgroup_id)))))) * subgroup_size)), (1u * ((((0u ^ (false ? (((subgroup_local_id)) ^ 0u) : (min(subgroup_id, subgroup_id)))))) * subgroup_size)), (1u * ((((0u ^ (false ? (subgroup_local_id) : (((min(subgroup_id, subgroup_id)) ^ 0u)))))) * subgroup_size)))), (1u * ((((0u ^ (false ? (subgroup_local_id) : (min(((0u ^ 1u) * (subgroup_id)), subgroup_id)))))) * subgroup_size))))) | ((1u * (((~ (((~ ((false ? (subgroup_local_id) : (min(subgroup_id, subgroup_id))))) ^ (0u | 0u))))) * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((0u << (uint(8u))) + ((min((subgroup_local_id + (clamp((min(((((((int(((0 << ((clamp(int(4), int(4), int(4))))) ^ (int((((((1)) | ((((1))) - 0))) - (0 >> (int(7))))))))) * 1)) | (1))) | (((((1) * 1)) | (1)))), ((((((int(((0 << ((clamp(int(4), int(4), int(4))))) ^ (clamp((((0 ^ ((int((((((1)) | ((1)))) - (0 >> (int(7))))))))) | ((int((((((1)) | ((1)))) - (0 >> (int(7)))))))), (int((((((1)) | ((1)))) - (0 >> (int(7)))))), (int((((((1)) | ((1)))) - (0 >> (int(7))))))))))) * 1)) | (1))) | (((((1) * 1)) | (1)))))), (((min(((((1) * 1)) | (1)), ((true ? ((((1) * 1)) | (1)) : (93759))))) ^ 0)), (min(((((((((((1) * (int((injectionSwitch.x)) ^ (1))) ^ (0 >> (int(6))))) / 1))) | (1))) | 0), ((((1) * 1)) | (1))))))) % subgroup_size, (subgroup_local_id + (clamp((((int(int((((((clamp(int(int((1))), int(int((1))), int(int((1)))))) * 1)) | (1)))))) | (((((1) * 1)) | (1)))), ((((0 ^ ((1) * 1)))) | (((min((((0 | 0) ^ (1))) ^ 0, (clamp((((0 | 0) ^ (1))) ^ 0, (((0 | 0) ^ (1))) ^ 0, (((0 | 0) ^ (1))) ^ 0))))))), (min((((((((int(ivec2(min((((1) * 1)) | (1), (((1) * 1)) | (1)), 0))))) * 1))) | 0), ((((1) * 1)) | (1))))))) % subgroup_size)))));
 buf[virtual_gid] = 1;
 if((0u ^ ((max(subgroup_local_id, subgroup_local_id)) + 1)) < (0u ^ (subgroup_size)))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), (1 * (((4) * 1))), 64, ((((((0)) << 0) ^ 0)) - 0));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint((((int((min(ivec2(2, 1), ivec2(2, 1))))) | ((~ (~ (int((min(ivec2(2, 1), ivec2(2, 1))))))))))), 4, 64, 0);
  }
}
