#version 460

struct _GLF_struct_4 {
 vec3 _f0;
 mat4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 vec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 bool _f1;
 bvec4 _f2;
 uint _f3;
 bvec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat3 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat4 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 uint subgroup_size;
 vec4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 uvec2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 vec2 _f2;
 bool _f3;
 int _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((bool(bool(((((! (! (((true && ((! (! (false)))))) && true)))) || false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((! (! ((! (! (false || ((((((bool((! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if((false))
  {
   if(((bool((false || ((! (! (bool(((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! (! ((false))))) || false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(((! ((bool(bool(! (false))))))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(mat2x3(1.0), uvec2(((1u) | 0u)), _GLF_struct_0(vec3((float(mat4x3(1.0, ((0.0) / 1.0), 1.0, 0.0, ((mix(float((- 8.1)), float((false ? (smoothstep(7.4, 9.3, sign(728.319))) : (mix(float(((1.0) / 1.0)), float((6.8)), bool(false))))), bool(true)))), 1.0, ((0.0) - (clamp(0.0, 0.0, 0.0))), 1.0, 1.0, (((bool(bool(false))) ? (4929.0486) : (min(1.0, 1.0)))), 1.0, cos(0.0))))), ivec3(1), mat4x2((max(1.0, 1.0))), gl_SubgroupSize, vec4(1.0), uvec4(1u))), _GLF_struct_5(_GLF_struct_2(bvec4(((true) && true)), mat3((min(1.0, 1.0))), vec4((mix(float((98.02)), float(1.0), bool(true)))), bvec4(true)), _GLF_struct_3((mix(float((clamp((float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 1.0))), float((- 3.8)), bool(false))), true, bvec4(true), ((((min((1u) | (1u), (1u) | (1u))))) >> 0u), ((bvec2(bvec4(bvec2((bvec2(bvec4(bvec2(bvec2(true)), (((((bool(bvec4(injectionSwitch.x < ((true ? injectionSwitch : (((vec2(463.128, 57.30))) / vec2(1.0, 1.0)))).y, true, true, false))) && true)))), (! (! (true))))))), false, false)))), 1u), mat4(1.0), _GLF_struct_4(vec3(1.0), mat4((max(1.0, 1.0))), mat4x3(1.0), ivec2(1), vec2(1.0), bvec4(true))), vec2(1.0), true, 1);
 if((! (! ((false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 uint num_workgroup = ((~ ((min(~ ((uvec3(0u, 0u, 0u) + ((((~ (~ (((uvec3(0u, 0u, ((((false ? ((max(subgroup_local_id, subgroup_local_id))) : 0u))) | (0u))) ^ (gl_NumWorkGroups)) | (uvec3(0u, 0u, ((((false ? ((max(subgroup_local_id, subgroup_local_id))) : 0u))) | (0u))) ^ (gl_NumWorkGroups))))))) | (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), ~ ((uvec3(0u, 0u, 0u) + ((((~ (~ ((max(uvec3(0u, 0u, (((((false || (false)) ? (subgroup_local_id) : 0u))) | (((0u) - 0u)))) ^ (gl_NumWorkGroups), uvec3(0u, 0u, ((((false ? (subgroup_local_id) : 0u))) | (((0u) - 0u)))) ^ (gl_NumWorkGroups))))))) | uvec3(0u, (uint(uvec3(0u, uint((injectionSwitch.y)), 0u))), 0u)))))))))).x;
 if(((false || (false))))
  {
   if(((((mix(float((max(((injectionSwitch.x) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x))), float((mix(float((((- 4862.5050)) / 1.0)), float((- 7.8)), bool(false)))), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec3((false), ((injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(((((! (! ((((! (! (((injectionSwitch.x > injectionSwitch.y)) || ((true && ((((injectionSwitch) * (mat2((mat4x2(mat4x2(mat4x2(mat2(1.0)))))))).x > injectionSwitch.y)))))))) || false))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((((! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((! (! (((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((true && ((! (! ((((false || ((((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 if((! (! ((false)))))
  barrier();
 uint workgroup_size = (1u * ((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))));
 if((false))
  barrier();
 if(((bool(bvec2(false, true)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_base = ((workgroup_size * workgroup_id) << 0u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! (! (! ((! (false))))))))
  {
   if((((bool(bool(((! (! (! ((! (! ((! (! ((! ((false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
    barrier();
   barrier();
  }
 uint virtual_gid = (min(((workgroup_base + subgroup_id * _GLF_struct_replacement_6._f0._f2.subgroup_size + subgroup_local_id) | 0u), workgroup_base + subgroup_id * _GLF_struct_replacement_6._f0._f2.subgroup_size + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + (0u | (((subgroup_id) << (0u >> (((uint(1u)) ^ 0u)))) * _GLF_struct_replacement_6._f0._f2.subgroup_size)) + ((~ (~ (((((0u + (subgroup_local_id + 1))) % _GLF_struct_replacement_6._f0._f2.subgroup_size) | ((min(((0u + (subgroup_local_id + 1))) % _GLF_struct_replacement_6._f0._f2.subgroup_size, ((0u + (subgroup_local_id + 1))) % _GLF_struct_replacement_6._f0._f2.subgroup_size))))))));
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false || ((! (! (! (! ((((bool(bvec4(false, ((! ((bool(bvec2(! (bool(bvec3(((false || (bool(bvec4(false, false, false, (bool(((bvec3(bvec4(bvec3(bvec4((bvec3(bvec4(bvec3(true, true, false), false))), false)), true))))))))))), true, ((injectionSwitch.x > injectionSwitch.y))))), false)))))), false, true)))))))))))))
  barrier();
 if((((((bool(bvec4(((bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), (false || (false)), false)))))), false, false, false))))) || false)))
  {
   if((true && (((bool(bvec4(((! (! (bool(bvec3((bool(bvec4((bool(bvec4(false, true, false, false))), ((injectionSwitch.x < injectionSwitch.y)), false, true))), true, ((injectionSwitch.x < injectionSwitch.y)))))))), true, true, ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(((true && (false))))
  {
   if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec4(false, false, (true && ((((true && (true))) || ((injectionSwitch.x > injectionSwitch.y))))), false)))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((((((false) && true)) && (((true && (true))) && true))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((! (! ((! (((! ((false))) || false)))))))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 buf[next_virtual_gid] = 2;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((((injectionSwitch.x > injectionSwitch.y) || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if((false))
    barrier();
   barrier();
  }
}
