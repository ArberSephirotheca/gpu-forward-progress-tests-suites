#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(((((false || (injectionSwitch.x > (mix(float(injectionSwitch.y), float((5.5)), bool(false)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((((((! (! (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))) || false))))
  {
   if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = subgroup_size;
 if((true && ((((bool(((false || (((! (! (bool(((((bool(bvec4(true, false, false, true)))) || false) && ((false || (((((! (! ((! (! ((! (true && ((! (! ((((! (((bool(bvec4((! (! ((bool(bvec4(bool((! (! (bool((! (! (false)))))))), false, ((injectionSwitch.x > injectionSwitch.y)), false)))))), ((injectionSwitch.x > injectionSwitch.y)), false, false)))))) || false)))))))))))))))) || false))))))))) || false)))))) && true)))))
  {
   for(int _injected_loop_counter = (((0 | 0) << 0)); _injected_loop_counter != 1; (0 | (((false ? (_injected_loop_counter) : _injected_loop_counter ++)))))
    {
     return;
     if((((! ((true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((false))
        {
         if((false))
          continue;
         if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
          continue;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         if((false))
          continue;
         if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
         if((false))
          return;
        }
       if((false))
        break;
       return;
       if(((! (! (false || ((bool(bvec4((false), true, false, true)))))))))
        return;
      }
    }
   if((false))
    return;
  }
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((! (bool(bvec3(((((true && ((true && ((bool(bool(! (false)))))))))) || false), (bool(bvec3(true, true, true))), false))))))
  {
   if((false))
    return;
   return;
  }
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = num_workgroup;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((float(mat2x3(injectionSwitch.x, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((false || (bool(bvec4(false, true, true, true)))))))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((bool(((bvec3(bvec4(bvec3(bvec4(((bvec3(bvec3(bvec3(bvec4(bvec3((false), false, false), true)))))), true)), false)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 uint workgroup_id = ((true ? (uvec3(0u, 0u, 0u) | (gl_WorkGroupID)) : (uvec3(26855u, 189313u, 84801u)))).x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(((((clamp((mix(float(injectionSwitch.x), float((5.1)), bool(false))), (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id;
 if((((bool(bvec4((false), false, false, false))) || false)))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((((float((clamp(vec2(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), tan(0.0)), vec2(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), tan(0.0)), vec2(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), tan(0.0))))))) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + ((subgroup_id) + 0u) * GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + ((((subgroup_local_id + 1) % ((GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size) - uvec2(0u, 0u)).y) / 1u));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((mix(vec2((- 6.2), (- 50.74)), vec2((injectionSwitch)[0], (((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2((((! (! (((true && (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))), (((injectionSwitch.x < injectionSwitch.y)) && (bool(bool((((true) && true))))))))).x > injectionSwitch.y))))
  return;
 buf[next_virtual_gid] = 2;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
}
