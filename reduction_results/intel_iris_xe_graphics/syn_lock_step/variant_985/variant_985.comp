#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((! (! (false)))))
  return;
 if((bool((bvec2(bvec4((bvec2(bvec2(bvec2((false), false)))), true, true))))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((! (! (false)))))
    return;
   return;
  }
 if((false))
  {
   if((((((((false) || false)) || false) || false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((false))
    {
     if(((((((((mix(float((((clamp(false ? (- 7.1) : injectionSwitch.x, false ? (- 7.1) : injectionSwitch.x, false ? (- 7.1) : injectionSwitch.x))))), float((9.3)), bool(false)))) + 0.0) > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((bvec3(bvec4(bvec3(false, false, true), false)))))))
    return;
   return;
  }
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((bool(bvec2(false, true)))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = ((max(((0u) / 1u) ^ (~ ((1u * (clamp((max((~ ((((((true && (false)) ? (((96149u)) >> 0u) : (gl_NumWorkGroups.x))))) / 1u)), (((((~ (((((false ? (96149u) : (gl_NumWorkGroups.x))))) / 1u))) | 0u) + 0u)))), (~ ((((clamp((clamp(((false ? (96149u) : (gl_NumWorkGroups.x))), ((((((false ? (96149u) : (gl_NumWorkGroups.x))) >> 0u)) / 1u)), ((false ? (96149u) : (gl_NumWorkGroups.x))))), ((false ? (96149u) : (gl_NumWorkGroups.x))), ((false ? (96149u) : (gl_NumWorkGroups.x))))))) / 1u)), (~ (((((false ? (96149u) : (gl_NumWorkGroups.x))))) / 1u))))))), 0u ^ (~ ((((1u * (clamp((max((~ (((((((((false ? (96149u) : (gl_NumWorkGroups.x))))) / 1u) - 0u)) >> (0u >> (uint(3u)))))), (((~ (((((false ? ((max((0u ^ (96149u)), 96149u))) : (gl_NumWorkGroups.x))))) / 1u))) | 0u))), (~ ((uint(uvec3(((~ (((~ (((clamp((clamp(((false ? (96149u) : (gl_NumWorkGroups.x))), ((false ? (96149u) : (gl_NumWorkGroups.x))), ((false ? (96149u) : (gl_NumWorkGroups.x))))), ((false ? (96149u) : (gl_NumWorkGroups.x))), ((((false ? (96149u) : (gl_NumWorkGroups.x)))) / 1u)))))) | 0u)))), uint((injectionSwitch.x)), 0u))) / 1u)), (~ (((((false ? (96149u) : (gl_NumWorkGroups.x))))) / 1u))))) | 0u)))))));
 if((false))
  return;
 uint workgroup_size = ((clamp(uvec3(gl_WorkGroupSize[0], (0u + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), (clamp(uvec3(gl_WorkGroupSize[0], (0u + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], (0u + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], (0u + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[0], (0u + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))).x;
 if((false))
  return;
 uint workgroup_id = (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((true && ((false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((true && ((false))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint virtual_gid = (0u ^ (workgroup_base)) + subgroup_id * (min(((subgroup_size) << 0u), subgroup_size)) + subgroup_local_id;
 if((false))
  return;
 do
  {
   if((((bool(bvec2((true && ((! (! (bool(bvec3((true && (((false)))), true, true))))))), true)))) || false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      continue;
     continue;
    }
   if((! (! ((((true && ((false))))) || false))))
    {
     if((false))
      return;
     break;
    }
   if((bool(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      return;
     if((false))
      continue;
     break;
     if((! (! ((false)))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(false);
 uint next_virtual_gid = workgroup_base + (uint(uvec4(subgroup_id, 0u, 1u, ((((false ? (subgroup_size) : 1u << (0u | ((0u + ((uint(5u))))))))) >> (uint(5u)))))) * subgroup_size + ((clamp(((((0u ^ (((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : ((subgroup_local_id) | (subgroup_local_id)))) + 1)))) | ((((((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : ((((true ? subgroup_local_id : (subgroup_size)))) | (subgroup_local_id)))) + 1)) | (((((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))) ? (subgroup_size) : ((subgroup_local_id) | (subgroup_local_id)))) + 1)))) / 1u))) % (((max(subgroup_size, subgroup_size)) | ((clamp(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))))))) ^ 0u), ((min((0u ^ (subgroup_local_id + 1)), subgroup_local_id + 1))) % ((uint(uint(max(subgroup_size, subgroup_size))))), (subgroup_local_id + 1) % (max(subgroup_size, subgroup_size)))));
 ((((((buf[virtual_gid] = 1) << 0u)) / 1u)) | 0u);
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((bool(bool(((bool(bvec4(((false) && true), false, false, false)))))))) && true))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((! (! (((((false || ((! (! (((true ? injectionSwitch.x : (4168.5893))) > (clamp((((vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), (vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 ((~ (((((((((true ? ~ ((buf[next_virtual_gid] = (0 ^ (((2) - 0))))) : (num_workgroup))) - 0u)) | 0u))) | 0u))) << (clamp(((((0u) - 0u)) + 0u), 0u, ((true ? 0u : (workgroup_id))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false || ((((bool(((bvec2(bvec3(bvec2(bvec4(bvec2((bool((bool(bvec3((true && (bool((false)))), true, false))))), true), true, true)), false))))))) && ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((! (! (((((bool(bvec4(bool(bool((false))), true, true, false))) && true)))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    {
     if(((false || (false))))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((((injectionSwitch.x > (max((((mat2(1.0) * (((true ? injectionSwitch : (vec2(170.639, - 6207.4163)))))) / vec2(1.0, 1.0))), (((((((injectionSwitch.x > ((((true ? injectionSwitch : (injectionSwitch)))) - vec2(0.0, 0.0)).y)) && true)) ? ((vec2(injectionSwitch[0], injectionSwitch[1]))) : (clamp(mix(vec2((6.8), ((((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))[1]), vec2(((((mat2(1.0) * (injectionSwitch)) / vec2((min(1.0, 1.0)), 1.0))))[0], (- 4.2)), bvec2(true, false)), mix(vec2((6.8), ((((mat2(1.0) * (injectionSwitch)) / vec2((min(1.0, (mix(float(1.0), float((- 498.434)), bool(false))))), 1.0))))[1]), vec2(((((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))[(((min(0, 0))) | ((min(0, 0))))], (- 4.2)), bvec2(true, false)), (vec2(vec4(mix(vec2((6.8), ((((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))[1]), vec2(((min((((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), (clamp((((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), (((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), (((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))))))[0], (- 4.2)), bvec2(true, false)), 1.0, 1.0)))))))))).y))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if(((! (((! ((((true && ((! (! (! ((! ((bool(bvec2(! (((! ((false))) && ((injectionSwitch.x < injectionSwitch.y)))), false)))))))))))) && true))) && true)))))
    return;
   return;
  }
}
