#version 460

struct _GLF_struct_0 {
 uint subgroup_id;
 mat3 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))) && true)))
  return;
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupID, mat3(1.0));
 if((bool(bvec2((false), true))))
  barrier();
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 if((false))
  return;
 if(((((((! (! (false || ((((false) && true)))))) && true)) && true))))
  barrier();
 if(((((bool(bvec4(((false || ((false)))), true, ((! (! (bool(bvec2(true, false)))))), false))) && true)) || false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((bool(bvec4((false), true, true, true))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((bool(bvec4(((true && (bool(bvec3((false), false, true))))), true, true, false))))
  return;
 if(((bool(bvec3((true && (false)), false, true)))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((((((injectionSwitch.x > (max((1.0 * (injectionSwitch.y)), (mix(vec2((vec3(- 9.6, - 3.6, 1.1).r), (5.7)), vec2((injectionSwitch)[0], (clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))).y)))) || (! (! (false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if(((bool(bvec4(((true) || false), true, true, false))) && ((false))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.x = num_workgroup;
 if((false))
  barrier();
 if(((((((true ? ((((max(((false ? ((mat2(1.0) * (vec2(94.98, - 8.8)))) : injectionSwitch)), injectionSwitch)) * mat2(1.0))) - vec2(0.0, 0.0)) : (vec2(- 3587.3611, - 2.9))))).x > (float(float(injectionSwitch.y)))))))
  return;
 if((false))
  barrier();
 if((((bool(bvec3((false), true, false)))) && true))
  return;
 if((! (! (((bool(bvec2(false, true))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((! (! ((false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = (min(gl_WorkGroupID.x, (((((max((true ? ((uint(uvec2((0u | (((clamp(((~ (~ (0u + (((((clamp(((0u | (uint(((uint(gl_WorkGroupID.x)) / 1u))))) | (uint((((max(uint(gl_WorkGroupID.x), uint(gl_WorkGroupID.x)))) | (uint(gl_WorkGroupID.x))))), (uint(uint(gl_WorkGroupID.x))) | (uint(uint(gl_WorkGroupID.x))), (uint(uint(gl_WorkGroupID.x))) | ((~ (~ (uint(uint(gl_WorkGroupID.x)))))))))))))))), (uint(uvec3((0u ^ (((~ (~ ((((0u | ((uint(uint(gl_WorkGroupID.x))) | (uint(uint(gl_WorkGroupID.x))))))))))))), 0u, (0u >> (uint(2u)))))), ((~ ((0u ^ 0u) | ((((~ (((((1u << (uint(2u))) >> (uint(2u))) * (((min((((uint(((uvec3((uint(uint(gl_WorkGroupID.x))), 1u, 0u)) >> uvec3(0u, 0u, 0u))))) ^ 0u), (uint(uint(gl_WorkGroupID.x))))) | (uint(uint(gl_WorkGroupID.x)))))))))) | ((~ (((((1u << (uint(2u))) >> ((max(uint(2u), uint(2u))))) * (((min((uint(((uvec3((uint(uint(gl_WorkGroupID.x))), 1u, 0u)) >> uvec3(0u, 0u, 0u)))), (uint(uint(gl_WorkGroupID.x))))) | (uint(uint(gl_WorkGroupID.x))))))))))))))))) / 1u))), 1u)))) ^ 0u : (num_workgroup)), (true ? ((uint(uvec2((0u | (((clamp(((~ (~ (0u + (((((clamp(((0u | (uint(((uint(gl_WorkGroupID.x)) / 1u))))) | (uint(uint(gl_WorkGroupID.x))), (uint(uint(gl_WorkGroupID.x))) | (uint(uint((uint(uvec2(gl_WorkGroupID.x, (uint((injectionSwitch.y)) ^ 1u))))))), (uint(uint(gl_WorkGroupID.x))) | (uint(uint((~ (~ (gl_WorkGroupID.x)))))))))))))))), (uint(uvec3((0u ^ (((~ (~ ((((uint(((uint(gl_WorkGroupID.x)) | (uint(gl_WorkGroupID.x))))) | (uint(uint(gl_WorkGroupID.x))))))))))), 0u, (0u >> (uint(2u)))))), ((~ ((((0u ^ 0u)) + 0u) | ((((true ? ((~ (((((((1u << (((uint(2u)) / (uint(uvec3(1u, 0u, 1u)))))) >> (uint(2u)))) | 0u) * (((min((uint(((uvec3((uint(uint(gl_WorkGroupID.x))), 1u, 0u)) >> ((uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), (uint(uint(gl_WorkGroupID.x))))) | (uint(uint(gl_WorkGroupID.x)))))))))) | ((~ (((((1u << ((false ? (workgroup_size) : (uint(2u))))) >> (uint(2u))) * (((min((uint(((uvec3((uint(uint(gl_WorkGroupID.x))), 1u, 0u)) >> uvec3(0u, 0u, 0u)))), (uint(uint(gl_WorkGroupID.x))))) | (uint(uint((~ (~ (gl_WorkGroupID.x))))))))))))) : (subgroup_size)))))))))) / 1u))), 1u)))) ^ 0u : (num_workgroup))))) ^ 0u)))));
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((((! ((! (! (! (bool(bvec3(! (! ((false))), true, true)))))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 if((false))
  return;
 if((false || ((false))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_base = (max((max((min(workgroup_size, workgroup_size)), (((1u * (workgroup_size))) | (workgroup_size)))), ((((((false ? (subgroup_local_id) : workgroup_size)) | (0u >> (uint(3u)))))) - (0u | 0u)))) * workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((((! ((true && (! ((min(injectionSwitch.x, ((clamp(mix(float((- 38.25)), float(injectionSwitch.x), bool(true)), mix(float((- 38.25)), float(injectionSwitch.x), bool(true)), mix(float((- 38.25)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))))) || false)))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_struct_replacement_0.subgroup_id * (uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[1], ((0u ^ ((((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[2]) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[2])) << 0u)))), GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[3])).y + subgroup_local_id;
 if((false))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.w + _GLF_struct_replacement_0.subgroup_id * (clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y, ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y) - 0u), ((clamp(uint(uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 0u, 0u)), uint(uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 0u, 0u)), uint(uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.y, 0u, 0u, 0u))))))) + ((subgroup_local_id + 1) % (~ ((uvec4(0u, 0u, 0u, ((((0u) | (((0u) ^ 0u)))) - 0u)) | (~ ((uvec4(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[0], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base[3]))))))).y);
 buf[GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14num_workgroupsubgroup_sizevirtual_gidworkgroup_base.z] = 1;
 if(((((false || (false)))) || ((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 buf[next_virtual_gid] = (min(2, 2));
 if((false))
  barrier();
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false)) && true))
      barrier();
     barrier();
    }
   return;
   if((((true && (((((true && ((false || (((injectionSwitch.x < injectionSwitch.y)))))) ? ((false ? ((float(((mat4(((false ? (2021.1938) : - 7.6)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, (dot(vec3(1.0, 0.0, 1.0), vec3(tan(0.0), 1.0, abs(0.0)))), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : injectionSwitch.x)) : ((mix(float(- 41.72), float((3.2)), bool(false)))))) > injectionSwitch.y))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > ((true ? injectionSwitch.y : (441.502)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
