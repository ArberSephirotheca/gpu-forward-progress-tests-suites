#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = (~ (~ (gl_WorkGroupID))).x;
 uint workgroup_base = (~ (~ (workgroup_size))) * (((((clamp(workgroup_id, (((min(workgroup_id, workgroup_id))) << 0u), (min(workgroup_id, (max((((min(workgroup_id, workgroup_id))) ^ 0u), (min(workgroup_id, workgroup_id))))))))) ^ ((0u) * 1u)) * ((1u) - (((clamp((uint((injectionSwitch.x)) | (0u)), (uint((injectionSwitch.x)) | ((0u | (0u)))), (min((((true ? uint((injectionSwitch.x)) | (0u) : (max(workgroup_size, uvec2(78645u, 48693u).r))))), (min((uint(((length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.x)))) | ((max((0u ^ (0u)), 0u)))), (uint((((injectionSwitch.x)) / 1.0)) | (uint((uvec3(uvec3(uvec3((0u), (0u ^ 1u), 0u))))))))))))) | (clamp((uint((injectionSwitch.x)) | (0u)), (uint((injectionSwitch.x)) | ((0u | (0u)))), (min((((true ? uint((injectionSwitch.x)) | (0u) : (max(workgroup_size, uvec2(78645u, 48693u).r))))), (min((uint(((length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.x)))) | ((max((0u ^ (0u)), 0u)))), (uint((((injectionSwitch.x)) / 1.0)) | (uint((uvec3(uvec3(uvec3((0u), (0u ^ 1u), 0u))))))))))))))))));
 uint virtual_gid = workgroup_base + (min(((((false ? (atomicAnd(subgroup_local_id, subgroup_size)) : ((subgroup_id) * (uint(uvec3(1u, 0u, 0u))))))) >> ((uint(uvec4((((((0u) | 0u)) - 0u)), 1u, 1u, ((1u << (uint(3u))) >> (uint(3u)))))) | (((true ? 0u : (num_workgroup)))))), (((max(subgroup_id, ((subgroup_id) | (subgroup_id))))) | 0u))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((subgroup_id) ^ 0u) * ((((0u) << 0u) | (uint(uvec3((((0u ^ (subgroup_size))) << 0u), (1u ^ (((false ? (num_workgroup) : (((injectionSwitch.x > injectionSwitch.y)) ? (((workgroup_size) - (max(0u, 0u)))) : 1u))))), 1u))))) + ((~ (((~ ((subgroup_local_id + 1) % subgroup_size)) / 1u))));
 buf[virtual_gid] = 1;
 buf[next_virtual_gid] = 2;
}
