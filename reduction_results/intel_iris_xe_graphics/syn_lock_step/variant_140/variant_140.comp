#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((((bool(bvec3((((((injectionSwitch.x > injectionSwitch.y)))) || false), true, true))) || false)))
  {
   if((false))
    {
     if(((((bool(bvec4((true && ((! (! ((((((mix(float(injectionSwitch.x), float((154.890)), bool(false)))) - 0.0) > injectionSwitch.y)) || false))))), false, false, true)))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((1.6), (0.4)), bvec2(false, false))).y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((min(injectionSwitch.x, (float(mat2((vec2(vec3((clamp(injectionSwitch, (mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0))).x, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((vec2(vec2(injectionSwitch))).x > (mix(float((- 9.0)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool((bvec2((bvec2(bvec2((bvec2(bvec2((bvec2(bvec3(bvec2(bvec2((! (! (((((injectionSwitch.x > injectionSwitch.y))) && true)))), false)), false)))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (0u + (workgroup_size * workgroup_id));
 uint virtual_gid = (((~ (~ ((0u | ((0u ^ (workgroup_base)))) + (0u | (subgroup_id)) * (((~ (~ ((max((min((uint(((uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u))))), (((((injectionSwitch.x < injectionSwitch.y)) ? ((true ? uint(((uvec2(subgroup_size, 1u)) | (((((uvec2(subgroup_size, 1u)) | (((((max((uvec2(subgroup_size, 1u)), (uvec2(subgroup_size, 1u))))) | ((uvec2(subgroup_size, 1u)))) ^ uvec2(0u, 0u))))) | (uvec2(subgroup_size, 1u)))))) : (subgroup_size))) : (8713u)))))), ((((subgroup_size) << 0u)) / 1u))))))) * ((1u << (min((uint(((uint(uvec4((5u), 0u, 1u, 0u))) >> 0u))), (uint(((uint(uvec4((5u), 0u, ((false ? (workgroup_size) : ((1u) | ((0u | (1u)))))), 0u))) >> 0u)))))) >> (uint(5u)))))))) << 0u) + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec3(((((bool(bool(((bool(bool((false)))))))) || false)) && true), true, true))))
  barrier();
 uint next_virtual_gid = workgroup_base + ((false ? (subgroup_local_id) : (min(((subgroup_id) | 0u) * ((true ? ((subgroup_size) | 0u) : (subgroup_size))), subgroup_id * subgroup_size)))) + ((((clamp((subgroup_local_id + ((((1) | (((1) ^ 0)))) / 1)) % subgroup_size, (((subgroup_local_id) / 1u) + ((1 * ((1) - 0)))) % subgroup_size, ((min((clamp((((0u + (subgroup_local_id)) + 1) | (subgroup_local_id + (~ (~ ((int(ivec2((~ (~ (1))), 1)))))))), ((subgroup_local_id + 1) | (subgroup_local_id + (~ (~ (((0 + (((int(ivec2((~ (~ (1))), 1))) / int((injectionSwitch.y))))))))))), ((subgroup_local_id + 1) | (subgroup_local_id + ((true ? (~ (~ ((int((ivec2(ivec2(ivec2((~ (~ (1))), 1))))))))) : (bitfieldReverse(- 75330)))))))), subgroup_local_id + 1))) % subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size)));
 if((false))
  barrier();
 if((bool(bvec4((false || ((false))), (false || (false)), false, true))))
  barrier();
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 (~ ((((((false ? (workgroup_size) : ((0u | (~ (((buf[next_virtual_gid] = 2)) * 1u))))))) / 1u)) - 0u));
}
