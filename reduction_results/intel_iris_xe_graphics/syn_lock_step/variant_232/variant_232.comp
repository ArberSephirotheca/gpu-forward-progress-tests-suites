#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = (uvec3(0u, 0u, ((0u) ^ 0u)) ^ (gl_WorkGroupSize)).x;
 uint workgroup_id = (~ ((~ (max(((((0u + ((uint(uvec4(~ ((max(~ ((~ (~ (gl_WorkGroupID.x)))), ~ ((true ? (clamp(((~ (~ (gl_WorkGroupID.x)))), ((~ (~ (gl_WorkGroupID.x)))), (uint(uint(((~ (~ (gl_WorkGroupID.x))))))))) : (workgroup_size)))))), 1u, 1u, 1u))))))) ^ 0u), ((0u + ((uint(uvec4(((~ ((max(~ ((~ (~ (gl_WorkGroupID.x)))), ~ ((~ (~ (gl_WorkGroupID.x)))))))) << (0u << (uint(5u)))), 1u, 1u, 1u)))))))))));
 uint workgroup_base = ((true ? ((workgroup_size) / 1u) * (((uint(uvec3(workgroup_id, 0u, uint((injectionSwitch.x))))) + 0u)) : (clamp(num_workgroup, num_workgroup, workgroup_id))));
 uint virtual_gid = (0u | (((((uint(((((uvec4(0u, ((clamp(((true ? uint((injectionSwitch.y)) & ((1u << (uint(3u))) >> (uint(3u))) : (subgroup_local_id))), uint((injectionSwitch.y)) & ((((1u << (uint(3u))) >> (uint(3u))) * 1u)), uint((injectionSwitch.y)) & ((1u << (uint(3u))) >> (uint(3u)))))), 0u, ((1u << (uint(7u))) >> ((((((max((uint((~ (~ (uvec2(uint(7u), 1u)))))) | (uint((~ (~ (uvec2(uint(7u), 1u)))))), (uint((~ (~ (uvec2(uint(7u), 1u)))))) | (uint((~ (~ (uvec2(uint(7u), 1u))))))))) ^ (31098u & 0u)))))))) | (uvec4((clamp(0u, 0u, 0u)), (uint((clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) & ((1u << (uint(3u))) >> (uint(3u)))), 0u, ((1u << (uint(7u))) >> (uint(7u)))))) - uvec4(0u, 0u, 0u, 0u))))) ^ (workgroup_base))) / 1u))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = (min(((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) / 1u), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 buf[virtual_gid] = 1;
 buf[next_virtual_gid] = 2;
}
