#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((((false) && true)))
  return;
 if((! (! ((false)))))
  {
   if((((injectionSwitch.x > (mix(float((1.9)), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((bool(bvec3(false, false, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if(((! (! (false)))))
    return;
   return;
  }
 uint num_workgroup = (uvec3(uvec3(((((((((uvec3(1u, 1u, 1u) << (uvec3(0u))) >> (uvec3(0u))) * (uvec3(((true ? 0u : (77534u))), 0u, 0u))) | uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))).x;
 if((((true && (bool(bvec4((((((((bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false) && true))), ((true) && true), (! (! (((false) && true)))), true)))))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((((true && (bool((bvec3((bvec3((bvec3(bvec3(((bvec3(bvec3(bvec3(bvec4(bvec3((((bvec3(bvec4(bvec3(bvec3(((bvec3(bvec4(bvec3((bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3((false || (injectionSwitch.x > injectionSwitch.y)), ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)))), true))), true)))), false)))))), false)))))), false)))))))))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if(((((clamp((clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) + vec2(0.0, 0.0)))).x, (float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, (min(((false ? (- 186.012) : (max(1.0, (clamp(1.0, ((false ? (31.28) : 1.0)), 1.0)))))), 1.0))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((((injectionSwitch) / vec2(1.0, 1.0)).x > ((injectionSwitch) * mat2(1.0)).y))))
  return;
 if(((bool(bvec2(false, (((! (! ((bool(bvec3(false, false, false)))))) || (((false || (! ((((false || (! (bool(bvec3(true, true, (((bool((bvec2(bvec3(bvec2(false, true), false))))) && ((injectionSwitch.x < injectionSwitch.y)))))))))) && ((! (! (false))) || ((bool(bvec3((false || (true)), false, true))))))))))))))))))
  return;
 if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
  return;
 if((false))
  return;
 uint workgroup_id = (uint(uvec4(((min(0u, 0u)) ^ ((((((((uvec3(uvec3(gl_WorkGroupID)))) * uvec3(1u, 1u, 1u)).x) ^ 0u)) >> 0u))), 0u, 0u, ((1u) >> 0u))));
 if((! (! ((false)))))
  {
   if((((! (! ((! ((! (! (((! ((((false) && true) || (((false || (false))) && true)))) || false))))))))))))
    return;
   if((false))
    return;
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > (vec2(vec2(((((injectionSwitch.x > injectionSwitch.y)) ? (injectionSwitch) : (mix(vec2((injectionSwitch)[0], (520.162)), vec2((- 2.7), (injectionSwitch)[1]), bvec2(false, true)))))))).y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((((bool(bvec4(injectionSwitch.x > ((max(((! (! (false))) ? (vec2(9.5)) : injectionSwitch), ((! (! (false))) ? (vec2(9.5)) : injectionSwitch)))).y, true, ((injectionSwitch.x < injectionSwitch.y)), false)))))) && true)))
    {
     if((bool(bvec4((false), false, false, false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(((false || (false))))
    return;
   return;
  }
 uint workgroup_base = (max(workgroup_size, (~ (((true ? ~ (workgroup_size) : (46337u))))))) * workgroup_id;
 if(((! (! ((! (! ((((! (! ((false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if((false))
    return;
   return;
  }
 if(((((! (! ((((clamp(mix(vec2((((injectionSwitch)[0]) + ((((0.0) - 0.0)) * 1.0)), (- 9413.5904)), vec2((- 3124.8080), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((((injectionSwitch)[0]) + ((((0.0) - 0.0)) * 1.0)), (- 9413.5904)), vec2((- 3124.8080), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((((injectionSwitch)[0]) + ((((0.0) - 0.0)) * 1.0)), (- 9413.5904)), vec2((- 3124.8080), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))) || (bool((false || (bool((false)))))))))
  {
   if((false || ((! ((false || ((true && (true && ((! (! (! ((false || ((false || (((false))))))))))))))))))))
    return;
   if(((((injectionSwitch.x < injectionSwitch.y)) && (((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   return;
   if((false))
    return;
  }
 if(((((max(injectionSwitch.x, (mix(float(injectionSwitch.x), float((43.92)), bool(false))))) > (float(mat4((float(mat4x3((max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, cos(0.0), (min((min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, (mix(float((vec4(- 9544.1381, - 77.43, - 7345.1356, - 74.61).s)), float(0.0), bool(true))), 1.0, 0.0)))))))
  return;
 uint virtual_gid = workgroup_base + ((((((((subgroup_id) + (0u >> (uint(5u))))) * 1u)) / 1u)) >> 0u) * (((clamp((max(subgroup_size, subgroup_size)), (max(subgroup_size, subgroup_size)), (max(subgroup_size, subgroup_size))))) << 0u) + subgroup_local_id;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + ((min(min(subgroup_id * subgroup_size, (clamp(((((subgroup_id) >> 0u)) | (subgroup_id)) * subgroup_size, (uint(uint(((((subgroup_id) >> (uint(uint((max(0u, (uint(uvec4(0u, 0u, 1u, 0u)))))))))) | (subgroup_id)) * subgroup_size))), (~ (~ (((((((subgroup_id) >> 0u) | ((subgroup_id) >> 0u)))) | (subgroup_id)) * subgroup_size)))))), (uint(uvec3(min(subgroup_id * subgroup_size, (0u | (((((~ (~ (((uint(uvec4(subgroup_id, 1u, 1u, 0u)))) >> 0u))))) | (subgroup_id)))) * subgroup_size), 0u, 0u)))))) + ((0u | ((uint(uvec2((subgroup_local_id + 1), 1u))))) % subgroup_size);
 if((false))
  return;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((false))
  return;
 if((((true && (subgroup_local_id + ((false ? ((false ? (60260) : (- 20030))) : 1)) < subgroup_size))) && true))
  {
   if((false))
    return;
   int i = ((~ (~ ((((false ? (- 27078) : 0)) / 1)))));
   if(((bool((! (! (bool(((false || ((true && (bool((bvec3(bvec4(bvec3(((((((true) || false) ? ((injectionSwitch) * ((mat2(1.0)) / mat2((injectionSwitch.y), (injectionSwitch.y), (clamp((float(mat3((injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, cos(((((false ? (- 0.4) : 0.0))) / 1.0)), 0.0, sqrt(1.0)))), (clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), (mix(float((((mix(float((- 7.7)), float(mix(float((- 66.02)), float(((injectionSwitch.y)) / 1.0), bool(true))), bool(true)))))), float(((- 169.407 - - 7.7))), bool(false))))), (float(mat2x3((injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)))))) : ((true ? (vec2(- 6921.5690, - 98.88)) : (injectionSwitch))))).x > (float(mat4x3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, (injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), 0.0, cos(0.0), 1.0, 1.0))))), (false || (((true) || false))), ((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))), true)))))))))))))))))
    {
     if((bool(bvec4((((((! (! ((((false) || (((bool((! (! (bool(((false) && true)))))))) || false))))))) && true) && true)), true, true, true))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   buf[next_virtual_gid] = 2;
  }
 else
  {
   if((false))
    return;
   buf[next_virtual_gid] = 2;
   if((false))
    return;
  }
}
