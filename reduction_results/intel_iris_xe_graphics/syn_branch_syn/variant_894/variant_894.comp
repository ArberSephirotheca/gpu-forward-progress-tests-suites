#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = ((false ? ((~ (num_workgroup >> subgroup_local_id))) : gl_WorkGroupID.x));
 uint workgroup_base = (min(workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = ((true ? workgroup_base + subgroup_id * subgroup_size : (workgroup_id))) + (0u + (1u * ((max((subgroup_local_id), ((min((0u | 0u) ^ ((subgroup_local_id)), (0u | 0u) ^ ((subgroup_local_id))))))))));
 uint next_virtual_gid = (0u ^ ((0u ^ ((((0u | (workgroup_base + (max((((0u | (subgroup_id * subgroup_size))) / 1u), ((subgroup_id) * 1u) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))))) << (1u ^ 1u)))));
 ((((buf[virtual_gid] = 1)) << 0u) / 1u);
 if(((min(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))) + 1 < ((((subgroup_size) + (~ (~ (0u)))) | 0u)))
  {
   int i = ((((0) >> 0)) | (0));
   buf[next_virtual_gid] = 2;
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
