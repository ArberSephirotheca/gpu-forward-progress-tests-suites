#version 460

struct _GLF_struct_23 {
 mat4x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_18 {
 bool _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 uint _f4;
 vec4 _f5;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 mat4x2 _f1;
 float _f2;
 mat4 _f3;
 vec4 _f4;
 int _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_24 {
 uint workgroup_size;
 _GLF_struct_16 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_22 _f2;
 mat4 _f3;
 _GLF_struct_23 _f4;
 vec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_12 {
 int _f0;
 mat2x4 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 uvec2 _f1;
 vec4 _f2;
 uvec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 float _f2;
 _GLF_struct_12 _f3;
 mat3x2 _f4;
 mat2x4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 int _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat4 _f1;
 mat4 _f2;
 vec3 _f3;
 ivec4 _f4;
 mat2x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 vec2 _f1;
 uint workgroup_id;
 mat2x4 _f2;
 _GLF_struct_7 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bool _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uint _f1;
 bvec3 _f2;
 mat2x4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_base;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((((((false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   barrier();
   if((! ((bool(bvec2(! ((false)), true))))))
    barrier();
   if((false))
    barrier();
  }
 if(((! ((bool(bvec3(! ((! (! (((false) || false))))), false, true)))))))
  barrier();
 if((! (! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if((false))
  barrier();
 if(((((max(injectionSwitch, injectionSwitch)).x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false)) && true))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((((false || ((! (! (bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) && true), (! (! ((((float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, (dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)))))) > injectionSwitch.y))))))))))))))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((bool((bool(bvec3(bool(false), true, true)))))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((true && ((! (! ((false)))))))
  {
   if((false))
    return;
   barrier();
  }
 if(((bool((bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), false)))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    return;
   barrier();
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24((((clamp(((true ? ((gl_WorkGroupSize) >> (((((false ? (mix(uvec3(96902u, ((191856u) << 0u), ((14498u) + (0u >> ((1u * (uint(2u))))))), uvec3(67141u, 5336u, 130823u), (bvec3(bvec4(bvec3(true, true, true), true))))) : uvec3(1u, 1u, 1u) * ((((((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) - (uvec3(0u, 0u, 0u) >> (uvec3(7u)))) - uvec3(0u, 0u, 0u)))))) | (uvec3(1u, 1u, 1u) * ((((uvec3(0u, 0u, 0u) ^ uvec3(0u, (clamp(0u, 0u, 0u)), 0u)))) - (uvec3(0u, (clamp(0u, 0u, (~ (~ (0u))))), 0u) >> (uvec3(7u)))))))) : (uvec3(173310u, 141303u, 23467u)))), ((((min((~ (~ (((~ (((true ? ~ (((((((~ (~ ((gl_WorkGroupSize))))) | ((min((min((gl_WorkGroupSize), (gl_WorkGroupSize))), (gl_WorkGroupSize))))) >> (uvec3(((0u ^ (~ (~ (0u))))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << (uvec3(((5u) - 0u))))))) : (uvec3(37945u, 62870u, 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3((~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ((~ (((true ? ~ (((((((~ (~ ((gl_WorkGroupSize))))) | ((min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3((~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << (uvec3(((max((5u) - 0u, (5u) - 0u))))))))) : (uvec3(37945u, (max(62870u, ((62870u) >> 0u))), 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3((~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u))), (((((max(gl_WorkGroupSize, (((max((true ? (min((gl_WorkGroupSize), (gl_WorkGroupSize))) : (uvec3(192901u, 106108u, 54774u))), (true ? (min((gl_WorkGroupSize), (gl_WorkGroupSize))) : (uvec3(192901u, 106108u, 54774u)))))) - uvec3(0u, 0u, 0u)))))) * ((uvec3((injectionSwitch.y), (((injectionSwitch.y) * 1.0)), (injectionSwitch.y)) << (uvec3(2u))) >> (uvec3(1u, 1u, 1u) * ((uvec3(2u)))))) >> ((((max(((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), ((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) / (((((uvec3(1u, 1u, 1u)) | ((uvec3(uvec3(uvec3(1u, 1u, 1u))))))) | uvec3((uint(uvec3((1u * (0u)), ((1u << (uint(4u))) >> (uint(4u))), 1u))), 0u, 0u)) & uvec3(((1u) - (0u | 0u)), 1u, (max(1u, ((1u) | 0u)))))) ^ uvec3(0u, 0u, 0u)))))) | (((clamp((((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) | (uvec3(uvec3(((gl_WorkGroupSize) >> (uvec3((~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), (((~ (~ ((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))) | ((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))).x, _GLF_struct_16(_GLF_struct_15(mat2x3(1.0), bvec4(true)), mat3x2(1.0), uvec3(1u), bvec4(true)), _GLF_struct_20(_GLF_struct_17(vec3(1.0), mat4x2(1.0), 1.0, mat4(1.0), vec4(1.0), 1), _GLF_struct_18(((((true)) || false) && true), mat4x3(1.0), mat3x2((min(1.0, 1.0))), uvec4((0u | ((min(1u, 1u))))), 1u, vec4((float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(((false ? (3.3) : abs(1.0)))), 0.0, 1.0, 1.0))))), _GLF_struct_19(vec2(1.0), mat2x4(1.0)), mat4x2((clamp(((1.0) + 0.0), 1.0, 1.0)))), _GLF_struct_22(_GLF_struct_21((mat4(0.0, 0.0, 0.0, (0.0 + (0.0)), 0.0, 0.0, ((true ? (min(0.0, 0.0)) : (vec4(801.260, 8092.7037, 994.301, - 832.283).r))), 0.0, 0.0, 0.0, (max(0.0, 0.0)), 0.0, 0.0, ((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) ? (fract(1.8)) : ((0.0) * 1.0))), 0.0, 0.0) + (mat4(1.0))), mat3(1.0)), (min(vec3(1.0), ((true ? vec3(1.0) : (vec3(342.785, 280.657, 1.6))))))), mat4(1.0), _GLF_struct_23(mat4x2(1.0), 1u), vec4(1.0), (max((uvec4(1u, 1u, 1u, 1u) * ((clamp((min(uvec4(1u), ((uvec4(1u)) | ((min(uvec4(1u), uvec4(1u))))))), (min(uvec4(1u), ((uvec4(1u)) | ((min(uvec4(1u), uvec4(1u))))))), (min(uvec4(1u), ((uvec4(1u)) | ((min(uvec4(1u), uvec4(1u))))))))))), (min(uvec4(1u), ((uvec4(1u)) | ((min(uvec4(1u), uvec4(1u))))))))));
 if((false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(bvec2(true), _GLF_struct_4(ivec4(1)), _GLF_struct_5(mat2x3(1.0), (min(ivec3(1), ivec3(1)))), true, _GLF_struct_8(_GLF_struct_6(mat4x2(1.0), mat4(1.0), mat4(((max((1.0) / determinant(mat2(determinant(mat4((mix(float((4120.7623)), float((max(1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, ((false ? (- 1.1) : 1.0)), 0.0, 1.0, 1.0, 1.0)))), (clamp((((1.0)) - (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), (((1.0)) - (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), (((1.0)) - (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))) / determinant(mat2(determinant(mat4((clamp((mix(float((4120.7623)), float((max((clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), (mix(float((4120.7623)), float((max((clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), (mix(float((4120.7623)), float((max((clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))))), (min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), ((false ? (vec4(- 40.79, 4116.4685, 28.27, - 535.303).y) : 0.0)), 1.0, determinant(mat3(1.0, 0.0, (min(0.0, 0.0)), 0.0, ((false ? (- 1.1) : (clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0)))))))), (min((min((mix(vec3((vec3(1.0))[0], (6552.2171), (3708.3233)), vec3((235.100), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(false, true, true))), vec3(1.0))), (mix(vec3(((- 5.1 * - 80.50)), (- 729.882), (float(mat3x2((vec3(1.0))[2], 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), vec3((vec3(1.0))[0], (vec3(1.0))[1], (8.6)), bvec3(true, true, false))))), ivec4(1), mat2x4(1.0), true), vec2(1.0), gl_WorkGroupID.x, mat2x4(1.0), _GLF_struct_7(ivec2(1), 1, mat2(1.0), 1.0), mat3x2(1.0)), _GLF_struct_9(mat2x3(1.0), mat3(1.0), (((min(ivec2(((false ? ((((int(ivec2(- 40579, 1))) >> 0))) : (~ (~ (1)))))), ivec2(((false ? ((((int(ivec2(- 40579, 1))) >> 0))) : (~ (~ (1))))))))) ^ ivec2(0, 0))), _GLF_struct_13(_GLF_struct_10(mat3(1.0)), _GLF_struct_11(mat3x2(1.0), uvec2(1u), vec4((float((mat2((injectionSwitch.y)) * (mat3x2((float(mat2x3(1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0)))))), uvec2(1u), ivec3(1)), 1.0, _GLF_struct_12(1, mat2x4(1.0), mat4(1.0), mat3x4(1.0)), mat3x2((float((mat2x4(mat2x4(((mat2x4(1.0, 0.0, 1.0, 0.0, sqrt((dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mat2x4(1.0), mat2x4((clamp(1.0, (min(1.0, 1.0)), 1.0)))));
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if((false))
      barrier();
    }
   if((((! ((true && (! ((((false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(true), 1, _GLF_struct_1(bvec2((! (! ((true && (bool(bvec2((true && (((bool(bvec4(true, false, ((injectionSwitch.x < injectionSwitch.y)), false)))))), false)))))))), 1u, bvec3(true), mat2x4(1.0), uvec4(1u)), mat3x4(1.0)), _GLF_struct_replacement_24.workgroup_size * _GLF_struct_replacement_14._f4.workgroup_id);
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (float(mat4x2((((0.0 + (injectionSwitch.y))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0)))))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((true && (false))))
    return;
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 uint next_virtual_gid = ((_GLF_struct_replacement_3.workgroup_base) >> uint((injectionSwitch.x))) + subgroup_id * subgroup_size + (clamp((~ (~ ((0u ^ (((subgroup_local_id + 1) % subgroup_size)))))), (0u ^ (((subgroup_local_id + 1) % subgroup_size))), (0u ^ (((subgroup_local_id + 1) % subgroup_size)))));
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((! (bool(bvec2((bool(bvec4((! (((((injectionSwitch.x > injectionSwitch.y)) || (false))))), true, ((injectionSwitch.x > injectionSwitch.y)), ((false) || false)))), false)))))
  {
   if((false))
    {
     if(((((! (! (false)))) || false)))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((! ((! (((! (! (((((injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false || ((((injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 buf[virtual_gid] = ((1) << 0);
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if((((((false ? (acosh(8248.0330)) : ((injectionSwitch.x) / 1.0))) > ((true ? injectionSwitch : (cosh(injectionSwitch)))).y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if((! (true && ((! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if((false))
      barrier();
     if(((bool((bool(bvec3(bool(true), false, ((injectionSwitch.x > injectionSwitch.y))))))) && ((false || (((bool(bool(false)))))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
      }
     if((false))
      barrier();
     if(((((mix(vec2(((vec2((mat2(mat2x4(mat2(((injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0)))))))[0], (max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((8.0), (mix(float((0.1)), float((4833.0135)), bool(((injectionSwitch.x > injectionSwitch.y)))))), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((true && ((false || ((injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           return;
           if((false))
            barrier();
           if(((! (! (false)))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         barrier();
         if((false))
          barrier();
         if(((! ((! (! (! (false))))))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((false || (false))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if(((((! (! (false)))) && true)))
          barrier();
         return;
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! ((true && (((false) || false))))))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((false || (bool(bvec3(false, (bool(bvec2(false, true))), false)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if((((false) && true)))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((bool(((bvec2(bvec4(bvec2(bvec2(bvec2((bool(bool(false))), false))), false, true))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((((((clamp(((float(((mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0), ((float(((mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0), float(((mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
     if(((! (! (false)))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((true && ((false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((((false || (bool(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), false)))))))
    {
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((bool(bvec4(((true && (bool(bvec2((((((bool(bvec4(((! (! (true))) && (bool(bvec4(((false) && true), false, false, true)))), true, true, true)))) || false))), false))))), false, false, false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((((false) && true)))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
}
