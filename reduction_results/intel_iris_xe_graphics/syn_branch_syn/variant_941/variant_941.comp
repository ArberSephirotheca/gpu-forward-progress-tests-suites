#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    {
     if(((! (! (bool(bvec4((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)), true, true)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((bool(((bvec3(bvec3(bvec3(bvec4(bvec3((false), false, true), false)))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((true && (false))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)))).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if(((! (! (bool(bvec4((false), false, true, true)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((((false) || false)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((clamp((clamp(injectionSwitch.x, ((((false ? (67.18) : true ? (vec2((clamp(vec4(injectionSwitch, (0.0 + (0.0)), 0.0), vec4(injectionSwitch, (0.0 + (0.0)), 0.0), vec4(injectionSwitch, (0.0 + (0.0)), 0.0))))).x : (3.6))))), injectionSwitch.x)), (mix(float((vec2(injectionSwitch[0], ((max(max(injectionSwitch[1], ((((injectionSwitch[1])) - 0.0) + 0.0)), (clamp(max(injectionSwitch[1], ((((injectionSwitch) * mat2(1.0))[1]) + 0.0)), max(injectionSwitch[1], ((injectionSwitch[1]) + 0.0)), max(injectionSwitch[1], ((injectionSwitch[1]) + 0.0))))))))).x), float((- 2.0)), bool(false))), injectionSwitch.x)) > ((injectionSwitch.y) - 0.0)))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((bool(bool((! (! (((bool(bvec4(((false)) || false, false, true, ((injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) || false)))
  {
   if(((((((injectionSwitch.x < injectionSwitch.y)) || false)) && ((bool(bvec2(false, true)))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((bool(bvec3((false), false, false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if(((((bool((bvec2(bvec4(bvec2(((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : (3510.6527))) > injectionSwitch.y)), false), true, ((((injectionSwitch.x < ((injectionSwitch.y) / 1.0))) && (bool(bvec2(true, ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))))) || false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false || ((bool(bvec3((false), false, true))))))
      barrier();
     barrier();
    }
   if((! ((! (! (! ((false))))))))
    barrier();
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((((((false ? (vec2(- 0.0, - 38.24)) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((((min((cos(0.0) * (injectionSwitch.x)), (cos(0.0) * (injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false || (((bool(((bvec2(bvec2((bvec2(bvec3(bvec2(bvec3((bvec2(bvec2((bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), true)))))), false)), true)))))))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! (((((injectionSwitch.x > injectionSwitch.y)) || (! (! (! (false))))))))))
  {
   if(((((bool(bvec2(bool(bvec2(((bool(bool(((injectionSwitch.x > injectionSwitch.y))))) || false), true)), true)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((((((((true) && true) ? injectionSwitch.x : (755.129))) > injectionSwitch.y) && true)))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (((false || (bool(bool(((((injectionSwitch.x < injectionSwitch.y)) && ((false) && ((injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((bool(bvec4(false, false, true, ((injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if((bool(bvec3((false), ((injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(((false || (false))))
  barrier();
 if(((((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec2((false), ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((! (((((false || (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((! ((true && (! ((false)))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((((((false) || false) ? (1.7) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((float(mat2((mix(float((((clamp(((injectionSwitch.x < injectionSwitch.y)) ? (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : (3.0), ((injectionSwitch.x < injectionSwitch.y)) ? (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : (3.0), ((injectionSwitch.x < injectionSwitch.y)) ? (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : (3.0)))))), float((- 6.6)), bool(false))), sin(0.0), 0.0, exp(0.0)))) > injectionSwitch.y))))
    {
     if((true && ((false))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if(((false || ((bool(bvec3(false, true, (! (! (! ((! (true)))))))))))))
    barrier();
   barrier();
   if(((((clamp(injectionSwitch.x, (max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((! ((bool(bool(! (((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bool(false)))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((((((! ((! (! (! ((true && ((! (! ((! (! (true)))))))))))))) ? (mat2(((((false ? (((false ? (injectionSwitch) : vec2(- 945.320, - 49.35)))) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y)) * (injectionSwitch)) : (vec2(2.4, - 1.1)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((workgroup_base) | (workgroup_base)) + subgroup_id * ((subgroup_size) - ((0u) << (uint((1u * (uint((((uint(uvec4(0u, (1u ^ 1u), 1u, 0u))) | 0u))))))))) + (~ (~ (((subgroup_local_id + 1) % subgroup_size))));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! ((bool(bvec3(! (false), false, true)))))))
  barrier();
 if(((true && ((((bool((bvec2(bvec3((bvec2(bvec4(bvec2((((false || (injectionSwitch.x > injectionSwitch.y)))), false), true, false))), (((bool(bvec4(true, false, ((injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))) && true))
  {
   if((false))
    barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((! (! (((injectionSwitch.x > (((mix(float(injectionSwitch.y), float((- 5685.4212)), bool(false)))) / 1.0))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (((! ((! (! (false))))) && ((injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if((! (! ((false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((((((((((false || (true)) ? (clamp((max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch)), (max(injectionSwitch, injectionSwitch)))).x : (- 400.551)))) / 1.0)) / 1.0) > injectionSwitch.y) && true)) && true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 (0u ^ (buf[virtual_gid] = 1));
 if((false))
  {
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(subgroup_local_id + 1 < (min(((0u ^ (uint(uvec4(subgroup_size, 1u, 1u, 1u))))), ((true ? (clamp(subgroup_size, subgroup_size, (min(subgroup_size, subgroup_size)))) : (virtual_gid))))))
  {
   if((false))
    barrier();
   int i = 0;
   if(((((bool(bvec2(bool(bool((false || (((! (! (false)))))))), true)))) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
   ((((((buf[next_virtual_gid] = ((((2) >> 0)) << 0)) + 0u)) - 0u)) / 1u);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((false) || false)) || false)))
    barrier();
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = (clamp((min(2, ((2) >> 0))), 2, 2));
   if((((injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((bool(bvec2(false, true)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((((((injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))))
      barrier();
     if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec3(false, true, false)))))
      barrier();
     if((((bool((true && ((bool(bvec2(bool((false)), ((injectionSwitch.x > injectionSwitch.y))))))))) || false)))
      barrier();
     if((! (! ((false || ((! (! ((false))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((bool(bvec3(false, (((injectionSwitch.x > injectionSwitch.y)) || (true)), (((float(vec2(injectionSwitch.x, 1.0))) < (mix(float(injectionSwitch.y), float((float(196722u))), bool(false))))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if((((false) || false)))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((((((vec2(vec4(injectionSwitch, sqrt(0.0), (min(0.0, 0.0))))).x) * 1.0) > injectionSwitch.y)) || false))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false || (((! (! (((((injectionSwitch.x > injectionSwitch.y)) || (bool(bool(((! (! (((true && (false)))))))))))))))) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((false || ((true && (false))))))
    barrier();
   if((false))
    {
     if(((bool(bvec3(false, false, true)))))
      barrier();
     if((((false)) && true))
      {
       if(((bool(bvec4(((((injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, false, (bool((bvec2(bvec2(bvec2(((false) || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)))))))))))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > (mix(float((0.2)), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((false)) && true))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((! ((bool((bvec2(bvec3(bvec2(! ((! (! ((bool(bvec2((bool(bvec2((((bool(((bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, ((injectionSwitch.x > injectionSwitch.y))), false)))))))))), true))), false))))))), false), ((! (((! (bool(bvec3(false, false, false))))) && true))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || ((((((float(mat2x3((max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, ((float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, length(0.0), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, exp(0.0)))) > injectionSwitch.y)))) || false))))
    barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 if(((! ((bool(bvec2(! (false), true)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
