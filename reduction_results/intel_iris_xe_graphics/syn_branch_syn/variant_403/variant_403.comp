#version 460

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 mat4x2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 bvec4 _f1;
 uint _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4 _f1;
 bvec2 _f2;
 uvec2 _f3;
 int _f4;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 bool _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat4x3 _f1;
 uint _f2;
 vec3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 float _f2;
 bool _f3;
 bvec3 _f4;
 vec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 uint subgroup_size;
 int _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((bool(bvec3(false, true, true)))))
  barrier();
 if((((((! (! ((((((false)) && true)) || false))))) || false)) && true))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((((false) && true)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((((((injectionSwitch.x > (float(((true ? mat2x3((min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, log(1.0), 1.0, 0.0) : (matrixCompMult(mat2x3(9232.1150, - 6.6, - 47.61, - 3581.8625, - 9694.9218, - 1.4), mat2x3(5827.0680, 3.5, 9332.2222, 7.8, - 150.552, 845.606))))))))))) && ((((false ? (- 7.6) : injectionSwitch.x)) < injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(vec3((((1.0 * (1.0)) - 0.0))), _GLF_struct_0(mat4x3(((clamp((max((1.0), ((false ? (- 9.1) : (1.0 * ((1.0))))))), (1.0), (1.0))) / (((! (! (true))) ? cos(0.0) : (cosh(- 5.0)))))), ivec2(((true ? 1 : (- 19632))))), _GLF_struct_4(_GLF_struct_1(1u, mat4x3(1.0), 1u, (vec3(vec4(vec3(1.0), 1.0)))), _GLF_struct_2(((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), true), 1.0, true, (bvec3(bvec3(bvec3(true)))), vec4(1.0), _GLF_struct_3(((1u * (0u)) | (((0u ^ (uint(uint(1u))))))), mat4((mix(float((((1.2) / round(length(normalize(vec2(1.0, 1.0))))))), float(1.0), bool((((bool((bool(bool(bool(true))))))) && true))))), bvec2((bool(bvec2((((false || (true))) && true), false)))), (uvec2(uvec4(uvec2((uint(uvec2(1u, 0u)))), 0u, 1u))), 1)), _GLF_struct_7(_GLF_struct_5(bvec4(true), mat3x2(((1.0) - 0.0)), (bvec2(bvec3(bvec2(true), false))), mat4x2((max(1.0, (clamp(1.0, 1.0, ((true ? (mix(float(1.0), float((743.204)), bool(false))) : (- 289.635)))))))), bvec4(((((true) && true)) || false))), bvec4(true), ((1u) * 1u), _GLF_struct_6(mat2x4(1.0), mat4((((min((clamp(1.0, 1.0, (clamp((float((mat2(1.0) * ((clamp(vec2(1.0, 1.0), (mix(((false ? (injectionSwitch) : vec2((- 778.721), (vec2(1.0, 1.0))[1]))), vec2((vec2(1.0, 1.0))[0], (45.68)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 1.0))))))), 1.0, (clamp(1.0, 1.0, (clamp(1.0, 1.0, 1.0)))))))), (clamp(1.0, 1.0, (clamp((float((mat2(1.0) * ((clamp(vec2(1.0, 1.0), (mix(((false ? (injectionSwitch) : vec2((- 778.721), (vec2(1.0, 1.0))[1]))), vec2((vec2(1.0, 1.0))[0], (45.68)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 1.0))))))), 1.0, (clamp(1.0, 1.0, (clamp(1.0, 1.0, 1.0))))))))))) - ((true ? ((((0.0 + ((mix(float(((0.0 + (951.447)))), float(log(1.0)), bool(true))) + (0.0)))) / 1.0)) : (12.35))))), bvec3((bool(bool(true)))))), gl_SubgroupSize, ((0 ^ (int((max(ivec4(1, 1, 0, 1), ivec4((max((min((0 ^ (1)), (0 ^ (1)))), 1)), 1, 0, 1))))))));
 if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = (uint(((~ (~ ((uint((uint(uvec4(((((((((true ? ((((clamp((~ (~ ((((true ? min(uvec3(uvec4(((gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), ((((false ? (subgroup_local_id) : 1u))) >> 0u))), uvec3(uvec4(gl_WorkGroupSize, 1u))) : (uvec3(146230u, 55241u, 67746u)))))))), (min(uvec3(uvec4(gl_WorkGroupSize, 1u)), uvec3(uvec4(gl_WorkGroupSize, 1u)))), (min(uvec3(uvec4(gl_WorkGroupSize, 1u)), (~ (~ (uvec3(uvec4(gl_WorkGroupSize, 1u))))))))))) - uvec3(0u, (((uint(uvec3(0u, 0u, uint((injectionSwitch.y))))) ^ 0u)), 0u)) : (uvec3(74648u, 143047u, 92407u)))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, ((0u) << 0u)))))) / uvec3(1u, 1u, 1u))) | (uvec3(0u, 0u, 0u) << (((uvec3(6u)) << uvec3(0u, 0u, 0u))))).x, 0u, ((1u) ^ uint((injectionSwitch.x))), 0u)))))))) ^ 0u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((false || (! ((bool(bvec3(! ((((injectionSwitch.x > ((injectionSwitch.y) - 0.0))))), true, ((((! (! (false)))) && true) || (true))))))))))
    barrier();
   if((((true) && ((injectionSwitch.x < injectionSwitch.y))) && ((false))))
    {
     if((! (! ((false || ((false)))))))
      barrier();
     return;
    }
   if((false || ((false))))
    barrier();
   barrier();
  }
 if((false))
  return;
 uint workgroup_base = ((true ? (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) : (((subgroup_local_id) ^ 0u))));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bool((! (! ((false)))))))) || false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((mix(vec2((- 415.286), (2.7)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * (transpose(transpose(((false ? ((- mat2(812.955, 99.82, - 3.9, 0.3))) : ((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))[1]), bvec2(true, true)))).x > (clamp(injectionSwitch.y, ((injectionSwitch.y) - 0.0), (mix(float((9857.8338)), float(((injectionSwitch.y) + 0.0)), bool(((injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(((((! ((false || (! ((bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false))))))))))))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint virtual_gid = (uint(uvec4(workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size, 0u, 1u, 1u))) + ((subgroup_local_id) << (max(0u, 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size + (((((((((1u << (((((((uint((injectionSwitch.x)) + (((max(((uint(1u)) >> 0u), uint(1u))) ^ 0u))))) | (uint(1u))))) - (uint(((((float(mat4(injectionSwitch.x, 1.0, (max(1.0, (mix(float(1.0), float((- 1.9)), bool(false))))), 0.0, 1.0, 0.0, 0.0, tan(0.0), ((false ? (- 9.8) : (1.0 * (0.0)))), 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))) - 0.0))) | 0u)))) >> 0u) >> (uint(((1u) + (0u >> (uint(3u))))))) * (subgroup_local_id + 1))) % _GLF_struct_replacement_8.subgroup_size)) << (((max(0u, 0u))) + 0u));
 ((buf[virtual_gid] = 1) / 1u);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_8.subgroup_size)
  {
   if(((((true && (injectionSwitch.x > (mat2((injectionSwitch.y)) * (injectionSwitch)).y))))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   int i = 0;
   if((false))
    barrier();
   buf[next_virtual_gid] = ((false ? (- 75058) : ((((((2) | (2))) | 0)) - 0)));
  }
 else
  {
   if((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > (max(injectionSwitch.y, (float(mat3x4(((injectionSwitch.y) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), (injectionSwitch.x), 1.0))))))) || (((false))))))
    {
     if((false))
      {
       if((false))
        return;
       if(((((((! (! ((! (! (injectionSwitch.x > injectionSwitch.y)))))) || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(((bool(bvec3(false, true, true)))))
          return;
         barrier();
        }
       barrier();
      }
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   buf[next_virtual_gid] = 2;
   if((bool(bvec3((! (! ((((((false || ((injectionSwitch.x < injectionSwitch.y)))) && (((false || (((bool(bvec4(bool(bvec3(((! (! ((! (! (true)))))) && (bool((bvec3(bvec3(bvec3((((! (! (true && (false)))))), true, ((injectionSwitch.x > injectionSwitch.y))))))))), true, ((true) && (bool(bool(true)))))), true, true, false)))))))))) && true)))), false, true))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((! ((true && (! (((! (! ((false || (((false) && true)))))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false) && true)))
  {
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
}
