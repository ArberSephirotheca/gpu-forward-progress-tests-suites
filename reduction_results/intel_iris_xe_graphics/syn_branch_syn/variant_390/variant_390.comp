#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + (min(((subgroup_id) - 0u) * ((1u * (uint(((false ? ((true ? (uvec2(0u, 0u) | ((((((uvec2(137717u, 190882u))) ^ uvec2(0u, 0u))) << uvec2(0u, 0u)))) : (uvec2(109978u, 26890u)))) : uvec2(subgroup_size, 0u))))))), subgroup_id * ((1u * (uint(((false ? (((uvec2(137717u, 190882u))) | (((((clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) / (uvec2(0u, 0u) ^ (min((clamp(uvec2(((1u) / uint((injectionSwitch.y))), 1u), uvec2(((1u) / uint((injectionSwitch.y))), 1u), uvec2(((1u) / uint((injectionSwitch.y))), 1u))), (clamp(uvec2(((1u) / uint((injectionSwitch.y))), 1u), uvec2(((1u) / uint((injectionSwitch.y))), 1u), uvec2(((1u) / uint((injectionSwitch.y))), 1u)))))))) | uvec2(0u, 0u))) : uvec2(subgroup_size, 0u))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 ((~ ((~ (1u * ((((~ (~ ((true ? buf[virtual_gid] = 1 : (workgroup_id)))))) - 0u)))))));
 for(int _injected_loop_counter = (0 | 0); ((((((injectionSwitch.x > injectionSwitch.y)) ? (int(ivec4((1 * ((- 78052))), ((0 << (int(0))) >> (int(8))), 1, (0 | 0)))) : (1 * (_injected_loop_counter))) ^ (((min(0, (clamp(0, 0, 0)))) << 0))))) != int(((vec2(injectionSwitch[0], (mix(float(((((((injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch[1] : (- 3.9) : (- 8.4)))))), float((- 0.6)), bool(false))))).y)); (((false ? (clamp((- 92253), (- 92253), (- 92253))) : (((true ? ((((((_injected_loop_counter ++) << 0)) / 1))) : ((_injected_loop_counter)))) + 0))) - (((min((((((min(((0)) ^ 0, ((0)) ^ ((((0) | (0))) - 0)))) | ((max(((0)) ^ 0, (min(((0)) ^ 0, ((((0))) / ((((injectionSwitch.x > injectionSwitch.y)) ? (_injected_loop_counter) : 1))) ^ 0))))))) | (0)), (((((min(((0)) ^ 0, ((0)) ^ ((((0) | (0))) - 0)))) | ((max(((0)) ^ 0, (min(((0)) ^ 0, ((((0))) / ((((injectionSwitch.x > injectionSwitch.y)) ? (_injected_loop_counter) : 1))) ^ 0))))))) | (0))))) * 1)))
  {
   if(((subgroup_local_id + 1 < (((((((((~ (~ (((((((subgroup_size) * 1u) >> uint((injectionSwitch.x))))) >> 0u)))))) ^ 0u) ^ 0u) - 0u))) | ((uint(uvec4((((((~ (~ (((((((subgroup_size) * 1u) >> uint((injectionSwitch.x))))) >> 0u))))) ^ 0u) - 0u)), 1u, ((1u << (uint(2u))) >> (uint(2u))), 0u)))))) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     int i = ((int(int(((clamp(clamp((((0) | (0))), (((((0) | (0)))) ^ 0), (clamp((((0) | (0))), (((0) | (0))), (((0) | (0)))))), clamp((((0) | (0))), (((((0) | (0)))) ^ 0), (clamp((((0) | (0))), (((0) | (0))), (((0) | (0)))))), clamp((((0) | (0))), (((((0 ^ ((0))) | (0)))) ^ 0), (clamp((((0) | (0))), (((0) | (0))), (((0) | (0)))))))))))) * 1);
     buf[next_virtual_gid] = 2;
    }
   else
    {
     ((((((buf[next_virtual_gid] = 2) >> 0u) / 1u)) | 0u));
    }
  }
}
