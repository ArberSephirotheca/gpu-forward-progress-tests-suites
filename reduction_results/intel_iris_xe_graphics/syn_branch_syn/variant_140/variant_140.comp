#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uvec3((clamp((((true ? ((clamp(((0u >> (uint(5u))) | (0u)), (((0u ^ (0u))) << 0u), 0u))) | ((((~ ((min(((~ ((0u | (((0u) | (0u)))))) - 0u), ~ ((0u | (((0u) | (0u))))))))) ^ (min(0u, 0u))))) : (subgroup_size)))), 0u, 0u)), 0u, 0u) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = (0u | (gl_WorkGroupSize.x));
 uint workgroup_id = (uint(((uint((clamp(((false ? (subgroup_local_id) : (((~ (~ ((clamp(gl_WorkGroupID.x, ((true ? gl_WorkGroupID.x : (workgroup_size))), gl_WorkGroupID.x)))))) >> uint((injectionSwitch.x))))), ((((false ? (num_workgroup) : (((~ (~ ((clamp(gl_WorkGroupID.x, ((true ? gl_WorkGroupID.x : (workgroup_size))), gl_WorkGroupID.x)))))) >> uint((injectionSwitch.x)))))) | 0u), (((~ (~ ((clamp(gl_WorkGroupID.x, ((true ? gl_WorkGroupID.x : (workgroup_size))), gl_WorkGroupID.x)))))) >> uint((injectionSwitch.x))))))) / 1u)));
 uint workgroup_base = (1u * (clamp((((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) * workgroup_id;
 uint virtual_gid = (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * ((subgroup_size) ^ 0u) + ((((subgroup_local_id + (int(ivec4((0 + ((int(((ivec4((max(1, 1)), 1, 0, 0)) / ivec4(1, 1, 1, 1)))))), 1, 0, 1))))) | (((false ? (atomicCompSwap(virtual_gid, virtual_gid, 113834u)) : (uint(uint(((((((max((~ (~ (0u))), (~ (~ (0u)))))) - 0u)) ^ 0u) << ((~ (((~ (uint(2u)))) | 0u))))))))) | 0u)) % subgroup_size);
 ((buf[virtual_gid] = 1) << ((0u) | (0u)));
 if((false || (((((max((((((((false ? (workgroup_size) : subgroup_local_id)) + 1) >> 0u)) + 0u) | (((((min(((uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((max(0u, 0u)) ^ ((subgroup_local_id + 1) + 0u))) / 1u), 1u, (0u ^ 0u)))))) | (uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((max(0u, 0u)) ^ ((((subgroup_local_id + 1) / 1u)) + 0u))) / 1u), 1u, (0u ^ ((((injectionSwitch.x > injectionSwitch.y)) ? (min(next_virtual_gid, subgroup_size)) : (0u | (0u))))))))))), uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((((max(0u, 0u)) ^ ((subgroup_local_id + 1) + 0u))) / 1u)) | 0u), 1u, (0u ^ 0u))))))))) / 1u))), (((((((false ? (workgroup_size) : subgroup_local_id)) + 1) >> 0u)) + 0u) | (((((min(((uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((max(0u, 0u)) ^ ((subgroup_local_id + 1) + 0u))) / 1u), 1u, (0u ^ 0u)))))) | (uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((max(0u, 0u)) ^ ((subgroup_local_id + 1) + 0u))) / 1u), 1u, (0u ^ 0u))))))), uint((uvec3(0u, 0u, 0u) ^ (uvec3(((((((max(0u, 0u)) ^ ((((false ? (next_virtual_gid) : subgroup_local_id + 1))) + 0u)))) | ((((((max(0u, 0u)) ^ ((((false ? (next_virtual_gid) : subgroup_local_id + 1))) + 0u)))) / 1u))) / 1u), 1u, (0u ^ 0u))))))))) / 1u)))))) < subgroup_size) && true))))
  {
   int i = (~ (~ (0)));
   buf[next_virtual_gid] = 2;
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
