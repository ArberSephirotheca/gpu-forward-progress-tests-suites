#version 460

struct _GLF_struct_7 {
 uvec2 _f0;
 uint workgroup_size;
 mat2 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 bvec2 _f3;
 mat2x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat3 _f1;
 ivec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 float _f1;
 _GLF_struct_3 _f2;
 uint workgroup_id;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 vec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((! (! ((((((false || (false))) && true))) && true)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((((false)) || false)) && true)) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
  }
 if(((true && ((((((! (! (injectionSwitch.x > ((max((clamp(mix(vec2((- 1603.4310), ((true ? (((injectionSwitch)[1]) + (injectionSwitch.x)) : (213.392)))), vec2((injectionSwitch)[0], ((max(1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y))))), 1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y))))))))), bvec2((! (false || ((((! (true)) && true))))), false)), mix(vec2((- 1603.4310), ((true ? ((((max(injectionSwitch, ((true ? ((true ? injectionSwitch : (injectionSwitch))) : (injectionSwitch))))))[1]) + (injectionSwitch.x)) : (213.392)))), vec2((injectionSwitch)[0], ((max(1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))), 1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (min((injectionSwitch.y), (clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))))), bvec2((! (((! (true)) && true))), false)), mix(vec2((- 1603.4310), ((true ? (((injectionSwitch)[1]) + (injectionSwitch.x)) : (213.392)))), vec2((mix(float(((mat2(1.0) * (injectionSwitch)))[0]), float((5339.0046)), bool(false))), ((max(1.0 * ((float((mat2(mat2x3(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y)))))))), ((false ? (7.3) : 1.0 * (mix(float(((float(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y)))))), float((9.5)), bool(false))))))))), bvec2((! (((! (true)) && true))), false)))), mix(vec2((- 1603.4310), ((true ? (((injectionSwitch)[1]) + (injectionSwitch.x)) : (213.392)))), vec2((injectionSwitch)[0], ((((max(1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y))))), 1.0 * ((float(mat2((- 4.8), 0.0, 0.0, (injectionSwitch.y)))))))) - 0.0))), bvec2((! (((! (true)) && true))), false))))).y)))))) && true)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((true && ((bool(bvec3((false), true, true))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false || ((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! ((false || (! (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, ((injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool((true && (bool((false || (((false) && true))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((bool((bvec3(bvec3(bvec3((false), false, true)))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool(bvec4(false, false, true, false)))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((((((injectionSwitch) - (clamp(abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))) && true)))
    {
     if((false))
      barrier();
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(ivec3((max(1, ((1) >> 0)))), _GLF_struct_6(uvec2(1u), bvec4(true), mat4x3(1.0), ivec2(1)), _GLF_struct_7(uvec2(1u), ((false ? ((subgroup_size ^ 137013u)) : gl_WorkGroupSize.x)), mat2(1.0), uvec4(1u), mat4x3(1.0), 1u), bvec2((false || (true))), mat2x3(1.0), vec3(1.0)));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((((vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((float(39782))), bool(false))))).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! ((! (! (((! ((false) && true)) && true)))))))))
    barrier();
   if((((injectionSwitch.x > (sqrt(1.0) * (injectionSwitch.y))))))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_struct_0(uvec3(1u), mat2(((1.0) - 0.0))), bvec2(true), vec4(1.0), ivec3(1)), ivec3(1), _GLF_struct_4(_GLF_struct_2(mat2x4(1.0), mat3x4((max((max(((((injectionSwitch.x > injectionSwitch.y)) ? (4637.8837) : 1.0)), ((((injectionSwitch.x > injectionSwitch.y)) ? (4637.8837) : 1.0)))), (mix(float((- 3.8)), float(1.0), bool((! (! (true)))))))))), 1.0, _GLF_struct_3(mat4x3(1.0), (transpose(transpose(mat3(1.0)))), (ivec2(0, ((int(ivec4(0, 0, 0, 1))) ^ ((max((max(0, 0)), 0))))) ^ (ivec2(1))), mat2(((false ? (- 68.30) : (min((max((min((max(1.0, (clamp(1.0, 1.0, 1.0)))), (mix(float(((- 72.20 - - 89.92))), float((float(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))))), (mix(float(1.0), float((- 9.4)), ((bool(bool((bool(false)) && true)))))))), (max((min(1.0, (mix((clamp(float(((- 72.20 - - 89.92))), float((((float(vec3(- 72.20 - - 89.92, 0.0, 1.0)))))), float(((- 72.20 - - 89.92))))), float((float(mat2x4(1.0, 1.0, 0.0, 1.0, ((0.0) - ((true ? 0.0 : (float((mat4(- 21.84, - 1.6, - 59.61, - 9.6, - 9.8, 2.2, - 1.8, - 666.971, - 9.5, 9961.9735, - 1370.5622, 91.23, 1.1, 8.1, 8.7, 34.49) != mat4(- 0.3, - 522.623, 21.38, 1.0, 2940.6030, 1.7, 6.6, - 45.25, 6.3, 5.7, - 6800.6711, - 9861.6023, - 17.00, 4.1, - 1804.8562, - 0.6))))))), 0.0, 1.0, 0.0)))), bool(true))))), (mix(float(1.0), float((- 9.4)), (((((injectionSwitch.x < injectionSwitch.y)) && (bool(false)))) && true))))))))))), gl_WorkGroupID.x));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_9._f0._f2.workgroup_size * _GLF_struct_replacement_5._f2.workgroup_id;
 uint virtual_gid = (((clamp(workgroup_base + subgroup_id * (((bool(bvec2(((((true) && true)) && true), true))) ? (min(subgroup_size, subgroup_size)) : (bitfieldExtract(workgroup_base, ivec2(- 57025, - 12602).r, 35792)))) + subgroup_local_id, (0u ^ ((uint(uvec4((~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), 1u, 0u, 0u))))), workgroup_base + ((((false ? (subgroup_id) : ((subgroup_id) | 0u) * subgroup_size))) * 1u) + subgroup_local_id))) | ((clamp((((uint(uint(workgroup_base + subgroup_id * ((((true) && true) ? (min(subgroup_size, subgroup_size)) : (bitfieldExtract(workgroup_base, ivec2(- 57025, - 12602).r, 35792)))) + subgroup_local_id))) - 0u)), (~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), workgroup_base + (((min(((false ? (subgroup_id) : subgroup_id * subgroup_size)), ((false ? (subgroup_id) : subgroup_id * subgroup_size))))) * 1u) + subgroup_local_id))));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(((((false || (((injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((((true ? subgroup_local_id : (clamp((((num_workgroup)) >> 0u), (max((num_workgroup), (clamp((num_workgroup), (num_workgroup), (num_workgroup))))), (num_workgroup))))) + 1) % subgroup_size);
 if(((! (! (false || (((((((bool((bvec2((bvec3(bvec4(bvec3(bvec2(((injectionSwitch.x) + (min((clamp(0.0, 0.0, 0.0)), 0.0))) > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y))), false), true))))))))))) && true)))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((true && (((false) || false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((true && ((! (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if(((((((0.0 + (injectionSwitch.x)) > injectionSwitch.y))) || false)))
  barrier();
 if(((bool(bool((((((bool(bvec3((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, false)))) || false)) || ((false) && true)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 buf[virtual_gid] = 1;
 if(((bool((((((true && ((((injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bvec2(subgroup_local_id + 1 < subgroup_size, false)))))))) && true)) || false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(((false)), false, true, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec4(false, (! (! (((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((false)) && true))
    {
     if((false))
      barrier();
     barrier();
    }
   if((bool(bvec3((false), false, true))))
    barrier();
   if((((((false)) && true)) && true))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if((false))
    barrier();
   if((false))
    {
     if((bool((bvec3(bvec3(bvec3((! (! ((false)))), false, true)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((bool(bvec3(((bool(bvec2(false, (bool(bvec2(true, ((injectionSwitch.x < injectionSwitch.y))))))))) || (false || (false)), false, true))))))
    barrier();
   if(((((injectionSwitch.x < injectionSwitch.y)) && (! (! ((false)))))))
    barrier();
   (((0u ^ (buf[next_virtual_gid] = 2))) ^ 0u);
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((bool(bool(bool(bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((((((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))))
    barrier();
   buf[next_virtual_gid] = 2;
  }
}
