#version 460

struct _GLF_struct_33 {
 vec2 _f0;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 mat3x2 _f3;
 uvec4 _f4;
 ivec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 ivec4 _f1;
 vec2 _f2;
 ivec4 _f3;
 ivec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 uvec2 _f3;
 mat3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_31 {
 vec2 _f0;
 _GLF_struct_28 _f1;
 vec2 _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_26 {
 bvec3 _f0;
 bvec4 _f1;
 uvec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_25 {
 bool _f0;
} ;

struct _GLF_struct_27 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_34 {
 _GLF_struct_27 _f0;
 mat4x2 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_32 _f3;
 _GLF_struct_33 _f4;
} ;

struct _GLF_struct_22 {
 int _f0;
 vec2 _f1;
 mat2x4 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
} ;

struct _GLF_struct_20 {
 int _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 mat3x4 _f1;
 bool _f2;
 uvec2 _f3;
 bvec4 _f4;
 vec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_23 {
 int _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 int _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 vec4 _f1;
 mat2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 mat3 _f1;
 vec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 mat3 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat4x3 _f1;
 uint _f2;
 ivec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 uvec4 _f4;
 vec2 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 mat2 _f3;
 ivec3 _f4;
 float _f5;
 float _f6;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 int _f1;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 bvec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 bvec3 _f1;
 vec2 _f2;
 vec3 _f3;
 mat4x3 _f4;
 ivec3 _f5;
 bvec3 _f6;
 uint subgroup_size;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_7 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_23 _f3;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 uint virtual_gid;
 bool _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat2 _f1;
 bvec3 _f2;
 bool _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 bool _f1;
 mat3x2 _f2;
 uvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4 _f1;
 bvec2 _f2;
 uvec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
 bool _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 int i;
 mat4x3 _f1;
 mat3x2 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false) && (! ((false || (! (true))))))))
  return;
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && true)))
      return;
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((false || ((false))))
  {
   if(((bool(bvec4(false, true, true, true)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_7(_GLF_struct_6(ivec4(1), bvec3(true), vec2(1.0), vec3(1.0), mat4x3(1.0), ivec3(1), bvec3(true), gl_SubgroupSize), vec3(1.0)), _GLF_struct_12(bvec3(((true) && true)), _GLF_struct_8(mat4x2(1.0), bvec3(true), ivec3(1)), _GLF_struct_9(mat3x2(1.0), 1), _GLF_struct_10(uvec4(((((((uint(uvec4(clamp(1u, 1u, 1u), 1u, 1u, 0u))) * 1u))) - 0u))), mat4x2(1.0)), _GLF_struct_11(vec4(1.0), mat4x3(1.0), mat3x4(1.0), (((mat2(1.0) * (mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), ivec3(1), 1.0, 1.0)), _GLF_struct_18(_GLF_struct_13(true, mat4x3(1.0), 1u, ivec3(1), true), _GLF_struct_14(mat4(1.0), mat3((float(mat2(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), abs(log(1.0)))))), uvec3(1u), mat2x3(1.0), mat2x3((((max(1.0, 1.0))) * 1.0)), bvec2(true)), _GLF_struct_15(mat2x4(1.0)), _GLF_struct_16(ivec2(1), mat3(1.0), vec2(1.0), bvec2(true)), uvec4(1u), vec2(1.0), _GLF_struct_17(bvec4(true), vec4(1.0), mat2(1.0), vec3(1.0))), _GLF_struct_23(1, _GLF_struct_19(mat4(1.0), mat3x4(1.0), true, uvec2(1u), bvec4(((! (! (bool((false || (bool((! (! (true)))))))))))), vec4((float(float((max(1.0, 1.0)))))), mat3x2(((false ? (- 9.0) : (max(1.0, (min(1.0, 1.0)))))))), _GLF_struct_20(1, (ivec2(ivec3(ivec2(1), int((injectionSwitch.x)))))), 1, _GLF_struct_21(ivec3(((1) - 0))), _GLF_struct_22(1, vec2(1.0), mat2x4(1.0), ((uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) ^ (uvec3(((1u) | (1u))))), bvec4(true), mat2x3(1.0))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_27(_GLF_struct_25(true), _GLF_struct_26(bvec3((true && (true))), bvec4(true), uvec4(1u), vec2(1.0)), gl_SubgroupInvocationID), mat4x2(1.0), _GLF_struct_31((min((mix(vec2(((max(vec2(1.0), vec2(1.0))))[0], (5.6)), vec2((- 83.85), (((float(mat4x2(((max(vec2(1.0), vec2(1.0))))[1], 1.0, 1.0, exp(0.0), 0.0, log(1.0), 0.0, sin(((0.0) / 1.0))))) - 0.0))), bvec2(false, true))), vec2(1.0))), _GLF_struct_28(mat2(1.0), uvec3(1u), mat2x3(1.0), uvec2(1u), mat3(1.0), mat3(1.0)), vec2(1.0), _GLF_struct_29(mat3x4(1.0), ivec4(1), vec2(1.0), ivec4(1), ivec4(1), (max(vec3(1.0), vec3(1.0)))), _GLF_struct_30(bvec4(true), mat2x4(1.0), ivec4(1), mat3x2(1.0), uvec4(1u), ivec2(1), mat4x3(1.0))), _GLF_struct_32(ivec2(1), ivec2(1), mat4x3(1.0)), _GLF_struct_33(((vec2(1.0)) * mat2((injectionSwitch.y)))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (true))) && ((bool(bvec3((false), true, false))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((! (! (false)))) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  barrier();
 if((! (! ((((false)) && true)))))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = (max((~ (~ ((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), (min(gl_NumWorkGroups.x, (uint(uvec3(gl_NumWorkGroups.x, 1u, 1u)))))));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((((false ? (vec2(- 9522.4939, 9.8)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((false) && true)))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! ((! ((((! (! (! (! ((! (! (false))))))))) && true)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((false || (false))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint workgroup_size = (((max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) - 0u);
 if((((((false) && true)) || false)))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((false) && true)))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((max((min(injectionSwitch.x, (mix(float((7.9)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if(((((! (! (false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
        {
         if(((bool(bvec4(false, false, true, false)))))
          return;
         barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((false || (false))) && true)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((true && (((injectionSwitch.x < injectionSwitch.y)))) && (((injectionSwitch.x > (mix(float(injectionSwitch.y), float(((+ 789.255))), bool(false)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = (0u + (((((gl_WorkGroupID.x) / 1u) | ((gl_WorkGroupID.x) / 1u)))));
 if((false))
  {
   if(((! (! (false)))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! ((((! (! (! ((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))))))) || false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false || ((false)))) && true))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if(((! ((bool(bvec2(! (false), false)))))))
  barrier();
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(((ivec3(1)) / ivec3(1, 1, ((0 >> (int(3))) | (1)))), workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + (clamp(_GLF_struct_replacement_34._f0.subgroup_local_id, _GLF_struct_replacement_34._f0.subgroup_local_id, (0u | (_GLF_struct_replacement_34._f0.subgroup_local_id)))), true);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = (((clamp((((false ? (max(workgroup_id, workgroup_id)) : ((true && (false)) ? (num_workgroup) : (min(workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % (0u | (_GLF_struct_replacement_24._f0._f0.subgroup_size))), workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size))))))), (((true && (false)) ? (max((num_workgroup), (num_workgroup))) : (min(workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size), workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((clamp((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size, (0u | ((_GLF_struct_replacement_34._f0.subgroup_local_id + ((1) / 1)) % _GLF_struct_replacement_24._f0._f0.subgroup_size)), (_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size))))))), (((true && (false)) ? (num_workgroup) : (((min(workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((_GLF_struct_replacement_34._f0.subgroup_local_id + (((1 << (int(5))) >> (int(5))) * (1))) % _GLF_struct_replacement_24._f0._f0.subgroup_size), (clamp((0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size)), workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size)) + ((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size)))) | ((min(workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size + ((_GLF_struct_replacement_34._f0.subgroup_local_id + (((1 << (int(5))) >> (int(5))) * (1))) % _GLF_struct_replacement_24._f0._f0.subgroup_size), (clamp((0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size)), workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_24._f0._f0.subgroup_size)) + ((_GLF_struct_replacement_34._f0.subgroup_local_id + 1) % _GLF_struct_replacement_24._f0._f0.subgroup_size)))))))))) - 0u);
 if(((((false || (((((injectionSwitch.x > injectionSwitch.y)))) && true)))) || false))
  {
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if(((! (! (false)))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 buf[_GLF_struct_replacement_5.virtual_gid] = ((((1) >> 0)) | (1));
 if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if(((((abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((! (false || ((! ((false)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(_GLF_struct_replacement_34._f0.subgroup_local_id + 1 < _GLF_struct_replacement_24._f0._f0.subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((false) || (((! (! (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if((false))
    {
     if(((false || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (0.0 + (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && (((false || ((bool(bool((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false))))))
    {
     if((true && ((true && ((((((! (! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))) || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((((vec2(mat2(injectionSwitch, 1.0, 0.0)))) / (max((vec2(mat3x2(((true ? abs(vec2(1.0, 1.0)) : (vec2(- 2.3, 5678.0826)))), 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (min(((true ? abs(vec2(1.0, 1.0)) : (vec2(- 2.3, 5678.0826)))), ((true ? abs(vec2(1.0, 1.0)) : (vec2(- 2.3, 5678.0826))))))))).x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if((false))
      barrier();
     if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((bool(bvec4(false, true, true, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((! (true && (((false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if(((true && (false))))
      return;
    }
   if((false))
    return;
   _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(1u, mat4(1.0), ((bvec2((bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(true), ((((((false) && true)) && true)) && true), true))), true, true)))))), uvec4(1u), 1u), _GLF_struct_1(bvec4(((! (! ((bool(bvec2(true, (bool(bool(false))))))))) && ((bool(bvec4(true, true, true, true)))))), true, mat3x2(1.0), uvec3(1u), uvec4(1u)), bvec4(true), true, _GLF_struct_2(mat3x4(1.0), ((mat2(1.0)) * mat2(1.0)), bvec3(true), true, uvec3(1u))), 0, mat4x3(1.0), mat3x2((clamp(1.0, (mix(float((867.070)), float(1.0), bool(true))), 1.0))));
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((bool(bvec3(bool(bvec2(false, false)), false, true))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((false || ((bool(bvec4(false, false, false, false)))))))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((false || (bool(bvec4((false), ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if((((false)) || false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
}
