#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((bool(bvec3((false), true, ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(((bool(bvec4(false, true, false, true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(((bool(bool(false)))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     return;
    }
   if(((! (! ((! (! ((true && (((false)) && true))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if((false || ((false))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((bool(bvec2(false, false)))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((false))
      return;
     if(((true && (false))))
      {
       if((false))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((! (! (((! ((false || (! (false))))))))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((false || (bool(false)))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((false)) || false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((false) || false)))
      barrier();
     return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((injectionSwitch.x < injectionSwitch.y))))))))
      return;
     return;
    }
   barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if(((bool(bool((! (! ((true && (true && ((false))))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > (mix(float(((- - 6.2))), float(injectionSwitch.y), bool(true)))))))
      return;
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((bool((! (! (bool((bool((! (! (bool((false))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if(((true && (((false || ((false)))) || false))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((max((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(((! (! (false)))))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            barrier();
           return;
          }
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(((bool(bvec3(((false) || false), true, true)))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
      }
     if((false))
      barrier();
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        return;
       return;
      }
     if(((true && (false))))
      barrier();
     if((false))
      return;
     if((((false) && true)))
      barrier();
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if((false))
        return;
      }
     barrier();
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
    }
   return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y)) || ((! (! ((false))))))) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false) && true)))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(((! (! ((! (! ((! (! (false)))))))))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + (min(((1) | (1)), 1))) % subgroup_size);
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   barrier();
  }
 buf[virtual_gid] = (min(((true ? 1 : (- 94664))), (int(ivec4(1, ((1 << (int((((~ ((0 ^ (~ (0)))))) - int((injectionSwitch.x)))))) >> (int(0))), 0, 1)))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((! (! ((true && (((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(((! (! (! (((((((((! (! (((bool(bvec4(! (! ((false || ((((! ((bool(bvec4(! (! (false)), true, false, (false || ((! (! (false)))))))))))) || false)))), true, true, false))) || false))))) || false))))) || false)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((false) && true) && true))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
    {
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, (float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))))))
      barrier();
     if((false))
      barrier();
    }
   int i = 0;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   buf[next_virtual_gid] = ((2) | (2));
  }
 else
  {
   if(((bool(bvec2((true && (false)), (! (! (false))))))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       return;
       if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(((((min((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), ((injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         if(((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            return;
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if(((false || (false))))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if(((((! (! ((bool(bvec2((((((1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || false)), true))))))) || false)))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((((true && (bool(bvec4((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, true, true)))))))))
    {
     if((false))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
}
