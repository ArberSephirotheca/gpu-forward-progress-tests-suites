#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((bool(bvec3(bool(bvec4(false, true, false, false)), true, true))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! ((bool(bool(! (false))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((float(mat3x4((mix(float(((injectionSwitch.x) * 1.0)), float((- 2034.9594)), bool(false))), 1.0, 0.0, sqrt(1.0), (injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
  return;
 uint num_workgroup = (((((true ? (uvec3(0u, 0u, 0u) | (((((! (! (true))) ? gl_NumWorkGroups : (max(((min(min((uvec3(71404u, 170130u, 39709u)), (uvec3(71404u, 170130u, 39709u))), min((uvec3(71404u, 170130u, 39709u)), (uvec3(71404u, 170130u, 39709u)))))), (((uvec3(71404u, 170130u, 39709u)) >> (((uvec3(0u, 0u, 0u) << (uvec3(8u))) << uvec3(0u, 0u, 0u))))))))) >> uvec3(0u, 0u, 0u)))) : (uvec3(60144u, 194u, 19091u))))).x) >> 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((false))
  return;
 if(((false || ((bool(bvec4(false, true, true, false)))))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint workgroup_base = workgroup_size * (~ (~ (workgroup_id)));
 if((false))
  return;
 if(((((bool(bool((! (! (((! (((! ((((((((bool(bvec3(true, true, true))) && true))) || false) && (bool((bvec2(bvec4(bvec2((! (! (((((log(1.0) + (min(((false ? (41.08) : ((false ? (- 8877.0002) : (injectionSwitch.x))))), ((false ? (41.08) : ((false ? (- 8877.0002) : (injectionSwitch.x)))))))) - 0.0)) > injectionSwitch.y)))), false), true, true))))))))) || false)))))))))) && ((true) || ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((false) && true)))
  {
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = ((((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) >> 0u) + subgroup_local_id;
 if((((injectionSwitch.x > (max((max((vec2(mat4(injectionSwitch, abs(0.0), (min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), injectionSwitch)).y, (min((max((vec2(mat4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), injectionSwitch)).y, (max((vec2((max(vec3((max((vec2(mat4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), (vec2(mat4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 1.0), vec3((max((vec2(mat4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, ((true ? round(length(normalize(1.0))) : (7.3))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))), (vec2(mat4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 1.0))))), (vec2(0.0, 0.0) + (injectionSwitch)))).y))))))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (mat2(1.0) * (injectionSwitch)))).y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id) << (min(((~ (~ (uint(uvec2(0u, ((true ? 0u : (workgroup_size))))))))), (clamp(0u, 0u, 0u))))) + 1) % subgroup_size);
 if((false))
  {
   if(((true && (false))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((! ((true && (! ((false)))))))
  {
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
  }
 if((bool(bvec4((uint(uvec2((0u | (((subgroup_local_id) | 0u))), 1u))) + 1 < subgroup_size, false, false, false))))
  {
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if(((bool(bool(false)))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   switch((((0) | (0)) | 0))
    {
     case 0:
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     int i = 0;
     if((false))
      {
       if((false))
        return;
       if(((! (! ((! (! (((false)) || false))))))))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       return;
      }
     if((true && ((false))))
      {
       if((false))
        return;
       if((((false) && true)))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
      }
     if(((! (! (false)))))
      return;
     case 21:
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if(((true && (false))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if(((! (! (false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
        return;
       return;
       if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
        return;
      }
     if((false))
      return;
     buf[next_virtual_gid] = 2;
     if((false))
      return;
     if(((bool((! (! (bool(((bool((bvec2(bvec4(bvec2(((((! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)), true), false, ((false) && ((((injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))))))))))))))
      return;
     if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     break;
     default:
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((false) || false)))
        return;
       return;
      }
     if((false))
      return;
     if(((((! (bool(bool((bool(bvec4((! ((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, (vec2(mat3x2((vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))))))).x > injectionSwitch.y)), false, false, false)))))))))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        {
         if((false))
          return;
         return;
         if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
          return;
        }
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
         if((false))
          return;
        }
      }
     if((false))
      return;
     if((((false || (((mix(float((- 8.8)), float(injectionSwitch.x), bool(((injectionSwitch.x < injectionSwitch.y))))) > (mix(vec2((- 2610.0166), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 7087.3752)), bvec2(true, false))).y))))))
      {
       if((false))
        return;
       return;
      }
     1;
    }
   if((((injectionSwitch.x > ((true ? injectionSwitch : (sqrt(vec2(- 9152.4879, - 70.71))))).y))))
    {
     if((bool(bvec3(((bool(bvec4(bool(bool((false))), false, false, false)))), false, false))))
      return;
     if((((! (((! ((! (! (! (! (false))))))) && true))))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if(((! (! (false)))))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (((false) || false))))))
      return;
     if((((((! (! (! (((true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((false) || false)))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
    }
   buf[next_virtual_gid] = 2;
  }
 if((! (! ((((true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if(((bool((bvec3(bvec4(bvec3(false, false, false), true)))))))
    return;
   return;
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
}
