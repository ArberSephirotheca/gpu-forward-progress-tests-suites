#version 460

struct _GLF_struct_6 {
 uvec3 _f0;
 int _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x4 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
 uvec2 _f1;
 bvec3 _f2;
 bool _f3;
 vec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint virtual_gid;
 mat2x4 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((false || ((false)))) || false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((((true && (((injectionSwitch) + vec2(0.0, 0.0)).x > (max((vec2((min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), ((injectionSwitch) + vec2(0.0, 0.0)))).y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(((((((true && ((false || (! ((true && (! ((((! (! (bool(((bvec3(bvec3(bvec3(bvec3((bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))))))))))))))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((bool(bvec2((false), false))))
    barrier();
   barrier();
  }
 if((! ((! (! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if((((true && ((((injectionSwitch.x > injectionSwitch.y)) || false))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_3(mat4x3(1.0), bvec3(true), mat2x3(1.0), mat4x2(1.0)), mat2x4(1.0), gl_SubgroupSize));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((((bool(bvec2((false || (false)), true))) || ((((bool(bvec4((((vec2(mat3(vec2(injectionSwitch[0], injectionSwitch[1]), determinant(mat4(0.0, 0.0, (mix(float(0.0), float((- 9492.7984)), bool(false))), 0.0, 1.0, 0.0, 0.0, (float((mat3(1.0) * (mat3(0.0, 0.0, 1.0, tan((1.0 * (0.0))), 1.0, 0.0, 1.0, 1.0, ((1.0) / 1.0)))))), tan(0.0), 1.0, 0.0, 0.0, (max((max((((mix(float(((0.0) / 1.0)), float((3204.3689)), bool(false)))) - 0.0), 0.0)), 0.0)), 1.0, (injectionSwitch.x), 0.0)), 1.0, (dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, tan(0.0), 1.0, 1.0))), 0.0, abs(1.0), 1.0, 1.0)))).x > (min(injectionSwitch.y, (((float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, (mix(float((1.7)), float(0.0), bool(((injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)))) / sqrt(1.0))))), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > ((true ? injectionSwitch.y : (647.898))))), true)))) && ((injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(((((false || ((true && (((bool(bvec3((((injectionSwitch.x < injectionSwitch.y)) && (((((vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > ((injectionSwitch) / exp(vec2(0.0, 0.0))).y))), true, false)))))))) || false))))
  {
   if((((injectionSwitch.x > (mix(float((1.5)), (clamp(float(((injectionSwitch.y) - 0.0)), (float(mat2x4(float(injectionSwitch.y), 0.0, cos(0.0), 0.0, (dot(vec2(1.0, (mix(float((45.95)), (((0.0 + (float(0.0)))) - (dot(vec2(sqrt(1.0), 1.0), vec2(0.0, 0.0)))), bool(true)))), vec2(1.0, 0.0))), 1.0, 0.0, 1.0))), float(injectionSwitch.y))), bool(true)))))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (0u ^ (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(((! ((! ((! (! (! (! (((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((((((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))
    barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec3(1u), 1, workgroup_size * workgroup_id);
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(true, uvec2(((false ? (workgroup_size) : (uint(uint((((uint((~ ((max(uvec2((uvec2((clamp(0u, 0u, 0u)), 0u) ^ (uvec2((~ (uvec2(1u, 1u))))))), (((~ (((~ (uvec2((uvec2(0u, 0u) ^ (uvec2((~ (uvec2(1u, 1u))))))))) / uvec2(1u, 1u))))) | ((uvec2(0u, 0u) >> (uvec2(2u))) | uvec2(0u, 0u))))))))) | (uint((~ (~ (uvec2(1u, 1u)))))))))))))), ((bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), true, (vec4(mat2x4(vec4(((min(float(vec2(1.0, (injectionSwitch.x))), ((false ? (abs(5072.7534)) : float(vec2(1.0, (injectionSwitch.x))))))))), 0.0, 1.0, 0.0, 0.0))), 1u)), _GLF_struct_replacement_6.workgroup_base + subgroup_id * ((_GLF_struct_replacement_5._f0.subgroup_size) | 0u) + subgroup_local_id, mat2x4(1.0));
 if(((false || (false))))
  {
   if(((! (! (false)))))
    barrier();
   if((((((true ? ((((mix(vec2((- 6345.9140), (0.3)), vec2(((injectionSwitch) * mat2((injectionSwitch.y)))[0], ((injectionSwitch) * mat2((injectionSwitch.y)))[1]), bvec2(true, true))) / cos(vec2(0.0, 0.0))))) : (injectionSwitch))).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))) || false)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((((((min(injectionSwitch.x, injectionSwitch.x))) + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((! (! (true && ((false || ((false)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_6.workgroup_base + subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size + ((subgroup_local_id + (clamp(((1) | (1)), 1, 1))) % _GLF_struct_replacement_5._f0.subgroup_size);
 if((bool(bvec3((((((((bool((bvec2(bvec3(bvec2((injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y) && true, false), true)))))))))) && (bool(bvec3(true, false, ((injectionSwitch.x > injectionSwitch.y)))))), (! (! ((! (! (((false) && true))))))), false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((bool(((bool(injectionSwitch.x > injectionSwitch.y)) || false))))) || ((((false || (! (! (((! (! (false))))))))) || false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[_GLF_struct_replacement_2.virtual_gid] = 1;
 if(subgroup_local_id + ((max(((~ (~ (1)))) << 0, ((~ (~ (1)))) << 0))) < ((((_GLF_struct_replacement_5._f0.subgroup_size) | (_GLF_struct_replacement_5._f0.subgroup_size))) - ((uint(uvec2((~ (~ (0u >> (uint(6u))))), 1u))))))
  {
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, (clamp((int(((((ivec3(((64) >> 0), ((1 << (int(5))) >> (int(5))), (- 6916 & 0))) | (ivec3(((64) >> 0), ((1 << (int(5))) >> (int(5))), (- 6916 & 0))))) | (ivec3(((64) >> 0), ((1 << (int(5))) >> (int(5))), (- 6916 & 0)))))), 64, 64)), 0);
   subgroupAll((((((((true && (((injectionSwitch.x < injectionSwitch.y)) && ((! ((! (! (! (((! (! (! (! ((((bool(bool(bool(bvec3(false, (true && (true)), false))))) && true)))))))))))))))))) && true)))) || ((injectionSwitch.x > injectionSwitch.y))));
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((((false ? (- 302.046) : ((injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
     if((((bool(bvec3((false) && true, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((true && ((false))))
    barrier();
   atomicStore(buf[next_virtual_gid], ((min(clamp(uint(2), uint(2), (((clamp(uint((injectionSwitch.x)), uint((injectionSwitch.x)), uint((injectionSwitch.x)))) >> (uint(8u))) ^ (uint(2)))), (min(clamp(uint(2), uint(2), uint(2)), clamp(uint((clamp(2, ((((false) || false) ? (- 42340) : 2)), 2))), uint((int((max((clamp(ivec2((max(2, ((0 ^ ((2))) >> 0))), (clamp(((0) >> 0), 0, 0))), ivec2((max(2, 2)), 0), ivec2((((((max((min(2, ((2) - 0))), 2)) + 0)) | 0)), 0))), ivec2((max(2, 2)), 0)))))), uint(2))))))), 4, 64, 0);
   subgroupAll(true);
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((bool(bool((false || (((true ? injectionSwitch : (fma(injectionSwitch, vec2(7.9, - 5.1), vec2(58.38, - 770.355))))).x > (max((mix(float((float(mat4x2((- 8696.0540), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(injectionSwitch.y), bool(true))), (((mix(float((6649.6958)), float(injectionSwitch.y), bool(true)))) / 1.0))))))))))))
  {
   if((((injectionSwitch.x > (float(mat4x3(injectionSwitch.y, 1.0, (injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((((((bool(bvec4((! (! (false))), ((injectionSwitch.x > injectionSwitch.y)), true, false))) && true))) && true)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false || ((false))))
    barrier();
   barrier();
  }
}
