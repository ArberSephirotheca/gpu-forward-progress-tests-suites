#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (float(mat3(injectionSwitch.y, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, ((0.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, sqrt((float((mat3x2((mat3(mat3(mat3(mat3x2(0.0, 0.0, (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(sqrt(0.0), round(length((min(normalize(1.0), normalize(1.0))))), 0.0, 1.0))), log(1.0), 1.0, 1.0)))))))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (((round(length(normalize(vec2(1.0, 1.0)))) * ((max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((((bool(bool((true && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     if(((((min((min((min(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, (((clamp(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0), (vec2(0.0, 0.0) + (((injectionSwitch)) * mat2(1.0)))))) / vec2(1.0, 1.0)))))).x, ((float(float((injectionSwitch.x)))) + 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec2((bool(bool((true && (false))))), true)))))
    {
     if((false))
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if(((! (! ((bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(((((((true && (bool(bvec2((injectionSwitch.x > (clamp((1.0 * (injectionSwitch.y)), injectionSwitch.y, (max(injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])))).y))), ((injectionSwitch.x < injectionSwitch.y)))))))) || (bool(bool(false)))))))
        {
         if((false))
          {
           if(((false || (false))))
            barrier();
           barrier();
          }
         if(((bool((bvec3(bvec4(bvec3((! ((! ((bool(bvec2(! ((((false || (! ((true && (false)))))) && true)), ((injectionSwitch.x > injectionSwitch.y))))))))), false, true), true)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, false)))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))) > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if(((bool(bvec3(false, true, false)))))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((! (! (((((false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  {
   if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if((false))
    {
     if((true && ((((false)) || false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(mat4x2(((((true ? injectionSwitch : (vec2((min((float(float(2546.0832))), 2546.0832)), - 1.8)))) - (vec2(1.0, 1.0) * (vec2(0.0, 0.0))))), ((mix((((float(mat2x3(float((min(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 1.0)))) * (injectionSwitch.y)), float((5.3)), (bool(bvec3(bool(false), false, true)))))), 1.0, 0.0, 1.0, 0.0, 1.0))).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((! (! ((bool((! (! (bool((false)))))))))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false || ((((false) && ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((clamp((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > (clamp(injectionSwitch, injectionSwitch, (vec2(1.0, 1.0) * ((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))).y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) && true)))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     if((((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(((false || ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > (((false ? (asin(- 5769.8398)) : float((transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, cos(0.0), 1.0))))))))))))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = ((gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if((false))
  {
   if((false || ((((false) && true)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (((mat2(1.0) * (injectionSwitch)) - abs(vec2(0.0, 0.0)))).y))))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * (((((clamp(workgroup_id, workgroup_id, workgroup_id)) - 0u)) + 0u));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! ((((((false) && true)) && true))))))
  {
   if((false))
    barrier();
   if(((((bool(bool(((((injectionSwitch.x) + sin(0.0)) > ((false ? (injectionSwitch) : ((max(vec2(vec4(injectionSwitch, 0.0, (mix(float((float(vec3((dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, (clamp((mix(float(0.0), float((float(true))), bool(false))), 0.0, 0.0)), 0.0))), 0.0, 0.0)))), float((40.03)), bool(false))))), vec2(vec4(injectionSwitch, 0.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, (min(0.0, 0.0)), 0.0, 0.0)))))))))).y))))) && true))))
    barrier();
   barrier();
  }
 if(((((float((max(((false ? (vec4(6.9, - 844.108, - 90.59, 9001.9518)) : vec4(injectionSwitch.x, (mix(float(1.0), float((- 2.9)), bool(false))), 0.0, ((max(dot(vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, round(length(((false ? (exp2(sign(vec3(764.178, - 326.345, 5.9)))) : ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0)))))))), dot(vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))), ((false ? (vec4(6.9, - 844.108, - 90.59, 9001.9518)) : vec4(injectionSwitch.x, (mix(float(1.0), float((- 2.9)), bool(false))), 0.0, ((max(dot(vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, round(length(((false ? (exp2(sign(vec3(764.178, - 326.345, 5.9)))) : ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0)))))))), dot(vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))))) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec4(false, true, false, true)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! ((! (! (false))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * (0u ^ (subgroup_size)) + ((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))) ? (((clamp((subgroup_local_id), ((false ? (subgroup_local_id) : (subgroup_local_id))), (subgroup_local_id)))) - 0u) : subgroup_local_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))) || false)))
  barrier();
 if((false))
  barrier();
 if((bool(bool((false)))))
  barrier();
 uint next_virtual_gid = ((((injectionSwitch.x > (max(injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])))).y)) ? (113771u) : workgroup_base + subgroup_id * subgroup_size)) + (((0u ^ (subgroup_local_id + 1))) % (clamp(subgroup_size, subgroup_size, subgroup_size)));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 ((buf[virtual_gid] = 1) - uint((injectionSwitch.x)));
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if(((((clamp(injectionSwitch.x, injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, ((false ? (- 391.787) : injectionSwitch.x)))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > ((true ? injectionSwitch.y : (9353.7869)))))))
    barrier();
   if((((bool(bvec4((injectionSwitch.x > ((((false ? (- 9.5) : injectionSwitch.y))) * (((((false) || false) ? (- 9.4) : injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)), true, true))))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((mix(float(injectionSwitch.x), float((2913.0489)), bool(false))) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
    }
   if(((((((max(injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > (float((transpose(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))))) || false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false || ((false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! ((! (! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((subgroup_local_id) >> 0u) + 1 < subgroup_size)
  {
   atomicStore(buf[(((max(next_virtual_gid, next_virtual_gid))) ^ 0u)], (~ (~ ((~ ((((((uint(uint(~ (uint(2)))))) >> 0u))) << 0u))))), 4, 64, 0);
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   subgroupAll(false);
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 else
  {
   if((((((true ? injectionSwitch.x : (cosh(- 64.31)))) > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if(((! ((! (! (! (false))))))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (bool(bvec3((((((injectionSwitch.x > injectionSwitch.y))) || false)), true, false)))))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], ((uint(2)) - 0u), 4, 64, 0);
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! ((false || (! (false)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((true && ((bool(bvec2((((((! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))), true))))))
    {
     if((false))
      {
       if((false))
        barrier();
       if(((bool(bool(false)))))
        barrier();
       barrier();
       if((((false) || false)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
     if(((! ((! (! ((false || (! (false))))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   subgroupAll(true);
   if(((bool(((bvec3(bvec4(bvec3((bvec3(bvec3((bvec3(bvec3(bvec3(bvec3(false, (((((((((min(injectionSwitch, injectionSwitch))) * (mix(((false ? ((vec2(- 1.9, - 1170.6384) / - 8978.3934)) : vec2(((min(5.1, 5.1))), (float(- 32998))))), (mix(vec2((1570.3154), (vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]))[1]), vec2((vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]))[0], (- 7.5)), bvec2(true, false))), bvec2(true, ((injectionSwitch.x < injectionSwitch.y)))))).x > (0.0 + ((min(injectionSwitch.y, injectionSwitch.y)))))) || false)) || false)), false))))))))), true))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if((false))
          barrier();
         if((((bool(bvec4((false), false, true, true)))) || (! (! (false)))))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((((false) && true)))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if(((! (! (false)))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(((false || (false))))
          barrier();
         barrier();
        }
       if(((((bool(bool((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        barrier();
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if(((! (((((((injectionSwitch.x > injectionSwitch.y)) || ((! (false))))) && true) || false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
}
