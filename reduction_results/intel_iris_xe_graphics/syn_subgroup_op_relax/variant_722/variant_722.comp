#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((gl_NumWorkGroups.x) ^ 0u);
 uint workgroup_size = (~ (~ (min((gl_WorkGroupSize.x), (min(((0u | (gl_WorkGroupSize.x))), ((((0u | (gl_WorkGroupSize.x)))) ^ 0u)))))));
 uint workgroup_id = (((uvec3(gl_WorkGroupID[((true ? 0 : (58728)))], ((uvec3(0u, (min(0u, 0u)), ((true ? 0u : ((uint(- 543.350) ^ subgroup_size))))) << ((max(uvec3(2u), uvec3(2u))))) + ((((uvec3(uvec4(((true ? ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)) : (uvec3((max(52798u, 52798u)), (~ (~ (31404u))), 52479u)))), 0u)))) | ((uvec3(uvec4(((max((true ? ((((gl_WorkGroupID) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) + uvec3(0u, 0u, 0u)) : (uvec3(52798u, 31404u, 52479u))), (((true ? ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)) : (uvec3(52798u, ((31404u) + 0u), 52479u)))) / uvec3(1u, 1u, 1u))))), 0u)))))))[1], gl_WorkGroupID[2]))) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + (clamp(((subgroup_local_id) | (subgroup_local_id)), ((subgroup_local_id) | (subgroup_local_id)), ((subgroup_local_id) | (subgroup_local_id))));
 uint next_virtual_gid = ((workgroup_base) << (0u >> (uint((clamp(4u, 4u, (max(4u, (min(4u, 4u)))))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % (~ ((uint(uvec2((~ (~ (~ (((((((0u | (((0u + (true ? ((subgroup_size) + (clamp((0u | (0u)), 0u, 0u))) : (subgroup_id))) / 1u))))))) << ((((((((injectionSwitch.x < injectionSwitch.y)) ? (1u ^ 1u) ^ 0u : (atomicExchange(workgroup_size, workgroup_id))))) | ((1u ^ 1u) ^ 0u))))))))), ((false ? (workgroup_id) : 0u))))))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + (int(int(1))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[(1u * ((uint((injectionSwitch.x)) ^ (((next_virtual_gid)) + (1u ^ 1u)))))], uint((((max((~ (0 ^ ((~ (((2) * 1)))))), (~ (0 ^ ((~ (((2) * 1))))))))) | ((((((int(ivec3((1 * (2)), 1, 0))) - (clamp(0, 0, ((false ? (- 74127) : 0))))))) | (2))))), 4, 64, ((((true ? (min(((1) >> 0), 1)) : (int(false)))) * ((true ? ((max(1, ((1) | 0))) * (0)) : (- 96100))))));
   subgroupAll(((bool(bvec3((((injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))) || (true)));
  }
}
