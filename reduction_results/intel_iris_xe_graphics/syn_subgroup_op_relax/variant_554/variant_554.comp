#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uvec3((clamp(uvec4(gl_NumWorkGroups, ((1u << (((true ? uint(3u) : (subgroup_id))))) >> ((uint(uvec2(((((((min((uint(3u)), (uint(3u)))))) >> 0u)) - 0u), 1u))) | ((uint(3u)))))), uvec4(gl_NumWorkGroups, ((1u << (((true ? uint(3u) : (subgroup_id))))) >> (uint((max(3u, 3u)))))), uvec4(((((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)) | (((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))), (((((((min(1u << ((false ? (subgroup_size) : (((false ? (min(((clamp(((subgroup_local_id)), ((subgroup_local_id)), ((subgroup_local_id)))) / 1u), (subgroup_local_id))) : ((max(((0u | (((true ? uint(3u) : (subgroup_id)))))), (((max(((0u | (((true ? ((true ? uint(3u) : (subgroup_id))) : (subgroup_id)))))), ((0u | (((true ? uint(3u) : (subgroup_id))))))))) << 0u))) | (max(((0u | (((((uint(uvec4(uint(uvec3((uint(uvec2(true ? uint(3u) : (subgroup_id), (0u & 36759u)))), 0u, 0u)), 0u, 1u, 0u))))))))), ((((0u | (((true ? uint(3u) : (subgroup_id))))))) << 0u))))))))), 1u << ((false ? (subgroup_size) : (((false ? (min(((clamp(((subgroup_local_id)), ((subgroup_local_id)), ((subgroup_local_id)))) / 1u), (subgroup_local_id))) : ((max(((0u | (((true ? uint(3u) : (subgroup_id)))))), (((max(((0u | (((true ? ((true ? uint(3u) : (subgroup_id))) : (subgroup_id)))))), ((0u | (((true ? uint(3u) : (subgroup_id))))))))) << 0u))) | (max(((0u | (((((uint(uvec4(uint(uvec3((uint(uvec2(true ? uint(3u) : (subgroup_id), (0u & 36759u)))), 0u, 0u)), 0u, 1u, 0u))))))))), ((((0u | (((true ? uint(3u) : (subgroup_id))))))) << 0u)))))))))))) | 0u) ^ (0u | 0u)))) >> ((false ? (uvec2(54899u, 163473u).r) : (max((uint(3u)), (uint(3u)))))))))))).x;
 uint workgroup_size = ((((~ (~ ((uvec3(0u, 0u, 0u) ^ (((min(gl_WorkGroupSize, gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((((((0u | ((max(subgroup_local_id, subgroup_local_id)))) + ((1) | (1))) / uint((injectionSwitch.y)))) % ((uint((injectionSwitch.x)) + (uint(((uint(((subgroup_size) | ((((max((~ ((min((((uint(uvec4((((0u ^ ((min(~ ((((0u ^ (subgroup_size))) | (subgroup_size))), ~ ((((0u ^ (subgroup_size))) | (subgroup_size)))))))) ^ 0u), ((1u << (uint(7u))) >> (uint(7u))), uint((injectionSwitch.y)), 1u))) ^ 0u)), (uint(((((uvec2(~ (subgroup_size), (0u | 0u))) | (uvec2(~ (subgroup_size), (0u | 0u))))) >> (((((uvec2(uvec2((clamp((uvec2(1u, 1u) * (uvec2(0u, 0u))), (uvec2(1u, 1u) * (uvec2(0u, 0u))), (uvec2(1u, 1u) * (((uvec2(0u, 0u) | uvec2(0u, 0u)) + (uvec2(0u, 0u))))))))))) << uvec2(0u, 0u))) / uvec2((injectionSwitch.y), (injectionSwitch.y)))))))))), (~ (~ (subgroup_size)))))) ^ 0u))))) ^ uint((injectionSwitch.x))))))))) >> 0u);
 ((((((min(uint((injectionSwitch.y)), uint((injectionSwitch.y)))) * (buf[virtual_gid] = 1)) << 0u))) - 0u);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(((2) | (2))), 4, 64, (min(0, 0)));
   subgroupAll((bool(bvec2(false, true))));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), (0 | (4)), 64, 0);
   subgroupAll(true);
  }
}
