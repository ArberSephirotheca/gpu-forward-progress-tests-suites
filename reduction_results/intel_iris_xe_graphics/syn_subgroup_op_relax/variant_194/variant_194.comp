#version 460

struct _GLF_struct_38 {
 mat2x3 _f0;
} ;

struct _GLF_struct_36 {
 mat2 _f0;
 vec3 _f1;
 bvec4 _f2;
 float _f3;
} ;

struct _GLF_struct_35 {
 bvec4 _f0;
 float _f1;
 bool _f2;
 mat4 _f3;
 mat3 _f4;
 uvec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 uvec2 _f1;
 uint next_virtual_gid;
 mat2x3 _f2;
 _GLF_struct_35 _f3;
 _GLF_struct_36 _f4;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
} ;

struct _GLF_struct_34 {
 vec4 _f0;
 mat4x2 _f1;
 _GLF_struct_33 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_31 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_30 {
 bvec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 bvec4 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_28 _f0;
 _GLF_struct_32 _f1;
 bvec2 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_25 {
 uvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
 float _f1;
 vec4 _f2;
 bool _f3;
 int _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 vec4 _f1;
 uint _f2;
 vec4 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 vec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_20 {
 int _f0;
 bvec2 _f1;
 mat3 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_22 _f0;
 ivec2 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_26 _f3;
 uint virtual_gid;
 ivec4 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 vec2 _f1;
 ivec2 _f2;
 uvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 ivec3 _f1;
 _GLF_struct_16 _f2;
 int _f3;
 bool _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 float _f1;
 mat3 _f2;
 bvec2 _f3;
 float _f4;
 bool _f5;
} ;

struct _GLF_struct_12 {
 bool _f0;
 vec4 _f1;
 int _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 ivec3 _f1;
 uint _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 bvec2 _f3;
 bvec3 _f4;
 mat3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 mat2 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 mat2x4 _f4;
 float _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat2x4 _f1;
 bool _f2;
 ivec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 ivec2 _f3;
 mat2x4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 int _f1;
 uvec3 _f2;
 int _f3;
 mat3x2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat4x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 vec4 _f1;
 uvec4 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 bvec2 _f1;
 mat2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec2 _f2;
 _GLF_struct_2 _f3;
 mat4x2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_19 {
 uint workgroup_size;
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_14 _f3;
 int _f4;
 mat3 _f5;
 _GLF_struct_18 _f6;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  return;
 if(((false || ((bool(bvec3(false, false, false)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((((max(max(injectionSwitch.x, ((true ? injectionSwitch.x : (- 2.6)))), max(injectionSwitch.x, ((true ? injectionSwitch.x : (- 2.6))))))) > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((! (! ((! (! (((((! (! (false)))) || false))))) || ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((false) || false)))
      return;
     if((((injectionSwitch.x > (mix(vec2(((- 6.2)), ((+ 5.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
     if(((! (((! (false)) || false)))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((((false) || ((injectionSwitch.x > (clamp(injectionSwitch.y, (clamp(((injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))
      barrier();
     barrier();
     if((bool(bool((! (! ((! (! ((false)))))))))))
      {
       if((false))
        barrier();
       barrier();
       if(((bool(bool(false)))))
        barrier();
      }
     if(((! (! ((bool(bool(false))))))))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((! (! ((false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
      }
     if(((((((((true && (injectionSwitch.x > injectionSwitch.y))) && true))))) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((true && ((bool((bvec2(bvec2(bvec2((false || (false)), true))))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if(((bool(bvec3(false, false, false)))))
      return;
    }
   if((false))
    barrier();
   if(((! (! (false)))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if(((! (! (((false) && true))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(((! (! (false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((((injectionSwitch.x > ((false ? (roundEven(tan(injectionSwitch))) : injectionSwitch)).y))))
        return;
      }
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((false || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((! (! ((false)))))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(gl_WorkGroupSize.x, 1, _GLF_struct_5(_GLF_struct_0(bvec3((((false || (true))) || ((injectionSwitch.x > injectionSwitch.y)))), uvec3(1u), mat3(1.0)), _GLF_struct_1((bvec2((bvec3(bvec3(((bvec3(bvec4(bvec3((bvec3(bvec4(bvec3(bvec3(bvec2(true), (! (! (false))))), false)))), false)))))))))), bvec2(true), _GLF_struct_2(ivec3(1), bvec2(true), mat2(1.0), vec2(1.0)), mat4x2(1.0), _GLF_struct_3(mat2(1.0), vec4(1.0), uvec4(1u), 1u, true), _GLF_struct_4(ivec4(1), mat4x2((((((mix(float((- 901.644)), float(1.0), bool(true))) + 0.0))) / (injectionSwitch.y))), ((vec3(1.0)) + vec3(0.0, 0.0, 0.0)))), _GLF_struct_9(mat3x4(1.0), _GLF_struct_6((bvec3(bvec4(bvec3(true), true))), 1, uvec3(1u), 1, mat3x2(1.0), (uvec3(0u, 0u, 0u) | (uvec3(((1u) << 0u))))), _GLF_struct_7(((ivec3(1)) >> ivec3((injectionSwitch.x), (injectionSwitch.x), ((((vec2(vec2((vec2(injectionSwitch[0], injectionSwitch[((false ? (bitCount(123586u)) : 1))])))))) - vec2(0.0, 0.0)).x))), bvec3(true), bvec4(true), ivec2(1), mat2x4((clamp(1.0, 1.0, 1.0))), (((mat3((((mat4(1.0) * (mat4((((((mat3(1.0) * (true ? mat3(1.0) : (mat3(- 8.1, - 2.1, 45.39, - 613.138, - 3.7, - 6.1, 6.2, ((- 95.31) - 0.0), ((true ? (clamp(- 503.525, - 503.525, - 503.525)) : (round(55.60))))))))) / mat3(((1.0 * (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (((true ? injectionSwitch.y : (- 1.7)))), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, (mix(float(0.0), float((- 5908.4977)), bool(((injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_8(vec2(1.0), mat2x4(1.0), true, ivec3(1), uvec3((clamp((((0u ^ (1u))) * 1u), ((1u) - 0u), 1u))))), _GLF_struct_14(_GLF_struct_10(ivec2(1), mat3x4(1.0), uvec2(1u), bvec2(true), bvec3(true), mat3(1.0), ivec3(1)), mat2(1.0), _GLF_struct_11((mat2(mat2x4(((false ? (mat2(- 38.12, - 399.801, 6133.5885, 659.088)) : mat2(1.0)))))), ivec3(1), 1u, mat4x3(1.0)), _GLF_struct_12(true, (((min(vec4(vec4(((true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : (vec4(- 8.9, - 5.4, - 7.4, 2.6)))))), (((mix(vec4(((false ? 1.5 : 4645.3313)), (vec4(vec4(((true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : (vec4(- 8.9, - 5.4, - 7.4, 2.6)))))))[1], (0.9), (vec4(vec4(((true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : (vec4(- 8.9, - 5.4, - 7.4, 2.6)))))))[3]), vec4((vec4(vec4(((true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : (vec4(- 8.9, - 5.4, - 7.4, 2.6)))))))[0], (- 2735.2160), (vec4(vec4(((true ? (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0) : (vec4(- 8.9, - 5.4, - 7.4, 2.6)))))))[2], ((0.2))), bvec4(true, false, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)))))), (clamp((((clamp(1, 1, 1))) | ((clamp(1, 1, 1)))), 1, (min(((true ? ((1) | (1)) : (80070))), 1)))), mat4x2(1.0), mat4x2(1.0), (max(uvec2((~ (~ (1u)))), uvec2((~ (~ (1u))))))), mat2x4(1.0), (max((((clamp(1.0, ((((injectionSwitch.x < injectionSwitch.y)) ? 1.0 : (8.4))), 1.0))) / 1.0), ((1.0) / 1.0))), _GLF_struct_13(1u, 1.0, mat3(1.0), bvec2(true), ((false ? (clamp(8867.0467, 508.796, - 2.4)) : 1.0)), true)), 1, mat3(1.0), _GLF_struct_18(_GLF_struct_15(vec4(1.0), (mix(vec2((clamp(((true ? (vec2(1.0))[0] : (3.7))), (vec2(1.0))[0], (vec2(1.0))[0])), (- 3.7)), vec2((- 205.541), (vec2(1.0))[1]), bvec2(false, true))), ivec2(((1) << 0)), uvec3(1u), bvec2(true)), ivec3(((1) | (1))), _GLF_struct_16(1, bvec3(true), ivec3(1), mat4x2(1.0)), 1, (! ((! (! (! (true)))))), _GLF_struct_17(mat4x2(1.0), uvec2(1u), bvec4(true), mat2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((injectionSwitch.x > (1.0 * (injectionSwitch.y)))) && true))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if(((bool(bool(false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if(((true && (false))))
    {
     if(((bool(bvec4(false, true, true, true)))))
      barrier();
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_19.workgroup_size * workgroup_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((((! (((bool(bvec2((! ((bool(bool(! (bool(bvec2(! (false), false)))))))), ((injectionSwitch.x > injectionSwitch.y))))))))) || false)))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_22(_GLF_struct_20(1, bvec2(true), mat3(1.0), uvec3(1u), 1u), _GLF_struct_21(mat3x2(1.0), uvec2(1u), (min(ivec4(1), ((((ivec4(1)) | (ivec4(1)))) * ivec4(1, 1, 1, 1)))), ivec2(1), ((false ? ((vec2(962.942, 59.27))) : ((vec2((float(float(1.0))))) * mat2((injectionSwitch.y))))), vec4(1.0)), vec2(1.0)), ivec2(1), _GLF_struct_23(bvec4(true), mat4x2(1.0), mat3x2(1.0)), _GLF_struct_26(_GLF_struct_24(mat4x3(1.0), 1.0, vec4(1.0), true, ((1) / ((((1 << (int(4))) >> (int(4))) >> 0))), ivec4(1)), vec4(1.0), 1u, (mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], ((false ? 477.174 : - 964.213)), (vec4(1.0))[3]), (min(vec4(((812.626)), (- 4.9), (vec4(1.0))[2], (8.2)), vec4(((812.626)), (- 4.9), (vec4(1.0))[2], (8.2)))), bvec4(false, ((injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y)), true, (bool(bool(false)))))), _GLF_struct_25(uvec4((max(1u, (1u * (((((clamp((1u), (1u), (1u)))) / 1u) / ((((1u) << (198712u & 0u))) - 0u))))))), bvec4(true))), workgroup_base + (uint(uvec4(subgroup_id * ((subgroup_size) + 0u), 0u, (0u | 0u), uint((injectionSwitch.x))))) + subgroup_local_id, ivec4(1));
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((true && ((false || (((! (! (((false) || false))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((((true && (bool(bvec4(((injectionSwitch.x > injectionSwitch.y) && true), true, (bool(bvec3(false, false, true))), ((((! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if(((true && (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 if(((true && (false))))
  {
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((((! (! ((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((! ((true && (! (true && (false)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((((injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((((! ((((injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_28(mat3x2(1.0)), _GLF_struct_32(_GLF_struct_29(mat2x3(1.0)), bvec4(true), _GLF_struct_30(bvec3(true), (ivec2(((((((max(min(ivec4(((ivec2(1)) | (max((ivec2(1)), (ivec2(1))))), 0, ((1) - int((injectionSwitch.x)))), ivec4(((ivec2(1)) | (ivec2(1))), 0, 1)), min(ivec4(((ivec2(1)) | (max((ivec2(1)), (ivec2(1))))), 0, ((1) - int((injectionSwitch.x)))), ivec4(((ivec2(1)) | (ivec2(1))), 0, 1))))) - ivec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) ^ ivec4(0, 0, 0, 0))))), vec2(1.0), mat2x3(1.0), mat4x3((float(((mat4(1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, (float(mat2(1.0, log(1.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (clamp((min(0.0, (max(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat3x4(1.0)), _GLF_struct_31(1.0, ivec2(1))), bvec2((! (! (true)))), _GLF_struct_34(vec4(1.0), mat4x2(1.0), _GLF_struct_33(ivec3(1)), mat3x2(1.0), uvec2(1u), 1), _GLF_struct_37(uvec4(1u), (uvec2(1u, 1u) * (uvec2(((((1u) << (0u | 0u))) + 0u)))), workgroup_base + (uint(((((true ? uvec4(subgroup_id, 0u, 0u, 0u) : (((uvec4(195842u, 92071u, 179573u, 76862u))) - uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << (uvec4(7u)))))) * (min(subgroup_size, subgroup_size)) + ((0u | ((subgroup_local_id + (min(((1) / 1), ((1) >> 0)))))) % subgroup_size), mat2x3(1.0), _GLF_struct_35(bvec4(true), 1.0, true, mat4(1.0), mat3(1.0), uvec2(1u), uvec3(1u)), _GLF_struct_36(mat2(1.0), vec3(1.0), bvec4(((true && (bool(bvec3(true, ((injectionSwitch.x > injectionSwitch.y)), false)))))), ((1.0) * 1.0))), _GLF_struct_38(mat2x3(1.0)));
 if((false))
  barrier();
 ((buf[_GLF_struct_replacement_27.virtual_gid] = 1) / 1u);
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if((0u | (subgroup_local_id + 1)) < subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_39._f4.next_virtual_gid], uint(2), 4, 64, ((true ? 0 : (13254))));
   if((false))
    barrier();
   if((false))
    barrier();
   if((! ((((! (! (! (! ((bool(bvec2((! (! (! (((! (! ((false))))))))), false))))))))) && true))))
    barrier();
   subgroupAll(false);
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) || false)))
    {
     if(((true && ((! (! (false)))))))
      return;
     if(((false || ((! (! (false)))))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       return;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((((false ? (vec2(- 1451.6303, - 3.6)) : ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > ((clamp(((true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : (max(1.0, - 1.1)))), (min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)))
      {
       if(((false || (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   atomicStore(buf[(~ (~ (_GLF_struct_replacement_39._f4.next_virtual_gid)))], uint(2), ((4) << 0), 64, 0);
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (((false) && true))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((false))
        barrier();
      }
     return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         return;
        }
       if(((((bool(bvec2(false, true)))) && ((injectionSwitch.x < injectionSwitch.y)))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (false))) || ((false))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
    }
   if(((bool(bvec4(false, true, true, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    return;
   if((false))
    {
     if(((false || (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   subgroupAll(true);
  }
}
