#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((false || (((false) && true)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = ((subgroup_id) | (subgroup_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec4((! (! ((((true && (false)) || ((((injectionSwitch.x > (max((max(injectionSwitch, injectionSwitch)), (vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y) || false)))))))), ((((true ? injectionSwitch.x : (tanh(- 7.0)))) > injectionSwitch.y)), false, true)))))
  {
   if((bool(bool((true && ((((! (! ((false)))) || false))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((((true && (false))) || false)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((((false) && true)))
    barrier();
  }
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w = subgroup_size;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((((! (bool(bvec3((! (false)), true, true)))) || false))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((! ((true && (! (false)))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y = ((num_workgroup) / 1u);
 if((false))
  {
   if((((((((injectionSwitch) - vec2((((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(124.563, 388.584)) : (min(injectionSwitch, injectionSwitch)))).x), ((vec2((float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 1.0, (clamp(((true ? (mix(float((869.536)), float(1.0), bool(true))) : (- 2.2))), 1.0, 1.0)), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch[1])).x))).x > injectionSwitch.y) || false)))))
    {
     if((((injectionSwitch.x > (vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).y))))
      barrier();
     barrier();
    }
   barrier();
   if(((((! (((! (! ((false || (bool(bvec4(! (false), true, true, true))))))))))) && true)))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((true && ((! (! (false)))))))
    barrier();
   barrier();
  }
 if(((true && (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((max(injectionSwitch, injectionSwitch)).x > (((max(float(mat2((float(mat4x2(((mix(float((- 8.9)), float((min(injectionSwitch, injectionSwitch)).y), ((bool(bool(bool(bvec4((! ((false || (! ((bool(bvec3(bool(true), (bool(((bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))), false)))))))), true, ((injectionSwitch.x > injectionSwitch.y)), false)))))))) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, (dot(vec4((injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, (clamp((float((transpose(transpose(mat4x2(0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0)))))), (float(mat3x4(0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0)))), 0.0)))), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), float(mat2((clamp((float(mat4x2(mix(float((- 8.9)), float((min(injectionSwitch, injectionSwitch)).y), ((bool(bool(bool(bvec4((! ((false || (! ((bool(bvec3(bool(true), false, false)))))))), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (float(mat4x2(mix(float((- 8.9)), float((min(injectionSwitch, injectionSwitch)).y), ((bool(bool(bool(bvec4((! ((false || (! ((bool(bvec3(bool(true), false, false)))))))), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (min((float(mat4x2(mix(float((- 8.9)), float((min(injectionSwitch, injectionSwitch)).y), ((bool(bool(bool(bvec4((! ((false || (! ((bool(bvec3(bool(true), false, false)))))))), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (float(mat4x2(mix(float((- 8.9)), float((min(injectionSwitch, injectionSwitch)).y), ((bool(bool(bool(bvec4((! ((false || (! ((bool(bvec3(bool(true), false, false)))))))), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 1.0, (dot(vec4((injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((! (! ((false)))))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec4((false), ((! ((((! (! (bool(bool(bool(bool(((false || ((false || (true && (! ((false || (false || ((((! (! (true)))) && true))))))))))))))))))))))), true, true))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((false || (bool(bvec3(false, true, true)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((! (! ((false)))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint virtual_gid = (min((((clamp(workgroup_base, workgroup_base, workgroup_base))) | ((clamp(workgroup_base, workgroup_base, workgroup_base)))), (~ (~ ((1u * (workgroup_base))))))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z * ((max(clamp((uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size), ((clamp((uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)) ^ uvec4(0u, 0u, 0u, 0u))))).w + subgroup_local_id;
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + (0u + ((0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)) + (((max(((subgroup_local_id + 1)) >> ((((0u) ^ 0u)) >> 0u), ((subgroup_local_id + 1)) >> ((((0u) ^ 0u)) >> 0u)))) % (min((0u + (((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w) + 0u))), (min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)))));
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = next_virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false)) && true))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
 if(((true && (bool(bool((((((((injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))))
  barrier();
 buf[virtual_gid] = (((0 & 79657) | ((1) | 0)));
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((1u * ((((true ? (min(subgroup_local_id + 1, subgroup_local_id + 1)) : (virtual_gid)))) | (0u >> (uint(6u)))))) < GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)
  {
   if(((((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || (bool(bool(false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((false || (((! (! (bool((bvec2(bvec3(bvec2(false, false), ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], (~ (~ (((((uint(2)) | 0u)) | ((((0u) + 0u)) >> 0u))))), 4, 64, ((0) | (max(0, 0))));
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false || ((false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], uint(2), 4, 64, (max((clamp(0, ((0) / 1), 0)), 0)));
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((! (! (! (((! (! (! (false)))))))))))
    barrier();
   if((((false) && true)))
    barrier();
   if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   subgroupAll(true);
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false || ((! (! (((bool(bvec2(false, (! (! (false)))))))))))))
  {
   if(((! (! ((! ((true && ((! ((false || (! (! (false)))))))))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
}
