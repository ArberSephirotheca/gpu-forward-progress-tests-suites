#version 460

struct _GLF_struct_9 {
 mat3x4 _f0;
 mat2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 uint workgroup_size;
 vec2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat3x2 _f1;
 int _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_size;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 ivec4 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((((injectionSwitch.x > (vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((((bool(bvec4(((bool(bvec2((injectionSwitch.x > injectionSwitch.y), (! (! ((! (! (true))))))))) && ((injectionSwitch.x < injectionSwitch.y))), false, ((false) || false), false)))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(bvec4(true), _GLF_struct_0(1u, uvec3(1u))), _GLF_struct_5(_GLF_struct_2(mat4x2(1.0)), _GLF_struct_3(mat3x4(1.0)), gl_SubgroupSize, _GLF_struct_4(bvec3(true), 1.0, 1u)), ivec4(1));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((bool(bvec3(false, true, false))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(_GLF_struct_7(((bvec3(bvec4(((bvec3(bvec4((((bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((bvec3(bvec3(bvec3(true)))))))))))), false))))), true)))), ((injectionSwitch.x < injectionSwitch.y)))))), mat3x2(1.0), 1, mat2x4(1.0)), 1.0, _GLF_struct_8(gl_WorkGroupSize.x, vec2(1.0), uvec2(1u), ivec4(1), uvec4((~ (((1u * (((((~ (~ (~ ((0u ^ (1u)))))) + (((max(0u, 0u))) >> 0u)))) - 0u)))))), bvec3(true)), _GLF_struct_9(mat3x4(1.0), mat2(1.0), vec3(1.0))));
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((! (! (false)))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if(((false || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if(((bool(bvec4(((((bool(((bool(((true && (false || ((! (! ((false)))))))) && true)) || false))) && ((injectionSwitch.x < (0.0 + (((false ? (exp2(24.67)) : (min(injectionSwitch.y, injectionSwitch.y))))))))))), true, false, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool((bvec2(bvec4(bvec2(false, true), true, false)))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((min((max((clamp((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((0.5), (9516.2937)), bvec2(false, false))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((0.5), (9516.2937)), bvec2(false, false))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((0.5), (9516.2937)), bvec2(false, false))))), (vec2(injectionSwitch[0], injectionSwitch[1])))), (max((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((0.5), (9516.2937)), bvec2(false, false))), (((false ? (vec2(- 6191.1895, 7.9)) : vec2(mat4(((((mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (- 4.5)), vec2((9.0), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))) * mat2(1.0)), (dot(vec3(abs(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(((bool(bvec3((((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec4(injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, true, true))))))), false, false)))))
      barrier();
    }
   if((false))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_11._f0._f2.workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    barrier();
   if((((false)) && true))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((false || ((((((! (((! ((false || (((! (bool(bvec2((bool(bvec2((! (! ((true && (! ((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true))))))), false))), true)))) || false))))))))))) || false)))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (bool((bvec2((bvec2(bvec2((bvec2(bvec3(bvec2(bvec2((((false)) || false), false)), true)))))))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = (uint(uint((0u ^ (((false ? (packUnorm4x8(vec4((clamp(- 44.61, (1.0 * (- 44.61)), ((max((float(mat3(mix(float(((128.253))), float(((- 44.61) - 0.0)), bool(true)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(float(((128.253))), float(((- 44.61) - 0.0)), bool(true))))))), - 15.04, 405.693, - 436.985))) : (uint(uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 1u))))) + subgroup_local_id)))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec3((false), ((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && ((bool(bvec4(false, true, true, true)))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((! (! ((((false)) && true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if(((((bool(bvec2(false, false))) || false))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = ((((workgroup_base) | (workgroup_base)) + subgroup_id * ((_GLF_struct_replacement_6._f1.subgroup_size) | ((0u ^ (_GLF_struct_replacement_6._f1.subgroup_size)))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f1.subgroup_size)) | 0u);
 buf[virtual_gid] = 1;
 if(((! ((true && (! (false)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (((! ((((mix(float((float(float(injectionSwitch.x)))), float((290.185)), bool(false))) > injectionSwitch.y)))) || false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, ((true ? (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : (9425.4315))), injectionSwitch.y))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if((((((false)) && true)) || false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6._f1.subgroup_size)
  {
   if((false))
    barrier();
   if(((((((((! (! (injectionSwitch.x > injectionSwitch.y)))) && true))) || false)) || ((((false)) && ((injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > ((((injectionSwitch) / cos(vec2(0.0, 0.0)))) / vec2((min(1.0, 1.0)), 1.0)).y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if(((false || (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((((injectionSwitch) - vec2((mix(float((224.527)), float(0.0), bool(((injectionSwitch.x < injectionSwitch.y))))), 0.0)).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), (max((clamp(4, 4, 4)), 4)), (0 | ((min((int(ivec3(((64) << ((0) * 1)), 1, 1))), (~ (~ (64))))))), 0);
   if((false))
    barrier();
   subgroupAll(false);
   if(((((((! ((! (! ((false || (! ((bool((bvec2(bvec3(bvec2(false, false), false)))))))))))))) || false)) && true)))
    {
     if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((false))
    barrier();
   if((false))
    barrier();
   subgroupAll(true);
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((bool(bvec4((false), true, false, true))))
  barrier();
 if((false))
  barrier();
}
