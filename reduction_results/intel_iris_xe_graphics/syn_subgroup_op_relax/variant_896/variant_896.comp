#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = ((max(((clamp((~ ((max(~ ((uint(uvec4((false ? (0u | ((118403u))) : ((0u) | (0u))), 0u, 0u, 0u)))), ~ ((uint(uvec4((false ? (0u | ((118403u))) : ((0u) | (0u))), 0u, 0u, 0u)))))))), (false ? (118403u) : ((0u) | (0u))), (false ? (118403u) : ((0u) | (0u)))))), ((0u) + 0u))) | (gl_NumWorkGroups.x));
 if((((! (! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * (~ (~ (((false ? (subgroup_id) : workgroup_id)))));
 uint virtual_gid = ((((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), true, false))) ? (63081u) : ((uint(((uvec4(workgroup_base + (max(subgroup_id, subgroup_id)) * subgroup_size, 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) | 0u)))) + subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((false) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((false || ((! (! ((false)))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + (min(subgroup_id, subgroup_id)) * subgroup_size + ((((((subgroup_local_id + 1) % subgroup_size) ^ 0u)) >> 0u));
 if((false))
  {
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = ((~ (~ (clamp((((0 ^ ((max((false ? (50924) : int((clamp(ivec2(((true ? 1 : (- 50521))), 0), (clamp(((ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0)) << ivec2(0, 0)), ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0), (~ (~ (ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0)))))), (((max((~ (~ (ivec2(((true ? 1 : (- 50521))), 0)))), ivec2(((true ? 1 : (- 50521))), (~ (~ (0))))))) + ivec2(0, 0)))))), (false ? (50924) : int((clamp(ivec2(((true ? 1 : (- 50521))), 0), (clamp(((ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0)) << ivec2(0, 0)), ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0), (~ (~ (ivec2((((bool(bvec3(true, false, ((true && ((injectionSwitch.x > injectionSwitch.y))))))) ? 1 : (- 50521))), 0)))))), (((max((~ (~ (ivec2(((true ? 1 : (- 50521))), 0)))), ivec2(((true ? 1 : (- 50521))), (~ (~ (0))))))) + ivec2(0, 0)))))))))))), (((((((false ? (50924) : int((clamp(ivec2(((true ? 1 : (- 50521))), 0), ivec2((((bool(bvec3(true, false, ((injectionSwitch.x > injectionSwitch.y))))) ? 1 : (- 50521))), 0), (~ (~ ((((max(ivec2(((true ? 1 : (- 50521))), 0), ivec2(((true ? 1 : (- 50521))), (~ (~ (0))))))) + ivec2(0, 0)))))))))))) / 1)) << int((injectionSwitch.x))), (((((false ? (((50924) | (50924))) : int((clamp(ivec2(((true ? 1 : (- 50521))), 0), ivec2((((bool(bvec3(true, false, ((injectionSwitch.x > injectionSwitch.y))))) ? 1 : (- 50521))), 0), (((max(ivec2(((true ? 1 : (- 50521))), 0), ivec2(((true ? 1 : (- 50521))), (~ (~ (0))))))) + ivec2((max(0, 0)), 0))))))))) ^ int((injectionSwitch.x))))))));
 if(((uint((injectionSwitch.x)) + ((~ (~ ((((((false ? (subgroup_local_id) : 0u))) - uint((injectionSwitch.x))) ^ (((((max((((((min(subgroup_local_id + 1, subgroup_local_id + 1))) >> (0u << (uint(1u))))) >> (((0u << (uint(6u))) | (((true ? 0u << (uint(6u)) : ((true ? subgroup_size : num_workgroup)))))))), (((((min(subgroup_local_id + 1, subgroup_local_id + 1))) >> (0u << (uint(1u))))) >> (0u << (uint(6u))))))) << 0u))))))))) * 1u) < subgroup_size)
  {
   if((false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((bool(bvec4((false), true, true, false))))
    return;
   atomicStore(buf[next_virtual_gid], (max(uint((max((0 | (2)), (0 + ((int(int(2)))))))), uint((max((0 | (2)), 2))))), ((0 ^ ((~ (~ (max(4, 4))))))), 64, (((min(0, 0))) << 0));
   subgroupAll(true);
  }
}
