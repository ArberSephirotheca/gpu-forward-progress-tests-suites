#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (uvec3(0u, 0u, 0u) | ((((clamp(gl_WorkGroupSize, gl_WorkGroupSize, (uvec3((max(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) | (((((clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) / ((((uvec3((injectionSwitch.y), ((((injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) : (- 21.18))), (injectionSwitch.y))) / uvec3(1u, 1u, 1u))) >> (uvec3(0u, 0u, (uint(uvec3(0u, 1u, (0u >> (uint(7u))))))) << ((uvec3(0u, 0u, 0u) ^ (((uvec3(6u)) + uvec3(0u, 0u, 0u))))))))))))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((false) && true)))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(((bool(bvec2((bool(bvec4(false, true, false, ((true) || false)))), true)))))
      return;
    }
   return;
   if((false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((bool(bvec3(false, true, true)))))
    {
     if((false))
      {
       if(((true && (false))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_base = ((0u | (((true ? uint((injectionSwitch.x)) : (106603u))))) ^ ((0u ^ (workgroup_size)))) * ((workgroup_id) - uint((injectionSwitch.x)));
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((true && ((false || ((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))) || false)))))))))
  {
   if((false))
    return;
   if(((! (! (false)))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((((max(injectionSwitch.x, (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id + 1) * 1u)) % subgroup_size);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if(false)
  {
   if(((! (! (false)))))
    {
     if(((((((false || (false))) && true) || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if((false))
    {
     if(((! (bool(bvec3(((bool(bvec4(! ((false || ((false || ((! (! (((! (! (bool(bvec2(! ((! (! ((! (bool(bool((bool(bool(((((! (! ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))))), true)))))))))))))), true, true, false)))), (! (! (true))), true))))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if(((! (! (false)))))
      return;
     return;
    }
   if((false || (bool(bvec2(((((injectionSwitch.x > ((injectionSwitch.y) + 0.0))))), false)))))
    {
     if(((! (! ((! (! (false))))))))
      return;
     return;
    }
  }
 else
  {
   if((false))
    return;
   (~ (~ (buf[virtual_gid] = 1)));
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((true && (((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, (max((vec2(0.0, 0.0) + ((max(vec2(1.0, 1.0) * ((vec2(mat2x4((mat2(1.0) * ((((false ? (vec2(- 599.589, 8.9)) : injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), vec2(1.0, 1.0) * ((vec2(mat2x4((mat2(1.0) * ((((false ? (vec2(- 599.589, 8.9)) : injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, (max(1.0, 1.0)), 1.0)))))))).y, injectionSwitch.y))))) && true)))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(((true ? 2 : (11124)))), (max((0 | (int(((ivec3((min((4), (((4)) / 1))), 1, 1)) | (ivec3((min((4), (4))), 1, 1)))))), (0 | (4)))), 64, 0);
   if((false))
    {
     if((false))
      return;
     if(((((bool(bvec3(((bool(bvec4(bool((bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))), true, true, false)))), false, ((injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   subgroupAll(false);
   if(((! (! ((((((true) || ((injectionSwitch.x > injectionSwitch.y))) && (! ((! (false)))))) || false))))))
    {
     if(((((bool(bvec2((true && (((false) || false))), false))) || ((false))) && true)))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((true && ((false))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(((bool((bvec3(bvec4(bvec3(false, true, true), true)))))))
      return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if((false))
  return;
 if(((true && ((((! ((! ((! (! (! (! (false))))))))) || (false || (false))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if((false))
    return;
  }
 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(((! (! ((false || (! (((((true && (! (false)))) && true))))))))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
}
