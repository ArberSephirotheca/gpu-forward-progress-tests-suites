#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((min(((uint(uvec3((max(gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u, (0u ^ 0u)))) / 1u), uint(uvec3((max(gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u, (0u ^ 0u))))));
 uint workgroup_size = ((((injectionSwitch.x > injectionSwitch.y)) ? ((false ? (subgroup_id) : (((true ? num_workgroup : (85073u)))))) : (min((uint(uvec4(((((min((~ (((~ ((((false ? (134388u) : gl_WorkGroupSize.x)) ^ (clamp((min(0u, 0u)), 0u, 0u))))) | (~ ((((false ? (134388u) : (0u | (gl_WorkGroupSize.x)))) ^ 0u)))))), ((true ? (((false ? (134388u) : ((gl_WorkGroupSize) + (uvec3(0u, 0u, 0u) << (uvec3(0u)))).x)) | ((false ? (134388u) : ((gl_WorkGroupSize) + (uvec3(0u, ((0u) + 0u), 0u) << (uvec3(0u)))).x))) : (subgroup_size)))))) << 0u)), 1u, 0u, 1u))), (((((bool(bvec3((! ((((bool(bvec3(((! (false)) && true), false, true))) || false)))), false, true))) ? (134388u) : (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))) | (((false ? (134388u) : gl_WorkGroupSize.x))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((0u << (uint(3u))) ^ (workgroup_size * (~ (~ ((uint(uvec3((uint(uint(workgroup_id))), 0u, 1u))))))));
 uint virtual_gid = workgroup_base + (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((((false ? (workgroup_size) : (((~ (((~ (((workgroup_base) | (workgroup_base)) + ((subgroup_id) | 0u) * subgroup_size)) >> (0u | (0u)))))) << 0u) + (((((min((max(((0u << (uint(4u))) ^ ((min(subgroup_local_id + ((1) | (1)), subgroup_local_id + 1)))), (max((min(subgroup_local_id + ((1) | (1)), subgroup_local_id + 1)), (min(subgroup_local_id + ((1) | (1)), subgroup_local_id + 1)))))), (min(subgroup_local_id + ((1) | (0 + (((0 | (1)))))), subgroup_local_id + 1)))))) + (0u << (uint(3u)))) % subgroup_size)))) ^ 0u);
 ((0u ^ (~ (~ (buf[virtual_gid] = ((1) | (((~ (~ ((((clamp(((min(((((1) - 0)) ^ 0), (min(1, 1))))) / (((min(1, 1))) | (1)), ((min(((((1) - 0)) ^ 0), (min(1, 1))))) / (((min(1, 1))) | (1)), ((min(((((1) - 0)) ^ 0), (min(1, 1))))) / ((((clamp(min(1, 1), min(1, 1), min(1, 1))))) | (1)))))) >> ((true ? 0 : (((~ (~ ((68605))))) | 0))))))))))))));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], ((uint(2)) >> 0u), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], (0u ^ (uint(2))), 4, 64, ((0) | (~ (((~ (clamp((((min(0, 0)))), ((true ? (((((min(0, 0))))) / 1) : (- 91575))), (((min((min(0, 0)), (min(0, 0))))))))) << 0)))));
   subgroupAll(true);
  }
}
