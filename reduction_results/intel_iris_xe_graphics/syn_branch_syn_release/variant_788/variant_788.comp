#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((false) && true)))
      barrier();
     return;
    }
   if(((bool(bvec4(false, ((((false ? (vec2(- 64.32, - 48.33)) : (vec2(((false ? (4.1) : (((float(mat4x2(1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(1.0), 0.0, 1.0, 0.0)))) / 1.0))), 1.0) * (injectionSwitch)))).x < (clamp((((vec2((transpose(transpose(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))) - vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).y)), (bool(bool((false || (true))))), true)))))
    {
     if(((true && (((false) && true)))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, false))))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 uint workgroup_size = (((true ? ((((((uvec3(gl_WorkGroupSize[0], (((1u ^ 1u) & 123304u) + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[0], (((1u ^ 1u) & 123304u) + (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))).x) | (0u | 0u) : (num_workgroup))));
 if((false))
  barrier();
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((0u + (0u)) | ((uint(uvec3(((((workgroup_base + (max(subgroup_id * subgroup_size, ((0u >> (uint(3u))) + (subgroup_id * subgroup_size))))) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u, 0u)))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   int i = (min(0, 0));
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), ((4) >> 0), 64, ((4) | ((0 + (4)))));
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if(((((max(((true ? injectionSwitch.x : (4942.2696))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((((true ? injectionSwitch.x : (- 543.566))) > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       if(((bool((bvec2(bvec4(bvec2(false, true), false, true)))))))
        barrier();
       return;
      }
     barrier();
    }
   if((((((((false) || false) || ((injectionSwitch.x > (float(((clamp(vec4(mat4(vec4(injectionSwitch.y, (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), (max(1.0, (float(vec3(1.0, 0.0, 0.0))))), ((1.0 * (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, (0.0 + (1.0)), 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, (float(mat3x4(0.0, 1.0, 1.0, (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, ((0.0) + 0.0), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, abs(0.0), cos(0.0), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), vec4(mat4(vec4(injectionSwitch.y, (dot(vec4(0.0, 0.0, 0.0, (mix(float((- 5.3)), float(1.0), (! (! (bool(true))))))), (vec4(mat4x2(vec4(0.0, 0.0, 0.0, ((mix(float((47.60)), float(float(((false ? (mat4x3(- 117.981, - 304.986, - 55.09, - 6.8, 1.1, - 7.0, - 99.19, 3.1, 9261.9663, 9.7, - 3388.6017, - 4.4)) : mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, (injectionSwitch.y), 0.0, 1.0))))), bool(true))))), 0.0, 0.0, 1.0, 0.0))))), ((0.0) - 0.0), 1.0), 1.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), (vec4(mat3x4(vec4(1.0, 1.0, 0.0, 1.0), 0.0, (mix(float(length(vec2(0.0, 0.0))), float((4854.6129)), (! ((bool(bool(! (bool(false))))))))), abs(1.0), 0.0, (float(float((clamp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, (mix(float(0.0), float((9647.1076)), bool(false))), 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, (mix(float(0.0), float((9647.1076)), bool(false))), 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, (mix(float(0.0), float((9647.1076)), bool(false))), 0.0))))))), ((1.0) - 0.0), abs(0.0), 1.0))))), 1.0, (mix(float(1.0), float(((((+ - 5782.9276)) - 0.0))), bool(false))), 0.0, 1.0, 1.0, (max(((1.0 * (float(mat3x4(0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, (((false ? (- 40.00) : dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0))))), 0.0)), 0.0, 1.0, 1.0, 1.0)), vec4(mat4((min(vec4(injectionSwitch.y, (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, (max(1.0, (max(1.0, 1.0))))))), (0.0 + (0.0)), 1.0), vec4(injectionSwitch.y, (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), (0.0 + (0.0)), 1.0))), 1.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 1.0, (clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, (min((clamp(1.0, 1.0, 1.0)), 1.0))))))))))))) || false))))
    return;
   atomicStore(buf[((((((next_virtual_gid)) | 0u) - 0u)) ^ 0u)], uint(2), 4, 64, 4);
   if(((bool((bvec2(bvec3(bvec2((true && (false)), false), true)))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   if((false || (((false || (((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if((false))
    return;
  }
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((((false ? (vec2(22.86, - 9.4)) : (vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
}
