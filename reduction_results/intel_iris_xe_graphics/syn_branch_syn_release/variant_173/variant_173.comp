#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * ((workgroup_id) - 0u);
 uint virtual_gid = ((((clamp((min(min(((workgroup_base) | (workgroup_base)), workgroup_base), min(((workgroup_base) | (min((workgroup_base), (workgroup_base)))), workgroup_base))), min(((workgroup_base) | ((((((true ? ((((((uint(uvec4(workgroup_base, 0u, 1u, ((0u >> (uint(6u))) >> (uint(4u)))))) >> ((false ? (workgroup_id) : 0u)))) << 0u))) * 1u : (workgroup_id)))) ^ 0u)))), workgroup_base), min(((workgroup_base) | (((true ? workgroup_base : (0u ^ ((~ (~ ((workgroup_base)))))))))), workgroup_base)))) + subgroup_id * subgroup_size + ((((((((! ((bool((! (! (bool(! (true))))))))) ? (subgroup_local_id) << 0u : (subgroup_id)))))) | (0u ^ (((((((! ((bool((! (! (bool(! (((true) && ((injectionSwitch.x < injectionSwitch.y)))))))))))) ? (subgroup_local_id) << 0u : (subgroup_id))))))))) + 0u)) - 0u);
 uint next_virtual_gid = (((0u | (workgroup_base + (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size))) | ((0u | (workgroup_base + (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)))) + (((min(((((min((min((subgroup_local_id + 1) % subgroup_size, ((((max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) * (1u ^ 0u)))), (subgroup_local_id + 1) % subgroup_size)))) << 0u), (~ (~ (((min((min((subgroup_local_id + 1) % subgroup_size, (((subgroup_local_id + 1) % subgroup_size) * (1u ^ 0u)))), (subgroup_local_id + (((((0 ^ (1))) << 0)) + 0)) % subgroup_size)))))))) + 0u));
 buf[virtual_gid] = (~ (((~ (1))) + 0));
 if((((true && ((((! (! (bool(bool(bool(bool((! ((bool(bvec2(! ((true && (subgroup_local_id + 1 < subgroup_size))), false))))))))))))))))) && true))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], (min(uint(2), uint(2))), 4, (clamp(64, 64, 64)), ((4) * 1));
  }
 else
  {
   atomicStore(buf[(max(((((next_virtual_gid) << 0u) >> (((((0u) | (0u)) | 0u)) | 0u))), (((~ ((0u | (~ (next_virtual_gid))))) << (0u << ((0u | ((clamp(((uint(4u)) - 0u), ((uint(4u)) - 0u), ((uint(4u)) - 0u)))))))))))], uint(2), (~ (((~ (4)) + 0))), 64, 4);
  }
}
