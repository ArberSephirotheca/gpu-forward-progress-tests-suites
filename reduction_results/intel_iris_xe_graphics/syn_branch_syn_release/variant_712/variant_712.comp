#version 460

struct _GLF_struct_2 {
 vec3 _f0;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 ivec3 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 uint next_virtual_gid;
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 vec4 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(((false ? (mat4(- 169.766, 8.6, 3.4, 42.55, 724.419, - 34.93, 9047.7515, - 34.08, 1.4, - 42.29, - 0.9, 35.77, - 6.0, (mix(float((2.5)), ((false ? ((- 75.67 - 5397.7368)) : float(108.313))), bool(true))), - 1567.3883, 5.1)) : ((mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, (clamp(1.0, 1.0, (mix(float((min(1.0, 1.0))), float((5.6)), bool(false))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec4((clamp(1.0, (((min((float((mat3(mat3(((mat3(true ? 1.0 : (abs(- 382.543)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)) / (transpose(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), (((float((mat3(mat3(((mat3(true ? 1.0 : (abs(- 382.543)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, (min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)))))))) * 1.0))))), (mix(float(1.0), float((float(((((22972) + 0)) | (22972))))), bool(false)))))), gl_SubgroupSize), 1u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((! (! ((false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if(((bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = (((uint(((((false ? (subgroup_id) : uint((min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) + 0u))) << (max(0u, 0u))));
 if((false))
  {
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = ((gl_WorkGroupID) ^ uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))).x;
 uint workgroup_base = (0u + (workgroup_size)) * workgroup_id;
 if((false))
  barrier();
 if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) && (! (! (true))))))))
  barrier();
 if((((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((clamp((clamp(((((true ? ((injectionSwitch) / vec2(1.0, 1.0)) : (vec2(vec2((vec2(1.4, 93.13)))))))) / vec2(1.0, 1.0)), injectionSwitch, (vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch, (mix(vec2((injectionSwitch)[0], (86.52)), vec2((- 6.4), (injectionSwitch)[1]), bvec2(((injectionSwitch.x > (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).y)), true))))).x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false) && true)))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((bool(bvec4(((bool((true && ((bool(bvec4(bool(bool(bvec4((bool(bool(false))), true, false, true))), true, true, false)))))))), true, false, true)))))
      barrier();
     if((false))
      barrier();
     if((! (! ((false)))))
      barrier();
     if((((false) && true)))
      barrier();
     barrier();
     if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((bool(bool((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (false))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(((false || (bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((((((injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))))
  {
   if((false))
    {
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     if(((((mix(vec2((injectionSwitch)[0], (- 9.3)), vec2((8.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (((! (false)) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), log(1.0), 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if(((! (! (((false) || ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 if(((((mix(float((6.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((((false ? (- 9976.9070) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) || false)))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_1._f0.subgroup_size + (min(subgroup_local_id, subgroup_local_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4((max(((0u | (min(workgroup_base, (min(workgroup_base, (0u ^ (workgroup_base)))))))), workgroup_base)) + subgroup_id * (((clamp(_GLF_struct_replacement_1._f0.subgroup_size, _GLF_struct_replacement_1._f0.subgroup_size, _GLF_struct_replacement_1._f0.subgroup_size))) >> 0u) + (((clamp(subgroup_local_id + 1, ((((subgroup_local_id + 1) + 0u)) | (subgroup_local_id + 1)), subgroup_local_id + 1))) % _GLF_struct_replacement_1._f0.subgroup_size), _GLF_struct_3(mat2x3(1.0), ((((ivec3(1)) | (min(ivec3(0, 0, 0), ivec3(0, 0, (min(0, 0))))))) | ((max(ivec3(1), ivec3(1))))), _GLF_struct_2(vec3(1.0)), vec2(1.0)));
 if((false))
  {
   if((((((true ? injectionSwitch.x : (- 4.9))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((! ((bool(bool(! ((bool(bvec3((false), (false || (true)), true))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((bool((bvec2((bvec2(bvec2(bvec2(bvec2((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
    barrier();
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((((! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false))))))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((0u | ((((((true) || false) ? (0u ^ (((false ? (subgroup_local_id) : subgroup_local_id + 1)))) : (99292u)))) | 0u))) < _GLF_struct_replacement_1._f0.subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((! (! (bool(bvec2(false, false))))))))
      barrier();
     if((false))
      {
       if((((false) || false)))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((bool((bool(bool(bool(((! (((bool(bvec3(false || (! (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))))))))
          barrier();
         if(((! (! ((((false || (((injectionSwitch.x > injectionSwitch.y))))) || false))))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > (((min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) - log(vec2(1.0, 1.0))).y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
   int i = 0;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(((max((((2) | (((2) | (2)))) | ((2) | (((2) | (2))))), (((2) | (((2) | (2)))) - 0))))), 4, 64, 4);
   if((((! (! ((bool((false || (bool(! (! (false)))))))))))))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(false)
    {
     if((false))
      barrier();
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(2), 4, ((false ? (- 40046) : (int(ivec4(64, 1, 1, 1))))), 4);
     if((false))
      barrier();
     if(((true && (false))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((bool(bvec4(! (! (false)), ((true && ((bool(((bool((injectionSwitch.x < injectionSwitch.y))) && true)))))), false, true))))))
  {
   if(((((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))) && true)))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((true && (false || (((((min((min(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))), float(mat2(injectionSwitch.x, 1.0, 0.0, (clamp(0.0, (min(0.0, 0.0)), (float(float(0.0)))))))))) > injectionSwitch.y))))))))
    {
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > ((max((clamp((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : ((- 172.771 / 9.5))), (((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : ((- 172.771 / 9.5))), (((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : ((- 172.771 / 9.5))))), (((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : ((- 172.771 / 9.5))))))))))
    {
     if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec3(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (((((injectionSwitch.x > injectionSwitch.y))) && true))), ((false) && true), true)))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
}
