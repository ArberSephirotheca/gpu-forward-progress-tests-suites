#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 ((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size) / (min(1u, 1u)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 uint workgroup_base = workgroup_size * (max((((true && (false)) ? (((workgroup_size)) << 0u) : GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y)), (uint(uvec4((~ (~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y))), 0u, 0u, ((max(((min(false ? ((subgroup_size * workgroup_size)) : 0u, false ? ((subgroup_size * workgroup_size)) : 0u))), ((min(false ? ((subgroup_size * workgroup_size)) : 0u, false ? ((subgroup_size * workgroup_size)) : 0u)))))))))));
 uint virtual_gid = workgroup_base + (~ (~ ((max(subgroup_id, subgroup_id)) * (min((((~ (~ ((~ (~ (((uvec2(0u, 0u) + ((((min((~ (~ (~ (((~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) / ((((uvec2(1u, 1u) << (uvec2(0u))) >> (uvec2(0u))) << (((uvec2(3u)) << uvec2(0u, 0u)))) >> (uvec2(3u)))))))), (uvec2((clamp(uvec4(((~ (((~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) / ((((uvec2(1u, 1u) << (uvec2(0u))) >> (uvec2(0u))) << (((uvec2(3u)) << uvec2(0u, 0u)))) >> (uvec2(3u)))))) / uvec2(1u, 1u)), 0u, 0u), uvec4(((~ (((~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) / ((((uvec2(1u, 1u) << (uvec2(0u))) >> (uvec2(0u))) << (((uvec2(3u)) << uvec2(0u, 0u)))) >> (uvec2(3u)))))) / uvec2(1u, 1u)), 0u, 0u), uvec4(((~ (((~ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) / ((((uvec2(1u, 1u) << (uvec2(0u))) >> (uvec2(0u))) << (((uvec2(3u)) << uvec2(0u, 0u)))) >> (uvec2(3u)))))) / uvec2(1u, 1u)), 0u, 0u))))))))))) * uvec2(1u, (min(1u, 1u))))))).x)))) - 0u), (0u + ((clamp(((true ? ((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) | (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) : (uvec2(35438u, 87797u)))).x, ((true ? ((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) | (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) : (uvec2(35438u, 87797u)))).x, ((true ? ((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) | (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) : (uvec2(35438u, 87797u)))).x))))))))) + subgroup_local_id;
 uint next_virtual_gid = (~ (((~ (((workgroup_base + ((0u + (((((((false ? (virtual_gid) : (34474u & (~ (~ ((0u | (0u)))))) ^ (((false ? (virtual_gid) : ((((0u | (clamp(((false ? (72078u) : (min(subgroup_id, subgroup_id)))), subgroup_id, subgroup_id)))) << 0u)))))) | (0u & 135210u))) << 0u)))))) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((((clamp((((~ (~ ((min((((0u | ((subgroup_local_id + 1)))) - 0u), (((0u | ((subgroup_local_id + 1)))) - 0u))))))) ^ 0u), (((0u | ((((subgroup_local_id + 1) - 0u))))) - 0u), (((0u | ((subgroup_local_id + 1)))) - 0u)))) * 1u) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))) << 0u)) | (~ ((((((clamp(workgroup_base + ((0u + (((false ? (virtual_gid) : (34474u & ((~ ((uint(uint(~ (~ (~ ((0u | (0u)))))))))))) ^ (((false ? (virtual_gid) : (clamp(((false ? (72078u) : (min(subgroup_id, subgroup_id)))), subgroup_id, subgroup_id)))))))))) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, ((((workgroup_base) / 1u)) >> 0u) + (max(((0u + (((false ? (virtual_gid) : (34474u & (~ (~ ((0u | (0u)))))) ^ (((false ? (virtual_gid) : (clamp(((false ? (72078u) : (min(subgroup_id, subgroup_id)))), subgroup_id, subgroup_id)))))))))), ((0u + (((false ? (virtual_gid) : (34474u & (~ (~ ((0u | (0u)))))) ^ (((false ? (virtual_gid) : (clamp(((false ? (72078u) : (min(subgroup_id, subgroup_id)))), subgroup_id, subgroup_id)))))))))))) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, workgroup_base + ((0u + (((false ? (virtual_gid) : (34474u & (~ (~ ((0u | (0u)))))) ^ (((false ? (virtual_gid) : (clamp(((false ? (72078u) : (min(subgroup_id, subgroup_id)))), subgroup_id, subgroup_id)))))))))) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) + 0u)) + (0u ^ ((((((((1u * (((0u | ((subgroup_local_id + 1)))))) - 0u) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)) << 0u)) << 0u)))) + 0u))))));
 buf[virtual_gid] = 1;
 for(int _injected_loop_counter = ((((int((((max(mix(float((- 6.7)), float(injectionSwitch.x), bool(true)), mix(float((- 6.7)), float(injectionSwitch.x), bool(true))))))) >> (int(8))) >> ((max(int(6), int(6))))) ^ 0)); _injected_loop_counter != ((((min(1 ^ 0, ((1 ^ 0) ^ 0)))) | (1 ^ 0))); (~ (~ ((((false || (false)) ? ((~ (((((false ? (- 15387) : ((((((((~ (- 63097)) | ((((false ? (- 42297) : (0 | (((~ ((min(~ (true ? ~ (- 63097) : (((_injected_loop_counter) | 0))), ~ (true ? ~ (- 63097) : (((_injected_loop_counter) | 0)))))))))))))))) | (((~ (- 63097)) | (((true ? ~ (- 63097) : ((0 ^ (_injected_loop_counter))))))))))) | ((((((((0 | ((((~ (- 63097)) | (((true ? ~ (- 63097) : (_injected_loop_counter))))) | ((max((~ (- 63097)) | (((true ? ~ (- 63097) : (_injected_loop_counter)))), (~ (- 63097)) | (((true ? ~ (- 63097) : (_injected_loop_counter)))))))))))) | ((0 ^ (((~ ((min(((- 63097) + 0), - 63097)))) | (((true ? ~ (- 63097) : (_injected_loop_counter))))))))))) >> 0)))) - 0) - (0 >> (int(4))))))))) : _injected_loop_counter ++))))))
  {
   if(((((0u >> (uint(7u)))) | ((0u >> (uint(7u))))) | (subgroup_local_id + (clamp(1, 1, 1)))) < ((((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) << 0u)) | (((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) << 0u))))
    {
     int i = 0;
     atomicStore(buf[((0u | 0u) + (next_virtual_gid))], uint(2), 4, 64, 4);
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))));
    }
  }
}
