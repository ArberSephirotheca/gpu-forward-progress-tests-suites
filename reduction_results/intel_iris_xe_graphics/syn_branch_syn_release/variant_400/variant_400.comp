#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((! (((! ((! (! (false)))))) || false))))
  {
   if((true && (((((((clamp((((max(injectionSwitch, injectionSwitch))) / (vec2(0.0, 0.0) + ((vec2(mat3((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)))))), (((true ? mat2(1.0) * (injectionSwitch) : (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > ((min(float(mat3x2(((false ? (- 50.69) : injectionSwitch.y)), 1.0, 1.0, (max((((mix(float((min((injectionSwitch.y), (injectionSwitch.y)))), float((24.65)), bool(false)))) - 0.0), (injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), (dot((abs(vec3(1.0, 1.0, 1.0)) * (vec3(log(1.0), 1.0, determinant(mat3(0.0, ((mix(float(((4452.5522 / vec3(- 9721.4470, - 7971.7804, 514.950).p))), float(mix(float(0.0), float((- 7.8)), bool(false))), bool(((injectionSwitch.x < injectionSwitch.y)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, (((true ? min(0.0, (min(0.0, 0.0))) : (8225.4317))))))))), vec3(sqrt(0.0), 1.0, 0.0))))), float(mat3x2(((false ? (- 50.69) : injectionSwitch.y)), 1.0, 1.0, (injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), (dot(vec3(log(1.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(sqrt(0.0), 1.0, 0.0))))))))))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if(((! (! ((false || (false)))))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (~ ((1u * (~ ((uint(uint(gl_NumWorkGroups.x))))))));
 if((false))
  {
   if(((! (! (false)))))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), ((max(min(float(((mix(float((15.65)), float(float(12794)), bool(true))))), float((float(12794)))), min(float(((mix(float((15.65)), float(float(12794)), bool(true))))), float((float(12794))))))), bool(false)))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((bool(bvec3(((bool(bool(((false) && true)))) || ((((false || ((injectionSwitch.x > injectionSwitch.y))))))), true, true))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 uint workgroup_id = (min(((true ? ((((gl_WorkGroupID) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)) : (uvec3(186703u, 133472u, 191470u)))), (((uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupID) - uvec3(0u, 0u, 0u))))) << uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))).x;
 if((((false) && true)))
  return;
 if(((true && (false || (((! (! (false)))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(((((! (! (bool(bvec2((false || (bool(bvec4(bool(bvec2((false), false)), (bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), false))), true, true)))), (bool(bvec3(true, false, true))))))))))))
    {
     if(((bool(bvec3((true && (false)), false, false)))))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(((bool(bvec3(false, true, ((true) && true))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = (1u * (workgroup_base)) + (((clamp((((((max(((~ (~ ((subgroup_id) << 0u)))) >> 0u, (max(((max(((max(subgroup_id, subgroup_id))), ((max(subgroup_id, subgroup_id))))) << 0u), ((((max(((max(subgroup_id, subgroup_id))), ((max(subgroup_id, subgroup_id))))) << 0u)) << 0u))) >> 0u)))) | ((((true ? ((subgroup_id) << 0u) : (subgroup_size))) >> 0u)))), ((((subgroup_id) << 0u) >> 0u)), (uint(uint(((((~ (~ ((((subgroup_id)) << 0u)))) << 0u) >> (clamp(0u, (min((clamp(0u, 0u, 0u)), 0u)), ((0u) + 0u))))))))))) | (0u & 179132u)) * subgroup_size + subgroup_local_id;
 if((false))
  return;
 if(((((bool(bool(injectionSwitch.x > (clamp(injectionSwitch.y, ((injectionSwitch.y) - 0.0), (max(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((((false) || false)))
    return;
   return;
  }
 if(((! (! (false)))))
  return;
 uint next_virtual_gid = (((((min(~ (~ (((0u) / ((1u) | (1u))) | ((((min(workgroup_base, workgroup_base))) / 1u) + subgroup_id * subgroup_size))), ~ (~ (((0u) / 1u) | (((workgroup_base) | 0u) + subgroup_id * subgroup_size)))))))) | (workgroup_base + subgroup_id * subgroup_size)) + (((((clamp((clamp(subgroup_local_id, (((((~ (((~ (subgroup_local_id)) >> 0u))) << 0u))) >> uint((injectionSwitch.x))), subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) - (min(0u, ((0u) | 0u)))));
 if(((! (! (((! (! (bool(bvec4((((! (! (bool(bvec4(! (! (((injectionSwitch.x > ((0.0 + ((injectionSwitch.y) * 1.0))))))), true, true, false))))))), false, false, ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if((false))
  return;
 if((false))
  {
   if(((! (! (false)))))
    {
     if((false || ((false || ((((((injectionSwitch) / vec2(1.0, ((1.0) - 0.0))).x > injectionSwitch.y))))))))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 ((((buf[virtual_gid] = (((((clamp(((~ ((max(~ (max((int(ivec2(1, 1))), (int(ivec2(1, 1))))), (clamp(~ (int(ivec2(1, 1))), ~ (int(ivec2(1, 1))), (0 ^ (~ (int(ivec2(1, 1)))))))))))), ((~ ((max(~ (int(ivec2(1, 1))), (clamp(~ (int(ivec2(1, 1))), ~ (int(ivec2(1, 1))), (0 ^ (~ (int(ivec2(1, 1)))))))))))), ((~ ((max(~ (int(ivec2(1, 1))), (clamp(~ (int(ivec2(1, 1))), ~ (int(ivec2(1, 1))), (0 ^ (~ (int(ivec2(1, 1))))))))))))))) ^ ((0) >> 0))) << 0)) - 0u)) / ((1u) + 0u));
 if((((((((bool(bvec3(true, false, ((false) && true)))) && true)) && ((bool(bvec4((bool(bvec4(false, ((((bool(bvec2((injectionSwitch.x > (((bool(bvec2(false, false))) ? (3442.4612) : injectionSwitch.y))), false))) && true))), true, ((((((bool(bvec3(! (! ((min((vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((- 2.9)), bool(((false) || ((false) || false))))))), injectionSwitch)).x > injectionSwitch.y)), false, false))))) || false)))))), (false || (true)), false, false)))))) && true)))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((! ((! (! (! ((((((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))))))))
  return;
 if((((true && (((! ((! ((! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 if((false))
  {
   if((bool(bool((((true && ((true && (((false || (false)))))))) || false)))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if(((((bool(bvec3((! ((bool(bvec4(! (false), false, ((injectionSwitch.x > injectionSwitch.y)), true))))), false, true)))) || false)))
  {
   if((((false) && true)))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
     if(((! (! ((bool(bvec2(false, false))))))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((true && (bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    return;
   return;
  }
 if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((! (! ((((injectionSwitch.x > (vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).y)))))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((false || ((bool((bvec2(bvec4(bvec2((injectionSwitch.x > (clamp((max((clamp((((max((max((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0)))))) * mat2(1.0)), (((max((max((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0)))))) * mat2(1.0)), (((max((max((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0)))))) * mat2(1.0)))), (((max((max((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0)))))) * mat2(1.0)))), (max((max((vec2(((injectionSwitch) * mat2(1.0))[0], (min(((injectionSwitch[1]) * 1.0), ((float(mat4x2(float(mat2x4(((injectionSwitch[1]) * 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (max((max((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))), (vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))))))).y), true), false, true))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((false ? (subgroup_local_id) : max(subgroup_local_id, subgroup_local_id)))) + (((((1 * (1)) >> 0))) | 0) < subgroup_size)
  {
   if(((! (! ((false || (false))))) || ((false))))
    {
     if((((((true ? (clamp(((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[((1) + 0)])))), (vec2(mat3x4(((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[((1) + 0)])))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0))), ((mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[((1) + 0)])))))) : (vec2(- 6.3, - 1.8)))).x > injectionSwitch.y))))
      return;
     return;
    }
   int i = 0;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((((false) && true)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   atomicStore(buf[(clamp(next_virtual_gid, ((next_virtual_gid) | (next_virtual_gid)), (max(next_virtual_gid, next_virtual_gid))))], uint(2), 4, 64, 4);
  }
 else
  {
   if(((((true && (((((bool(bvec4((true && ((injectionSwitch.x > injectionSwitch.y))), true, ((injectionSwitch.x < (vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))) && ((true) || false))) && true))))))
    {
     if((true && ((((false)) && (bool(bvec3(true, true, true)))))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if((true && (((((! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(((false || (((((injectionSwitch.x > injectionSwitch.y)) && true))))))
      return;
     if(((! (! ((! (! ((((false || (((injectionSwitch.x > injectionSwitch.y) || false)))))))))))))
      return;
     return;
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   atomicStore(buf[next_virtual_gid], ((true ? uint(((2) / 1)) : (workgroup_id))), 4, 64, 4);
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    {
     if(((bool(bvec4(false, false, true, true)))))
      return;
     if((false))
      {
       if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((! (! ((bool(bvec4(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, false, true)))))))
      return;
     if(((false || (((! (! (((! (! ((! (((! (false)) && true))))))))))) && ((injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(((bool(bool(false)))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((bool((bvec2(bvec4(((bvec2(bvec2(bvec2(((bvec3(bvec3(bvec3(bvec3(bvec3((bvec2(bvec2((bvec2(bvec2((bvec2(bvec3((bvec2(bvec4((bvec2((bvec3(bvec3(bvec3(bvec2((bool(bvec4((false), true, true, false))), false), false)))))), false, false))), false))))))))), true)))))))))))), false, false))))))
    return;
   if((false))
    return;
  }
 if(((((float((max(vec3(injectionSwitch.x, 1.0, (min(((0.0) / (dot(vec3(0.0, 0.0, (mix(float(1.0), float((1337.5908)), bool((bool(bvec3(false, false, true))))))), vec3(0.0, 0.0, (mix(float((float(false))), float(1.0), bool(true))))))), 0.0))), vec3(injectionSwitch.x, 1.0, 0.0))))) > (vec2(mat2(injectionSwitch, 1.0, 0.0))).y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
}
