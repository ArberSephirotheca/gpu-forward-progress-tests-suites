#version 460

struct _GLF_struct_1 {
 bvec4 _f0;
 mat2 _f1;
 uint virtual_gid;
 mat3 _f2;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 ivec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat3 _f1;
 _GLF_struct_0 _f2;
 int _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((bool(bool((false)))))
  barrier();
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if((! ((false || (! ((bool(bvec4(((((injectionSwitch.x) - 0.0) > injectionSwitch.y)), true, true, (! (! (((false) || false)))))))))))))
    {
    }
   else
    {
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((((((((bool(((bool(bvec3(((bool(bvec2(bool(((true && (true && ((bool(bvec3(((! (! (((injectionSwitch.x > injectionSwitch.y) && true))))), true, true)))))))), false))) || false), false, true)))))) && ((injectionSwitch.x < (((vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).y))))) || ((bool(bool((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) || false)))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if(((bool((bvec3(bvec4(bvec3((! (! (false))), false, false), false)))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if(((((bool(bvec4(false, true, true, false))))) && (bool(bvec3(true, true, false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   if(((((true && ((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if((! (((! ((false))) || false))))
      return;
     return;
    }
  }
 while(((false) || false));
 if((false))
  {
   if((false))
    return;
   if(((((vec2(mat4((min(injectionSwitch, injectionSwitch)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, tan(0.0), abs(1.0), 0.0, 0.0, 1.0, 1.0, (injectionSwitch.x), (max(1.0, ((false ? (- 9729.7054) : 1.0))))))).x > injectionSwitch.y))))
    {
     if((false))
      {
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   for(int _injected_loop_counter = (((1 << (int(2))) >> (int(2))) & 1); _injected_loop_counter > ((0 << (int(3))) << (int(1))); _injected_loop_counter --)
    {
     if((false))
      {
       if(((bool(bool(false)))))
        {
         if((false))
          return;
         return;
         if((false))
          barrier();
        }
       barrier();
       if((false))
        continue;
      }
     if(((! (! ((! (! (bool(bool((false)))))))))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = ((1 << ((~ ((max(~ (((int(4)) * 1)), (clamp(((~ (int(4))) | (~ (int(4)))), ~ (int(4)), ~ (int(4)))))))))) >> (((int(4)) >> 0))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((! (! ((false)))))
        {
         if((false))
          barrier();
         if((! (! (((((injectionSwitch.x < ((true ? (clamp(injectionSwitch, injectionSwitch, (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((float((! (! (false))))), (- 3.5)), (bvec2(bvec2(bvec2((! (! (false))), false)))))))).y : (- 486.632)))))) && ((true) || false))))))
          {
           barrier();
           if(true)
            {
             if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
              barrier();
             if((false))
              {
               if((false))
                return;
               barrier();
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              return;
            }
           if((false))
            barrier();
          }
         else
          {
          }
         if((false))
          barrier();
        }
      }
     if((false))
      {
       if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(((! (bool((bvec2(bvec3((bvec2(bvec2(bvec2((! (false)), (bool(bvec2(true, true))))))), true))))))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((bool(bvec2((false), true))))
    {
     if((true && ((false))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    {
     if((false))
      barrier();
     if((true && ((((false)) || false))))
      return;
     if((((false)) && true))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if((bool(((bool(((((min(injectionSwitch.x, (mix(float((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float((- 3.4)), bool(false))))) > injectionSwitch.y))))) && true))))
  barrier();
 if(((true && ((((vec2(mat3x2((clamp((((vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), injectionSwitch, (((max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((bool(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if((bool(bvec2((! (! ((false)))), true))))
      return;
    }
   while(false);
   barrier();
  }
 if((false))
  {
   if(((((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
    barrier();
   return;
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((bool((bvec2((bvec3(bvec4((bvec3(bvec4(bvec3(bvec2((true && (false)), ((injectionSwitch.x > injectionSwitch.y))), true), ((injectionSwitch.x > injectionSwitch.y))))), true)))))))))))
  barrier();
 uint num_workgroup = (uint(((uvec4((uint(((uvec2(gl_NumWorkGroups.x, 0u)) << uvec2(0u, 0u)))), 0u, 0u, 0u)) | (uvec4(gl_NumWorkGroups.x, 0u, 0u, 0u)))));
 if(((! (! (false)))))
  return;
 if((((false)) || false))
  return;
 uint workgroup_size = (min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if((((false) && true)))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
     if((((false) || (false || (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((! (! (((false || (false)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 if((((false) && true)))
  return;
 if((false))
  return;
 if(((! ((bool(bvec2(! (false), true)))))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if(((! ((bool(bvec4(! (false), false, false, (((injectionSwitch.x < injectionSwitch.y)) && (true)))))))))
  {
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((vec2(mat2((injectionSwitch) * mat2((min(((float(mat2x4(float(mat3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 1.0))), (0.0 + (((injectionSwitch.y) * (((1.0) * 1.0))))), ((false ? (inversesqrt(- 0.2)) : 1.0)))))).y))))
  {
   if((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y) || false), false))))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat4x3(1.0), mat3(1.0), _GLF_struct_0((mat2(((((((! (! (true))) ? (mat4(mat2(1.0))) * mat4(1.0) : (mat4(- 1513.5996, 7263.7461, - 622.331, - 1837.0231, - 318.955, 4685.9835, - 12.61, - 171.666, 6.4, 2807.0583, - 0.1, 1695.5366, - 7.2, - 3028.9125, 3.2, 752.075)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), ((ivec2((~ (((~ (1)) >> (0 << (int(4)))))))) * ivec2(1, 1)), uvec2(((((1u) - 0u)) - 0u))), 1, _GLF_struct_1(bvec4(true), mat2(1.0), (clamp((((clamp(((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u)))) | 0u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), ((((((true ? mat3(1.0) : (mat3(- 494.950, - 14.11, 3.8, 64.57, (mix(float(- 2023.4678), float((2.5)), bool(false))), 6849.2733, (max(- 3.5, - 3.5)), 7126.4338, (mix(float((mix((max((0.0 + (float((mix(float(0.2), float((5163.0383)), bool(false)))))), (1.0 * (float((mix(float(0.2), float((5163.0383)), bool(false)))))))), ((clamp((mix(float((3.8)), float(float(mat2x4(float(((min(0.5, (max(0.5, ((0.5) / 1.0))))))), ((0.0 + (float(float((((true ? float(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : (33.67))))))))), exp(0.0), 0.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0))), bool(true))), ((float(mat2x4(float(((min(0.5, (max(0.5, ((0.5) / 1.0))))))), ((0.0 + (float(float((((true ? float(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : (33.67))))))))), exp(0.0), 0.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0))) / 1.0), float(mat2x4(float(((min(0.5, (max(0.5, ((0.5) / 1.0))))))), ((0.0 + (float(float((((true ? float(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : (33.67))))))))), exp(0.0), 0.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0))))), bool(false)))), float((- 8224.2686)), bool(false))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, (max(1.0, ((false ? (- 5.7) : (max(1.0, 1.0)))))), 1.0)))) - mat3((log(1.0) + ((mix(float(((true ? (mix(float(((0.0) - 0.0)), float((4.1)), bool(false))) : (2891.6463)))), float((((- 5589.5712) + 0.0))), bool(false))))), 0.0, 0.0, 0.0, ((((0.0)) - 0.0) / 1.0), 0.0, 0.0, 0.0, 0.0)))));
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
  {
   do
    {
     barrier();
    }
   while(false);
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if(((! (! (((false) && true))))))
    barrier();
   return;
  }
 uint next_virtual_gid = (clamp(workgroup_base + (~ (~ (((subgroup_id * subgroup_size)) << 0u))) + (1u * (((((0u | 0u) | (subgroup_local_id)) + 1) % subgroup_size))), workgroup_base + (~ (~ (subgroup_id * subgroup_size))) + (1u * ((((((uint(uint(((0u | 0u) | (((subgroup_local_id) | 0u))) + 1))) ^ 0u))) % subgroup_size))), (max(((workgroup_base) | 0u) + (~ (~ ((((0u | (subgroup_id)) * subgroup_size) + 0u)))) + (1u * (((((0u | 0u) | (((subgroup_local_id)) | (0u | 0u))) + 1) % ((((((injectionSwitch.x) - 0.0) > ((injectionSwitch) * mat2(1.0)).y)) ? (subgroup_size) : subgroup_size))))), workgroup_base + (~ (~ (subgroup_id * subgroup_size))) + (0u ^ ((((1u * (((((0u | 0u) | (subgroup_local_id)) + 1) % subgroup_size)))) - 0u)))))));
 if((bool(bvec3((false || ((! (! ((false)))))), false, false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((injectionSwitch.x > (clamp((max(injectionSwitch, injectionSwitch)), ((clamp(mat2(1.0) * ((max(injectionSwitch, injectionSwitch))), mat2(1.0) * ((max(injectionSwitch, injectionSwitch))), mat2(1.0) * ((((max(vec2(mat3x4(max(injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0)), vec2(mat3x4(max(injectionSwitch, injectionSwitch), 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0)))))))))), (((max(injectionSwitch, injectionSwitch))) * vec2(1.0, (clamp(1.0, (((float(mat4x3((float(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), 1.0)))))).y)) || (false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((true ? (float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : (5178.1334))) > injectionSwitch.y))))
  barrier();
 if((((! (! ((false))))) && true))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(((bool(((bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))
      return;
    }
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 buf[_GLF_struct_replacement_3._f0._f4.virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((! (! (((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if((((false) && true)))
    {
     if((false))
      return;
     if(((bool(bvec3(false, false, true)))))
      {
       if(((((((((true && (((bool(bvec3(bool(bvec3((false || (injectionSwitch.x > injectionSwitch.y)), true, true)), false, false)))))))) || false) && true)))))
        return;
       if((((false) && true)))
        return;
       barrier();
      }
     if((! (! (((((false || ((! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       else
        {
        }
      }
     barrier();
    }
   if((false))
    barrier();
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     return;
    }
   if(((! (! ((false || ((injectionSwitch.x < injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if(true)
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            return;
           return;
          }
        }
       else
        {
         if((false))
          return;
        }
      }
     if(((injectionSwitch.x < (vec2(injectionSwitch[0], injectionSwitch[1])).y)))
      {
       if((bool(bvec4(((((injectionSwitch.x < injectionSwitch.y))) && (true && (((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))
        {
         return;
        }
       else
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(((((bool(bvec3((bool(bvec3(bool(bvec4((((injectionSwitch.x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false)), true, (true && (((false) && true)))))), false, (bool((bvec3(bvec4(bvec3(((true) || false), false, false), false))))))))))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if(((false || ((false || (false))))))
      barrier();
     if((false))
      barrier();
     if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     do
      {
       if(((false || (false))))
        return;
      }
     while(false);
    }
   if((false))
    barrier();
   if((! (((! (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < (0 | (1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((false) || (false || (false)))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > (mix(float((- 16.01)), float(((injectionSwitch.y) * 1.0)), bool(true)))))))
      barrier();
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((bool(bvec2((false), true))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((! (bool(bvec2((! (false)), true))))))
        return;
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(((bool(bvec3(((true && (bool(bool((bool(bvec2((true && ((bool(bvec4(false, false, true, true))))), true)))))))), false, false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if((false))
        barrier();
       if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
    }
  }
 if(((((true) && true) && (bool(bvec3((((! ((! (! (((! (((((min((float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (((bool((true && (bool(true))))) ? injectionSwitch.x : (6086.7074))))) < injectionSwitch.y)) && ((bool(bvec4((! ((bool(bvec4(! (((false || (bool(bvec2(false, false)))))), false, true, false))))), true, false, false))))))) || false)))))) || ((bool(bvec2(((! (! (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), (! (! (((injectionSwitch.x > injectionSwitch.y))))), true)))))), true)))))), true, (bool(bvec4(true, true, true, true)))))))))
  return;
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((((bool((false || ((! (! (bool(subgroup_local_id + 1 < ((clamp(min(subgroup_size, (min(((((subgroup_size)) << 0u) | 0u), subgroup_size))), min(subgroup_size, (min(((((subgroup_size)) << 0u) | 0u), subgroup_size))), (1u * (min(subgroup_size, (min(((((subgroup_size)) << 0u) | 0u), subgroup_size)))))))))))))))) || false)))
    {
     int i = 0;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       if((false))
        {
         if((false))
          return;
         if(((true && (false))))
          {
           if((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), false, ((injectionSwitch.x > injectionSwitch.y))))))
            {
            }
           else
            {
             barrier();
            }
          }
         if((false))
          return;
         if((false))
          {
           do
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(false);
           barrier();
          }
         return;
         if((((false) || ((((! (! (false))) || (false))) && true))))
          {
           if((false))
            barrier();
           return;
          }
        }
       if((((true && (injectionSwitch.x < injectionSwitch.y)))))
        {
         return;
        }
       else
        {
        }
       if((false))
        barrier();
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(((((false || (bool(bool(((bool(bvec4(bool(bvec4(false || (false), false, true, true)), false, true, true))))))))))))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], (~ (~ (uint(2)))), 4, ((64) | 0), 4);
     if((false))
      barrier();
     if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
       if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     do
      {
       if((false))
        {
         if((false))
          return;
         barrier();
         for(int _injected_loop_counter = (clamp(1, 1, (0 | (min((1), (1)))))); ((_injected_loop_counter) ^ 0) != 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
          }
        }
      }
     while(false);
     if((false))
      barrier();
     if((! (((! ((false))) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       return;
      }
     if(((bool(bvec3(false, false, false)))))
      {
       if((! (! ((((false)) || false)))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     if((false))
      {
       if((false))
        {
         if((true && ((false))))
          return;
         return;
        }
       barrier();
      }
     if((((true && (bool(bvec4((true && (false)), false, true, false)))))))
      return;
     if((((true && ((((injectionSwitch.x > injectionSwitch.y)) || false))))))
      barrier();
     if(((true && (false))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((bool(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if((((false)) && true))
            return;
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if((false))
      {
       if(false)
        {
         if((false))
          return;
         if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
        }
       else
        {
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while((! ((((injectionSwitch.x > injectionSwitch.y)) || (! ((false || (false))))))));
        }
       if((false))
        return;
       if((false))
        {
         if(((false || (false))))
          return;
         return;
        }
       if(((((! (! ((((clamp(injectionSwitch.x, injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0) > injectionSwitch.y)))))))
        return;
       if((false))
        barrier();
       if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
  }
 if(true)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> ((int(int(int(7)))))); _injected_loop_counter --)
            {
             if((true && ((false))))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                 if((false))
                  return;
                }
              }
            }
           if((false))
            return;
           if((false))
            barrier();
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     if((((! (! ((false)))) && true)))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if((false))
    barrier();
  }
 while(false);
 if((false))
  {
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
       if((false))
        barrier();
      }
     else
      {
      }
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bvec2(((false || (false))), true)))) || false))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 if(((((clamp((float(mat2(((injectionSwitch) + vec2(0.0, 0.0)).x, cos(0.0), 0.0, 0.0))), (float((((vec3(mat4(vec3(injectionSwitch.x, 0.0, 1.0), 0.0, (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, (mix(float((9013.7303)), float(((true ? 1.0 : (- 399.073)))), bool(true))), ((0.0) + 0.0)))), 0.0, ((((injectionSwitch.x > injectionSwitch.y)) ? (- 38.57) : (mix(float((- 1.7)), float((float(mat4(abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * vec3(1.0, 1.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
}
