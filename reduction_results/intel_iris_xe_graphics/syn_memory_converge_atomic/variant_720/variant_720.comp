#version 460

struct _GLF_struct_6 {
 ivec2 _f0;
 int _f1;
 uvec3 _f2;
 float _f3;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 bvec4 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 ivec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 float _f1;
 bool _f2;
 mat4x2 _f3;
 bvec4 _f4;
 float _f5;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bvec2 _f1;
 vec3 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 mat2x3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_7 _f1;
 uint workgroup_id;
 vec4 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = int(((min((float(mat3x2(((false ? (vec2(996.586, - 238.622)) : injectionSwitch)).y, 1.0, 1.0, 0.0, 1.0, 1.0))), (float(vec2(((false ? (vec2(996.586, - 238.622)) : injectionSwitch)).y, ((false ? (8280.1061) : 1.0))))))))); _injected_loop_counter > (0 << (int((max(6, 6))))); _injected_loop_counter --)
  {
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((0 & 86441) ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((((false) && true)))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != (min((0 + ((clamp(int((injectionSwitch.x)), int((injectionSwitch.x)), int((injectionSwitch.x)))))), (clamp(int((injectionSwitch.x)), int((injectionSwitch.x)), int((injectionSwitch.x)))))); ((((~ (((~ (((((0 ^ (_injected_loop_counter --)))) >> (0 << (int(5)))))) << 0))) | 0)) / (((max(1, 1)) << (int(5))) >> (int(5)))))
      {
       if(((((! (((! (! (bool(bvec2(! (false), false))))))))) && true)))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = (91795 & 0); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(true)
          {
           if((false))
            {
             if(true)
              {
               for(int _injected_loop_counter = 1; ((_injected_loop_counter > ((min(0 | 0, (max(0 | 0, 0 | 0)))))) && true); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         else
          {
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_4(_GLF_struct_0(mat4x3(1.0), bvec2(true), ((max(vec3(1.0, 1.0, 1.0) * ((min(vec3(1.0), vec3(1.0)))), vec3(1.0, 1.0, 1.0) * (vec3(1.0))))), mat3(1.0), mat3x2(1.0)), mat2x3(1.0), _GLF_struct_1(ivec4(1), 1.0, true, mat4x2(1.0), bvec4(((true) || false)), 1.0), mat2x3(1.0), _GLF_struct_2(mat2x3(1.0), ivec3(1), (ivec2(ivec3(ivec2(1), 0)))), _GLF_struct_3(mat4x2(1.0), mat2x4(1.0), mat4x3(1.0), ((mat3(mat4x3(((((bool(bool(bool(bvec3(bool(((! (! (bool((bvec2(bvec3(bvec2(bool(((injectionSwitch.x > injectionSwitch.y))), true), false))))))))), true, false))))))) ? ((+ (mat3(mat3(((mat3(mat4(mat3((mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (((false ? (mat4(- 0.0, 5.9, - 62.00, - 0.8, - 84.33, - 608.824, - 9.1, - 533.540, 936.819, - 374.299, 7234.1143, - 201.843, 2.3, 0.9, - 3.1, 9978.9760)) : mat4(mat3(9.6, - 9.9, 187.754, 7.6, - 74.51, ((injectionSwitch.y) * (- 684.125)), 1616.1009, 7.3, 7657.1546)))))))))))))))) : mat3(1.0))))))), ivec3(1)), _GLF_struct_7(_GLF_struct_5(bvec4(true), vec3(1.0)), bvec4(true), _GLF_struct_6(((max((ivec2(1)) * ivec2(1, 1), (ivec2(1)) * ivec2(1, 1)))), (int(int(((((max((0 ^ ((1) >> 0)), (1) >> 0))) << 0))))), uvec3(1u), 1.0)), gl_WorkGroupID.x, vec4(1.0));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_8.workgroup_id;
 if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint virtual_gid = (0u | ((((clamp(((workgroup_base + subgroup_id * subgroup_size) * (0u | 1u)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * ((((subgroup_size) | (((subgroup_size) / 1u)))) / 1u)))) ^ 0u) + subgroup_local_id));
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(true)
  {
   if(((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(false)))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(((! (bool(bvec4((! (! ((((((! (false)) || false))) || false)))), true, false, true))))))
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        {
         if(((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((((bool(bvec3(true, false, true)))) && true))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     while(false);
     if(((! ((true && ((true && (! (false)))))))))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(((! (! (false)))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = ((93916 / - 48397) & 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint read_val = atomicLoad(write_val, (~ (~ (((4)) ^ 0))), ((64) | (64)), ((((0) >> 0)) / 1));
 if((((false)) || (true && (false))))
  barrier();
 if((((! (! ((false || (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if((((bool(bvec4(false, false, false, true))) || false)))
    {
    }
   else
    {
     if((((false) && true)))
      barrier();
    }
   if(((injectionSwitch.x < (max(injectionSwitch.y, injectionSwitch.y)))))
    {
     if((((((false || (true)) && ((((! (! (((! (! ((((((false || ((bool(((((bool(bvec2(false, ((injectionSwitch.x < ((false ? (injectionSwitch) : injectionSwitch)).y))))) || false)) || (bool(bool(bvec2((1.0 * ((mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y, true)))))))))) || (bool(bvec2(false, false)))) || ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))
      barrier();
     buf[virtual_gid] = uint(subgroupAllEqual(((((((false ? ((mat2x4(- 35.14, - 37.76, 6.5, 2.2, 9.4, - 8.5, 2.2, ((7.7) - 0.0)) , virtual_gid)) : ((false ? (((workgroup_base)) ^ uint((injectionSwitch.x))) : read_val) >> 0u)) * 1u)))))));
    }
   else
    {
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     barrier();
    }
  }
}
