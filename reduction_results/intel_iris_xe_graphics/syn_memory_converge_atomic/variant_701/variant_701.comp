#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((bool(((bvec2(bvec3(bvec2((bvec3(bvec3(bvec3(bvec2(false || (false), false), false))))), true)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (((mix(float(((clamp(4.0, 4.0, 4.0)))), float((vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true)))) / 1.0)))))
    barrier();
   barrier();
  }
 if((bool(bvec4((((! (! ((bool(bvec3((((false) && true)), true, true)))))) || false)), ((injectionSwitch.x > ((injectionSwitch.y) / exp(0.0)))), (bool(bvec4(true, false, true, false))), true))))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > (float(mat3(injectionSwitch.y, (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, ((1.0) - 0.0), 0.0, 1.0)))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false || (((((bool(bvec3(false, false, false)))) || false)) && true)))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if(((((((mix(float((- 7130.7258)), float((float((clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))))), bool(true))) - 0.0)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool((bvec3(bvec4(bvec3(false, true, false), false)))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((bool(bool((false))))) && true))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(float(((+ ((max(395.287, 395.287)) / 0.2)))), float(injectionSwitch.y), bool(true)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((! (! ((((((mix(vec2((- 6.0), (- 8653.7851)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)) || ((((bool(bvec2(bool(((bvec2(bvec4((bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), false, true))), false, false))))), false)))))))) || false)))))
  barrier();
 if((false))
  barrier();
 if((! (! ((((((((injectionSwitch.x) + 0.0) > injectionSwitch.y) || false))))))))
  barrier();
 if(((((((((true && (((bool(bvec2(! (! ((bool(bvec3((! (! (((false || ((false || ((bool(bvec4(false, false, true, false))) || ((mix(float(injectionSwitch.x), float((float((51626u >> 126445u)))), bool(false))) > injectionSwitch.y))))) || false)))), true, (! (! (! ((! (! ((! (true)))))))))))))), true))))))) || false)))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((! (! (true && ((bool(bvec4(false, true, true, true))))))))))
  barrier();
 uint workgroup_id = ((((injectionSwitch.x < (max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? ((true ? gl_WorkGroupID : (uvec3(119426u, (min(161613u, 161613u)), 81580u)))).x : (write_val)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 if(((((! ((false || (! (false)))))) && true)))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((false)) || (! (! (false)))))
      barrier();
     barrier();
    }
   if((true && ((((bool(bvec4((true && (bool(bvec3((((! ((false || (! (((((max((injectionSwitch.x), (injectionSwitch.x))) / 1.0) > injectionSwitch.y)))))))) || false), false, (bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), true, false, false))))))), true, false, true))))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((((min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    {
     if((false || ((false))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((false)) || false))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((bool(bool((false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((false)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((float(mat4x2((min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), length(abs(vec3(0.0, 0.0, 0.0))), (dot(vec3(0.0, (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0), vec3(0.0, log(1.0), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0)))) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = ((((~ ((0u + (~ ((uint(uvec4(max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + (uint(uint(subgroup_id * subgroup_size)))), 1u, 0u, 0u))))))))) | ((max(max(((((bool(bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))) ? (workgroup_size) : (((bool(bool(true))) ? uint(uint(workgroup_base + subgroup_id * subgroup_size)) : (subgroup_local_id)))))), (((uint(uint(workgroup_base)))) ^ 0u) + subgroup_id * subgroup_size), max(workgroup_base + subgroup_id * subgroup_size, (((max(workgroup_base, workgroup_base)) | (max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size)))))) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > (clamp((((determinant(((transpose(transpose(mat2((mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(mat2(1.0, 1.0, 0.0, 1.0)))))))))) * (float(((false ? (mat3x4(- 5.0, - 4.0, 45.77, - 8567.8131, - 59.27, 718.173, 1028.2952, 2.6, - 6.6, - 986.034, - 616.369, 330.123)) : mat3x4((injectionSwitch.y) + 0.0, 1.0, 0.0, 1.0, (injectionSwitch.x), 0.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, ((false ? (- 58.91) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, determinant(((false ? (mat3(- 7.9, 0.0, - 9.3, - 5.0, - 6.3, - 6441.8385, 35.19, 5.7, - 9.3)) : mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))))))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((! ((false || (! ((! (! ((false) || false)))))))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec4((((! (! (false)))) && true), true, false, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((true && ((((bool(bvec2((((! (! (((((max(injectionSwitch.x, injectionSwitch.x))) - sqrt(0.0)) > injectionSwitch.y))))) && true), true))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((false || ((false)))) || false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((bool(bvec4(injectionSwitch.x > (mix(float((- 0.6)), float(injectionSwitch.y), bool(true))), false, true, true)))))))
  barrier();
 atomicStore(write_val, (min(uint((1u * ((((clamp((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))) / (1u | 1u)))))), uint((((~ (~ ((((clamp((min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)), (min(virtual_gid, virtual_gid)))) / (1u | 1u))))))) ^ 0u)))), 4, 64, 0);
 uint read_val = atomicLoad((max(write_val, write_val)), (~ ((int(ivec4(~ ((clamp(4, 4, 4))), 0, 0, 1))))), 64, 0);
 ((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - ((0u) + (0u << (uint(3u)))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
}
