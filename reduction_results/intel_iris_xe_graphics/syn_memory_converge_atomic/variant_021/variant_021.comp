#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((true && ((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 if((false))
  {
   if((false))
    barrier();
   if((true && ((false))))
    {
     if((! (! ((false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((! (! (! (! ((((false || (((((((injectionSwitch.x > injectionSwitch.y) || false)))) && true)))))))))))
  barrier();
 if((((((((bool(bvec4(bool(bvec4(true, true, false, true)), false, false, true)))) && (! (((! (! (! ((! (! ((false))))))))) || false))))) || false)))
  barrier();
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((((injectionSwitch.x > (min((mix(float((mix(float((- 4.0)), float((min(((((vec2(mat3x2(mat2(1.0) * ((min(((true ? injectionSwitch : (vec2(- 7153.4870, - 17.06)))), (clamp(injectionSwitch, injectionSwitch, ((false ? (injectionSwitch) : (max(injectionSwitch, injectionSwitch))))))))), 1.0, 1.0, 0.0, 0.0))) * vec2(1.0, 1.0)))).y, (min(((true ? injectionSwitch : (vec2(- 7153.4870, - 17.06)))), (clamp(injectionSwitch, injectionSwitch, ((false ? (injectionSwitch) : (max(injectionSwitch, injectionSwitch)))))))).y))), bool(true)))), float((- 5.4)), bool((! (! ((bool(bvec3((bool(bvec4(false, true, true, true))), true, true))))))))), injectionSwitch.y))))) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((false) && true)) && true)))
    barrier();
   if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((true && (((false) && true)))))
    barrier();
   barrier();
  }
 uint num_workgroup = ((((((min((uvec3(1u, ((1u) << 0u), 1u) * (((clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (uvec3(0u, 0u, 0u))))), (((uvec3(1u, ((1u) << 0u), 1u) * (((clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) >> uvec3((min((clamp(((0u) * 1u), ((0u) * 1u), ((0u) * 1u))), ((0u) * 1u))), 0u, 0u)) + ((uvec3(0u, 0u, 0u) | (uvec3((min(uvec3((max((gl_NumWorkGroups), (gl_NumWorkGroups)))), uvec3((max((gl_NumWorkGroups), (gl_NumWorkGroups))))))))))).x;
 if(((((((((((((clamp((mix(vec2((injectionSwitch)[0], (mix(float((81.17)), float((injectionSwitch)[1]), bool(true)))), vec2((- 3.4), (58.78)), bvec2(false, false))), injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2((mix(float(1.0), float((305.466)), bool(false)))))) - vec2(0.0, 0.0))) - sqrt((((false ? (injectionSwitch) : (vec2(0.0, 0.0)) * mat2((injectionSwitch.y)))))))).x > (mix(vec2((0.0), (injectionSwitch)[1]), (vec2(mat4x3(vec2((injectionSwitch)[0], ((434.936 / - 56.72))), 0.0, 0.0, log(1.0), (dot(vec4(0.0, 1.0, 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec4(0.0, 1.0, sqrt(0.0), 0.0))), tan(0.0), exp(0.0), 1.0, 1.0, 1.0, 1.0))), bvec2(true, false))).y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((! (((injectionSwitch.x < injectionSwitch.y)) && ((! ((bool(bvec3(false, true, true))))))))))
  barrier();
 uint workgroup_size = (1u * (((((((~ (~ ((gl_WorkGroupSize.x)))) >> 0u)) - 0u))) >> 0u));
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = (min(gl_WorkGroupID, (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x;
 if((! ((! (! (! (((bool((bvec3(bvec4(bvec3((false || (false)), false, true), false)))))))))))))
  barrier();
 uint workgroup_base = (((min(workgroup_size, ((false ? (workgroup_id) : (max(workgroup_size, ((workgroup_size) | (workgroup_size)))))))) * (clamp(workgroup_id, ((workgroup_id) / uint((injectionSwitch.y))), (~ (~ (workgroup_id)))))) | (((((((0u ^ (min(0u | (uint(uint(workgroup_size * ((~ (~ ((max(((((~ (((~ (workgroup_id)) | 0u))) << 0u)) - 0u), ((~ (((~ (workgroup_id)) | 0u))) << 0u)))))))))), 0u | (uint(uint(workgroup_size * ((~ (~ (((~ (((~ (((workgroup_id) << 0u))) | 0u))) << 0u))))))))))))))) / ((1u << (uint(5u))) >> (uint(5u))))));
 if((true && ((((((false)) && true) || false)))))
  barrier();
 if(((((! (((((injectionSwitch.x < injectionSwitch.y)) && (false)) || ((false || (! (((injectionSwitch.x < injectionSwitch.y)) && ((((! (! (((((clamp((max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > (((true ? ((true ? float(mat3((mix(vec2((- 7.0), (injectionSwitch)[1]), vec2((max((((((injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))[(max((int((clamp(ivec3(0, 0, (0 & 31150)), ivec3(0, 0, (0 & 31150)), ivec3(0, 0, (0 & 31150)))))), 0))], (injectionSwitch)[0])), (((6.8)) / 1.0)), bvec2(true, false))).y, (log(1.0) + (0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : (7.3))) : (9820.7198)))))))))) && ((true && ((true) && ((injectionSwitch.x < injectionSwitch.y))))))))))))))) && true))))
  {
   if((false))
    barrier();
   if(((((min(injectionSwitch.x, (mix(float((- 765.463)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((! (! (false)))) || false) || (((false) && true)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((bool(bvec2(((true && ((((((((true && (bool((bvec3(bvec4(bvec3(((min(((false ? (injectionSwitch) : injectionSwitch)), ((false ? (injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), false, false), false))))))) && true) || false))))))) && true, ((injectionSwitch.x < injectionSwitch.y))))))) || false)))
  {
   if(((bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > (mix(vec2((158.723), (37.20)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
  }
 (((0u | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base))) >> 0u);
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((((bool(bvec2(bool(bool(((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)))), false)))) && true))) && true)))
  barrier();
 uint virtual_gid = (clamp((uint(uvec4(((((((((uvec3(0u, 0u, 0u) | (max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))) / uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))) | ((max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))).z, 0u, 1u, 0u))), ((((((((uvec3(0u, 0u, 0u) | (max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))) / uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))) | ((max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))).z, ((((((((uvec3(0u, 0u, 0u) | (max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))) / uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))) | ((max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base)))).z)) + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id) | (subgroup_local_id));
 if((false))
  barrier();
 if((((false) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = virtual_gid;
 atomicStore(write_val, (((false ? ((++ (num_workgroup))) : (uint(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y)) - 0u))), 4, 64, 0);
 if((false))
  barrier();
 if(((! ((bool((bvec2(bvec4(bvec2((true && (true && ((! (((false) || false)))))), false), false, true)))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, (~ (~ (64))), 0);
 if((false))
  barrier();
 if((bool(bvec2((false), true))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y] = uint(subgroupAllEqual(read_val));
}
