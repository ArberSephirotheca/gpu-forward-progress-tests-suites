#version 460

struct _GLF_struct_19 {
 uint _f0;
 uint _f1;
 ivec2 _f2;
 uint _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 float _f1;
 int _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 uint subgroup_local_id;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 _GLF_struct_18 _f1;
 uvec2 _f2;
 mat4 _f3;
 mat2 _f4;
 _GLF_struct_19 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 vec2 _f1;
 mat4x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 bvec4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_20 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 float _f1;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 bvec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 float _f1;
 ivec4 _f2;
 uvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 uint virtual_gid;
 uvec4 _f4;
 float _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 bool _f1;
 ivec2 _f2;
 int _f3;
 ivec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 ivec4 _f1;
 vec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 uvec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat4x3 _f1;
 ivec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 bvec3 _f1;
 bool _f2;
 mat2x4 _f3;
 mat3x4 _f4;
 bool _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 int _f1;
 bvec4 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 ivec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 ivec2 _f4;
 mat4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_12 _f2;
 mat3x4 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     return;
    }
   do
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        continue;
       if((false))
        return;
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if(true)
  {
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            return;
          }
         else
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
         do
          {
           if((false))
            break;
           if(((! (! (false)))))
            return;
           if((false))
            {
             if(true)
              {
               if((false))
                continue;
               if((false))
                return;
               do
                {
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(true)
                  {
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   continue;
                  }
                }
               while(false);
               for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    return;
                  }
                }
              }
             else
              {
              }
             if(false)
              {
              }
             else
              {
               if((false))
                return;
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    continue;
                  }
                 else
                  {
                   do
                    {
                     if(true)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             break;
                            }
                          }
                         do
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              return;
                            }
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     if((false || (false)))
                      {
                      }
                     else
                      {
                       if((false))
                        return;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   while(false);
                  }
                 if((false))
                  {
                   if((false))
                    continue;
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      return;
                    }
                   else
                    {
                    }
                   continue;
                  }
                 if((false))
                  break;
                }
               else
                {
                 if(false)
                  {
                   if((false))
                    break;
                  }
                 else
                  {
                   if((false))
                    break;
                   if(((bool(bvec4(false, true, false, true)))))
                    return;
                  }
                }
              }
            }
          }
         while(false);
         do
          {
           if((false))
            return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          break;
         if((false))
          continue;
        }
       else
        {
         if((false))
          {
           if(true)
            {
             return;
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     for(int _injected_loop_counter = ((1 & 1) ^ ((1 << (int(3))) >> (int(3)))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          continue;
        }
       else
        {
        }
      }
     if((false))
      continue;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
  }
 if((false))
  return;
 if((false))
  {
   if((true && (((injectionSwitch.x > injectionSwitch.y)))))
    {
    }
   else
    {
     if((false))
      return;
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((injectionSwitch.x > injectionSwitch.y))) || false))
    {
    }
   else
    {
     if((false))
      return;
    }
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        return;
      }
     else
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(true)
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               return;
              }
            }
           else
            {
            }
          }
         while(false);
        }
       else
        {
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    {
     do
      {
       return;
       if((false))
        break;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if(true)
        {
         return;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         if((false))
          break;
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           if((false))
            continue;
           do
            {
             return;
            }
           while(false);
          }
        }
       while(false);
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(false);
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((! (! (false))))
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 do
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(false);
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    return;
                   break;
                   if((false))
                    continue;
                  }
                }
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  break;
                 return;
                }
               else
                {
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if((false))
                continue;
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         return;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     return;
     if((false))
      return;
    }
  }
 uvec3 GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  return;
 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
  {
   do
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((true && (false)))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((false) && true)))
              continue;
             if(false)
              {
               if((false))
                return;
              }
             else
              {
               if(true)
                {
                 if((false))
                  break;
                 if(false)
                  {
                   if((false))
                    return;
                  }
                 else
                  {
                   do
                    {
                     return;
                     if((false))
                      break;
                     if((false))
                      break;
                    }
                   while(false);
                  }
                }
               else
                {
                }
              }
             if((false))
              return;
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(false);
  }
 if(true)
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(((! (! (false)))))
      return;
     if((false))
      {
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           do
            {
             return;
            }
           while(false);
           if((false))
            return;
          }
        }
       do
        {
         if(true)
          {
           do
            {
             do
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(3))) >> (((int(3)) + 0))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             while(false);
            }
           while(false);
           if((false))
            return;
          }
         else
          {
           if((false))
            {
             if((false))
              continue;
             for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(2))); _injected_loop_counter --)
              {
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if((false))
          break;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
  }
 else
  {
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_17(_GLF_struct_14(uvec2(1u)), bvec4(true), _GLF_struct_15(mat4x3(1.0)), _GLF_struct_16(true, vec2(1.0), mat4x3(1.0), bvec2(true))), _GLF_struct_20(uvec4(1u), _GLF_struct_18(vec2(1.0), 1.0, 1, mat2x3(1.0), mat3x4(1.0), gl_SubgroupInvocationID), uvec2(1u), mat4(1.0), mat2(1.0), _GLF_struct_19(1u, 1u, ivec2(1), 1u, bvec4(true), vec3(1.0)), mat3x2(1.0)), mat2x3(1.0));
 if(false)
  {
  }
 else
  {
   if(((! (! (false)))))
    {
     if((false))
      return;
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (((int(1)) | 0))) >> (int(1))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         if((false))
          break;
         break;
        }
      }
    }
   if((false))
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       do
        {
         return;
        }
       while(false);
      }
    }
  }
 for(int _injected_loop_counter = (((1 & 1) << (((int(4)) + 0))) >> (int(4))); _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
  {
   do
    {
     if((false))
      {
       if((false))
        continue;
       return;
      }
    }
   while(false);
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 if((false))
  {
   do
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   while(false);
  }
 for(int _injected_loop_counter = (0 << ((0 ^ (int(4))))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if(false)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1 << ((int(ivec3(int(4), 0, 1))))) >> (((int(4)) ^ 0))) << (int(4))) >> (int(4))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(true)
        {
         do
          {
           if((false))
            {
             if(true)
              {
               if((false))
                {
                 if((false))
                  {
                   if((false))
                    continue;
                   return;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(true)
                  {
                   if((false))
                    break;
                   do
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(true)
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     while(false);
                     return;
                    }
                   while(false);
                  }
                 else
                  {
                   if((false))
                    break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((false))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     continue;
                    }
                   return;
                  }
                }
              }
             else
              {
              }
             return;
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
         while(false);
        }
       else
        {
        }
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if((false))
      return;
     if(false)
      {
       if((false))
        return;
      }
     else
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          return;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             do
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  break;
                 if((false))
                  continue;
                 if((false))
                  continue;
                 if((false))
                  return;
                 if(true)
                  {
                   GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.x = num_workgroup;
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  return;
                }
               while(false);
              }
             while(false);
             do
              {
               if((false))
                {
                 if((false))
                  return;
                 return;
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
        }
       else
        {
        }
       if(true)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((! (! (false)))))
          break;
        }
       else
        {
        }
       if((false))
        continue;
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           return;
          }
         while(false);
        }
      }
    }
  }
 for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((false))
    continue;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        return;
      }
     else
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ (1 & 1)); _injected_loop_counter ++)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((false))
                return;
               if((false))
                return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              continue;
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                break;
               if((false))
                {
                 for(int _injected_loop_counter = ((((0 << (int(7))) | 0)) * 1); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   do
                    {
                     if((false))
                      continue;
                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > (- 24517 & 0); _injected_loop_counter --)
                  {
                   if((false))
                    break;
                   if((false))
                    continue;
                   if((false))
                    {
                     if((false))
                      {
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     continue;
                     if((false))
                      {
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if(((bool((bvec3(bvec3(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), false))))))))
                        return;
                      }
                     else
                      {
                      }
                     if((false))
                      continue;
                    }
                   if(true)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(((true) && true))
                          {
                           return;
                          }
                         else
                          {
                          }
                         if((false))
                          return;
                        }
                       break;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if((false))
                        continue;
                      }
                     for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if((false))
                        continue;
                       if((false))
                        continue;
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if((false))
                        {
                         if((false))
                          break;
                         break;
                         if((false))
                          break;
                        }
                       if((false))
                        {
                         if((false))
                          {
                           if((false))
                            return;
                           break;
                          }
                         break;
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       do
                        {
                         for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != ((0 >> (int(4))) | (0 & - 3987)); _injected_loop_counter --)
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             return;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          return;
                         if((false))
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
                            {
                             do
                              {
                               return;
                              }
                             while(false);
                            }
                           if((false))
                            break;
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                             if((false))
                              continue;
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             return;
                            }
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if((false))
                        continue;
                       if((false))
                        {
                         if((false))
                          continue;
                         if((false))
                          break;
                         continue;
                        }
                      }
                     if((false))
                      break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                        }
                       while(false);
                      }
                    }
                   else
                    {
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  continue;
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
              }
             if((false))
              return;
             if((false))
              continue;
            }
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if(true)
      {
       if(true)
        {
         do
          {
           if((false))
            break;
           if(false)
            {
             if((((false) && true)))
              {
               if((false))
                break;
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
             do
              {
               if((false))
                return;
              }
             while(false);
             if((false))
              return;
            }
          }
         while(false);
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
      }
    }
   if((false))
    break;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(false)
    {
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if((false))
    {
     do
      {
       if((false))
        continue;
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       if(false)
        {
        }
       else
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           return;
          }
         else
          {
          }
        }
       if((false))
        return;
      }
     while(false);
    }
  }
 while(false);
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
  }
 if(true)
  {
   if(true)
    {
     do
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   do
    {
     if((false))
      break;
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
    }
   if((false))
    return;
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(true)
          {
           do
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  break;
                 do
                  {
                   return;
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            {
             do
              {
               return;
              }
             while(false);
            }
           do
            {
             if((false))
              return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                return;
               return;
               if((false))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   do
                    {
                     return;
                    }
                   while(false);
                   if((false))
                    break;
                  }
                }
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < ((((1) | (1))) / 1); _injected_loop_counter ++)
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((((false) || false)))
                          {
                           if((false))
                            return;
                           return;
                          }
                         if((false))
                          return;
                         do
                          {
                           if((false))
                            return;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          continue;
                         return;
                        }
                      }
                    }
                  }
                 else
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                  }
                 if(((false) && true))
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       do
                        {
                         if((false))
                          return;
                         return;
                        }
                       while(false);
                      }
                     else
                      {
                      }
                    }
                  }
                 do
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 & - 58675) << ((0 | (int(6))))); _injected_loop_counter --)
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = (23960 & (0 & - 37901)); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           return;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              {
                               if((false))
                                break;
                               for(int _injected_loop_counter = (1 | ((1 << (int(2))) >> (int(2)))); _injected_loop_counter != (((clamp(0, 0, 0))) << 0); _injected_loop_counter --)
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   do
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if(((! (! (false)))))
                                        {
                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                          {
                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                            {
                                            }
                                           else
                                            {
                                             return;
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     if((false))
                                      return;
                                    }
                                   while(false);
                                  }
                                 else
                                  {
                                  }
                                }
                               if((false))
                                continue;
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     for(int _injected_loop_counter = ((1) ^ 0); _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                        {
                                         return;
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               break;
                              }
                             continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             do
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                              }
                             while(false);
                            }
                           if((false))
                            {
                             if((false))
                              break;
                             break;
                            }
                           if((false))
                            {
                             if((false))
                              break;
                             if((false))
                              {
                               if((false))
                                {
                                 if((false))
                                  break;
                                 continue;
                                }
                               if((false))
                                return;
                               return;
                              }
                             if((false))
                              {
                               if((false || (true)))
                                {
                                 if((false))
                                  continue;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 return;
                                }
                               else
                                {
                                 if((false))
                                  break;
                                }
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 return;
                                }
                              }
                             continue;
                             do
                              {
                               if(((false || (false))))
                                return;
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           if((false))
                            break;
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     while(false);
                    }
                   if((false))
                    continue;
                  }
                 while(false);
                }
              }
             while(false);
             if(true)
              {
               for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      break;
                     continue;
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           do
                            {
                             return;
                             if((false))
                              {
                               if((false))
                                break;
                               if((false))
                                break;
                               continue;
                              }
                             if((false))
                              continue;
                            }
                           while(false);
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
              }
             else
              {
               if((false))
                return;
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  return;
                }
              }
            }
           else
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if(false)
                {
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if(false)
                      {
                       if((false))
                        return;
                      }
                     else
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != ((int((injectionSwitch.y)) << (int(4))) >> (int(4))); _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         do
                          {
                           if(true)
                            {
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               return;
                               if((false))
                                return;
                              }
                             while(false);
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((false || (((injectionSwitch.x > injectionSwitch.y)))))
                                {
                                }
                               else
                                {
                                 if((false))
                                  return;
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         while(false);
                        }
                       do
                        {
                         if(true)
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             return;
                            }
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                        }
                       while((bool(bvec2(((((injectionSwitch.x > injectionSwitch.y))) && true), true))));
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   do
                    {
                     return;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 if((false))
                  return;
                 return;
                }
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             else
              {
              }
            }
           if(true)
            {
             if((false))
              {
               if((false))
                {
                 do
                  {
                   return;
                  }
                 while(((false) && ((injectionSwitch.x < injectionSwitch.y))));
                }
               if(true)
                {
                 if((false))
                  return;
                 return;
                 if((false))
                  return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    {
     for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter != (clamp(1, 1, 1)); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(false);
      }
    }
  }
 else
  {
  }
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if(true)
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     return;
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   do
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((true) || false))
            {
             if(true)
              {
               if((false))
                continue;
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if((false))
                        return;
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false || (true)))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(8))); _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    continue;
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = (int((min(int(1), int(1))))); _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if((false))
                                            continue;
                                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                            {
                                             return;
                                            }
                                          }
                                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                          {
                                           if((false))
                                            return;
                                          }
                                         if((false))
                                          continue;
                                         if((false))
                                          return;
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if(true)
                                              {
                                               return;
                                              }
                                             else
                                              {
                                              }
                                             if((false))
                                              return;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                             while(false);
                            }
                          }
                         else
                          {
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                      }
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     else
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
                        {
                         if((false))
                          return;
                         if(false)
                          {
                           if((((false) && true)))
                            continue;
                          }
                         else
                          {
                           return;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               return;
                              }
                             while(false);
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                        }
                      }
                     if(true)
                      {
                       if((false))
                        return;
                       if((false))
                        {
                         do
                          {
                           return;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         while(false);
                        }
                      }
                     else
                      {
                       if((false))
                        return;
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if((false))
              return;
             if((false))
              {
               do
                {
                 return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           else
            {
            }
           return;
          }
         if((false))
          {
           if((false))
            {
             if(true)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             else
              {
              }
            }
           break;
          }
         if((false))
          return;
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((false))
              return;
             if((false))
              {
               if((false))
                break;
               return;
              }
            }
          }
         while(false);
         if((false))
          return;
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             return;
            }
          }
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if(((bool(bool(false)))))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(false);
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     do
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     while(false);
                    }
                  }
                }
               else
                {
                }
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            break;
          }
         do
          {
           if((false))
            continue;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              {
               if((((false) && true)))
                continue;
               continue;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             if((false))
              {
               if(false)
                {
                 if((false))
                  continue;
                }
               else
                {
                 if((false))
                  break;
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(true)
                    {
                     return;
                     if(false)
                      {
                       if((false))
                        {
                         if((false))
                          return;
                         break;
                        }
                      }
                     else
                      {
                       if((false))
                        {
                         if(true)
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   if(((! (! (false)))))
                    continue;
                  }
                 if((false))
                  break;
                }
              }
            }
           if((false))
            continue;
          }
         while(false);
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(false);
  }
 else
  {
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
  }
 else
  {
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       if((false))
        return;
      }
    }
  }
 else
  {
  }
 do
  {
   if((false))
    continue;
   if((false))
    return;
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(((((bool(bool(false)))) || false)))
        {
         if((false))
          continue;
         if((false))
          break;
         break;
        }
       if((false))
        return;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       return;
      }
    }
   while(false);
  }
 while(false);
 if(((bool(bvec4((true && (false)), true, false, false)))))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
    }
   if(true)
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(true)
        {
         if((false))
          {
           if((bool(bvec3(false, true, false))))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             return;
            }
          }
        }
       else
        {
        }
       do
        {
         for(int _injected_loop_counter = (0 << (((int(6)) << 0))); _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
          {
           do
            {
             if((false))
              break;
             if(true)
              {
               do
                {
                 if(((true && (false))))
                  return;
                 if((false))
                  break;
                 if(false)
                  {
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 & - 83396); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                      {
                       if((false))
                        return;
                       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                        {
                         do
                          {
                           do
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               do
                                {
                                 if((false))
                                  break;
                                 if(true)
                                  {
                                   if((false))
                                    break;
                                   for(int _injected_loop_counter = (0 >> ((int((injectionSwitch.y)) * (int(2))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                      {
                                       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                                        break;
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            break;
                                           for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                            {
                                             if((false))
                                              return;
                                            }
                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                            {
                                            }
                                           else
                                            {
                                             if((false))
                                              return;
                                             if((false))
                                              continue;
                                             if((false))
                                              break;
                                             do
                                              {
                                               if((false))
                                                return;
                                               if(true)
                                                {
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  break;
                                                 if((false))
                                                  return;
                                                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                                  {
                                                   if(false)
                                                    {
                                                    }
                                                   else
                                                    {
                                                     return;
                                                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        return;
                                                       for(int _injected_loop_counter = (3624 & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                        {
                                                         if((false))
                                                          {
                                                           if((false))
                                                            break;
                                                           if((bool(bool(true))))
                                                            {
                                                             return;
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                 if((false))
                                                  break;
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   if((false))
                                                    return;
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    continue;
                                                   continue;
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                            }
                                           if((false))
                                            break;
                                          }
                                         if((false))
                                          break;
                                         if((false))
                                          break;
                                        }
                                      }
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                       break;
                                       if((false))
                                        break;
                                      }
                                     return;
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               while(false);
                              }
                             if((false))
                              continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if((false))
                              break;
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         while(false);
                        }
                      }
                    }
                  }
                 if(((! (! ((true && (false)))))))
                  {
                   do
                    {
                     do
                      {
                       do
                        {
                         if((false))
                          continue;
                         do
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((((false) || false)))
                              {
                               if(true)
                                {
                                 if((false))
                                  continue;
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if(true)
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    continue;
                                   if((false))
                                    continue;
                                   break;
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           if((false))
                            break;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              {
                               if(true)
                                {
                                 if((false))
                                  return;
                                }
                               else
                                {
                                }
                               continue;
                              }
                             if((false))
                              continue;
                             if(true)
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 if(((false) || false))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    return;
                                   continue;
                                  }
                                }
                              }
                             else
                              {
                               if(((bool(bvec2(false, true)))))
                                continue;
                              }
                            }
                          }
                         while(false);
                        }
                       while(false);
                      }
                     while(false);
                    }
                   while((false || (false)));
                   do
                    {
                     if((false))
                      continue;
                     if((false))
                      break;
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                          }
                         if((((false) && true)))
                          return;
                         break;
                        }
                      }
                    }
                   while(false);
                   continue;
                  }
                }
               while(false);
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if((false))
              break;
            }
           while(false);
          }
        }
       while(false);
      }
     else
      {
      }
    }
   else
    {
     if((false))
      return;
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
      {
       if(true)
        {
         return;
        }
       else
        {
         if((false))
          return;
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << ((0 ^ (int(7))))) >> (((int(7)) >> 0))); _injected_loop_counter ++)
        {
         if((false))
          continue;
         return;
        }
      }
     else
      {
      }
    }
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_4(_GLF_struct_0(mat2x3(1.0), 1, bvec4(true), mat3x4(1.0), uvec4(1u), ivec4(1), vec3(1.0)), uvec3(1u), _GLF_struct_1(mat4(1.0), bvec3(true), true, mat2x4(1.0), mat3x4(1.0), true, mat4x3(1.0)), _GLF_struct_2(vec4(1.0), mat4x3(1.0), ivec2(1), mat4x2(1.0)), ivec2(1), mat4(1.0), _GLF_struct_3(bvec3(true), uvec4(1u), mat3x4(1.0))), _GLF_struct_7(_GLF_struct_5(bvec2(true), ivec4(1), vec4(1.0), mat2x4(1.0)), _GLF_struct_6(mat2x4(1.0), true, ivec2(1), 1, ivec4(1), vec2(1.0))), _GLF_struct_12(mat2x3(1.0), _GLF_struct_8(ivec3(1), 1.0, ivec4(1), uvec2(1u), ivec4(1)), _GLF_struct_9(mat2x4(1.0), true), _GLF_struct_10(mat3x2(1.0), bvec4(true), ivec3(1)), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_21._f1._f1.subgroup_local_id, uvec4(1u), 1.0, _GLF_struct_11(vec3(1.0), 1.0)), mat3x4(1.0));
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   do
    {
     GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.z = _GLF_struct_replacement_13._f2.virtual_gid;
    }
   while(false);
  }
 if((false))
  {
   do
    {
     for(int _injected_loop_counter = ((0) ^ 0); _injected_loop_counter < ((1 << ((~ (~ (int(1)))))) >> ((clamp(int(1), int(1), int(1))))); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(false);
       if((((((false) || false)) && true)))
        {
         do
          {
           return;
          }
         while(false);
        }
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       if((false))
        return;
      }
    }
   while(false);
  }
 if((false))
  {
   do
    {
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if(true)
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     do
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != (0 ^ (1 & 1)); _injected_loop_counter ++)
            {
             if(false)
              {
              }
             else
              {
               return;
              }
            }
          }
        }
      }
     while(false);
     if((false))
      return;
    }
   return;
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if(false)
    {
     if((false))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      continue;
    }
   else
    {
     if(false)
      {
       if((false))
        return;
      }
     else
      {
       atomicStore(write_val, uint(GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.z), 4, 64, 0);
      }
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(true)
  {
   GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.y = read_val;
  }
 else
  {
  }
 if((false))
  return;
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     do
      {
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     while(false);
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if(true)
      {
       if((false))
        continue;
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(true)
              {
               if((false))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    {
                     if((false))
                      break;
                     return;
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((false))
                  {
                   if((false))
                    return;
                   break;
                  }
                 return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      return;
                    }
                  }
                }
               else
                {
                }
               if((false))
                break;
               do
                {
                 if((false))
                  continue;
                 if((false))
                  return;
                }
               while(false);
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      {
                                       if((false))
                                        return;
                                       break;
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                     continue;
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      break;
                                     break;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                    }
                                   if((false))
                                    return;
                                   if((false))
                                    break;
                                   if(((true) && ((injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if((false))
                                      continue;
                                     for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != (0 >> (int(3))); _injected_loop_counter --)
                                      {
                                       do
                                        {
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           if((true && (false)))
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              break;
                                             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   do
                                                    {
                                                     return;
                                                     if((false))
                                                      return;
                                                    }
                                                   while(((injectionSwitch.x > injectionSwitch.y)));
                                                   if((false))
                                                    return;
                                                  }
                                                }
                                              }
                                            }
                                           else
                                            {
                                             if((false))
                                              continue;
                                             if((false))
                                              continue;
                                             do
                                              {
                                               return;
                                               if(true)
                                                {
                                                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                                  {
                                                   for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
                                                    {
                                                     if((false))
                                                      continue;
                                                     do
                                                      {
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        {
                                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if((false))
                                                            return;
                                                          }
                                                         break;
                                                        }
                                                       if((false))
                                                        break;
                                                       if((false))
                                                        {
                                                         if(false)
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(false)
                                                            {
                                                            }
                                                           else
                                                            {
                                                             return;
                                                            }
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            break;
                                                          }
                                                        }
                                                       if(false)
                                                        {
                                                        }
                                                       else
                                                        {
                                                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                                          {
                                                           if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                                                            {
                                                             do
                                                              {
                                                               return;
                                                              }
                                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                                            }
                                                          }
                                                         do
                                                          {
                                                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                            {
                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                              return;
                                                             if((false))
                                                              continue;
                                                             if((false))
                                                              {
                                                               if((false))
                                                                return;
                                                               return;
                                                               if(((true && (false))))
                                                                continue;
                                                              }
                                                            }
                                                          }
                                                         while(false);
                                                         if((((false) || false)))
                                                          continue;
                                                         if((false))
                                                          break;
                                                         do
                                                          {
                                                           if((false))
                                                            continue;
                                                           if((false))
                                                            break;
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            return;
                                                          }
                                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                                        }
                                                      }
                                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                break;
                                               do
                                                {
                                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                                  {
                                                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                                    {
                                                     if((false))
                                                      {
                                                       if(false)
                                                        {
                                                        }
                                                       else
                                                        {
                                                         return;
                                                         if((false))
                                                          return;
                                                        }
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               while(false);
                                              }
                                             while(false);
                                            }
                                           if((false))
                                            return;
                                          }
                                        }
                                       while(false);
                                      }
                                    }
                                   else
                                    {
                                     if((((false) || false)))
                                      break;
                                    }
                                   if((false))
                                    return;
                                   if((false))
                                    continue;
                                  }
                                }
                               if((false))
                                {
                                 if((false))
                                  return;
                                 continue;
                                }
                              }
                            }
                          }
                        }
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if((false))
                            continue;
                           return;
                          }
                        }
                      }
                     while(false);
                    }
                   if((false))
                    {
                     if(true)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         do
                          {
                           return;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       if((false))
                        return;
                      }
                     else
                      {
                       if((false))
                        break;
                      }
                    }
                  }
                 if((false))
                  return;
                }
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
              }
            }
           else
            {
             for(int _injected_loop_counter = ((1 << ((~ ((~ (~ (~ (int(7))))))))) >> (int(7))); _injected_loop_counter != (0 << (int(2))); _injected_loop_counter --)
              {
               if(true)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if((false))
                    return;
                  }
                 do
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                 while(false);
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               continue;
              }
            }
          }
        }
       if((false))
        continue;
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              return;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if((false))
      break;
    }
  }
 while(false);
 if(((bool(bool(false)))))
  {
   do
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   while(false);
  }
 if(false)
  {
  }
 else
  {
   if(false)
    {
    }
   else
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(false);
     if((((false) || false)))
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(8))); _injected_loop_counter --)
            {
             return;
             if((false))
              continue;
            }
          }
        }
       return;
       if((false))
        return;
       if(true)
        {
         if((false))
          return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          break;
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(true)
            {
             return;
            }
           else
            {
             do
              {
               if((false))
                return;
              }
             while(false);
            }
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             do
              {
               if((false))
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     return;
                    }
                   while(false);
                  }
                 if((false))
                  continue;
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    break;
                   do
                    {
                     if((false))
                      return;
                     if(true)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         do
                          {
                           if((bool(bool(false))))
                            {
                            }
                           else
                            {
                             if(true)
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                {
                                 if((false))
                                  return;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   if(true)
                                    {
                                     return;
                                    }
                                   else
                                    {
                                     if((false))
                                      continue;
                                    }
                                   if((false))
                                    return;
                                  }
                                 if((false))
                                  break;
                                }
                              }
                             else
                              {
                              }
                            }
                           if((false))
                            continue;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      continue;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    {
                     if((false))
                      break;
                     continue;
                    }
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                  {
                   do
                    {
                     if((false))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           return;
                          }
                        }
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                          }
                         if((false))
                          return;
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                          }
                         if((false))
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((false))
                              continue;
                             return;
                            }
                          }
                         if((false))
                          return;
                        }
                       else
                        {
                        }
                       if((false))
                        return;
                      }
                     while(((false) && true));
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                }
               if(false)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     continue;
                    }
                   break;
                   if((false))
                    continue;
                  }
                 if((false))
                  {
                   if(true)
                    {
                     do
                      {
                       if(((bool(bool(bool(bvec3(false, true, false)))))))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                     while(false);
                    }
                   else
                    {
                    }
                   if((false))
                    break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                 while(false);
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     if(true)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if(((bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), true)))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           continue;
                          }
                        }
                       else
                        {
                         do
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                            {
                             if(true)
                              {
                               if((false))
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    continue;
                                   return;
                                  }
                                }
                               if(true)
                                {
                                 if(true)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   if(true)
                                    {
                                     do
                                      {
                                       if(true)
                                        {
                                         if((false))
                                          break;
                                         for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            break;
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if((false))
                                              return;
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                   else
                                    {
                                     if((false))
                                      return;
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    return;
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                               if(false)
                                {
                                }
                               else
                                {
                                 buf[GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.z] = uint(subgroupAllEqual(GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valvirtual_gid.y));
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if((false))
                                continue;
                              }
                             else
                              {
                              }
                            }
                           if(((false || (false))))
                            break;
                          }
                         while(false);
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if((false))
                          break;
                         if(((bool(bvec3(false, false, false)))))
                          continue;
                         continue;
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          return;
                         break;
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           do
                            {
                             do
                              {
                               return;
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           while(false);
                          }
                        }
                       if((false))
                        break;
                      }
                     if((false))
                      {
                       if((false))
                        break;
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 else
                  {
                  }
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  break;
                 if((false))
                  return;
                 if(((! (! (false)))))
                  continue;
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if(false)
              {
              }
             else
              {
               if((false))
                return;
               if((false))
                return;
              }
             if((false))
              break;
            }
           if((false))
            continue;
          }
         else
          {
          }
        }
       else
        {
         if((false))
          {
           do
            {
             if((false))
              break;
             if((false))
              break;
             return;
            }
           while(false);
           if((false))
            continue;
          }
        }
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     if((false))
      return;
     do
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     while(false);
    }
  }
 if((false))
  {
   if((false))
    return;
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((false || ((bool(bool(false)))))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       if(true)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              return;
             if(false)
              {
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
               if((false))
                return;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if((false))
                return;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             return;
            }
          }
        }
       else
        {
        }
      }
     if((false))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(6))); _injected_loop_counter --)
        {
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
      }
    }
  }
 if(true)
  {
   for(int _injected_loop_counter = ((0 & 54926) << ((int(ivec2(int(8), 0))))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
         if((false))
          break;
        }
       while(false);
      }
    }
  }
 else
  {
  }
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      break;
     do
      {
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           if((false))
            return;
           return;
           if((false))
            return;
           if((false))
            continue;
          }
        }
       if((false))
        continue;
       if((false))
        break;
       if(((! ((bool(bvec3(! (false), false, true)))))))
        break;
       if(((true) && true))
        {
         if((false))
          break;
         if(true)
          {
           if((false))
            continue;
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((false))
                  continue;
                 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   do
                    {
                     for(int _injected_loop_counter = ((0 << (int(0))) << (int(6))); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         do
                          {
                           return;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                      }
                     if((false))
                      {
                       if((false))
                        continue;
                       do
                        {
                         return;
                        }
                       while(false);
                       if((false))
                        break;
                      }
                    }
                   while(false);
                  }
                 if((false))
                  return;
                }
               if(true)
                {
                 for(int _injected_loop_counter = (0 >> (((true ? int(8) : (90209))))); _injected_loop_counter < ((((1 | 1) & 1) << (int(5))) >> (int(5))); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if((false))
                      return;
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        break;
                       return;
                       if((false))
                        return;
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             return;
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if((false))
                        {
                         if((false))
                          break;
                         continue;
                        }
                      }
                     if((false))
                      continue;
                    }
                  }
                }
               else
                {
                }
               if((((false) && true)))
                continue;
              }
            }
           while(false);
          }
         else
          {
           if((false))
            break;
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(false)
              {
               if((false))
                continue;
              }
             else
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((((false) && true)))
                  {
                   for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != (0 >> ((max(int(3), int(3))))); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               else
                {
                }
              }
            }
           return;
           if(((! (! (false)))))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         if((false))
          {
           if(true)
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     while(false);
     if((false))
      return;
    }
  }
 if((true && (true)))
  {
   if((false))
    {
     do
      {
       return;
       if((false))
        continue;
      }
     while(false);
    }
  }
 else
  {
  }
 if((false))
  {
   do
    {
     return;
    }
   while(false);
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
}
