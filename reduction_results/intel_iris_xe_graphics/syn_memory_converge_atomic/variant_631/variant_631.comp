#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((! (! ((((false)) && true)))))
  return;
 if((false))
  {
   if(((bool(((((((true && ((bool(false)) && true)) || false)) && true)))))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
     return;
    }
   return;
   if((((false) || false)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((((mix(float(injectionSwitch.x), float((421.780)), bool(false))) > ((injectionSwitch) * mat2(1.0)).y))))
  return;
 if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(((((bool(bvec3((((((! (! ((max(injectionSwitch.x, (mix((max(float((((clamp(float((transpose(((false ? (mat4(mat3(81.95, - 69.62, 0.9, - 46.16, 679.832, 4947.7001, 6.1, 977.370, - 527.402))) : transpose((transpose(transpose(mat4(((- 0.2) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)))))))))), float((transpose(transpose(mat4(((- 0.2) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, (max(((1.0) - 0.0), 1.0)), 0.0, determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0))))), (min(((float((((transpose(transpose(mat4(((- 0.2) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float((((transpose(transpose(mat4(((- 0.2) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), float((- 0.2)))), (min(float(((injectionSwitch.x) - 0.0)), float(((injectionSwitch.x) - 0.0)))), bool(true))))) > (mix(float(((((true ? injectionSwitch.y : (3452.7583)))) - 0.0)), float((- 4228.5238)), bool(false))))))) && true))), ((injectionSwitch.x < injectionSwitch.y)), true))) || false))))
  {
   if((false))
    return;
   if((false || ((! (! ((false)))))))
    {
     if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
      return;
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, ((injectionSwitch.x > injectionSwitch.y))))))) && true))
      return;
     if((true && ((false))))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
    }
   barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((! ((true && (((! ((((((bool(bvec4((false), (! ((true && (! (((true) && true)))))), true, ((injectionSwitch.x < injectionSwitch.y))))))) || false)) || false)) || ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((true && (((bool(bvec4(((((true && ((false || (false)))) || (false)) || false)), true, (((((max((min(injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false)))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((true && (((((true)) || false)))) && true) && true) && ((! (! ((false || ((true && (true && (((! (! (false))))))))))))))))
  {
   if((false))
    return;
   barrier();
  }
 uint workgroup_base = (min((~ (~ (workgroup_size * ((workgroup_id) ^ 0u)))), ((workgroup_size * workgroup_id) << 0u)));
 if((false))
  return;
 if((((true && ((bool(bvec3((false), true, true)))))) && true))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 uint virtual_gid = ((workgroup_base + subgroup_id * ((((false ? (subgroup_local_id) : subgroup_size) - (0u << (uint(4u)))))) + subgroup_local_id) << 0u);
 atomicStore(write_val, ((uint(((virtual_gid) | (virtual_gid)))) * uint((injectionSwitch.y))), 4, 64, 0);
 if(((bool(bool(false)))))
  return;
 if((false))
  return;
 uint read_val = atomicLoad(write_val, 4, (((((1 << (int(4))) >> (int(4))) << (((int(2)) ^ 0))) >> (int(2))) * (64)), ((0) | (0)));
 buf[virtual_gid] = ((1u * (((((((((((((clamp(injectionSwitch.x, (((float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (float((mat4x3(mat4(mat4x3(sqrt(0.0), cos(0.0), 0.0, 0.0, (injectionSwitch.x), round(length(normalize((mix(vec3((875.706), (- 6763.0564), (vec3(1.0, 1.0, 1.0))[2]), vec3((((vec3(1.0, 1.0, 1.0))[0]) / 1.0), (vec3(1.0, 1.0, 1.0))[1], (- 1.2)), bvec3(true, true, false)))))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, tan(0.0), 0.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, abs(1.0), 0.0, 1.0)))))))))), ((clamp(clamp((mix(float((5.9)), float((((((max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch.x : (2606.0355)))), bool(true))), injectionSwitch.x, injectionSwitch.x), clamp((min(injectionSwitch, ((true ? injectionSwitch : (injectionSwitch))))).x, injectionSwitch.x, injectionSwitch.x), clamp((mix(vec2((injectionSwitch)[0], (max((injectionSwitch), (injectionSwitch)))[1]), (min(vec2((55.46), (3.9)), vec2((55.46), (3.9)))), bvec2(false, false))).x, injectionSwitch.x, (vec2(1.0, 1.0) * (injectionSwitch)).x)))))) > injectionSwitch.y) && true))) ? (subgroup_local_id) : uint(subgroupAllEqual(read_val)))) | (uint(uvec2(0u, (min(uint((((injectionSwitch.x)) / 1.0)), uint((((injectionSwitch.x)) / 1.0))))))))) + 0u) ^ 0u)))));
 if((false))
  {
   if((((false)) || (! (bool(bvec4(((true && (! ((! (! ((bool(bvec2(! ((! (false))), true)))))))))), false, true, true))))))
    {
     if((false))
      return;
     return;
    }
   if((((! ((bool((! (! (bool(! (((injectionSwitch.x > injectionSwitch.y)) || (((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))))))
    barrier();
   if((false))
    return;
   return;
   if((bool(bvec4((((injectionSwitch.x < injectionSwitch.y)) && (((! (! (false)))))), false, true, true))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((bool((bvec2(bvec2(bvec2((! ((false || ((bool(bool(bool(bvec4((! ((((! ((bool((bool(bvec4(bool(! ((! (! ((((float((mat4(1.0) * (mat2x4((clamp(injectionSwitch.x, injectionSwitch.x, (vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0.0, 0.0, (clamp((mix(float(0.0), float((- 9.3)), bool(false))), (mix(float(0.0), float((- 9.3)), bool(false))), (mix(float(0.0), float((- 9.3)), bool(false))))), 0.0, 1.0, sin(0.0), 0.0))))) > injectionSwitch.y))))))), true, true, false)))))))) && true))), false, true, true))))))))), (bool(bvec2(false, true)))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((((! ((! (! (! (((((false || (((false) || false))))) || false)))))))) || false))
    return;
   barrier();
   if((false))
    return;
   if((((false)) && true))
    return;
  }
}
