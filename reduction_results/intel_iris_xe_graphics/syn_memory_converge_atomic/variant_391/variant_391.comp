#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((((false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((! ((bool(bvec4(! (false), false, false, false)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((((bool(bool((bool(bvec2(false, true)))))))) && true))
  {
   if((((injectionSwitch.x > ((injectionSwitch) + log(vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((gl_NumWorkGroups.x) << 0u);
 uint workgroup_size = (~ (~ ((min(gl_WorkGroupSize.x, ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))));
 uint workgroup_id = ((gl_WorkGroupID) | (gl_WorkGroupID)).x;
 uint workgroup_base = ((workgroup_size) | 0u) * workgroup_id;
 uint virtual_gid = workgroup_base + ((((((true ? (((((((max(subgroup_id * (clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * subgroup_size)))) >> (max(0u, 0u))) + ((clamp(0u >> (((((uint(8u)) | 0u))) ^ 0u), 0u >> (((uint(8u)) | 0u)), 0u >> (((uint(8u)) | 0u)))))) | (((clamp(((0u | (uint(uvec2(clamp(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (0u ^ ((min(subgroup_id, subgroup_id)))))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), (clamp((min(((clamp((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size)), (max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size)), (max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))))) + (0u >> (((uint((clamp(8u, 8u, 8u)))) | 0u))), ((max((~ (~ ((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size))), subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, ((subgroup_id * subgroup_size) | ((uint(uvec2(subgroup_id * subgroup_size, 1u)))))))) + (0u >> (((uint(8u)) | 0u))), (clamp((uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u))), (uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u))), (uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u)))))))), 1u))))), clamp(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((~ (~ ((clamp(clamp((min(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), (uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u)))), clamp((min(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), (uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u)))), clamp((min(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), (uint(uvec4(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u))))))))))), clamp(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(((((((false ? (workgroup_id) : 8u))) | (8u))) - 0u))) | 0u))), (clamp((min(((max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), ((((max(((false ? (subgroup_local_id) : (((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size) << 0u))), ((((subgroup_id * subgroup_size) << 0u)) | 0u))))) >> 0u) + (0u >> (((uint(8u)) | 0u))))), ((max((max(subgroup_id, (0u ^ ((min(subgroup_id, subgroup_id)))))) * subgroup_size, subgroup_id * subgroup_size))) + (0u >> (((uint(8u)) | 0u))), (uint((uvec4(0u, 0u, 0u, 0u) ^ ((uvec4((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)) ^ (uvec4((((((clamp(max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size), max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size), max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size)))) | (max((max(subgroup_id, (min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size))))) + (0u >> (((uint(8u)) | 0u))), 0u, 0u, 0u)))))))))))))))) : ((uint(uint(((0u) | (0u))))) ^ ((((workgroup_size)) ^ 0u))))) * 1u)) >> 0u)) + subgroup_local_id;
 if((false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, ((64) << 0), 0);
 if((false))
  barrier();
 if((false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = ((uint(subgroupAllEqual(read_val))) | ((0u) << 0u));
}
