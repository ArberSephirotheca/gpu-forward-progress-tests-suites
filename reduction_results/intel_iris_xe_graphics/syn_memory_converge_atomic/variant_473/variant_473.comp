#version 460

struct _GLF_struct_18 {
 uint num_workgroup;
 ivec2 _f0;
 int _f1;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 bvec3 _f1;
 vec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat3 _f2;
 vec2 _f3;
 mat4 _f4;
 mat4x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 vec3 _f1;
 mat3x2 _f2;
 bvec2 _f3;
 mat2 _f4;
 mat4x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 int _f3;
 _GLF_struct_15 _f4;
 bvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 vec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 bvec4 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat4x3 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_8 _f0;
 mat4 _f1;
 uint workgroup_id;
 mat2x4 _f2;
 mat2x4 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat4x3 _f1;
 uint workgroup_base;
 ivec4 _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 int _f3;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 uint subgroup_id;
 ivec2 _f3;
 mat3x4 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat2x4(1.0), _GLF_struct_0(vec4(1.0), uvec2(1u), mat2x4(1.0), ((1) | 0)), _GLF_struct_1(1u), mat4x3(1.0), mat3x4((max(1.0, 1.0)))), uvec2(1u), ivec3(1), gl_SubgroupID, ivec2(1), mat3x4((clamp((float(float((clamp(1.0, 1.0, 1.0))))), (float(mat4x2(1.0, determinant(mat4(0.0, (mix(float(1.0), float((- 4966.4665)), bool((bool(bvec3(false, true, true)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ((0.0) + 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((bool(bool(((bool(bvec3(false, true, true))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! ((! (! (! ((bool(bvec3(false, true, true)))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((! (((((! ((injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec2(false, false)))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false || ((false))))
      barrier();
     barrier();
    }
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && (((((clamp((min((mix(float(injectionSwitch.x), float((- 3.5)), bool(((injectionSwitch.x > injectionSwitch.y))))), (mix(float(injectionSwitch.x), float((- 3.5)), bool(((injectionSwitch.x > injectionSwitch.y))))))), (mix(float(injectionSwitch.x), float((- 3.5)), bool(((injectionSwitch.x > injectionSwitch.y))))), (mix(float(injectionSwitch.x), float((- 3.5)), bool(((injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((! (! ((false)))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(false)
  {
   if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    {
     if((((false) && true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((bool(bvec3((bool(bvec4(false, false, true, true))), true, false)))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      {
       if((((false) || false)))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if((bool(bvec4(((! (! ((true && (bool((true && (bool((false))))))))))), true, false, true))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((((bool(bvec3((injectionSwitch.x > (max(((((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y, injectionSwitch.y))), true, true)))) || false))))
    barrier();
  }
 if((((injectionSwitch.x > (((clamp(injectionSwitch.y, injectionSwitch.y, ((false ? (898.929) : injectionSwitch.y))))) - 0.0)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false || ((false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((((! (false || ((! (false)))))) || false)))
    barrier();
   barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(((((vec2((min(vec3(injectionSwitch, cos(0.0)), ((vec3(injectionSwitch, cos(0.0))) * mat3(1.0)))))).x > injectionSwitch.y))))
  {
   if(((bool(bvec4((((injectionSwitch.x < injectionSwitch.y)) && ((true && (false)))), false, true, true)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool((bvec2(bvec2(bvec2(false, false))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18((uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x, ivec2(1), 1);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if(((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y))) && true), false, false, true)))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_8(true, mat4x3(1.0), uvec3(1u), mat3x2(1.0), _GLF_struct_7(uvec3(((((injectionSwitch.x > injectionSwitch.y)) ? (132436u) : 1u))))), ((mat4(1.0)) / mat4(1.0, (clamp((((min((clamp((mix(float(1.0), float(((3217.1375 * 6.7))), bool(((injectionSwitch.x > injectionSwitch.y))))), (mix(float(1.0), float(((3217.1375 * 6.7))), bool((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))), (mix(float(1.0), float(((3217.1375 * 6.7))), bool(((injectionSwitch.x > injectionSwitch.y))))))), (mix(float(1.0), float(((3217.1375 * 6.7))), bool(((injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), ((false ? ((14.62)) : 1.0)), 1.0)), 1.0, 1.0, 1.0, ((true ? 1.0 : (8.7))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), gl_WorkGroupID.x, mat2x4(1.0), mat2x4(1.0), _GLF_struct_9(mat3x2(1.0)), _GLF_struct_12(_GLF_struct_10(vec4(1.0), bvec4(true), vec4(1.0), 1u), _GLF_struct_11(mat3x2(1.0), mat4x2(1.0), mat4x2((float(mat4x3(1.0, 0.0, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, (injectionSwitch.x), (injectionSwitch.y), 1.0, 1.0, 0.0)))), vec2(1.0), uvec4(1u))), _GLF_struct_16(vec2(1.0), _GLF_struct_13((((mat3(mat3(mat3((clamp(1.0, 1.0, 1.0)))))) * (mat3(mat3x4((((mat3(mat4(mat3(((1.0) - 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (min(0.0, ((0.0) / 1.0))))))))))), vec3(1.0), mat3x2(1.0), bvec2((((! (! (true)))) && true)), mat2(1.0), mat4x3(1.0), mat4(1.0)), _GLF_struct_14(mat4x2(1.0), mat2x4(1.0), mat3(1.0), vec2((float(mat3x4((1.0 * (1.0)), 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, (dot(vec3(1.0, 1.0, 1.0), (((mat3(1.0) * ((max(((vec3(0.0, (clamp(0.0, 0.0, 0.0)), 0.0)) * mat3(1.0)), (max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))))))) * vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)))), mat4(1.0), mat4x3(1.0), mat3((min(((1.0) - 0.0), 1.0)))), 1, _GLF_struct_15(mat2x4(1.0), bvec3(true), vec3(1.0), mat4x2(1.0)), (bvec2(bvec4(bvec2(true), true, false))), 1.0));
 if(((bool(bool((false || (((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_struct_4(mat2x4(1.0), uvec4(1u), mat2x4((mix(float(1.0), float((float((bvec3(false, false, false) != bvec3(false, false, false))))), bool(false)))))), mat4x3(1.0), workgroup_size * _GLF_struct_replacement_17.workgroup_id, ivec4(1));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if(((bool(bvec2((! (! (((injectionSwitch.x > injectionSwitch.y))))), false)))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((((((bool((((injectionSwitch.x < injectionSwitch.y)) && (bool((! (! ((bool(bvec3((false || ((! (! (((injectionSwitch.x > injectionSwitch.y) || false)))))), true, false))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(((bool(bvec2((false || ((bool(bvec3(false, true, false))))), true)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((true && ((false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((false || (((false) && true)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, (bool(bvec3(false, true, true)))))) || false))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = ((false ? (subgroup_local_id) : (clamp(_GLF_struct_replacement_6.workgroup_base, _GLF_struct_replacement_6.workgroup_base, _GLF_struct_replacement_6.workgroup_base)))) + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((! (((injectionSwitch.x > injectionSwitch.y)) || ((((! ((false))) && true))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if(((! (! (false)))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool((true && (bool((((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))).x > injectionSwitch.y)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   do
    {
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! ((false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   while((((((((false) || false) ? (injectionSwitch) : (clamp((injectionSwitch) / vec2(1.0, 1.0), ((false ? (injectionSwitch) : (injectionSwitch) / vec2(1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y)));
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false || ((false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((bool((bvec2(bvec4(bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), ((((injectionSwitch.x > injectionSwitch.y)) || false)), (((false || ((! (! ((true && (injectionSwitch.x > injectionSwitch.y))))))))), true))))))
    {
     if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false || ((false))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((((! (! (bool(bvec3(false, false, true))))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if((((((true ? injectionSwitch.x : (- 3.2))) > (max((mix(vec2((- 6726.8083), (9203.0332)), vec2((((injectionSwitch) + vec2(0.0, 0.0)))[0], (((injectionSwitch) + vec2(0.0, 0.0)))[1]), bvec2(true, ((injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y))))
    barrier();
   if((false))
    {
     if((true && ((false))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, (min((int((injectionSwitch.x)) | (4)), 4)), 64, 0);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec4((! (! (false))), true, false, true)))))
  barrier();
 if((false))
  {
   if((((((((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((false) || false)) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = (~ (0u | ((~ (uint(subgroupAllEqual(read_val)))))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec3(false, false, true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
}
