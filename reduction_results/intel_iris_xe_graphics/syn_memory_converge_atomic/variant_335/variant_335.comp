#version 460

struct _GLF_struct_2 {
 vec2 _f0;
 mat3x2 _f1;
 float _f2;
 ivec2 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 mat3x2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 uint subgroup_size;
 _GLF_struct_3 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((bool(bvec4((false), false, false, ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! ((! (! (! ((false))))))))
  {
   if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((bool(bvec2((false), ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false || ((false))))
    barrier();
   return;
  }
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupSize, _GLF_struct_3(_GLF_struct_0(uvec4((((~ (~ (1u)))) ^ 0u)), mat3x2(1.0), vec2(1.0)), uvec3(1u), _GLF_struct_1(mat3x2((mix(float(1.0), float((float(141893u))), bool(false))))), _GLF_struct_2(vec2(1.0), mat3x2(1.0), 1.0, ivec2(1), mat3x2(((false ? (- 6.9) : 1.0))), mat3x4((mix(float(1.0), float((- 9.7)), bool((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))))));
 if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(((((injectionSwitch.x > injectionSwitch.y)) || (((! (! ((false))))))) && true))
  return;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((false) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((((false)) || false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if(((((! (! (false)))) || false)))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((true && (((true && (((false))))) || false)))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((false || (bool((bvec2(bvec3(bvec2((false), true), false))))))))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(((bool(bvec3(((true && ((true && (((((bool(bool(((((vec2((max(vec4((vec2(0.0, 0.0) + (((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((6182.1005), ((- vec3(- 497.450, 98.90, - 25.13)).g)), bvec2(false, false))) * mat2(1.0)))), 0.0, 0.0), vec4((vec2(0.0, 0.0) + (((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((6182.1005), ((- vec3(- 497.450, 98.90, - 25.13)).g)), bvec2(false, false))) * mat2(1.0)))), 0.0, 0.0))))) / vec2(1.0, 1.0)))).x > ((true ? (mix(float(((injectionSwitch.y) - length(vec4(((false ? (0.8) : (mix(float((518.740)), float(0.0), bool(((injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, 0.0)))), float((615.594)), bool(false))) : (sin(- 926.171))))))))))))))), false, true))) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   barrier();
  }
 if((bool(bvec2((((false)) && true), (true && (false))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((injectionSwitch.x > injectionSwitch.y)) || ((false || (false))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((bool(bvec4((false), false, true, true))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch) + abs(vec2(0.0, 0.0))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((true && ((false))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((((float((mat2(mat4x3(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(1.0)))))))) > injectionSwitch.y)) && true))))
  {
   if((((((bool(bool(false))) || ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, (((bool(bvec3(true, true, false))) || false)))))))))))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((false) || false)))
  return;
 if((false))
  {
   if(((true && (! (((! ((bool(bvec3((false), false, (true && (false))))))) || false))))))
    {
     if((false))
      {
       if((((false) && true)))
        barrier();
       if(((! (! (false)))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = (uint(uint(workgroup_base + (clamp((((min((0u ^ (subgroup_id)), (0u ^ (subgroup_id))))) * 1u), ((subgroup_id) >> 0u), subgroup_id)) * (clamp(((((_GLF_struct_replacement_4.subgroup_size) / 1u)) - 0u), _GLF_struct_replacement_4.subgroup_size, _GLF_struct_replacement_4.subgroup_size))))) + subgroup_local_id;
 if(((((false || (false))) || false)))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if(((((bool(bvec2((true && (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((((false || ((bool(bvec3(! ((! (! (! ((! (((bool(bvec3((! ((((bool(bvec4((! (! (false))), false, (((((bool(bool(true))) ? injectionSwitch.x : ((vec3(- 43.65, - 3.1, 5340.8105) * mat2x3(- 8.4, 227.028, - 3752.4236, 14.22, 1339.0334, - 33.41))[0]))) < injectionSwitch.y)), false))) || false)))), true, false))) && true)))))))), ((injectionSwitch.x < injectionSwitch.y)), true))))))))
    {
     if((false))
      return;
     return;
    }
  }
 if(((((mix(vec2((- 0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (5466.1665)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if((! (! ((((((! (! (((((vec2(injectionSwitch[0], injectionSwitch[1])).x > (min(injectionSwitch, ((injectionSwitch) / abs(vec2(1.0, 1.0))))).y))))))) && true)) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  return;
 atomicStore(write_val, uint((uint(uint((uint(uvec4(((((false ? (virtual_gid) : (1u * (virtual_gid))))) >> (186846u & 0u)), 0u, 1u, 1u))))))), 4, ((64) << 0), (~ (~ (0))));
 if(((((bool(bool(bool(bvec4((((injectionSwitch.x > (vec2(mat3(injectionSwitch, (((mix(float(float((transpose(transpose(mat4x3(((true ? clamp(0.0, 0.0, (max((float(vec3(0.0, 1.0, 1.0))), 0.0))) : (687.356))), 1.0, sqrt(1.0), cos(0.0), abs(0.0), 0.0, determinant(mat2(0.0, 0.0, tan(0.0), (injectionSwitch.x))), 0.0, 0.0, 0.0, abs(0.0), (injectionSwitch.x))))))), float((393.222)), bool(false))))), 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))).y) && ((injectionSwitch.x < injectionSwitch.y)))), false, true, ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > (max(((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : (7.6))), (float(mat4x3(((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : (7.6))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))
    barrier();
   if((false))
    barrier();
   if(((bool(bool((! (! (false))))))))
    barrier();
   if(((((true && ((((((false) && true) || (bool((bool(bool(bool((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || ((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if((false))
  barrier();
 if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((! (! (! (! (((((injectionSwitch.x > (vec2((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))))))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((true && ((injectionSwitch.x > ((injectionSwitch.y) - sqrt(0.0))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((bool(bvec4(bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), true)), true, false, true))))))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   if((bool(bvec4((false || ((((! (((! (! (bool(bvec4(! (((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, false, true)))))))))))), true, true, false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((((! (! ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)), true)))))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool((bvec3(bvec3(bvec3(false, false, true))))))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((((((((bool((bvec2(bvec3(bvec2((injectionSwitch.x > ((max(mix(float((58.98)), float(injectionSwitch.y), bool(true)), (mix(float(mix(float((58.98)), float(injectionSwitch.y), bool(true))), float((- 341.055)), bool(false))))))), ((injectionSwitch.x < injectionSwitch.y))), true))))))))) && true) && true)) || false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > (mix(float(injectionSwitch.y), (clamp(float((4.9)), float((4.9)), float((4.9)))), bool(false)))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    return;
   if((((false) && true)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((true && ((false))))
  return;
 if((false))
  barrier();
 if(((! (((! (! (((bool(bvec2(bool(bvec3((! (false)) && true, false, false)), true))))))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((false ? (vec2(7.4, 1443.2498)) : ((false ? (vec2(155.352, - 2400.8202)) : injectionSwitch)))).y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if(((! (! (false)))))
    barrier();
  }
 if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x < injectionSwitch.y)) && ((false)))) || false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(((false || (false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((true && ((false))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if(((((bool(bvec2((bool(bool(false))), true))) || false))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if(((bool(bvec4((bool(bvec4(false, true, false, (false || (true))))), false, false, false)))))
        barrier();
       return;
      }
     barrier();
     if(((! ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))))
      barrier();
    }
   barrier();
   if((false))
    return;
   if((false))
    {
     if((((! (! ((false))))) || false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    return;
  }
 (((true ? ((0u + (((false ? (num_workgroup) : (0u | (buf[virtual_gid] = ((uint(subgroupAllEqual(read_val))) / 1u)))))))) : (virtual_gid))) - 0u);
 if((false))
  return;
 if(((! ((bool(bvec4((bool(bvec4((! ((! (! (! ((((! ((! (! (! (! (false)))))))) && true))))))), false, false, false))), true, false, true)))))))
  {
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(((((mix(float(((92.75 / float(79831u)))), float((float(vec3(injectionSwitch.x, 1.0, 1.0)))), bool(((injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(((! (! (false)))))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((injectionSwitch.x > ((injectionSwitch.y) - 0.0))))) || false))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (bool(bool(((false || (! ((((true && ((! (! ((((((mix(vec2(((((max((clamp(((((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)), (vec2(((false ? (vec2(12.64, 2.0)) : (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), injectionSwitch)), ((mix(vec2(((injectionSwitch) - sin(vec2(0.0, 0.0)))[0], (- 0.2)), vec2((- 2.5), ((injectionSwitch) - sin(vec2((max(0.0, ((false ? (- 5.6) : 0.0)))), 0.0)))[1]), bvec2(false, true)))))) / vec2(1.0, 1.0))))[0], ((((max((clamp(((((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)), (vec2(((false ? (vec2(12.64, 2.0)) : (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), injectionSwitch)), ((mix(vec2(((injectionSwitch) - sin(vec2(0.0, 0.0)))[0], (- 0.2)), vec2((- 2.5), ((injectionSwitch) - sin(vec2((max(0.0, ((false ? (- 5.6) : 0.0)))), 0.0)))[1]), bvec2(false, true)))))) / vec2(1.0, 1.0))))[1]), vec2((- 0.6), (- 4299.0780)), bvec2(false, false))).x > ((((mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)))[0], (- 68.58)), vec2((float(1620)), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, determinant((transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))), 0.0)))[(clamp(1, 1, 1))]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))) - vec2((mix(float((4.5)), float(0.0), bool(true))), 0.0))).y)) || false))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((bool(bvec3(false, true, true)))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          return;
         if(((bool(bvec4(true, ((((bool(bvec2(((clamp((max(injectionSwitch.x, injectionSwitch.x)), (mix(float(injectionSwitch.x), float((- 9.3)), bool(false))), injectionSwitch.x)) < injectionSwitch.y), true)))) && ((injectionSwitch.x < injectionSwitch.y)))), true, false))) && (((true && (true && (((! ((((injectionSwitch.x > injectionSwitch.y)) || (((! (((false)))) && true)))))) || false)))))))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
             if((false))
              return;
            }
           return;
          }
         return;
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           return;
          }
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if(((! ((false || (((! (false))) && true))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      return;
     if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), (true && (false)))))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   barrier();
  }
}
