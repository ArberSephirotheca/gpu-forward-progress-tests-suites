#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((((uint((injectionSwitch.x)) ^ ((clamp(1u, 1u, (((min((uint(uvec3(1u, 0u, 0u))), ((false ? (149003u) : (uint(uvec3(1u, 0u, 0u)))))))) ^ 0u))) * (((gl_WorkGroupSize.x) + 0u))))) * 1u));
 uint workgroup_id = ((false ? (uvec3(47360u, 112634u, 103575u)) : gl_WorkGroupID)).x;
 uint workgroup_base = (clamp((clamp(workgroup_size * workgroup_id, (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * ((workgroup_id) >> 0u))), (clamp(((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_local_id) : workgroup_size)) * workgroup_id, (max(workgroup_size * workgroup_id, (0u | ((((1u * (workgroup_size))) >> 0u) * workgroup_id)))), workgroup_size * workgroup_id)), (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? (((! (! ((true && (true))))) ? (clamp(workgroup_size * ((workgroup_id) + (0u >> (((true ? uint(1u) : (101091u)))))), (max(((min((~ (~ (((true ? 0u + ((1u * ((0u ^ (workgroup_size * workgroup_id))))) : (subgroup_size)))))), 0u + ((1u * ((0u ^ (workgroup_size * workgroup_id)))))))), workgroup_size * workgroup_id)), workgroup_size * workgroup_id)) : (workgroup_size))) : (num_workgroup)))));
 uint virtual_gid = ((workgroup_base + subgroup_id * (clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u) + subgroup_local_id;
 atomicStore(write_val, (~ (~ ((((((true ? ((((min(uint(((uvec3(((~ ((true ? (clamp(((((false ? (subgroup_size) : (~ ((~ (((~ ((min(uint(virtual_gid), (min(uint(virtual_gid), uint(virtual_gid))))))) - (0u & 75588u))))))))) ^ 0u), (~ (uint(virtual_gid))), (~ (uint(virtual_gid))))) : (write_val)))) >> (uint(uvec2(0u, uint((injectionSwitch.x)))))), (1u * (1u)), 1u)) | (uvec3((uint(uint(((~ (clamp((((((~ (uint(virtual_gid)))) ^ 0u)) / 1u), (~ (uint(virtual_gid))), (~ (uint(virtual_gid)))))) >> 0u)))), (1u * (1u)), 1u)))), uint(((((uvec3(((~ (clamp((~ ((min(uint((min(virtual_gid, virtual_gid))), (min(uint(virtual_gid), uint(virtual_gid))))))), (~ (uint(virtual_gid))), (~ (uint(virtual_gid)))))) >> 0u), (1u * (((((1u) | (1u))) + 0u))), (0u ^ (1u)))) - uvec3(0u, 0u, 0u))) | (uvec3((uint(uint(((~ (clamp((~ (uint(virtual_gid))), (~ ((max(uint(virtual_gid), uint(virtual_gid))))), (~ (uint(virtual_gid)))))) >> 0u)))), (1u * (1u)), 1u))))))))) / 1u : (workgroup_size))))) | (((((~ (~ ((min((((0u ^ ((~ (~ (((uint(uvec3((((~ (~ (uint(virtual_gid))))) / 1u), 0u, 1u))) >> 0u) ^ 0u))))))), (((0u ^ ((~ (~ (((uint(uvec3((((~ (~ (uint(virtual_gid))))) / 1u), 0u, 1u))) >> 0u) ^ 0u)))))))))))) - 0u)))))))), 4, (min(64, (max(64, 64)))), 0);
 uint read_val = atomicLoad(write_val, ((((4)) | ((4))) | (4)), (clamp(((true ? (min(64, 64)) : (- 38903))), 64, 64)), 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
