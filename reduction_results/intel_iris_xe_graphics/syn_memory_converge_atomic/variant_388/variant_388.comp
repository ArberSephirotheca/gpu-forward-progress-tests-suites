#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uvec3(0u, (uint(uint(((clamp(uint(uvec3(0u, 0u, 1u)), uint(uvec3(0u, 0u, 1u)), uint(uvec3(0u, (0u ^ ((min(0u, 0u)))), 1u)))))))), 0u) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (uvec3((((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | ((~ ((clamp(~ (gl_WorkGroupID), (~ (~ ((max(~ (((gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), ~ (((gl_WorkGroupID) | uvec3(0u, 0u, 0u)))))))), ~ (max((uvec3(uvec3((gl_WorkGroupID)))), (gl_WorkGroupID)))))))))[0], gl_WorkGroupID[1], gl_WorkGroupID[((((2) | (2))) << (0 << (int(8))))])).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, ((uint((uint((injectionSwitch.x)) | (virtual_gid)))) << uint((injectionSwitch.x))), ((max(0 + (((((! ((((bool((bvec2(bvec2(bvec2(! ((true && ((bool(bvec3((! (! (bool((bvec2(bvec3(bvec2(false, false), false))))))), false, true)))))), false)))))))) || false))) ? (- 84331) : ((4) - 0)))), 0 + (((((! (! (! ((bool(bvec2(((((bool((bvec2(bvec2(bvec2(! ((true && ((bool(bvec3((! (! (bool((bvec2(bvec3(bvec2(false, false), false))))))), false, true)))))), false)))))))) || false), false)))))))) ? (- 84331) : ((((4) - 0) / 1)))))))), ((true ? 64 : (65698))), (max(0, 0)));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 ((buf[virtual_gid] = uint(subgroupAllEqual(((read_val) * 1u)))) / ((false ? ((true ? (workgroup_base) : (workgroup_base))) : 1u)));
 if(((((((((true && ((! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)) || false)))
  barrier();
}
