#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 if(((((bool((bvec2(bvec2(((bvec2(bvec3(bvec2(bvec3(bvec2((bool(bvec2(((((((max((max(tan(vec2((max(0.0, 0.0)), 0.0)), tan(vec2((max(0.0, 0.0)), 0.0)))), tan(vec2((max(0.0, 0.0)), 0.0))))) * vec2(1.0, 1.0))) * mat2(1.0)) + (injectionSwitch)).x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true))), false), true)), false)))))))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((! (! ((false)))))
  barrier();
 if(((((false || ((bool(bvec2(((false ? ((sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))) + (((((- 26.93)))) * cos(0.0))) / (dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, sqrt((min(0.0, 0.0))))))) : ((max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y, true)))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((((clamp((vec2(0.0, 0.0) + (injectionSwitch)), (mix(vec2((injectionSwitch)[0], (- 6664.1451)), vec2((vec4(- 48.20, 7.4, 29.61, - 9208.6082).q), (injectionSwitch)[1]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true))), (min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((((true ? injectionSwitch.x : (4.1))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! ((! (! (bool(bvec4((true && ((((injectionSwitch.x > injectionSwitch.y))))), true, ((injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false || ((false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! ((! (! (false))))))))
        barrier();
       if(((! (! ((bool(bvec2((bool(bvec4(((((((bool(bvec3((! (! (true))), true, false))) && true)) && (injectionSwitch.x > injectionSwitch.y)))), false, true, (bool(bool(false)))))), true))))))))
        barrier();
       barrier();
      }
     if((bool(bool((false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! ((true && (false || ((false)))))))))
      barrier();
     barrier();
    }
   if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if((false))
    barrier();
   if((((bool(bool(! (! (false))))))))
    barrier();
   barrier();
   if((((! ((((! (! (! (((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))) || false)))))) && (((bool(bool(true)))) && true)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bool(false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((! (! ((false)))))
    barrier();
  }
 if((((injectionSwitch.x > (max(((true ? (((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y : (1811.1485))), (((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))
  {
   if(((! (! (bool(bvec2((false), false)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((true && ((true && ((true && (false))))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((! (! ((false) || false))))))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((! (! ((bool(bvec4((false), false, false, true)))))))
  barrier();
 uint num_workgroup = ((((false ? (uvec3(8609u, 182403u, 176186u)) : gl_NumWorkGroups))) / uvec3(1u, ((false ? (70669u) : 1u)), 1u)).x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((! (! (bool(((bvec2(bvec4(bvec2(bvec4(bvec2((! (! (false))), false), false, true)), true, true)))))))))))
    barrier();
   if((! ((! ((true && (! (! (((bool(bvec4(false, false, false, ((true) || false))))))))))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = (uint(uint((((uint(uvec2(gl_WorkGroupSize.x, (1u & 1u))))) / (0u + (1u))))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch.y, ((true ? injectionSwitch.y : (- 5.6)))))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 uint virtual_gid = (((uint(uvec2((0u | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, 0u)))) | 0u);
 atomicStore(write_val, (uint(uvec3(uint(virtual_gid), uint((injectionSwitch.x)), 0u))), 4, ((0 + ((((true ? 64 : (((((0 ^ (((max(((- 95359) >> 0), - 95359)))))) | (((max(((- 95359) >> 0), - 95359)))))) << 0))) >> 0)))), (int((clamp(ivec4(0, 0, 1, 0), ivec4(0, 0, 1, 0), ivec4(0, (((((((min(false ? (45071) : 0, ((false ? (45071) : 0) | (false ? (45071) : 0)))))) / 1)) | (((min(false ? (45071) : 0, ((false ? (45071) : 0) | (false ? (45071) : 0)))))))), 1, 0))))));
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 uint read_val = atomicLoad(write_val, ((0 | ((0 | (clamp((((0 ^ ((int(ivec4(4, 1, 1, 0)))))) >> (clamp(0, 0, 0))), ((4) >> 0), ((((min((4), (4)))) >> 0) >> 0))))))), (((((~ (~ ((~ (~ (min(((clamp(64, 64, 64))), ((clamp(64, 64, 64))))))))))) | ((min((max(~ (~ ((64))), ~ (~ ((64))))), (min(~ (~ ((64))), ~ (~ ((64))))))))) / 1)), 0);
 if(((((true && (((bool(bvec2((((bool(bool(bool(bvec4(injectionSwitch.x > (((min(((((false ? (((max((((injectionSwitch.x > injectionSwitch.y)) ? (- 43.49) : - 739.339), ((bool(bool(((injectionSwitch.x > injectionSwitch.y))))) ? (- 43.49) : - 739.339))))) : injectionSwitch.y))) / 1.0), ((false ? (((max((((injectionSwitch.x > injectionSwitch.y)) ? (- 43.49) : - 739.339), ((bool(bool(((injectionSwitch.x > injectionSwitch.y))))) ? (- 43.49) : - 739.339))))) : injectionSwitch.y))))) * (clamp((min((mix(float(((max(- 6389.0442, - 6389.0442)))), float(((((1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) - 0.0)), bool(((injectionSwitch.x < injectionSwitch.y))))), (max(1.0, 1.0)))), (min((min((mix(float((- 6389.0442)), float(((1.0) - 0.0)), bool(((((false ? (914.779) : (mix(float(injectionSwitch.x), float((mix(float((- 60.00)), float((- 1.4)), bool(false)))), bool(false))))) < injectionSwitch.y))))), (max(1.0, 1.0)))), (min((mix(float((- 6389.0442)), float(((false ? (- 39.16) : ((1.0) - 0.0)))), bool(((injectionSwitch.x < injectionSwitch.y))))), (max(1.0, 1.0)))))), (mix(float((vec2(6.9, - 19.41).xxy.g)), float((min((mix(float((- 6389.0442)), float(((1.0) - 0.0)), bool(((injectionSwitch.x < injectionSwitch.y))))), (max(1.0, 1.0))))), bool(true)))))), true, false, false))))))), false))))))) && true)))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if((false))
  {
   if(((((bool(bvec2(false, false)))) || false)))
    barrier();
   barrier();
  }
 if(((false || (false || ((false))))))
  {
   if((((false) && true)))
    barrier();
   if((((true && ((false)))) && true))
    barrier();
   if(((! ((! (! (! ((((false || ((((false || (injectionSwitch.x > (exp(tan(0.0)) * ((mix(vec2((184.880), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 521.111)), bvec2(true, (! (! (false)))))).y))))))))) && ((injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((953.026), (- 806.444)), bvec2(false, false)))) + log(vec2(1.0, 1.0))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
