#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = ((uvec3(((true ? uvec4((min((min((min((gl_WorkGroupSize), (((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) / (~ ((min(~ (uvec3((injectionSwitch.y), (injectionSwitch.y), ((clamp(injectionSwitch.y, (mix(float((max(injectionSwitch, injectionSwitch)).y), float((- 5307.4348)), bool(false))), injectionSwitch.y))))), ~ (uvec3((injectionSwitch.y), (injectionSwitch.y), ((clamp(injectionSwitch.y, (mix(float((max(injectionSwitch, injectionSwitch)).y), float((- 5307.4348)), bool(false))), injectionSwitch.y))))))))), (((min((((gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize)))) + uvec3(0u, 0u, 0u)) / uvec3((injectionSwitch.y), (injectionSwitch.y), ((clamp(injectionSwitch.y, (mix(float((mix(float(injectionSwitch.y), ((float((- 5307.4348))) - 0.0), bool(false)))), float((- 6.6)), bool(false))), injectionSwitch.y)))))), (min((min((gl_WorkGroupSize), (((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) / uvec3((injectionSwitch.y), (injectionSwitch.y), ((clamp(injectionSwitch.y, (mix(float((max(injectionSwitch, injectionSwitch)).y), float(((true ? ((float(((false ? (mat4x2(25.48, 9.3, 50.16, 19.75, 16.43, - 26.85, 53.76, 6995.3897)) : mat4x2(0.0 + ((- 5307.4348)), 0.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0), 0.0)))))) : (float(- 21419))))), bool(false))), injectionSwitch.y)))), (min((gl_WorkGroupSize), (gl_WorkGroupSize))) / uvec3((injectionSwitch.y), (injectionSwitch.y), ((clamp(((true ? ((injectionSwitch.y) / 1.0) : (vec2(- 3.3, - 381.281).s))), (mix(float(injectionSwitch.y), float((- 5307.4348)), bool(false))), injectionSwitch.y)))))))), 0u) : (uvec4((~ (~ (182044u))), 115458u, 112424u, (uint(uvec3(64209u, 1u, 0u)))))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((0u >> (uint(7u))) + (min(((((workgroup_size) * 1u))), ((((workgroup_size) * 1u)))))) / 1u) * workgroup_id;
 uint virtual_gid = (~ (((~ ((max((1u * (workgroup_base + subgroup_id * subgroup_size + (((((uint(uvec4(subgroup_local_id, 1u, 0u, 1u)))) << (0u >> (uint(0u))))) + 0u))), workgroup_base + (uint((clamp(uvec3(subgroup_id * subgroup_size, 0u, 0u), uvec3(subgroup_id * subgroup_size, 0u, 0u), uvec3(subgroup_id * subgroup_size, 0u, 0u))))) + (((uint(uint(subgroup_local_id)))) / 1u))))) >> 0u)));
 atomicStore(write_val, (max(((((0u | (max((((false ? (subgroup_local_id) : uint(uvec4(uint(virtual_gid), 0u, 0u, 1u))))), uint(virtual_gid))))) / 1u)), uint(((virtual_gid) * 1u)))), (((1 * (((((false) && true) ? (35776) : ((clamp(((clamp((max((min((min((min(((4)), ((4)))), (min(((4)), ((4)))))), (min(((4)), ((4)))))), (min(((4)), ((4)))))), (~ (~ (((4))))), (~ ((max(~ ((((((0 << (int(5))) ^ ((4)))) | 0))), (clamp(~ (((4))), ~ (((4))), ~ (((4))))))))))) / 1), (4), (int(ivec2(((true ? (4) : (49248))), 1))))) >> 0))))) - 0)), 64, (max(0, ((0) - 0))));
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual((clamp(read_val, ((read_val) | (read_val)), ((read_val) / 1u)))));
}
