#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec2((((false)) && true), true))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(((((true && ((! (! ((clamp(injectionSwitch.x, (float(mat4((1.0 * (injectionSwitch.x)), abs(0.0), 1.0, 1.0, 1.0, (max(1.0, 1.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, (clamp(((0.0) - 0.0), 0.0, ((true ? 0.0 : (4.9))))), sin(0.0)))), injectionSwitch.x)) > injectionSwitch.y)))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((false) || false)))
    {
     if((false))
      {
       if(((! (! ((true && (bool(bool((bool(bvec4((false), true, false, false))))))))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if(((bool(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(((bool(bvec2(false, false)))))
    barrier();
   if(((((bool(bvec2(bool(bvec2((true && (((injectionSwitch.x > injectionSwitch.y)))), true)), true)))) || (((false) && true)))))
    return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x < injectionSwitch.y)) && ((((false) && true)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false || ((false)))))))
  barrier();
 if((true && ((((injectionSwitch.x > (min((((float(mat2x3((vec2(((((true ? (min(injectionSwitch[0], injectionSwitch[0])) : (max((distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, (((mix(float(- 641.708), float((46.14)), bool(false)))) + 0.0), - 2759.0688))), (distance(vec3(- 0.6, - 3.5, - 4.4), ((vec3(0.1, - 641.708, (clamp(((((min(false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0))))), false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0)))))))))), ((((min(false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0))))), false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0)))))))))), (float(mat4x2(((((min(false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0))))), false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, (injectionSwitch.y), 1.0, (float(((float((float(mat2(0.0, 0.0, 0.0, 0.0))))) * 1.0)))))))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))) * vec3(1.0, 1.0, 1.0))))))) - 0.0))), injectionSwitch[1])).y, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)), ((max((clamp(vec2(((((true ? (min((min(((injectionSwitch[0]) / 1.0), (max((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])))), injectionSwitch[0])) : (max((distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, - 2759.0688))), (distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, (((false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, ((vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0, 0.0))))))))))) - 0.0))), injectionSwitch[1]), vec2(((((true ? (min((min(((injectionSwitch[0]) / 1.0), (max((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])))), injectionSwitch[0])) : (max((distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, - 2759.0688))), (distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, (((false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, ((vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0, 0.0))))))))))) - 0.0))), injectionSwitch[1]), vec2(((((true ? (min((min(((injectionSwitch[0]) / 1.0), (max((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])))), injectionSwitch[0])) : (max((distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, - 2759.0688))), (distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, (((false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, ((vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0, 0.0))))))))))) - 0.0))), injectionSwitch[1]))), ((vec2(((((true ? (min((min(((injectionSwitch[0]) / 1.0), (max((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])))), injectionSwitch[0])) : (max((distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, - 2759.0688))), (distance(vec3(- 0.6, - 3.5, - 4.4), vec3(0.1, - 641.708, (((false ? (9656.2707) : float(mat4x2(- 2759.0688, 1.0, tan(0.0), 0.0, 0.0, ((vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0, 0.0))))))))))) - 0.0))), injectionSwitch[1])) - vec2(0.0, 0.0))))).y))))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((((injectionSwitch.x > (clamp((0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
     if((((false) || false)))
      barrier();
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
     if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if(((((true && ((false || (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((bool(bvec2(false, true))) && true))))
  return;
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (bool(bvec4((false), true, true, true)))))))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((true && (false))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (((! ((bool(bvec4(false, ((false) && true), true, true))))) && true)))))
  barrier();
 if(((! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 uint workgroup_base = (clamp(workgroup_size, (uint((uvec3(uvec4(uvec3(workgroup_size, 0u, ((((max((((((max((1u), (1u)))) | ((1u))) * 1u) - 0u), (((((max((1u), (1u)))) | ((1u))) * 1u) << 0u))))) - 0u)), 0u))))), (min(((true ? workgroup_size : (133531u))), workgroup_size)))) * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + (max(((subgroup_id) | (((0u + (clamp((~ (~ (subgroup_id))), subgroup_id, subgroup_id)))))), subgroup_id)) * ((~ ((~ (~ (~ ((min((clamp(clamp(((((false ? (subgroup_size) : subgroup_size))) >> 0u), (min((((((min(false ? (subgroup_size) : subgroup_size, false ? (subgroup_size) : subgroup_size))) * 1u))), ((false ? (subgroup_size) : subgroup_size)))), ((((((false ? (((((subgroup_size) | 0u)) | (subgroup_size))) : subgroup_size)) << 0u)) / 1u))), clamp(((((false ? (subgroup_size) : subgroup_size))) >> 0u), (((min(((false ? (subgroup_size) : subgroup_size)), ((false ? (subgroup_size) : subgroup_size)))) ^ 0u)), ((((((false ? (((((~ (~ ((subgroup_size) | 0u))))) | (subgroup_size))) : subgroup_size)) << 0u)) / 1u))), clamp(((((false ? (subgroup_size) : subgroup_size))) >> 0u), (min(((false ? (subgroup_size) : subgroup_size)), ((false ? (subgroup_size) : subgroup_size)))), ((((((false ? (((((subgroup_size) | 0u)) | (subgroup_size))) : subgroup_size)) << 0u)) / 1u))))), clamp(((((false ? (subgroup_size) : subgroup_size))) >> 0u), (min(((false ? (subgroup_size) : subgroup_size)), ((false ? (subgroup_size) : subgroup_size)))), ((((((false ? (((((subgroup_size) | 0u)) | (subgroup_size))) : subgroup_size)) << 0u)) / 1u)))))))))))) + subgroup_local_id;
 if(((((((min(injectionSwitch, injectionSwitch)).x > ((((float(mat3x2(clamp(injectionSwitch.y, injectionSwitch.y, (clamp(injectionSwitch, (((((false || (((injectionSwitch.x > injectionSwitch.y) || false))))) ? ((injectionSwitch)) : ((mix(vec2((- 52.77), ((4847.3361 - 1.1))), vec2((mix(vec2((injectionSwitch)[0], (2.1)), vec2((- 626.646), (((injectionSwitch)[1]) / 1.0)), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], (2.1)), vec2((- 626.646), (((injectionSwitch)[1]) / 1.0)), bvec2(false, true)))[1]), bvec2(true, true)))))), injectionSwitch)).y), 0.0, 0.0, 1.0, sin(0.0), 0.0)))) + 0.0))) || (! ((bool(bool((! (! (! ((false || (false))))))))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && ((! (((! (! (! ((false))))) || false)))))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    {
     if((false))
      barrier();
     if((((false) || false)))
      return;
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   barrier();
   if(((((! (! ((bool(bvec2((((max(injectionSwitch.x, (exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y) || false), true))))))))))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((true && ((((true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   return;
  }
 if((((((min(1.0, ((false ? (- 1.2) : (1.0 * (1.0)))))) * ((min((0.0 + (injectionSwitch.x)), ((false ? (- 9.0) : (0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > ((false ? (- 4.2) : injectionSwitch.y))))))
    barrier();
   if((false))
    return;
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((((false) && true)))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   barrier();
   if(((bool((bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   if(((false || ((((false || (false)) || (false || (((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((false || ((false))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(((bool(bvec2((false || (((! ((false || (! (((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
     if(((false || (false))))
      barrier();
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint read_val = atomicLoad((((uint(((uvec2(write_val, 0u)) + uvec2(0u, 0u)))) / 1u)), 4, ((false ? (- 50893) : 64)), 0);
 if((false))
  {
   if((((! (! ((! (! (bool((bvec3(bvec3(bvec3(((((bool(bvec3(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))))))) && true), false, false))))))))))))))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual((min(read_val, ((read_val) / 1u)))));
}
