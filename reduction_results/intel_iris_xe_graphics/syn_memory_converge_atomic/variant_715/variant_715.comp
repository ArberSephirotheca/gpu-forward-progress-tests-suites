#version 460

struct _GLF_struct_8 {
 bvec4 _f0;
 bvec3 _f1;
 float _f2;
 ivec3 _f3;
 uvec4 _f4;
 mat4x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 uvec2 _f3;
 mat3x4 _f4;
 mat3x2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 mat3x2 _f1;
 _GLF_struct_8 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec3 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 uint num_workgroup;
 mat3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat4 _f1;
 uvec2 _f2;
 mat3 _f3;
 int _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 ivec4 _f1;
 vec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3x2 _f1;
 float _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 uint _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_6 _f2;
 vec2 _f3;
 _GLF_struct_9 _f4;
 mat2 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat2x4(((1.0) - 0.0)), _GLF_struct_1(1u, _GLF_struct_0(uvec3(1u))), _GLF_struct_6(uvec2(1u), mat3x2(1.0), 1.0, _GLF_struct_2(vec3(1.0), ivec4(1), vec4(1.0), ivec4(1)), _GLF_struct_3(mat2x3(1.0), mat4(1.0), uvec2(1u), ((transpose(transpose((true ? mat3(1.0) : (mat3(201.453, - 8.5, 3.9, (float(vec3(- 43.51, sqrt(0.0), 1.0))), 4737.9454, 2581.9953, - 4.1, 7755.5391, - 580.940))))))), 1), _GLF_struct_4(uvec4(1u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, ((0u) | (0u)))).x, mat3(1.0), (max(ivec3(1), ivec3(1))), mat4x2(1.0)), _GLF_struct_5(uvec2(1u), vec3(1.0), ivec4(((1) - 0)), (mix(vec4((vec4((clamp((max(((1.0) / 1.0), 1.0)), (max(((1.0) / 1.0), 1.0)), ((false ? (- 5065.2023) : (max(((1.0) / 1.0), 1.0))))))))[0], (((vec4(1.0))[1]) / 1.0), (((true ? (false ? (9813.5964) : ((false ? (1.6) : (vec4((min(1.0, 1.0))))[2]))) : (- 2813.0332)))), ((85.61 - (float(vec4(1.2, 1.0, sqrt(1.0), 0.0)))))), vec4(((mix(float((vec3(- 1.0, - 920.263, - 21.52).r)), float(6.0), bool(true)))), (4554.9872), (- 6391.4668), (vec4(1.0))[(((0 | (3))) << 0)]), bvec4(false, false, false, true))))), vec2(1.0), _GLF_struct_9(_GLF_struct_7(bvec4(true), mat3x4((mix(float((- 0.2)), float(1.0), bool(true)))), ivec3(1), uvec2(1u), mat3x4(1.0), mat3x2(1.0), bvec3((true && (true)))), mat3x2(1.0), _GLF_struct_8(bvec4(((! (! ((true && (bool(bvec3(true, true, false))))))))), bvec3(true), (float(mat4(1.0, 0.0, (injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, (max(exp(0.0), exp(0.0))), 1.0, (float(mat2x4((mix(float((- 623.853)), float((injectionSwitch.y)), bool(true))), 1.0, (min(0.0, 0.0)), exp(0.0), 1.0, ((min(dot(((vec4(1.0, 1.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0))), log(1.0), 0.0, sqrt(1.0), 0.0, 1.0, (injectionSwitch.x)))), ivec3((max(((1) - 0), ((1) - 0)))), uvec4(1u), mat4x3(1.0), mat2(1.0)), uvec3(1u)), mat2(1.0));
 uint workgroup_size = (((1u << (uint(2u))) >> (uint(2u))) * ((uint((clamp(uint((0u ^ ((0u | (gl_WorkGroupSize.x))))), uint((0u ^ ((0u | (gl_WorkGroupSize.x))))), uint((0u ^ ((0u | (gl_WorkGroupSize.x)))))))))));
 uint workgroup_id = (((~ (~ (gl_WorkGroupID.x)))) ^ uint((injectionSwitch.x)));
 uint workgroup_base = ((workgroup_size * workgroup_id) ^ 0u);
 uint virtual_gid = (max((max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (((clamp(workgroup_base + ((subgroup_id) >> 0u) * subgroup_size, (min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, workgroup_base + ((subgroup_id) | (subgroup_id)) * subgroup_size)) >> 0u)))) + (((0u | (subgroup_local_id))) ^ 0u);
 atomicStore(write_val, uint(virtual_gid), (((min((~ (~ ((max(((((true ? (int(int(((((4) | 0)))))) : (75249))) - int((injectionSwitch.x))) - 0), (clamp(((4) | 0), ((min((4) | 0, (4) | 0))), ((4) | 0)))))))), (((~ (~ ((max(((((true ? (int(int(((((4) | 0)))))) : (75249))) - int((injectionSwitch.x))) - 0), (clamp(((4) | 0), ((min((4) | 0, (4) | 0))), ((4) | 0))))))))) | ((~ (~ ((max(((((true ? (int(int(((((4) | 0)))))) : (75249))) - int((injectionSwitch.x))) - 0), (clamp(((4) | 0), ((min((4) | 0, (4) | 0))), ((4) | 0))))))))))))) << 0), 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
