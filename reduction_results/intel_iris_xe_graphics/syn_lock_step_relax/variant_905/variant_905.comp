#version 460

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x3 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 ivec2 _f1;
 mat2 _f2;
 _GLF_struct_0 _f3;
 uint subgroup_size;
 mat3x2 _f4;
 mat3x4 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 _GLF_struct_2 _f4;
 vec2 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(uvec2(1u), uvec2(1u), ivec3(1), mat3x2(1.0), _GLF_struct_2(mat4x3(1.0), ivec2(1), mat2(1.0), _GLF_struct_0(1, mat2x3(1.0), bvec3(true), mat2x3(1.0), ivec2(1)), gl_SubgroupSize, mat3x2(1.0), mat3x4(1.0), _GLF_struct_1(ivec4(1))), vec2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_3._f4.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_3._f4.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f4.subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
}
