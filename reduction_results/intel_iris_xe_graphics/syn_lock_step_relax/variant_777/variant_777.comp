#version 460

struct _GLF_struct_0 {
 ivec3 _f0;
 uint subgroup_size;
 bool _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((bool((bvec2(bvec4(bvec2(((false) || false), false), true, false)))))))
    barrier();
   return;
  }
 if(((bool(bool(false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec3((1 * (1))), gl_SubgroupSize, true);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((true && (false))))
  return;
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  return;
 if(((true && ((bool(bvec3(false, true, false)))))))
  {
   if((false))
    {
     if((((((! (! ((true && (((((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))) && true))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((true && ((bool(bool((false)))))) && true)))
        barrier();
       if((false))
        return;
       return;
      }
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(((bool(bvec2(false, false)))))
    return;
   return;
  }
 if((((injectionSwitch.x > (max((max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((! ((bool(bvec4(! ((! (! ((bool(bvec4(((false || (false))), true, true, true))))))), false, false, true))))) || ((bool(bool(bool(bvec4(((false) && true), false, ((injectionSwitch.x > injectionSwitch.y)), true)))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((false || (false))))
  return;
 uint workgroup_size = ((true ? gl_WorkGroupSize.x : (163435u)));
 if((((! (! ((injectionSwitch.x > (((((min(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y) / 1.0))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint workgroup_id = (uvec3(((vec2(injectionSwitch[(int(ivec2(0, 0)))], injectionSwitch[1])).x), ((float(float(injectionSwitch.x)))), (clamp(((true ? (((clamp((min(float(mat4x2(1.0 * ((((((((false ? (((vec2(((2.3) / 1.0), - 67.97)) * vec2(1.0, 1.0))) : injectionSwitch))) + vec2(0.0, 0.0)).x))) / 1.0), 0.0, 0.0, round(length(normalize(cos(vec2(0.0, 0.0))))), 0.0, 1.0, round(length(normalize(vec2((clamp(1.0, ((1.0) / 1.0), 1.0)), (max(1.0, 1.0)))))), 1.0)), float(mat4x2(1.0 * ((((((((false ? (vec2(2.3, - 67.97)) : injectionSwitch))) + vec2(0.0, 0.0)).x))) / 1.0), 0.0, ((false ? (83.59) : 0.0)), round(length(normalize(cos(vec2(0.0, 0.0))))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(mat4x2(1.0 * (((((((((((sqrt(cos(vec2(0.0, 0.0))) * (((false ? (vec2(2.3, (max(- 67.97, - 67.97)))) : injectionSwitch))))) + vec2(0.0, 0.0)).x))) / 1.0)) + 0.0)) - 0.0), 0.0, 0.0, round(length(normalize(cos(vec2(0.0, 0.0))))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), (float(vec2(((true ? float(mat4x2((((max(1.0 * ((((((((false ? (((vec2((mix(float(2.3), float((201.861)), bool(false))), - 67.97)) / vec2(1.0, 1.0))) : injectionSwitch))) + vec2(0.0, 0.0)).x))) / 1.0), 1.0 * ((((((((((false ? (vec2(2.3, - 67.97)) : injectionSwitch))) + vec2(0.0, 0.0)).x)))) - 0.0) / 1.0)))) - 0.0), 0.0, 0.0, (max(((round(length(normalize(cos(vec2(0.0, 0.0)))))) - 0.0), round(length(normalize(cos(vec2(0.0, 0.0))))))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)) : (- 79.45))), 0.0))))))) : (- 110.934))), (1.0 * ((((false ? (7.7) : (max(float(mat2x4((mix(float((float(true))), float((injectionSwitch.x)), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4((mix(float((float(true))), float((injectionSwitch.x)), bool(true))), 1.0, 1.0, 0.0, 0.0, ((max(float(((mat4x2(0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(((mat4x2(0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0))))))))), (1.0 * ((injectionSwitch.x)))))) | (gl_WorkGroupID)).x;
 if((((injectionSwitch.x > ((injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((((((false ? (smoothstep(- 88.85, 27.29, injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > ((injectionSwitch.y) * 1.0)))))
  return;
 uint virtual_gid = workgroup_base + (~ (((~ ((min(subgroup_id * ((_GLF_struct_replacement_0.subgroup_size) * uint((injectionSwitch.y))), subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) / 1u))) + (uint(uvec3(((((((subgroup_local_id) ^ 0u)) | 0u)) ^ 0u), 0u, 1u)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((bool(bvec3(((bool(bvec4((((false)) || false), true, false, ((injectionSwitch.x > injectionSwitch.y))))) && true), true, true)))))
  barrier();
 if((false))
  return;
 uint next_virtual_gid = (((((((~ (~ ((((clamp(((((((((((((~ (~ (((((clamp((uint(uvec3(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u, 1u))), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)) ^ 0u))))) | (((clamp((uint(uvec3(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u, 1u))), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))))) >> 0u)) >> 0u) + (((true ? (subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size : (num_workgroup)))))) << uint((injectionSwitch.x))) | ((((1u * ((((((((((clamp((uint(uvec3(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u, 1u))), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) >> 0u)) >> 0u) + ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size)) ^ 0u))))) << uint((injectionSwitch.x)))), (((((((((((clamp((uint(uvec3(workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u, 1u))), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) >> 0u)) << 0u)) >> 0u) + (((uint((injectionSwitch.x)) | (subgroup_local_id + 1))) % _GLF_struct_replacement_0.subgroup_size))) << uint((injectionSwitch.x)), (((((((((clamp((uint(uvec3((1u * (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), 0u, 1u))), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) >> 0u)) >> 0u) + ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size))) << uint((injectionSwitch.x)))) + 0u)))))) | uint((injectionSwitch.x)))) - (0u | 0u))) | (((0u | ((workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size) >> (min((uint(uint(0u))), (~ (~ (0u)))))))) + (((uint(uint(((((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size) | ((subgroup_local_id + ((((1) ^ (0 << (int(0))))) << 0)) % _GLF_struct_replacement_0.subgroup_size))))))) >> 0u)));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if((false))
      return;
    }
   return;
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     return;
    }
  }
 if(((bool(bool((bool(bvec4((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, false, false))))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
        return;
       return;
      }
     return;
     if((((! ((bool(bvec4(! ((false)), false, false, false))))) || false)))
      return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 buf[virtual_gid] = (~ (~ (1)));
 if((false))
  return;
 if((false))
  barrier();
 if((((((true ? injectionSwitch.x : (dot(- 258.977, exp2(- 523.457))))) > injectionSwitch.y))))
  barrier();
 if(((((((false || ((bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) || false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((! (! (injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
    return;
   barrier();
   if((((! (((! ((! (! (bool((bvec2(bvec2(bvec2(((((injectionSwitch.x > injectionSwitch.y)))) || false, ((injectionSwitch.x < injectionSwitch.y)))))))))))) && true))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((true && (false)))) || false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y) || false), true, true)))))))
      return;
     if((false))
      return;
     if(((true && (! (((! ((false || ((((false)) && true))))) || false))))))
      return;
     return;
    }
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if((bool((bvec2(bvec4(bvec2((((false) && ((injectionSwitch.x < injectionSwitch.y)))), false), false, false))))))
    return;
   barrier();
   if((false))
    return;
   if((false))
    return;
  }
 if((! ((false || (! (((false || (((injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if((bool(bvec4((false), false, ((injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if((bool(bool((false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((! (! (((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))) || false)))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (false))))
      barrier();
     if((false))
      return;
     barrier();
    }
   return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
}
