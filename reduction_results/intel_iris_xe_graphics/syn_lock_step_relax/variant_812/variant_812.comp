#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false)) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((bool((bvec3(bvec4(bvec3((! ((! (! (! (((((((! (! (((max(min(injectionSwitch.x, (((vec2(injectionSwitch[0], injectionSwitch[1])).x) - sin(0.0))), ((min(injectionSwitch.x, ((max((injectionSwitch.x), (injectionSwitch.x))) - sin((clamp(0.0, 0.0, (float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))) / 1.0)))) > ((injectionSwitch) * vec2(1.0, 1.0)).y))))))) || false))))))), (false || (false)), false), true))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((((injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if(((((false || ((bool(bool((vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, (float(((((true ? vec3(0.0, sin(0.0), 1.0) : (vec3(7.2, 92.89, 8.6))))) * vec3(1.0, 1.0, 1.0)))), 0.0))).x > ((false ? (injectionSwitch) : injectionSwitch)).y)))))))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (((((min(gl_WorkGroupSize.x, ((gl_WorkGroupSize) << uvec3((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))).x)))) << ((0u ^ 0u) | 0u)) - 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))
  barrier();
 uint workgroup_base = (uint(((uint(workgroup_size)) + 0u))) * (uint((injectionSwitch.x)) + ((uint(uvec3(workgroup_id, 0u, 1u)))));
 uint virtual_gid = workgroup_base + subgroup_id * ((subgroup_size) | (((subgroup_size)) - (~ ((uint(uint((0u | (~ (((uint((injectionSwitch.x))) ^ uint((injectionSwitch.x))))))))))))) + subgroup_local_id;
 uint next_virtual_gid = ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | (((uint(uint((workgroup_base + ((true ? (min((max(subgroup_id, subgroup_id)) * subgroup_size, (min((max(subgroup_id, subgroup_id)) * subgroup_size, (max(subgroup_id, subgroup_id)) * subgroup_size)))) : (workgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)) >> 0u))))));
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
}
