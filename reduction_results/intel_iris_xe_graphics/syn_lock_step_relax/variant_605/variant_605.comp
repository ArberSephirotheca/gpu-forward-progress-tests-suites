#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((((~ (((((((injectionSwitch.x < injectionSwitch.y)) && ((! (((! ((false))) || false))))) && true) ? (subgroup_local_id) : (uint(uint(~ (clamp((~ (~ ((0u ^ ((workgroup_size)))))), ((min(((workgroup_size) | (workgroup_size)), workgroup_size))), (max(((min(workgroup_size, workgroup_size))), (workgroup_size))))))))))))) | 0u) * workgroup_id) | (0u + ((max((((((((workgroup_size * workgroup_id))) | 0u)) >> 0u) - 0u), ((((min((uint(uint(((((workgroup_size * workgroup_id))) | 0u)))), ((((workgroup_size * workgroup_id))) | 0u)))) >> 0u) - 0u))))));
 uint virtual_gid = workgroup_base + (((~ ((min(1u, 1u)) * ((~ (subgroup_id)))))) | ((0u ^ (((((0u ^ 0u) ^ (subgroup_id)) + uint((max(((vec2(mat2(injectionSwitch, 1.0, 1.0))).x), (float(mat4(((vec2(mat2(injectionSwitch, 1.0, 1.0))).x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))))))) * ((true ? subgroup_size : (147064u))) + (((((0u | (true ? (min((((uint(uvec4(subgroup_local_id, 1u, uint((injectionSwitch.x)), 1u)))) / 1u), subgroup_local_id)) : (((0u + ((uint(true))))) - 0u)))))) | (subgroup_local_id));
 uint next_virtual_gid = ((workgroup_base + subgroup_id * subgroup_size + ((~ ((((uint(uvec3(~ ((0u | ((subgroup_local_id + (((min(int(ivec3(((0 | (int(((false ? (ivec4(- 40215, - 46288, - 79950, - 81562)) : ivec4((max(0 ^ (1), (clamp(0 ^ (1), 0 ^ (1), 0 ^ (1))))), 1, 0, 0))))))), 0, 0)), int(ivec3(0 ^ (1), 0, 0))))))) % subgroup_size))), 1u, 1u))) | (uint(uvec3(~ ((0u | ((subgroup_local_id + (((((min(int(ivec3(0 ^ (1), 0, 0)), int(ivec3(0 ^ (1), 0, 0))))))) >> 0)) % subgroup_size))), 1u, 1u))))))))) | ((clamp((((max(workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id + (0 ^ (1))) | (subgroup_local_id + (0 ^ (1))))) % subgroup_size), ((workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id + (0 ^ (1))) | (subgroup_local_id + (0 ^ (1))))) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id + (0 ^ (1))) | (subgroup_local_id + (0 ^ (1))))) % subgroup_size)))))) ^ 0u), (((max(workgroup_base, workgroup_base)) + ((subgroup_id) >> 0u) * subgroup_size + ((((((subgroup_local_id + (0 ^ (1))) | (subgroup_local_id + (0 ^ (1)))) | 0u))) % subgroup_size)) ^ 0u), ((workgroup_base + subgroup_id * ((subgroup_size) | uint((injectionSwitch.x))) + ((((((subgroup_local_id + ((((int(int(0 ^ (1))))) ^ 0))) / 1u)) | (subgroup_local_id + (0 ^ (1))))) % subgroup_size)) ^ 0u)))));
 if(((((((false || (((! (((! ((! (! (((((clamp(injectionSwitch.x, injectionSwitch.x, (mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y)) && true)))))) && true))))))) && true)) && true)))
  return;
 buf[virtual_gid] = 1;
 if(false)
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint((clamp((~ (~ ((min(2, 2))))), 2, 2))), 4, 64, 0);
  }
}
