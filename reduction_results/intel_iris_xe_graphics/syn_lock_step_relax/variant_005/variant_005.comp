#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((((gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) << (uvec3(0u))))) * uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((uint((uvec2(1u, 1u) * (uvec2((~ (~ (workgroup_size))), 0u))))) >> (0u ^ 0u))) * workgroup_id;
 uint virtual_gid = (min((clamp((((min((0u ^ ((0u | (workgroup_base + subgroup_id * subgroup_size)))), (((((~ (~ (((~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))) << 0u))))) << 0u)) | 0u)))) << 0u), (min((0u ^ (clamp((((max(0u, 0u)) | (workgroup_base + subgroup_id * subgroup_size))), (((max(0u, 0u)) | (workgroup_base + subgroup_id * subgroup_size))), (((max(0u, 0u)) | (workgroup_base + subgroup_id * subgroup_size)))))), ((~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))) << 0u))), ((min(((min(((false ? (subgroup_local_id) : (0u ^ ((((0u) / 1u) | (workgroup_base + subgroup_id * subgroup_size)))))), ((((~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))) | (~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))))) << 0u))) - 0u), min((0u ^ ((0u | (workgroup_base + subgroup_id * subgroup_size)))), ((((~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))) | (uint((injectionSwitch.x)) ^ 0u))) << 0u))))))), ((0u | (min((0u ^ ((0u | (workgroup_base + subgroup_id * subgroup_size)))), ((~ (~ ((((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size)))))) << 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + (min(subgroup_id * (((max(((clamp(((max(subgroup_size, (~ (((~ (subgroup_size)) - 0u)))))), ((max(subgroup_size, subgroup_size))), (0u | ((((((false ? (workgroup_base) : (((((max(subgroup_size, ((subgroup_size) ^ 0u)))))) | (0u ^ 0u)))) - 0u)) + 0u))))) | (clamp(((((((max(subgroup_size, (~ (~ (subgroup_size))))) | 0u)) ^ 0u))), ((max(subgroup_size, subgroup_size))), (0u | (((((max(subgroup_size, subgroup_size)))) + 0u)))))), clamp(((((false ? (workgroup_id) : (clamp(max(subgroup_size, (~ (~ (subgroup_size)))), max(subgroup_size, (~ (~ (subgroup_size)))), max(subgroup_size, (~ (~ (subgroup_size)))))))))), ((max(subgroup_size, subgroup_size))), (0u | (((((max(subgroup_size, subgroup_size)))) + 0u))))))) | (((subgroup_size) | (subgroup_size)))), (max(subgroup_id * ((((((clamp(((max(subgroup_size, subgroup_size))), (((((((0u | (max(subgroup_size, subgroup_size)))) + uint((injectionSwitch.x))))) | ((max(((((0u | (max(subgroup_size, subgroup_size)))) + uint((injectionSwitch.x)))), ((((0u | (max(subgroup_size, subgroup_size)))) + uint((injectionSwitch.x))))))))), (((~ (~ (~ (((~ ((max(0u | (((((max(subgroup_size, subgroup_size)))) + 0u)), 0u | ((((((uint(((uvec3(((((injectionSwitch.x < injectionSwitch.y)) ? max(subgroup_size, subgroup_size) : (subgroup_local_id))), 1u, 1u)) ^ uvec3(0u, 0u, 0u))))))) + 0u)))))) | (((~ ((max(0u | (((((max(subgroup_size, subgroup_size)))) + 0u)), 0u | (((((max(subgroup_size, subgroup_size)))) + 0u)))))) | (~ ((max(0u | (((((max(subgroup_size, subgroup_size)))) + 0u)), 0u | (((((((max(subgroup_size, subgroup_size)))) | (((((max(subgroup_size, subgroup_size)))) / 1u)))) + 0u))))))))))))))))) >> 0u)) >> 0u)) | ((max(subgroup_size, ((subgroup_size) << (0u | 0u)))))), (min(subgroup_id * ((((clamp((((((((0u | ((uint(uvec2(max(subgroup_size, subgroup_size), 1u))))) + 0u)) ^ 0u)))), ((max(subgroup_size, subgroup_size))), (0u | (((((max(subgroup_size, subgroup_size)))) + 0u))))) | (subgroup_size)) | 0u)), subgroup_id * ((clamp(((max(subgroup_size, subgroup_size))), (((~ ((((1u * (true ? ~ (max(subgroup_size, subgroup_size)) : (subgroup_size))))))))), (0u | (((((max(subgroup_size, subgroup_size)))) + 0u))))) | ((max(subgroup_size, subgroup_size)))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[((next_virtual_gid) | (((next_virtual_gid) ^ 0u)))], uint((((true && ((! (! (true))))) ? 2 : (- 38540)))), 4, 64, 0);
}
