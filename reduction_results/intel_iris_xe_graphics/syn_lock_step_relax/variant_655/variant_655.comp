#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
    return;
   return;
   do
    {
     if((false))
      {
       if((false))
        continue;
       return;
      }
    }
   while(false);
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((false) || false)))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 do
  {
   if((false))
    return;
   if((false))
    break;
   if((false))
    break;
   if((false))
    {
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         continue;
        }
       if((((false) && true)))
        continue;
       if((false))
        continue;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        break;
       if((false))
        break;
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          break;
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      continue;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            return;
           break;
          }
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(false);
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       do
        {
         return;
         if((false))
          continue;
        }
       while(false);
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         if((false))
          return;
         return;
        }
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if(true)
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((bool(bvec4(bool(bvec4(false, false, false, false)), false, false, false))))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   return;
  }
 if(true)
  {
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if((false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if((false))
          break;
         if((false))
          break;
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(((bool(bvec2(false, true)))))
      return;
     if((false))
      return;
     if((false))
      return;
     if(((! (! (((false) && true))))))
      return;
     return;
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((bool(bvec4(false, false, true, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((true && (true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
      }
     else
      {
      }
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(0))) >> (((true ? int(0) : (77806))))); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(((false || (false))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 & - 21521) >> (int(0))); _injected_loop_counter --)
        {
         return;
         if(((bool(bool(false)))))
          continue;
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter != ((((1 << (int(1))) >> (int(1))) << (int(7))) >> (int(7))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      return;
     if((false))
      return;
     if(((! (((! (false)) || false)))))
      return;
     if((false))
      return;
     if(((true && (false))))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (false))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          {
           if(true)
            {
             return;
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   for(int _injected_loop_counter = (- 11499 & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      continue;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((false || (false))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if(((false || (false))))
            return;
           return;
          }
        }
       while(false);
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((((false) && true)))
          return;
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           return;
          }
        }
       return;
       if((false))
        return;
       if(((bool(bvec4(false, true, true, true)))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if(((false || (false))))
        return;
       return;
      }
     if(true)
      {
       return;
      }
     else
      {
      }
     if((false))
      return;
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      continue;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
    {
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        break;
      }
     else
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        {
         if(((! (! (false)))))
          continue;
         if((false))
          {
           if((false))
            break;
           return;
          }
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if((false))
        {
         if(((! (! ((! (! (false))))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         return;
        }
       if((false))
        continue;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          return;
         continue;
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((! (! (false)))))
        continue;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           return;
           if((false))
            continue;
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec3(false, false, true)))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       break;
      }
     if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(false)
        {
        }
       else
        {
         if((false))
          return;
        }
       if(((bool(bool(false)))))
        break;
       continue;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         continue;
        }
       break;
      }
     if((false))
      {
       if((false))
        break;
       continue;
      }
     return;
     if((false))
      return;
     if((false))
      break;
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) && true)))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             return;
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
          {
           return;
          }
         if((false))
          {
           do
            {
             if((false))
              break;
             return;
            }
           while(false);
          }
        }
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          break;
         continue;
        }
       if(true)
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          continue;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             return;
            }
           if((false))
            break;
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 << (int(6))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       return;
      }
     if((false))
      return;
     if((false))
      return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        {
         if((false))
          break;
         continue;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((false) && true)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((false) || false)))
    {
     if((false))
      return;
     return;
    }
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (clamp((~ (~ (0))), 0, (int(ivec3(0, 0, 1))))); _injected_loop_counter --)
    {
     if((false))
      {
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if((false))
      {
       if((false))
        break;
       if((false))
        {
         if((false))
          break;
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
         if((false))
          continue;
        }
       if((false))
        break;
       if((false))
        {
         if((false))
          break;
         break;
        }
       if((false))
        continue;
       return;
      }
     if((false))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
       if((((false) || false)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          continue;
         break;
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((! ((! (! (! (false)))))))
      {
      }
     else
      {
       if((bool(bool(true))))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
        }
       else
        {
        }
      }
     if((false))
      {
       if((false))
        continue;
       break;
      }
     if((false))
      break;
     if((false))
      return;
     if((false))
      {
       if((false))
        continue;
       if((false))
        continue;
       continue;
      }
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 do
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      {
       if(false)
        {
         if((false))
          break;
        }
       else
        {
         if((false))
          return;
         if((false))
          return;
        }
       if((false))
        continue;
       if((false))
        {
         if((false))
          break;
         return;
        }
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
    }
   if((false))
    break;
  }
 while(false);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((false) || false)))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if((false))
    return;
  }
 do
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
   GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y = subgroup_id;
   if((false))
    {
     if((false))
      {
       if((false))
        break;
       break;
      }
     continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      break;
     if((false))
      {
       if((false))
        break;
       continue;
      }
     if(((false || ((! (! (false)))))))
      return;
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
     if((false))
      break;
     if((((false) && true)))
      return;
    }
   if((false))
    break;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      {
       if((false))
        break;
       continue;
      }
     break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if(true)
    {
     if((false))
      return;
     return;
    }
   else
    {
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if((false))
    {
     if((false))
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       else
        {
        }
      }
     if((false))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       do
        {
         if((false))
          return;
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           if((false))
            {
             if((false))
              continue;
             return;
            }
           return;
           if((((false) && true)))
            continue;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(false);
      }
     else
      {
       if((false))
        return;
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     for(int _injected_loop_counter = ((int((injectionSwitch.y))) >> 0); _injected_loop_counter > (41076 & 0); _injected_loop_counter --)
      {
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          break;
         return;
        }
       return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((false) && true)))
      return;
     return;
    }
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       do
        {
         return;
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if((bool(bvec4(true, true, false, false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     do
      {
       if((false))
        return;
       if((false))
        return;
      }
     while(false);
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   do
    {
     if((false))
      continue;
     if((false))
      return;
     if((false))
      continue;
    }
   while(false);
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((true && (false))) && true)))
    return;
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           return;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          return;
        }
      }
     else
      {
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         return;
         if((false))
          return;
        }
       if((false))
        return;
      }
     if((false))
      return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false) && true)))
  return;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     return;
    }
  }
 if((false))
  return;
 if((((false || (bool((bvec3(bvec3(bvec3((! (! (false))), false, false))))))))))
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      return;
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     else
      {
      }
    }
   return;
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    return;
   do
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   while(false);
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((false))
      break;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      {
       if((false))
        return;
       continue;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           continue;
          }
         if((false))
          break;
         return;
        }
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       if((false))
        {
         if((false))
          continue;
         break;
        }
      }
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   if(((! (! (false)))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if(true)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((false) || false)))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        return;
      }
     return;
    }
   for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if((false))
        continue;
      }
     if((false))
      continue;
     if((false))
      return;
     if((false))
      {
       if((false))
        continue;
       break;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       continue;
      }
    }
   while(false);
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   do
    {
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if(((false || (false))))
          continue;
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          continue;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        break;
      }
     if((((((false) || false)) && true)))
      return;
     if((false))
      continue;
     if((false))
      continue;
    }
   while(false);
  }
 else
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      {
       if(true)
        {
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if((false))
          return;
        }
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y = subgroup_size;
   if((false))
    return;
   if((((false) || false)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       return;
       if((false))
        return;
      }
     else
      {
       if((false))
        return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        return;
       if((false))
        break;
       if(false)
        {
         if((false))
          break;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              break;
             break;
            }
           return;
          }
         if((false))
          break;
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          break;
         break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(((((bool(bool(false)))) || false)))
          continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            continue;
           return;
          }
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          {
           if((false))
            continue;
           break;
          }
         continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         if((false))
          return;
         return;
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((bool(bvec2(false, true)))))
            continue;
           continue;
           if(((bool(bool(false)))))
            break;
           if((false))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
           if((false))
            continue;
           return;
          }
         if((false))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               continue;
              }
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if((false))
              return;
             continue;
             if((false))
              return;
            }
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(4))) >> ((min(int(4), int(4))))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                continue;
               break;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
               if((false))
                break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if((false))
          continue;
         if((false))
          break;
         if((false))
          {
           if((false))
            break;
           break;
          }
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     do
      {
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((false))
      return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(false);
  }
 if((false))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   do
    {
     if((false))
      continue;
     if((false))
      {
       if(((! (! (false)))))
        return;
       return;
      }
    }
   while(false);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((((false) && true)) && true)))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        {
         if((false))
          return;
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           return;
          }
        }
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   do
    {
     return;
    }
   while(false);
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(((! (! (false)))))
      return;
    }
  }
 else
  {
   if((((false) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z = subgroup_local_id;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if(true)
        {
         if((false))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((false))
          return;
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
         if((false))
          return;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       if((false))
        return;
      }
     if(((! (! (false)))))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
       if(((false || ((bool(bvec2(false, false)))))))
        return;
       if((false))
        return;
       if(((! (! (false)))))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           return;
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           return;
           if((false))
            continue;
          }
        }
       if((false))
        return;
       if((((false) && true)))
        return;
       if((false))
        return;
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          return;
        }
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               return;
              }
            }
           if((false))
            return;
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(true)
        {
         if((false))
          return;
         return;
        }
       else
        {
        }
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      break;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       if((false))
        continue;
       if((false))
        break;
      }
     if((false))
      break;
     if((false))
      break;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        continue;
       return;
      }
    }
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      break;
     return;
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   do
    {
     return;
    }
   while(false);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          {
           if((false))
            continue;
           return;
          }
         if(true)
          {
           return;
          }
         else
          {
           if((false))
            return;
          }
         if((false))
          return;
        }
      }
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   while(false);
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((false) && true)))
  return;
 if((false))
  return;
 if((false))
  {
   do
    {
     if((false))
      return;
     if((false))
      return;
    }
   while(((false) || false));
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
         if(((false || (false))))
          return;
        }
      }
     if((false))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       return;
      }
     if(((! (! (false)))))
      return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       continue;
      }
     if((false))
      return;
     if((false))
      continue;
     if((false))
      break;
    }
   if((false))
    {
     for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        return;
       if(false)
        {
        }
       else
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           return;
          }
         if((false))
          {
           if((false))
            return;
           return;
          }
        }
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        break;
       if((false))
        return;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            return;
           return;
          }
        }
       if((false))
        continue;
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       continue;
      }
    }
   while(false);
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
      }
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(true)
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if((false))
        return;
       return;
      }
    }
  }
 else
  {
  }
 if(true)
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
  }
 if((false))
  {
   do
    {
     return;
    }
   while(false);
  }
 if((((false) || false)))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   do
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
      {
       if(true)
        {
         return;
         if(((false || (false))))
          return;
        }
       else
        {
        }
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 do
  {
   if((false))
    break;
   if((false))
    return;
   if((false))
    return;
   if((false))
    break;
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if(true)
    {
     if((false))
      return;
     return;
    }
   else
    {
    }
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       do
        {
         if((((! (! (bool(bvec4(false, true, false, true))))))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       while(false);
      }
     if((false))
      return;
     if(((bool(bvec4(false, true, false, false)))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bool(false)))))
      {
       if((false))
        {
         if((false))
          return;
         if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if((false))
        return;
       do
        {
         return;
         if((false))
          break;
        }
       while(false);
      }
     for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(2))) >> (int(2))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        continue;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
      }
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          {
           if((false))
            break;
           return;
          }
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         return;
         if((false))
          return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   do
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          break;
         return;
        }
       if((false))
        return;
       if(((false || (false))))
        return;
       if((false))
        break;
      }
     while(false);
     return;
    }
   if((false))
    {
     if(false)
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     else
      {
       return;
      }
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   for(int _injected_loop_counter = 0; _injected_loop_counter != (0 | 1); _injected_loop_counter ++)
    {
     if((false))
      return;
    }
  }
 if((false))
  return;
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((bool(bvec2(false, true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
        }
       else
        {
         if((false))
          return;
        }
       if((false))
        return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
     if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x = num_workgroup;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(false);
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if(((! (! (false)))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      continue;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if((false))
      continue;
     return;
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if(true)
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
       if((false))
        return;
      }
     else
      {
      }
    }
   if((((false) && true)))
    {
     if((false))
      {
       if((false))
        return;
       if(true)
        {
         return;
         if((false))
          return;
        }
       else
        {
         do
          {
           do
            {
             if((false))
              {
               if((false))
                {
                 if(((false || (false))))
                  continue;
                 continue;
                }
               if((false))
                return;
               return;
              }
             if((false))
              break;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
        }
      }
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(((true && (false))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     do
      {
       if((false))
        {
         if((false))
          continue;
         return;
        }
      }
     while(false);
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(((! (! (false)))))
          return;
        }
       if(((bool(bool(false)))))
        return;
      }
    }
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     return;
     if((false))
      return;
    }
   for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter < (1 | (1 ^ 0)); _injected_loop_counter ++)
    {
     if((false))
      {
       if((false))
        break;
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if(false)
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       return;
      }
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       return;
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if((false))
            return;
           return;
          }
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        break;
       return;
      }
     return;
     if((false))
      continue;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   if((false))
    {
     if((false))
      break;
     if((false))
      return;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
  }
 if((false))
  return;
 do
  {
   if((false))
    {
     if((false))
      {
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
       if((false))
        break;
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        {
         if((false))
          continue;
         if(true)
          {
           if((false))
            return;
           for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              break;
             for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                return;
              }
            }
          }
         else
          {
           if((false))
            return;
          }
         if((false))
          continue;
         if((false))
          {
           if((false))
            continue;
           return;
          }
         if(false)
          {
          }
         else
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if((false))
          break;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          {
           for(int _injected_loop_counter = ((0) >> 0); _injected_loop_counter < ((1 << (int(5))) >> ((int(ivec2(int(5), 1))))); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           break;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         return;
        }
       if(((bool(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), true)))))
        break;
       if((false))
        {
         if((false))
          {
           if((false))
            break;
           break;
          }
         continue;
        }
       if(((! (! (false)))))
        return;
       if(((! (! ((! (! (false))))))))
        {
         if((false))
          continue;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          return;
         if((false))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((false || (false))))
            return;
           if((false))
            continue;
           return;
           if((false))
            continue;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         if((false))
          return;
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          {
           if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
            {
             if((false))
              return;
             continue;
             if((false))
              continue;
            }
           return;
          }
         return;
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            continue;
           break;
          }
         break;
         if((false))
          return;
        }
       if((false))
        {
         if((false))
          continue;
         if((false))
          break;
         return;
        }
       if((false))
        continue;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
         return;
        }
       if((false))
        break;
       if((false))
        break;
       if((false))
        return;
       if(false)
        {
         if((false))
          return;
        }
       else
        {
         if((false))
          break;
         if((false))
          {
           if((false))
            return;
           if((false))
            return;
           if((false))
            {
             if((false))
              continue;
             return;
            }
           return;
           if((false))
            continue;
          }
         if((false))
          {
           if(((bool(bvec3((! (! (false))), false, true)))))
            continue;
           continue;
          }
         if((false))
          break;
        }
      }
     else
      {
       if((false))
        return;
       return;
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              break;
             break;
            }
           return;
           if((false))
            {
             if(((bool(bool(false)))))
              continue;
             break;
            }
          }
         for(int _injected_loop_counter = (((1 << (int(3))) >> (int(3))) | 1); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            continue;
           if(((false || (false))))
            continue;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
          }
        }
       if((false))
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.z = workgroup_size;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     for(int _injected_loop_counter = (- 83138 & 0); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       return;
       if((false))
        continue;
      }
     if((false))
      return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   do
    {
     if((false))
      continue;
     return;
    }
   while(false);
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(false)
  {
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if(true)
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if((false))
  return;
 if(true)
  {
   GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
   do
    {
     if((false))
      return;
    }
   while(false);
   if((false))
    return;
   if((false))
    {
     if(true)
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if(true)
      {
       return;
       if((false))
        return;
      }
     else
      {
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       while(false);
      }
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   return;
  }
 uint workgroup_base = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.z * GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       do
        {
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     return;
     if(((false || (((false) && true)))))
      return;
    }
   do
    {
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if((false))
      return;
    }
   while(false);
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   if((false))
    return;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 do
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if(true)
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           if((false))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
           GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if((false))
              continue;
             continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              return;
             if((false))
              break;
             continue;
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            return;
           if((false))
            return;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            {
             if((false))
              continue;
             continue;
             if((false))
              break;
            }
           if((false))
            continue;
           return;
          }
         if((false))
          return;
         if((false))
          break;
         if((false))
          continue;
        }
       if((false))
        return;
      }
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if(true)
  {
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     return;
     if((false))
      break;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if(((bool((bvec2(bvec4(bvec2(false, true), false, false)))))))
          return;
         if((false))
          {
           if((false))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(((bool(bvec3(((false) || false), false, false)))))
          {
           if((false))
            return;
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(false);
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           break;
          }
         return;
         if((false))
          return;
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! (false)))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       do
        {
         return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(false);
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if(false)
        {
        }
       else
        {
         return;
         if((false))
          {
           if((! (! ((false || (false))))))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((! (! (true))))
        {
         return;
         if((false))
          return;
        }
       else
        {
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if(((true && (false))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   else
    {
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         break;
        }
       if((false))
        break;
       do
        {
         return;
        }
       while(false);
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      continue;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 >> ((clamp(int(2), int(2), int(2))))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       if(false)
        {
         if((false))
          {
           if(true)
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(true)
            {
             if((false))
              return;
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
      }
     else
      {
      }
     if(((((false || (false))) && true)))
      {
       if(((false || (false))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if((false))
          break;
         continue;
        }
       return;
      }
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((bool(bvec2(((true) || false), false))))
    {
     return;
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if(((bool(bvec2(false, false)))))
    return;
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
     if((false))
      return;
    }
   return;
   if((false))
    return;
  }
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        return;
      }
     else
      {
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y * GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z;
 if((false))
  {
   if(true)
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if((((! (! (bool(bvec4((bool(bool(((injectionSwitch.x > injectionSwitch.y))))), true, false, false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       break;
      }
     if((false))
      return;
     if((false))
      continue;
     if((false))
      continue;
     if((false))
      continue;
     if((false))
      {
       if((((false) || false)))
        return;
       for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((false))
      return;
     if((false))
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           continue;
          }
         if((false))
          break;
        }
      }
     if((false))
      continue;
     return;
     if((false))
      return;
     if((false))
      continue;
     if((false))
      {
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          continue;
         break;
        }
       if((false))
        return;
       return;
      }
    }
  }
 while(false);
 if((false))
  {
   do
    {
     return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     do
      {
       if((false))
        break;
       if((false))
        return;
       return;
      }
     while(false);
    }
   if((false))
    return;
   if(true)
    {
     return;
    }
   else
    {
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((bool(bvec3(bool(bool(false)), true, true))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < ((false ? (52627) : int((injectionSwitch.y)))); _injected_loop_counter ++)
      {
       if((false))
        return;
       if((false))
        break;
       if((false))
        {
         if((false))
          break;
         continue;
        }
       return;
       if(((true && (false))))
        {
         if((false))
          break;
         if((false))
          {
           if(((bool(bool(false)))))
            break;
           break;
          }
         if((false))
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if((false))
          break;
         break;
        }
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    return;
   for(int _injected_loop_counter = (0 ^ (0 << (int(7)))); _injected_loop_counter < ((1 << (int(5))) >> ((clamp((0 ^ (int(5))), int(5), int(5))))); _injected_loop_counter ++)
    {
     return;
     if((false))
      continue;
    }
  }
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y * GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y + ((GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z + 1) % GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y);
 do
  {
   if((false))
    {
     if((false))
      continue;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      break;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if((((false) && true)))
    continue;
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  return;
 do
  {
   if((false))
    continue;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     continue;
     if((false))
      break;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        continue;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       return;
      }
     if((false))
      return;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if(((true && (false))))
        break;
       continue;
      }
    }
   if((false))
    continue;
  }
 while(false);
 if((false))
  return;
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       break;
      }
     if(((true && (false))))
      return;
     if((false))
      return;
     if(false)
      {
       if((false))
        return;
      }
     else
      {
       if(true)
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         if((false))
          break;
        }
       else
        {
        }
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.x = next_virtual_gid;
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.x], uint(2), 4, 64, 0);
   if((false))
    continue;
  }
 if(true)
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      {
       if((false))
        return;
       if(((true && (false))))
        break;
       return;
       if((false))
        return;
       if((false))
        continue;
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   if((false))
    {
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      return;
     if((false))
      {
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(((bool(bvec3(false, true, false)))))
          return;
         if((false))
          {
           if((false))
            break;
           continue;
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       if(((false || (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         return;
        }
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       for(int _injected_loop_counter = (1 * (0)); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             return;
            }
           if(true)
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((((bool(bool(false)))) || false)))
                  continue;
                 return;
                }
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
            }
           if((false))
            return;
           if(true)
            {
             return;
             if((false))
              return;
            }
           else
            {
             if((false))
              break;
             if((false))
              return;
            }
           do
            {
             if(((false || (false))))
              return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       if(((false) || ((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          {
           if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if((false))
          return;
        }
       else
        {
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              return;
            }
           else
            {
            }
           return;
          }
         if((false))
          {
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(((false || (false))))
      continue;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if((false))
      break;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        return;
       if((((false) || false)))
        continue;
      }
    }
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if(((((! (! (false)))) && true)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec3(false, true, true)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((! (! (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              continue;
             if((false))
              continue;
             return;
            }
           while(false);
          }
        }
       else
        {
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         return;
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   do
    {
     if((false))
      return;
    }
   while((false || (false)));
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      break;
     if((false))
      return;
     return;
     if((false))
      break;
    }
  }
}
