#version 460

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 ivec2 _f1;
 float _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 uvec4 _f1;
 uint workgroup_base;
 _GLF_struct_2 _f2;
 uvec4 _f3;
 float _f4;
 mat4 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_1(bvec2(true), ivec2(1), _GLF_struct_0(vec2(1.0), ivec2(1), 1.0, mat3(1.0)), mat4x3(1.0)), uvec4(1u), workgroup_size * workgroup_id, _GLF_struct_2(ivec4(1)), uvec4(1u), 1.0, mat4(1.0));
 uint virtual_gid = _GLF_struct_replacement_3.workgroup_base + ((subgroup_id * subgroup_size) + (~ (~ ((((false ? (148086u) : 0u)) << (uint(1u))))))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
