#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((! ((! (! (! ((false))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((! (((((! (! (((! (((false || (((false) && ((bool((bvec2(bvec2(bvec2(bool(bvec3(true, true, false)), false)))))))))) || (((true && ((((injectionSwitch.x > injectionSwitch.y)))))))))) && true)))) && (! (! (true)))) || false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! (! ((bool((true && (bool((false)))))))))) || false))
  barrier();
 uint workgroup_size = (max(gl_WorkGroupSize.x, ((false ? ((~ (~ (((packHalf2x16(injectionSwitch)) >> (((true && ((true && ((((mix(float((- 8546.0061)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))) ? ((uint(uvec3(((((~ (~ (0u)))) | 0u)), 0u, 1u))) | (0u)) : (clamp(subgroup_id, subgroup_id, 10140u))))))))) : ((((clamp(((uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)) | (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))), (~ (~ (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))).x) / 1u)))));
 if(((! (! (((bool(bvec3(((((true && ((bool(bool((! ((bool(bool(! (injectionSwitch.x > (((vec2((max((max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))), (clamp(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0), ((vec3(injectionSwitch, 0.0)) * mat3(1.0)))))))) - vec2(0.0, 0.0))).y)))))))))))))), ((bool(bool((false || ((((false)) || false)))))) || (true && (((false) || (! ((! (! (! (((false) && true))))))))))), (bool((bvec2(bvec3(bvec2((((bool(bool(true))) || (! (! (false))))), false), false))))))))) || (((bool(bvec2((bool(bvec4((! (! (false))), (false || (false)), ((injectionSwitch.x > injectionSwitch.y)), true))), false)))) && (bool(bool((! ((false || (! (true))))))))))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = (min((clamp(gl_WorkGroupID, gl_WorkGroupID, ((gl_WorkGroupID) - (max((uvec3(0u, 0u, (0u ^ (0u))) ^ (uvec3(0u, 0u, 0u))), (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))))), ((false ? (uvec3(52759u, 1593u, 135443u)) : (((~ (~ (gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))))).x;
 uint workgroup_base = (((min(0u + (clamp(workgroup_size, (((uint(uint(workgroup_size)))) | (workgroup_size)), workgroup_size)), 0u + (clamp(workgroup_size, workgroup_size, (~ (~ (workgroup_size))))))))) * workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = (0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), (0 | (4)), (clamp(64, 64, (max(64, 64)))), 0);
 uint read_val = atomicLoad(write_val, 4, 64, (max(0, 0)));
 ((((buf[virtual_gid] = uint(subgroupAllEqual(((clamp((((clamp(0u, 0u, 0u)) >> 0u)) | ((((min((max(clamp((((read_val) | (min((read_val), (read_val))))), ((((min(uint(uvec3((read_val) | (read_val), 0u, (1u & 1u))), ((uint(uvec3((read_val) | (read_val), 0u, (((true ? ((1u) | 0u) : (virtual_gid))) & 1u)))) | (uint(uvec3((read_val) | (read_val), 0u, (((true ? ((1u) | 0u) : (virtual_gid))) & 1u)))))))))), (((read_val) | (read_val)))), clamp((((read_val) | (read_val))), (max((((read_val) | (read_val))), (clamp(((((false ? (read_val) : (read_val) | (read_val))))), (((((read_val) | (read_val)))) / 1u), (clamp((((read_val) | (read_val))), (((read_val) | (read_val))), (((read_val) | (read_val))))))))), (((read_val) | (read_val)))))), ((clamp((((min((((clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))) >> 0u), ((false ? (num_workgroup) : (clamp((read_val) | (read_val), (read_val) | (read_val), (read_val) | (read_val))))))))), (((read_val) | (read_val))), (((read_val) | (read_val))))) << 0u))) * 1u))), (((clamp(0u, 0u, 0u)) | ((((min((max(clamp((((read_val) | (min((read_val), (read_val))))), ((((min(uint(uvec3((read_val) | (read_val), 0u, (1u & 1u))), (((0u ^ (uint(uvec3((read_val) | (read_val), 0u, (1u & 1u)))))) | (uint(uvec3((read_val) | (read_val), 0u, (1u & 1u)))))))))), (((read_val) | (uint(uvec4((read_val), 0u, 0u, 0u)))))), (1u * (clamp((((((read_val) | (read_val))) / 1u)), (max((((read_val) | (read_val))), ((min(clamp((((read_val) | (read_val))), (((((read_val) | (read_val)))) / 1u), (clamp((((read_val) | (read_val))), (((read_val) | (read_val))), (((read_val) | (read_val)))))), clamp((((read_val) | (read_val))), (((((read_val) | (read_val)))) / 1u), (clamp((((read_val) | (read_val))), (((read_val) | (read_val))), (((read_val) | (read_val))))))))))), (((read_val) | (read_val)))))))), clamp((((false ? (subgroup_id) : (uint(uint((clamp(((min((((clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))) >> 0u), ((false ? (num_workgroup) : (clamp((read_val) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))))))), ((min((((clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))) >> 0u), ((false ? (num_workgroup) : (clamp((read_val) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))))))), ((min((((clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))) >> 0u), ((false ? (num_workgroup) : (clamp((read_val) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))))))))))))))), (((read_val) | (read_val))), (((read_val) | (read_val)))))) * 1u)))) ^ 0u), (clamp(0u, 0u, 0u)) | ((((min((max(clamp((((((min((read_val), (read_val)))) | ((read_val))) | (min((read_val), (read_val))))), ((((min(uint(uvec3((read_val) | (read_val), 0u, (1u & 1u))), uint(uvec3((read_val) | (read_val), 0u, (1u & 1u)))))))), (((read_val) | (read_val)))), clamp((((read_val) | (read_val))), (max((((read_val) | (read_val))), (clamp((((read_val) | (read_val))), (((((((read_val) | (read_val)))) / 1u)) ^ (0u << (uint(3u)))), (clamp((((min((read_val), (read_val))) | (read_val))), (((read_val) | (read_val))), (((read_val) | (read_val))))))))), ((((min(read_val, read_val))) | (read_val)))))), clamp((((min(((((max(clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)), clamp((((read_val) >> 0u)) | (read_val), (read_val) | (read_val), (read_val) | (read_val)))))) >> 0u), ((false ? (num_workgroup) : (clamp((read_val) | (read_val), (read_val) | (read_val), (read_val) | (read_val))))))))), (((read_val) | (read_val))), (((read_val) | (read_val)))))) * 1u)))))))))) | 0u) << uint((min((injectionSwitch.x), (injectionSwitch.x)))));
 if((false))
  barrier();
}
