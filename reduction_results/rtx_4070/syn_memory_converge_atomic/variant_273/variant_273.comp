#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if(((bool((bvec2(bvec3(bvec2(((false) || false), ((injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if((false))
      barrier();
     if((((((((injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((! (! (! (! ((false || (! (! (((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false || ((false))) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if(((! (! ((! (! (false))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((((false || (((true ? injectionSwitch.x : (25.33))) > ((min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) && true)) && ((injectionSwitch.x < injectionSwitch.y))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((((clamp(injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(((((true && ((true && (((false || (bool(bvec2(false || ((false) || false), true)))))))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((float(mat2x4((min(((((mix(float(((true ? ((injectionSwitch) / vec2(1.0, 1.0)) : (vec2(433.189, 38.55)))).y), float(((7724.3447 / - 6.8))), bool(((false) || false)))))) - log(1.0)), ((((mix(float(((true ? ((injectionSwitch) / vec2(1.0, 1.0)) : (vec2(433.189, 38.55)))).y), float(((7724.3447 / - 6.8))), bool(((false) || false)))))) - log(1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))) - 0.0)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! ((((false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    {
     if((((bool(bool((false)))) && true)))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((true && ((((injectionSwitch.x > injectionSwitch.y)) || false))))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false || ((false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (bool((bvec2(bvec3(bvec2(((! (! (false)))), true), true)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = (uint(uvec3(gl_WorkGroupSize.x, 0u, (~ (((~ (0u)) << 0u))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((0u | (((clamp(((((((((false ? (subgroup_local_id) : (~ (~ (workgroup_size * (max(workgroup_id, workgroup_id))))))) * 1u)) - 0u)) << 0u)), ((workgroup_size * (max(workgroup_id, workgroup_id))) >> 0u), workgroup_size * (max(workgroup_id, workgroup_id))))) / 1u)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + (max((~ (((min(((uint(uvec2((0u ^ ((uint(uint((~ (~ (~ (subgroup_id))))))))), 0u)))), (clamp(((~ (~ (~ (subgroup_id))))), (~ ((max(~ (((~ ((uint(uint((max(~ (~ (subgroup_id)), ~ (~ (subgroup_id))))))))))), ~ (((~ (~ (~ (subgroup_id)))))))))), ((~ (((clamp((~ (~ (subgroup_id))), (~ (~ (subgroup_id))), (~ (~ (subgroup_id)))))) | ((~ (~ (subgroup_id))))))))))) - (0u & 139052u)))), subgroup_id)) * ((0u + ((false ? (write_val) : subgroup_size)))) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((((injectionSwitch.x > ((injectionSwitch.y) * 1.0))) && true))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if(((! (! ((false || ((((vec2(0.0, 0.0) + (((injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bool(((! (! (! ((! (! (! (bool(bvec2((((! (((! (! ((! (! ((! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))), false))))))))))))))))
      barrier();
     if((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), true))) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
     if((((false) || false)))
      barrier();
    }
   if((false))
    {
     if(((((! (! (injectionSwitch.x > ((mix(vec2(((injectionSwitch) * mat2(1.0))[0], (95.84)), (mix(vec2((vec2((min((5.7), (5.7))), ((injectionSwitch) * mat2(((false ? (- 382.024) : (min(1.0, ((1.0) / 1.0)))))))[1]))[0], (- 198.243)), vec2((1.3), (vec2((min((5.7), (5.7))), ((injectionSwitch) * mat2(((false ? (- 382.024) : (min(1.0, ((1.0) / 1.0)))))))[1]))[1]), bvec2(false, true))), bvec2(false, true)))).y)))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! (! (bool(((bool((((! (! ((false))))) && ((injectionSwitch.x < injectionSwitch.y))))) || false)))))))
    barrier();
   if(((! (! (((false)) || false)))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((true && ((bool((bvec2(bvec2(bvec2((false), true)))))))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if(((((mix(((vec2((mix(float((- 2.1)), float((- 3.0)), bool(false))), (3.1))) - vec2(0.0, 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, (! (! (((injectionSwitch.x < injectionSwitch.y)))))))).x > ((injectionSwitch.y) + log(1.0))))))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((! (! ((bool(bvec3(bool((bvec2(bvec2((bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), false))))))), true, false)))))))))
        barrier();
      }
     if((false))
      {
       if((false))
        {
         if(((! (! (false)))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       if(((((bool((bvec2(bvec3((bvec2(bvec4(bvec2(injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y, ((injectionSwitch.x > injectionSwitch.y))), false, false))), false)))))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) && (! (! ((((false || ((false || ((((true && (true)))) && true))))) || (! (! (false))))))))))
      barrier();
     barrier();
    }
   if(((! (! (((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 721.047)), bool(((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(((true && (false))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((! ((! (((! (! (((((! (((! ((bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))))) || false))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((bool(bvec4((false), true, ((injectionSwitch.x > injectionSwitch.y)), false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((! ((bool(bvec4(! ((((false || ((false)))) && true)), true, false, false))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0))).y))))
      barrier();
     if((false))
      barrier();
     if((! ((bool(bvec3(! ((bool(bvec4((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))), ((injectionSwitch.x > injectionSwitch.y)), true, true)))), false, true))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((false || (((((((false ? (- 9.7) : (max((clamp(((true ? injectionSwitch.x : (6.9)) * 1.0), true ? injectionSwitch.x : (6.9), true ? injectionSwitch.x : (float(mat3((((6.9)) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(sin(0.0)), 0.0))))), true ? injectionSwitch.x : (min((6.9), (6.9))))))))) > injectionSwitch.y))))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((bool(bvec2(((false) || false), true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((false || (((false) && true)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 atomicStore(write_val, (~ (~ ((((((~ ((uint(uvec2(~ ((min(uint(virtual_gid), ((uint(virtual_gid)) + 0u)))), 0u))))) / 1u))) / ((max(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))), 4, 64, 0);
 if(((! ((bool(bvec2(! (false), true)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((! (((bool(bvec3(((false || (! (true)))), true, ((injectionSwitch.x > injectionSwitch.y))))) && true))) && (bool(bvec3(((false)), true, false)))) || false) || false))))
  barrier();
 if(((((((((injectionSwitch.x < injectionSwitch.y)) ? min(injectionSwitch.x, injectionSwitch.x) : (- 8.4)))) > injectionSwitch.y))))
  barrier();
 if(((! (((((injectionSwitch.x < injectionSwitch.y)) && ((! ((true && (false)) || ((false)))) || false)))))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_val = atomicLoad((((~ (~ (write_val)))) | (write_val)), 4, 64, 0);
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = ((~ (((~ (((((uint((injectionSwitch.y)) << (uint(2u))) >> ((0u ^ (uint(2u))))) * (((uint(subgroupAllEqual(read_val)))) | 0u))) << 0u)) << 0u))));
 if((false))
  {
   if((bool(bvec2((false), (true && ((! (! (((! (((! (! ((bool(bool(! (true)))))))))) && true))))))))))
    {
     if(((! (! ((! ((bool(bvec2(! (((false || ((injectionSwitch.x > (((min((mat2(1.0) * (injectionSwitch)), injectionSwitch))) * exp(vec2(0.0, 0.0))).y))))), false))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool(bvec4(((((injectionSwitch.x > ((false ? (vec2(- 3119.7984, ((- 438.986) - 0.0))) : (vec2(injectionSwitch[0], injectionSwitch[1])))).y))) || false), false, true, false)))))
      {
       if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((((true ? ((((min(float(((mat4x3(mat4x3(mat4x3(mat4(mat4x3(true ? injectionSwitch.x : (69.04), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, (injectionSwitch.x), 1.0, (injectionSwitch.x), 0.0, 1.0, ((determinant(mat3(0.0, 0.0, 0.0, 0.0, (min(0.0, (min(0.0, 0.0)))), 0.0, 1.0, 1.0, 0.0))) / 1.0), exp(0.0), ((false ? (- 649.831) : 0.0)), 0.0)))))))), float(((mat4x3(mat4x3(mat4x3(mat4(mat4x3(true ? injectionSwitch.x : ((mix(float(69.04), float((- 7684.1406)), bool(false)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, (injectionSwitch.x), 1.0, (injectionSwitch.x), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), exp(0.0), 0.0, 0.0))))))))))))) : (min((((float((bool(bvec3(((true) && true), false, false)))))) - 0.0), (float(true)))))) > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((false) || false)))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if(((bool(bool((! (! ((true && (true && (((! (! (bool(bvec2((! (! (((! (! (((false) || false)))))))), true)))))))))))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
}
