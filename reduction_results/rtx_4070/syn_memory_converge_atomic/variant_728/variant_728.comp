#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if((! ((false || (bool(bool((! ((((((((((mat2((injectionSwitch.y)) * (vec2(0.0, 0.0))) + (vec2(mat3x2((clamp(((vec2(vec3((min((min(injectionSwitch, injectionSwitch)), (vec2(vec3((min(injectionSwitch, injectionSwitch)), 1.0))))), 0.0)))), ((vec2(vec3((min((min(injectionSwitch, injectionSwitch)), (min(((injectionSwitch) * mat2((injectionSwitch.y))), injectionSwitch)))), 0.0)))), ((vec2(vec3((min((min(injectionSwitch, injectionSwitch)), ((min(((false ? (injectionSwitch) : ((min(injectionSwitch, injectionSwitch))) * mat2(1.0))), ((min(injectionSwitch, injectionSwitch))) * (transpose(transpose(mat2((clamp(1.0, 1.0, 1.0))))))))))), 0.0)))))), 0.0, 1.0, 0.0, cos(0.0)))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.w * (max(workgroup_id, (((((max(workgroup_id, workgroup_id))) + 0u)) << 0u)));
 (~ (~ (((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.z = workgroup_base) >> 0u))));
 uint virtual_gid = (~ (~ ((((0u | ((bool(bvec2(true, true))) ? GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.z + (((1u << (uint(5u))) >> ((((min((0u ^ (uint(5u))), uint(5u)))) - ((false ? (usubBorrow(subgroup_local_id, workgroup_base, num_workgroup)) : 0u))))) * (subgroup_id * subgroup_size)) : (workgroup_size)))))))) + (min(subgroup_local_id, subgroup_local_id));
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid;
 atomicStore(write_val, uint((min(((((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y)) | ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y))) / ((min(1u & 1u, 1u & 1u)))), (((1u << (uint(3u))) >> ((min(((uint(uvec4((uint(3u)), 0u, 0u, 0u))) >> 0u), ((uint(uvec4((uint(3u)), 0u, 0u, 0u))) ^ 0u))))) * ((min(((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y) / ((min(1u & 1u, ((((1u) ^ 0u)) | (((~ (~ ((1u))))) | ((1u)))) & 1u)))), ((clamp((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y) / ((min(1u & 1u, ((1u) | (((~ (~ ((1u))))) | ((1u)))) & 1u))), (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y) / ((min(1u & 1u, ((1u) | (((~ (~ ((1u))))) | ((1u)))) & 1u))), (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y) / ((min(1u & 1u, ((1u) | (((~ (~ ((1u))))) | ((1u)))) & 1u))))))))))))), ((4) - (0 >> (int(7)))), 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y] = uint(subgroupAllEqual(read_val));
}
