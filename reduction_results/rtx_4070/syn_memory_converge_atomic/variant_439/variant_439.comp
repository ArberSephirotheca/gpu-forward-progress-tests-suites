#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 ^ 0) | 1); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     do
      {
       switch(0)
        {
         case 91:
         for(         vec2(39.26, 7.6);
 true; mat3x2(- 9899.2526))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
            {
             (+ vec2(222.853, 284.665));
            }
           mat2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
          }
         case 80:
         for(         vec4(- 4.0, 972.314, - 1.8, - 343.597);
 false; ivec3(32016, 84304, - 41448))
          {
          }
         case 0:
         case 26:
         case 24:
         atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
         break;
         default:
         1;
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 do
  {
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
  }
 while(false);
}
