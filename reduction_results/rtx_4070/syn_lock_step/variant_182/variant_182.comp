#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((((! (! (false))) || false))))))
    return;
   if((true && ((false))))
    barrier();
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 if((false))
  barrier();
 if((false || ((false))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > (float(vec4(((mix(float(float(((true ? (mat3(1.0) * (mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, (max(0.0, 0.0)), 1.0, (clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), log(1.0), 1.0, (min(0.0, 0.0)), 1.0))) : (mat2x3((((((float(mat3x4((((min((max(7326.7251, 7326.7251)), (max(7326.7251, 7326.7251))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0)))) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), - 5663.4839, 5.9, 13.47, 96.51, (clamp(578.182, 578.182, 578.182)))))))), float(((true ? - 804.220 : - 9.4))), bool(false)))), 1.0, 0.0, 1.0)))))))
    {
     if((((injectionSwitch.x > (max((mix(float((3258.9504)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 uint workgroup_size = (max((((~ (~ (gl_WorkGroupSize.x))) + 0u)), gl_WorkGroupSize.x));
 if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, ((true ? injectionSwitch.y : (roundEven(6.6))))))))))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((true && ((((clamp(((min(vec2((mat3(1.0) * (mat3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, (max(0.0, (float(mat4x3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, (injectionSwitch.x), 1.0, (injectionSwitch.x), 0.0))))), (mix(float(0.0), float((- 7.2)), bool(((injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)))), ((false ? (injectionSwitch) : ((true ? vec2((mat3(((false ? (6.6) : (max((mix(float((- 758.855)), float(1.0), bool(true))), 1.0))))) * (mat3((clamp(injectionSwitch, (vec2((mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, ((((injectionSwitch.x < injectionSwitch.y)) ? (((((min((clamp((min(1.0, 1.0)), (min(1.0, 1.0)), (min(1.0, 1.0)))), (min(1.0, 1.0))))) + (mix(float((float(float(((true ? log(((true ? 1.0 : (- 0.5)))) : (4017.3371))))))), float((float(86767u))), bool((true && ((true && (false))))))))) + 0.0) : (intBitsToFloat(90334)))), 0.0, 0.0, 1.0, 1.0)))) : (vec2(- 7.1, - 6.2))))))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if((false))
    {
     if(((false || (bool((bvec3((bvec3(bvec4(((bvec3(bvec4(bvec3(bvec4(bvec3(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true)), false)), true)))), true))))))))))
      barrier();
     return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if(((! ((true && (! (bool(bvec4((false), (! (! ((false || (true))))), ((bool(bool(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))), (! ((! (! (! (false)))))))))))))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   return;
   if((false || ((false))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((((((min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > ((clamp(vec2(mat3((clamp(injectionSwitch, injectionSwitch, (((mix(vec2((- 2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 1.8)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3((clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3((clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > (mat2((1.0 * (1.0))) * (injectionSwitch)).y))))
    barrier();
   if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 uint workgroup_base = (max((min((((min(((false ? (subgroup_size) : workgroup_size * workgroup_id)), (max(((false ? (subgroup_size) : workgroup_size * workgroup_id)), (~ (~ (((((false ? (subgroup_size) : workgroup_size * workgroup_id))) | (((false ? (subgroup_size) : workgroup_size * workgroup_id)))))))))))) << 0u), (min(((false ? (subgroup_size) : workgroup_size * workgroup_id)), (max(((false ? (subgroup_size) : workgroup_size * workgroup_id)), (~ (~ (((((false ? (subgroup_size) : workgroup_size * workgroup_id))) | (((false ? (subgroup_size) : workgroup_size * workgroup_id))))))))))))), ((workgroup_size) | (workgroup_size)) * workgroup_id));
 if((false))
  return;
 uint virtual_gid = (~ (~ (workgroup_base))) + ((0u ^ (((max((uint(uvec4(subgroup_id, ((1u) / 1u), 0u, 0u))), (uint(uvec4(subgroup_id, ((1u) / 1u), 0u, 0u))))) | ((~ (~ (((true ? uint(uvec4(subgroup_id, 1u, 0u, 0u)) : (subgroup_size))))))))))) * subgroup_size + ((subgroup_local_id) - 0u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((! ((bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((max(((((((uint(uvec2(uint(uvec3((subgroup_local_id), 1u, 1u)), 0u))))) | ((subgroup_local_id))) + (0u ^ (0u))) + 1) % (uint(uvec3((min(subgroup_size, subgroup_size)), 0u, 1u))), (((subgroup_local_id) + 0u) + ((~ (~ ((1)))) >> 0)) % (min(subgroup_size, subgroup_size)))));
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if(((((bool(bool((! (! (false)))))))) || (bool((bvec2(bvec4(bvec2(false, false), false, true)))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    return;
   if(((! (! ((! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, ((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y)))))))))))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) || false)))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 buf[virtual_gid] = 1;
 ((((true ? buf[next_virtual_gid] = ((((((((injectionSwitch.x < injectionSwitch.y)) && true))) || false) ? ((((2) - 0) | ((2) - 0))) : ((- 23516 ^ - 90114)))) : ((1u * (workgroup_size)))))) | 0u);
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(((bool((bvec3(bvec4(bvec3(false, false, false), false)))))))
    barrier();
  }
}
