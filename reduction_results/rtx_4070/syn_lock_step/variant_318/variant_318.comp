#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if((((((injectionSwitch.x > (clamp(injectionSwitch, (vec2(vec4(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y))) || false)))
  {
   if(((bool(bool(false)))))
    return;
   barrier();
  }
 if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
     if(((bool((bvec3(bvec4(bvec3(((false) && true), (! (! ((bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), false)))))), false), false)))))))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if(((((true && (false))) || ((injectionSwitch.x > injectionSwitch.y)))))
      return;
     barrier();
    }
   return;
  }
 if((((((((false) || false)) && (((mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)))) && (true && ((! (! ((! (! (true)))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((true && (false))))
  {
   if(((((true && ((((false || (false))) || false)))) && true)))
    return;
   if((false))
    {
     if(((((! (! ((((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))))) && true))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > (float(mat4x2((vec2(mat4x2(injectionSwitch, (injectionSwitch.x), 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, (clamp((float(vec2(1.0, 1.0))), 1.0, 1.0))))).y, 1.0, 0.0, (min(0.0, (float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 1.0))))), 0.0, 1.0, 0.0, 0.0)))))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((! (! ((false || ((false)))))))
            return;
           return;
          }
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(((((! ((! (! (! (((min((((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch))) - vec2((injectionSwitch.x), (injectionSwitch.x))).x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (7777.5121)), vec2((8430.3815), (1.0 * ((injectionSwitch)[1]))), bvec2(false, true))).y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((false || (false))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((! (! ((false)))))
        barrier();
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
     if((((((injectionSwitch.x > (vec2(injectionSwitch[0], (max(injectionSwitch[1], injectionSwitch[1])))).y) && true)))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((! (((! (((((bool((true && (bool(false))))))) && true))) || false))))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
     if((((false) || false)))
      return;
    }
   if(((((! (! (false)))) && true)))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((((bool(bvec4(! (! (false)), ((injectionSwitch.x < injectionSwitch.y)), true, true))))))
        return;
       barrier();
      }
     if((false))
      barrier();
     if(((((((false || (((injectionSwitch.x > injectionSwitch.y) || false)))))) && true)))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((! (! (bool(bvec4(false, true, true, true))))))))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) || (true && (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((((((false || ((injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if((((((((bool((true && (bool((false)))))) && true) || false)) && ((injectionSwitch.x < injectionSwitch.y))))))
            barrier();
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
         barrier();
         if((((false) && true)))
          return;
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), ((false) || false), ((false) && true), true))))))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          return;
        }
       return;
      }
     barrier();
     if(((bool(bvec2((bool(bvec2(false, true))), true)))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false || ((true && ((((injectionSwitch.x > injectionSwitch.y))))))))
      return;
     barrier();
    }
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   barrier();
  }
 if(((((bool((bvec3(bvec4(bvec3(false, ((true && ((bool((bool(bool(bool((((((injectionSwitch.x < injectionSwitch.y) || false))) && true)))))))))), false), true))))))) || false))
  barrier();
 if(((true && (false))))
  barrier();
 uint num_workgroup = ((((gl_NumWorkGroups) | (gl_NumWorkGroups))) << uvec3(0u, 0u, 0u)).x;
 if((false))
  {
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > (clamp((mix(float(injectionSwitch.y), float((- 864.095)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
    }
   if(((bool(bvec4(false, false, false, (! (! (true))))))))
    return;
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if(((true && (false))))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(((! (! ((((float(((vec3((((((((float(((((mat4x2((mix(float((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float((- 4976.4546)), bool(false))), 1.0, 1.0, abs(0.0), ((1.0) - 0.0), sin(0.0), 1.0, round(length(normalize(1.0))))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4x2((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) < (mat2(1.0) * (injectionSwitch)).y)) ? injectionSwitch.x : (- 19.93)))) - 0.0), 1.0, 0.0)) * mat3(1.0)))) > injectionSwitch.y)))))))
    {
     if(((! (! (false)))))
      return;
     barrier();
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((bool(bvec2((false), false)))) && true))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((bool(bool(false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((true && ((false))))
    barrier();
   if((((false) && true)))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(((! (! (! (! (((! (! ((bool(bvec4(false, false, false, true))))))))))))))
    {
     if((false))
      {
       if(((false || (false))))
        barrier();
       return;
      }
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (((false)) && (((! (! ((! (! (true))))))) || false))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > (min((float(mat2x3(injectionSwitch.y, length(0.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y))))))
        {
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((((! (! (bool(bvec2(false, true))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((true && ((false))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 uint workgroup_id = (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x;
 if((false))
  {
   if((((false)) && true))
    return;
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = (((max(((workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id))) | 0u);
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((((false) && true)) || false)))
    return;
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if((((false) && true)))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if(((false || ((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if((false))
      return;
     if(((((((injectionSwitch.x < injectionSwitch.y)) && (false)) && true))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((false)) && true))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((1u * (max((clamp(workgroup_base + subgroup_id * ((((subgroup_size) >> 0u) ^ uint((injectionSwitch.x)))) + ((((clamp((((((subgroup_local_id + 1)) - 0u)) | ((subgroup_local_id + 1))) % subgroup_size, (((((subgroup_local_id + 1) % subgroup_size) | ((1u ^ 0u) ^ 1u))) * 1u), (subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % ((subgroup_size) >> 0u)) | ((subgroup_local_id + 1) % subgroup_size))))), workgroup_base + subgroup_id * subgroup_size + ((((min((clamp((((subgroup_local_id + 1) % subgroup_size) / ((1u << (uint(0u))) >> (((true ? uint(0u) : (num_workgroup)))))), (((((((subgroup_local_id + (clamp(1, (int(ivec2(1, 0))), 1))) % subgroup_size) | ((1u ^ (uint((injectionSwitch.y)) * (0u))) ^ 1u)))) / 1u) * 1u), ((true ? (~ (~ ((subgroup_local_id + 1) % subgroup_size))) : (workgroup_size))))), (clamp((subgroup_local_id + 1) % subgroup_size, ((max(((((((((subgroup_local_id + 1) % subgroup_size) | ((1u ^ (((uint((injectionSwitch.y)) * (0u))) >> 0u)) ^ 1u)))) / 1u)) | (0u << (uint(6u)))), ((((((subgroup_local_id + 1) % subgroup_size) | ((1u ^ (uint((injectionSwitch.y)) * (0u))) ^ 1u)))) / 1u))) * 1u), (subgroup_local_id + 1) % subgroup_size))))) | ((((subgroup_local_id + 1) % subgroup_size) | ((uint(uvec2((((subgroup_local_id + 1) % subgroup_size) | ((((subgroup_local_id + 1)) * 1u) % (~ (~ (subgroup_size))))), uint(((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))))))), workgroup_base + subgroup_id * subgroup_size + ((((clamp((((subgroup_local_id + 1) % subgroup_size) * 1u), (((((((subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size) | (((true ? ((~ (~ ((((~ (~ (1u ^ 0u)))) ^ 0u))))) : (subgroup_id))) ^ 1u))) * 1u), (subgroup_local_id + 1) % subgroup_size))) | (~ (~ (((((subgroup_local_id + ((1) >> 0)) % ((~ (~ (0u))) | (subgroup_size))) | ((subgroup_local_id + 1) % subgroup_size)))))))))), ((workgroup_base + subgroup_id * subgroup_size + ((((clamp((subgroup_local_id + 1) % subgroup_size, (((((((0u ^ 0u) + ((uint((injectionSwitch.x)) + (subgroup_local_id)))) + 1) % subgroup_size) | ((1u ^ 0u) ^ 1u))) * 1u), (((((false ? (atomicExchange(workgroup_size, subgroup_local_id)) : subgroup_local_id))) | uint((injectionSwitch.x))) + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size) | ((((((subgroup_local_id + (int((injectionSwitch.x)) | ((~ ((0 ^ (~ (1)))))))) % subgroup_size)) - (0u << (uint(4u))))) - 0u)))))) ^ 0u)))));
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 buf[virtual_gid] = 1;
 if((((bool((! ((true && (((! (bool(((! (! ((false || (false))))))))) || false)))))))) && true))
  {
   if((! (! ((! (! ((! (! (((! ((bool(bvec4(! (((injectionSwitch.x > injectionSwitch.y))), true, true, ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((! ((! ((! (! (! (! ((false)))))))))))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false || ((false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((mix(float((- 55.99)), float((float(((true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, (injectionSwitch.y), 1.0) : (mat2x4(9157.8060, - 3368.8214, 8.8, 0.6, 4.9, 1.4, 49.41, - 4.4))))))), bool(true))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((((false) || false)))
  barrier();
 if(((((((vec2(injectionSwitch[0], ((false ? ((mix(float(9179.2464), float((- 42.19)), bool(false)))) : injectionSwitch[1]))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(((((true && (injectionSwitch.x > (sqrt(log(1.0)) + (injectionSwitch.y))))))))
  return;
 (~ (~ (buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x] = 2)));
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if(((! (! (((! (! (false || ((((! (! ((bool(bvec2(false, true))))))) && true)))))))))))
    {
     if((((true && ((false)))) || false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
  }
}
