#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((! ((! (! (! ((false))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((false)) || false)) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((true && (((max((mix(vec2((((true ? injectionSwitch : (vec2(- 9471.2048, - 447.962)))))[0], (34.69)), vec2((1.9), (min((((true ? injectionSwitch : (vec2(- 9471.2048, - 447.962)))))[1], (((true ? injectionSwitch : (vec2(- 9471.2048, - 447.962)))))[1]))), bvec2(false, true))), ((true ? injectionSwitch : (vec2(- 9471.2048, - 447.962)))))).x > injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     if((((((! (! ((true && ((! (! (bool(bvec2(bool((((bvec2(bvec4(((bvec2(bvec2(bvec2(bvec2((bvec2(bvec2((bvec2(bvec2(bvec2((bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(((! ((false || (! (false)))))), true), true))))))))))))))))))), false, true)))))), true)))))))))))) || false)))
      {
       if((((((true ? injectionSwitch.x : (- 2039.2923))) > ((true ? injectionSwitch.y : (min(- 41.61, 3649.9199))))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false || ((false || ((false))))))
  {
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((false || ((! (! (false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((bool(bvec2(false, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = (uvec3((((true ? (((((0u) | ((((0u) | (((0u) | 0u))) ^ (0u & 33167u)))))) | 0u) : (atomicXor(subgroup_local_id, 60835u)))) | 0u), 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if(((! (! (false)))))
  barrier();
 if((false))
  {
   if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false)) && true))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! (! (false || ((false)))))))
  {
   if((((((((((false) && true) || false)) || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((false) && true)))
  {
   if((! ((! (! (! (((bool(bvec4((! ((bool((false || (bool(! (false)))))))), false, true, false)))))))))))
    barrier();
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((bool(bool(((((((injectionSwitch.x < injectionSwitch.y)) && (false))) || ((injectionSwitch.x > (min(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))) || false)))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((bool(bvec3((false), true, true)))) || false))
      {
       if((((false) || false) || ((true && ((((false) && true)))))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(((! (! ((true && (false)))))))
        barrier();
       if(((bool(bvec3((false || (false)), false, false)))))
        barrier();
       barrier();
       if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if((((false) || false)))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((! ((! (! (! (false))))))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = ((workgroup_size) << 0u) * workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > ((false ? (73.58) : injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec3(false, false, true)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (((bool(bvec3((! ((((! (((! (false)) || false)))) || false))) || false, false, true))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false || ((((injectionSwitch.x > (max((0.0 + (injectionSwitch.y)), (mix(float(injectionSwitch.y), float((8.1)), bool(false)))))))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > (max(((injectionSwitch.y) / 1.0), ((injectionSwitch.y) / 1.0)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((bool(bool((bool(bvec3(false, true, true))))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool((bvec2(bvec4(bvec2((false), false), false, false))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + ((subgroup_id) + (0u | 0u)) * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + ((false ? (subgroup_size) : (min(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, (max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, (~ (~ (((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y) + 0u))))))))));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = (0u + (workgroup_base)) + (clamp((0u ^ (subgroup_id)), subgroup_id, subgroup_id)) * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + (((clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, (max(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y)), GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y)) + 1) % ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).z);
 if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, false, false))))
  barrier();
 if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)), false, ((injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if((((injectionSwitch.x > (vec2(1.0, 1.0) * ((mix(vec2((- 2.5), (((injectionSwitch) - vec2((injectionSwitch.x), (injectionSwitch.x))))[1]), vec2((injectionSwitch)[0], (- 72.44)), bvec2(true, false))))).y))))
  barrier();
 if((false))
  barrier();
 if(((((mix(float((131.137)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if((! (! ((false)))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x = next_virtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((mat2((injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > (mix(float((- 9.1)), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((bool(bool((false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (mix(float(((true ? injectionSwitch.y : (min((mix((max(((float((- 5152.1792))) * 1.0), float((((- 5152.1792) - 0.0))))), float((433.049)), (false || (bool(true))))), ((max(433.049, 433.049)))))))), float((- 1.2)), bool(false)))))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(((((bool((bvec3(bvec3(bvec3(((((injectionSwitch.x > injectionSwitch.y)))), false, true)))))) || false)) && true))
      {
       if(((((((max(injectionSwitch.x, (max(injectionSwitch, (min(injectionSwitch, injectionSwitch)))).x))) - tan(log(1.0))) > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if((! (((! ((! ((bool(bvec4(! ((false)), false, false, false))))))) && true))))
      {
       if((false))
        barrier();
       barrier();
       if((((false) || false)))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec3((((((mat2(1.0) * ((clamp((mat2(1.0) * (injectionSwitch)), ((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y)))), false, true))) && true))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((false || (false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((! (! (((true && (false || ((false || ((((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false)) && true))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if(((((mix(vec2((- 6.9), (94.11)), vec2((mix(float((injectionSwitch)[0]), float(((- 9.7))), bool(false))), (injectionSwitch)[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
        barrier();
       if(((((float((mat2(1.0) * (mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, (((min(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, 1.0, (injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, 0.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(((! (! ((true && (false)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((true && ((false))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((((((injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (false))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((false || (false))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 ((((((buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w] = (((clamp(false ? (((42213)) | 0) : 1, false ? (((((42213))) * 1) | 0) : 1, ((((int(int((false ? (((42213)) | 0) : 1))))) ^ (0 >> (int(7)))) / 1)))))) - 0u)) * 1u)) << 0u);
 if(((bool((bvec3(bvec4(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), false), false)))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 ((true ? ((true ? buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x] = 2 : (next_virtual_gid))) : (workgroup_id)));
 if((false))
  {
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((bool(bool((! ((true && (! (true && ((false))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec3(false, true, true)))))
    barrier();
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((bool(bvec3((false), true, ((injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(((! (! ((true && (false)))))))
    barrier();
   barrier();
  }
 if((((((((((false) && true)) || false))) || false)) || false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((true && ((false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((false || (((bool(((true && ((bool((! (! ((false || (((((injectionSwitch.x > injectionSwitch.y)) && ((((float(mat3(float(vec4((min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, ((mix(float(float(mat2(1.0, 0.0, 1.0, (injectionSwitch.y)))), float((- 9.5)), bool(false)))))), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sqrt(1.0))))) < injectionSwitch.y))))))))))))) || false))) && true))))))
        barrier();
       if((false))
        barrier();
       if(((bool(bool(false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if(((((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     if((false))
      barrier();
     if(((! (! ((bool((bvec2(bvec3(bvec2(false, true), true))))))))))
      barrier();
     if((! (! ((false)))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((false) && true)))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((! (! ((((false)) || false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && ((false || (((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((true && (((false || (((((injectionSwitch.x > injectionSwitch.y))) || false)))))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((bool(bool(false)))))
        barrier();
       barrier();
      }
     if((((bool(bvec3(! (! (((false) || ((false) || (true && (false)))))), true, true))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
}
