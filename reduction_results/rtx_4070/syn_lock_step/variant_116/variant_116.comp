#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((false)) || false))
  barrier();
 if((false || ((false))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((bool(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(((bool((bvec3(bvec4(bvec3(false, false, false), true)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((! (! ((false)))))
  barrier();
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false || (((! (! (((true && (bool(bvec2(((false || ((false))) || false), false))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((! (! (((((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    barrier();
   if((((! (! ((((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((true && (((true && ((((true && ((bool(bvec4(false, false, false, true))))))))) && true))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((((! ((bool(bool((bool(bvec2(! (false), false))))))))) || false)))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = ((true ? workgroup_base + (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size : (atomicXor((workgroup_id), num_workgroup)))) + subgroup_local_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false || (! (! ((((true && (false || ((false)))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, false, false, false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((bool(bvec2((true && (((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true))))))
    {
     if(((bool(bvec2(false, true)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((clamp(((injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, ((min((mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2((76.12), ((- 46.22 * - 496.167))), bvec2(false, false))), (min((mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2((76.12), ((- 46.22 * - 496.167))), bvec2(false, false))), (mix(vec2(((min((vec2(mat3x4((injectionSwitch), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))), (clamp((injectionSwitch), (injectionSwitch), ((true ? (injectionSwitch) : (vec2(8092.0890, - 510.033)))))))))[0], ((injectionSwitch))[1]), vec2((clamp((76.12), (76.12), (76.12))), ((- 46.22 * - 496.167))), bvec2(false, false))))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((((bool(bvec2(bool(bvec3((! (! (false))), true, true)), true))))))
    barrier();
   if((false))
    barrier();
   if((((((0.0 + (clamp((mix(float((float(mat4x2(injectionSwitch.x, 0.0, determinant(mat3((dot(vec3(1.0, (max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, (max((float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), (max(0.0, ((0.0) - 0.0))), 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))), (float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, (mix(float(sin(log(1.0))), float((39.35)), bool(false))), 1.0, 1.0, 0.0)))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, tan(0.0), 0.0, 1.0, determinant(mat4(1.0, (float(float(((1.0) / 1.0)))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (float(mat4x2((dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0)))))), float((8569.8319)), bool(false))), (1.0 * ((mix(float((float(mat4x2(injectionSwitch.x, 0.0, determinant(mat3((dot(vec3(1.0, (max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, (clamp((((max((float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))), (float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0)))))) / 1.0), (max((float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))), (float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))))), (max((float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))), (float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0)))))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, tan(0.0), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0)))))), float((8569.8319)), bool(false))))), (mix(float((float(mat4x2(injectionSwitch.x, 0.0, determinant(mat3((dot(vec3(((true ? 1.0 : (log(- 5.9)))), (max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, (max((float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp((mix(float((- 2850.3872)), float(0.0), bool(true)))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 0.0))), (float(mat3x4(0.0, determinant(mat2((dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0)), 1.0, exp(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, (max(1.0, 1.0)), sin(log(1.0)), 1.0, 1.0, 0.0)))))))), (clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, (((float(float(0.0)))) / 1.0), 1.0)), 1.0, tan(0.0), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, ((1.0) / 1.0), 0.0, (clamp(1.0, (1.0 * (1.0)), (mix(float((556.672)), float(1.0), bool(true))))), exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0)))))), float((8569.8319)), bool(false))))))) > injectionSwitch.y))))
    {
     if(((bool(bvec2(bool(bvec2((false), true)), true)))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false) && true)))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((false) && true)))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 uint next_virtual_gid = (((0u + (((((uint(uvec4((workgroup_base) | (1u ^ 1u), 1u, 0u, 1u)))) / 1u)) + subgroup_id * subgroup_size))) - 0u) + ((((((subgroup_local_id) / 1u) + 1) - uint((injectionSwitch.x)))) % subgroup_size);
 ((buf[virtual_gid] = 1) ^ uint(((vec2((0.0 + (min((clamp((0.0), ((float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0)))), (0.0))), (min((0.0), (0.0)))))), 0.0) + (injectionSwitch)).x)));
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   if((((((false) || false))) || false))
    barrier();
   if((((injectionSwitch.x > (mix(float((9.7)), float((max(injectionSwitch.y, ((injectionSwitch.y) - 0.0)))), bool(true)))))))
    {
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((bool(bvec3(false, false, true)))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if((((((mix(vec2((5.3), (vec2((mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (((false ? (mat4(6.0, - 1.4, - 247.772, 6.7, - 936.911, - 520.386, - 66.15, - 54.05, - 154.607, 6.7, 5268.5773, - 8.5, - 690.621, - 8.1, 6.4, - 2456.1734)) : mat4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))[1]), vec2((vec2((mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (((false ? (mat4(6.0, - 1.4, - 247.772, 6.7, - 936.911, - 520.386, - 66.15, - 54.05, - 154.607, 6.7, 5268.5773, - 8.5, - 690.621, - 8.1, 6.4, - 2456.1734)) : mat4((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))[0], (- 1.4)), bvec2(true, false)))).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((bool(bvec2(((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y))), true)))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[next_virtual_gid] = 2;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! ((bool((! (! ((! (! (bool((! (! ((! (! (! (false))))))))))))))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if(((bool(bvec3(false, true, (bool(bool(true)))))) || ((false))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(((((bool(bvec3(false, false, true))) || false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > ((((injectionSwitch.y) * 1.0)) - 0.0)))))
    {
     if((((bool(bool((false))))) && true))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((bool((bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)), false))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((! (! ((false || ((((! (! (((false || (((injectionSwitch.x > injectionSwitch.y) || false)))))))))))))))
    barrier();
   barrier();
   if(((bool(bvec4((! ((bool(bool(! (false)))))), ((injectionSwitch.x < injectionSwitch.y)), false, ((injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((((false ? (vec2(- 5043.1115, 9.2)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((((mix((0.0 + ((float(mat3x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0))))), float(((min(8.7, 8.7)))), ((bool(false)) || false))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((false) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}
