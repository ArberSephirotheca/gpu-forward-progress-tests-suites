#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(true)
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; ((_injected_loop_counter) * 1) != (0 << (int(0))); _injected_loop_counter --)
      {
       if(((((mix((max(float((60.86)), float((60.86)))), (1.0 * ((float(vec2(float(injectionSwitch.x), 0.0))))), (! (! (bool(true)))))) > injectionSwitch.y))))
        {
         if((bool(bvec2(false, true))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; ((_injected_loop_counter) << 0) != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((((bool(bvec3(false, false, false)))) && true))
  {
  }
 else
  {
   if(((true) || false))
    {
     if(true)
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     else
      {
      }
     if((bool(bvec3(true, true, false))))
      {
       if((false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (((((max((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 6.7), (- 30.94)), bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).x < injectionSwitch.y)) ? 1 : (_injected_loop_counter))); _injected_loop_counter ++)
        {
         barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 if((((injectionSwitch.x > ((((injectionSwitch.x > injectionSwitch.y)) ? ((- 0.7 - 2.1)) : injectionSwitch.y))))))
  barrier();
 do
  {
   for(int _injected_loop_counter = 1; (clamp(_injected_loop_counter, (int(ivec2(_injected_loop_counter, 1))), _injected_loop_counter)) != 0; _injected_loop_counter --)
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if(false)
    {
    }
   else
    {
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; ((_injected_loop_counter --) >> (0 << (int(4)))))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
          barrier();
         if((false))
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
             while(false);
             if((false))
              barrier();
             if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
              {
               if(((((vec2(vec2((mix(vec2((min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2((float(- 2668)), (- 7.5)), bvec2(false, false)))))).x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
            }
           while((false || ((true && (((! (! (false))) || (false)))))));
          }
        }
       else
        {
        }
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 while(false);
 if((false))
  {
   if(true)
    {
     if((false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((bool(bvec3((false), false, true))))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if(((bool(bvec2(false, true)))))
        barrier();
      }
     if(((bool(bvec2(false, true)))))
      {
       if(true)
        {
         if((false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
      }
     do
      {
       barrier();
       if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
        barrier();
      }
     while(false);
     if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || ((injectionSwitch.x > injectionSwitch.y)))))
      {
       if(false)
        {
        }
       else
        {
         if((((false) || false)))
          barrier();
        }
       barrier();
      }
    }
  }
 uint workgroup_base = (max(workgroup_size * (clamp(workgroup_id, workgroup_id, workgroup_id)), (min((uint(uvec4(workgroup_size, 0u, 0u, 0u))), ((~ (~ ((workgroup_size) ^ 0u)))))) * workgroup_id));
 if((false))
  barrier();
 if(((((true && ((false || (bool(bvec4((false), false, (! (! (((false) && true)))), ((injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(false)
  {
  }
 else
  {
   if((true && ((false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   do
    {
     if((false))
      {
       do
        {
         do
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         while(false);
        }
       while(false);
       do
        {
         if(false)
          {
           for(int _injected_loop_counter = (~ ((~ (~ (~ (0)))))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           if((false))
            {
             do
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(false);
            }
          }
         else
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        barrier();
      }
     barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 >> (int(8))) >> (((int(4)) / 1))); _injected_loop_counter --)
      {
       if(((((vec2(((((injectionSwitch.x > injectionSwitch.y)) ? (- 33.60) : injectionSwitch[0])), injectionSwitch[(max(1, 1))])).x > injectionSwitch.y))))
        barrier();
      }
    }
   while((((! (! ((bool((bvec3(bvec3(((bvec3(bvec3(bvec3(bvec4((bvec3(bvec4(((bvec3(bvec3(bvec3(bvec4((bvec3(bvec3(((bvec3(bvec4(bvec3(bvec3(bvec3((true && (injectionSwitch.x > ((injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, ((true) && true)))), true))))))), false)))))), true))), false)))))))))))))))));
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   do
    {
     if(true)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((false))
          barrier();
        }
      }
     else
      {
      }
    }
   while((! (! ((true && (false))))));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + (uint(uint(subgroup_id * subgroup_size))) + ((((subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size);
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((((~ (~ (subgroup_local_id)))) / 1u) + ((1) * 1) < ((~ (((0u ^ (0u)) | (~ (uint(uvec2(subgroup_size, ((((uint((injectionSwitch.y))) << 0u)) | (uint((injectionSwitch.y)))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   int i = ((((max(int(ivec4(0, 1, ((1 << (int(5))) >> (int(5))), 1)), int(ivec4(0, 1, ((1 << (int(5))) >> (int(5))), 1)))))) >> 0);
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   do
    {
     if(((bool(bvec4(false, true, false, true)))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((bool((false || (bool((! (! (((! (! (false)))))))))))))
          {
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
        }
       for(int _injected_loop_counter = ((((((injectionSwitch.x > injectionSwitch.y)) ? (i) : 1)) << ((int(ivec2(int(2), 0))))) >> (((((int(2))) | ((int(2)))) << 0))); (true && (_injected_loop_counter > int((injectionSwitch.x)))); (0 + ((~ (~ ((((false ? (3758) : (((_injected_loop_counter --) >> 0))))) * 1))))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while((((false || (false))) || false));
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   if(((true && ((((true && (false))) && true)))))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((false))
      {
       for(int _injected_loop_counter = ((1 << ((max(int(7), int(7))))) >> (int(7))); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(7))) >> ((clamp(int(7), int(7), int(7))))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(false)
    {
     if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << (int(1))); _injected_loop_counter --)
        {
         barrier();
         if((false))
          barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if(((false || (bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), true, false))))))
        {
         atomicStore(buf[((~ (~ (min(next_virtual_gid, next_virtual_gid)))))], uint(2), (min((((clamp(((clamp((((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0)))))) - 0, ((clamp((((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0)))))) - 0, ((clamp((((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0))), (((((4) / ((1) * 1))) ^ (56931 & 0)))))) - 0))) - 0), (((int((max((~ (~ (ivec3(((((((((4) / ((1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> (int(1))), 1)))), (ivec3(0, 0, 0) | ((~ (~ (ivec3(((((((((4) / ((1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> (int(1))), 1)))))))))) * (max(1, ((1) - 0))))))), 64, 4);
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(false);
          }
        }
       if((false))
        barrier();
      }
    }
  }
}
