#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uint(uint(gl_NumWorkGroups.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (clamp(((gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = (~ (((((((((((max(0u ^ ((max(~ (workgroup_size * workgroup_id), (clamp(~ (((((workgroup_size) / 1u)) >> 0u) * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)))))), 0u ^ ((max(~ (workgroup_size * workgroup_id), (clamp(~ (((((workgroup_size) / 1u)) >> 0u) * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)))))))))) | ((max(~ (((workgroup_size * workgroup_id)) ^ 0u), (clamp(~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (((workgroup_size * workgroup_id) | (((max(0u, 0u))) / 1u)))))))))) | (((((max(0u ^ ((max(~ (workgroup_size * workgroup_id), (clamp(~ (((((workgroup_size) / 1u)) >> 0u) * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)))))), 0u ^ ((max(~ (workgroup_size * workgroup_id), (clamp(~ (((((workgroup_size) / 1u)) >> 0u) * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)))))))))) | ((max(~ (((workgroup_size * workgroup_id)) ^ 0u), (clamp(~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (((workgroup_size * workgroup_id) | (((max(0u, 0u))) / 1u)))))))))))) * 1u)) | ((((0u ^ ((max(~ ((clamp(((((injectionSwitch.x < (min((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 5633.7451), (6.2)), bvec2(false, false))), injectionSwitch)).y)) ? workgroup_size * workgroup_id : (workgroup_id))), workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (clamp(~ (((((workgroup_size) / 1u)) >> 0u) * workgroup_id), ~ (((workgroup_size * workgroup_id) ^ 0u)), ~ (workgroup_size * workgroup_id)))))))) | ((max(~ (((workgroup_size * workgroup_id)) ^ 0u), (clamp(~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id), ~ (min((~ (~ ((((((workgroup_size * workgroup_id) | 0u))) | 0u)))), ((((false ? (workgroup_id) : (((workgroup_size * workgroup_id) | 0u))))) - 0u)))))))))))));
 uint virtual_gid = workgroup_base + ((((injectionSwitch.x > (0.0 + (injectionSwitch.y)))) ? (atomicExchange(workgroup_base, workgroup_size)) : (clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size + ((0u << (uint(1u))) | (min((subgroup_local_id), (min((subgroup_local_id), (subgroup_local_id))))));
 uint next_virtual_gid = ((workgroup_base) | (workgroup_base)) + (((uint(uint(subgroup_id * subgroup_size)))) ^ 0u) + (((((true ? (((((((true ? ((((((true ? (~ (~ (((0u | 0u) | (subgroup_local_id + 1))))) : (subgroup_id))) | ((true ? (~ (((~ (subgroup_local_id + 1)) | (~ (subgroup_local_id + 1))))) : (subgroup_id))))) ^ 0u) ^ 0u) : ((clamp(num_workgroup, num_workgroup, num_workgroup))))))) | 0u))) : (num_workgroup))) | 0u)) % (0u | (((((~ (~ ((((((max((true ? subgroup_size : (virtual_gid)), (true ? subgroup_size : (virtual_gid))))) + 0u)) + 0u)))) | (((((max((true ? subgroup_size : (virtual_gid)), (true ? subgroup_size : (virtual_gid))))) >> (0u << (uint(2u))))) + 0u)))))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[(~ (~ (next_virtual_gid)))], uint(((((2) | (2)) - 0))), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], (max(uint(((2) | ((false ? (37019) : 0)))), uint(2))), 4, 64, 4);
  }
}
