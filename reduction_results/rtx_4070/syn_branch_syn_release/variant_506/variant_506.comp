#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(((bool((bvec2(bvec3(bvec2((((! ((bool(bool((false || (! (injectionSwitch.x > injectionSwitch.y)))))))))), false), ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((((bool(bool(((bool(bvec4((mix(float((330.296)), float(((((((((false) && true) ? (989.928) : injectionSwitch.x) - 0.0)))) / (float(mat2(1.0, tan(0.0), 1.0, 1.0))))), bool((bool(bvec4(((((injectionSwitch.x) - 0.0) < ((true ? injectionSwitch : ((float(subgroup_size) / injectionSwitch)))).y)), true, false, false)))))) > injectionSwitch.y, false, false, false))) || false))))))))) || false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + ((0u ^ ((clamp(((uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u)))) >> 0u, ((uint(uvec4(subgroup_id * subgroup_size, 0u, (uint(((((uvec4((max((clamp(1u, 1u, 1u)), 1u)), 1u, 1u, 1u)) | (uvec4((max((clamp(1u, 1u, 1u)), 1u)), 1u, 1u, 1u)))) | (uvec4((max((clamp(1u, 1u, 1u)), 1u)), 1u, 1u, 1u))))), 0u)))) >> 0u, ((false ? (num_workgroup) : ((((uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, (0u | ((clamp(0u, (~ (~ (0u))), 0u))))))))) ^ (0u >> (uint(8u)))) >> 0u))))))) + subgroup_local_id;
 if((false))
  return;
 if((((((((injectionSwitch.x > injectionSwitch.y)) ? (- 227.401) : (1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % (clamp(subgroup_size, subgroup_size, (~ (~ (((subgroup_size) >> 0u)))))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((((false) && true)))
  return;
 if((false))
  return;
 if(((((subgroup_local_id + 1) | (subgroup_local_id + 1))) | 0u) < (clamp(subgroup_size, subgroup_size, subgroup_size)))
  {
   int i = 0;
   if((((((false) && true))) || false))
    return;
   if((false))
    {
     if((false || ((false))))
      return;
     return;
    }
   if((false))
    return;
   atomicStore(buf[(min(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((bool(bvec4((bool(bvec2(((bool(bvec2(false, true)))), true))), false, true, false))))
    return;
   atomicStore(buf[(min((((0u | (((false ? (workgroup_size) : next_virtual_gid) << 0u))))), (clamp(next_virtual_gid, ((next_virtual_gid) ^ 0u), next_virtual_gid))))], ((uint((max((int(ivec3(2, (1 & 1), 1))), 2)))) ^ (max(((0u) * 1u), ((0u) * 1u)))), 4, (((~ (~ ((~ (((~ (64)) + (0 << (int(3)))))))))) / 1), 4);
   if((false))
    {
     if(((false || (((((true) || false) && (((((((false || ((injectionSwitch.x > injectionSwitch.y)))) || (bool(bvec2(true && (true), true)))))) && (((vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))))))))
      return;
     if((false))
      return;
     if((! (! ((false || ((false)))))))
      return;
     if((bool(bool((((true && ((false)))) || false)))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > (clamp((vec2(injectionSwitch[0], injectionSwitch[1])).y, (vec2(injectionSwitch[0], injectionSwitch[1])).y, (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  {
   if(((((bool((! (! ((! (! (bool((min(injectionSwitch.x, injectionSwitch.x)) > (max(((vec2(vec4((vec2(1.0, 1.0) * (min((max((mat2(1.0) * (injectionSwitch)), ((vec2(((false ? (mat3(- 3150.8918, - 7473.3886, 3.8, - 152.496, - 3390.8315, - 5082.9898, - 16.16, - 6749.2670, 2.9)) : mat3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0)))))))), (mat2(1.0) * (injectionSwitch))))), 1.0, sqrt(0.0))))), (vec2(mat4x2(((vec2(vec4((vec2(1.0, 1.0) * (min((max((mat2(1.0) * (injectionSwitch)), ((vec2(((false ? (mat3(- 3150.8918, - 7473.3886, 3.8, - 152.496, - 3390.8315, - 5082.9898, - 16.16, - 6749.2670, 2.9)) : mat3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0)))))))), (mat2(1.0) * (injectionSwitch))))), 1.0, sqrt(0.0))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0))))).y)))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   return;
  }
}
