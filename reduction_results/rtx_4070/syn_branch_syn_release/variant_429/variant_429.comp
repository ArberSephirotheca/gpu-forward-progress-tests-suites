#version 460

struct _GLF_struct_8 {
 ivec2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 uint _f3;
 vec3 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 vec3 _f1;
 _GLF_struct_8 _f2;
 bool _f3;
 mat3 _f4;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 ivec2 _f1;
 uint _f2;
 mat3x4 _f3;
 bvec2 _f4;
 ivec2 _f5;
 vec3 _f6;
 uint workgroup_size;
} ;

struct _GLF_struct_3 {
 uint _f0;
 bool _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 int _f3;
 mat3 _f4;
 _GLF_struct_5 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat2x3 _f1;
 bool _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 mat4x2 _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat3 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
 uvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_2 _f0;
 int _f1;
 _GLF_struct_6 _f2;
 mat4 _f3;
 ivec3 _f4;
 _GLF_struct_9 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((false || ((bool(bvec3(false, false, false)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((! ((true && (bool(bvec3((! (bool(bool((bool(bool(false))))))), true, ((injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! ((false || (! (true && ((false)))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((((false || (false))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_2(_GLF_struct_0((((clamp(vec3(1.0), vec3(1.0), vec3(1.0)))) - cross(vec3((1.0 * (- 1175.8728)), 1.2, - 7.7), vec3(- 1175.8728, 1.2, - 7.7))), mat4x2(1.0), true), mat3(1.0), _GLF_struct_1(mat4x3(1.0), mat2x3(1.0), true, uvec4(1u)), mat2x4(1.0), uvec3(1u), mat3x2(1.0)), 1, _GLF_struct_6(ivec4(1), _GLF_struct_3(1u, true), _GLF_struct_4(mat3x2(1.0), ivec2(1), (1u * (1u)), mat3x4(1.0), bvec2(true), ivec2(1), vec3((clamp(1.0, 1.0, ((true ? 1.0 : (vec2(- 931.300, 61.67)[0])))))), gl_WorkGroupSize.x), 1, (transpose(((true ? transpose((transpose(transpose(mat3(1.0))))) : ((transpose(transpose(mat3(mat3((mat3(6550.9771, 9883.4621, 5688.3872, - 8349.5386, 3.4, - 805.375, - 374.697, - 9.3, 5.7)))))))))))), _GLF_struct_5(mat4x3(((max(((min((((((clamp(1.0, 1.0, ((1.0) / 1.0)))))) - (injectionSwitch.x)), ((1.0)))) / 1.0), (1.0))) + 0.0)), ((mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, (mix((min(float((- 8032.9639)), float((- 8032.9639)))), float(0.0), bool(true))), 0.0, 0.0, 0.0)), vec4(1.0)), ((bvec3(bvec3((bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))))))), (transpose(transpose(mat4(1.0)))), ivec3(1), _GLF_struct_9(_GLF_struct_7(((clamp((((ivec3(1)) | ivec3(0, 0, 0))) / ivec3((int((ivec2(0, 0) + (ivec2(1, 1))))), ((1) / 1), 1), (((ivec3(1)) | ivec3(0, 0, 0))) / ivec3((int((ivec2(0, 0) + (ivec2(1, 1))))), ((1) / 1), 1), (((ivec3(1)) | ivec3(0, 0, 0))) / ivec3((int((ivec2(0, 0) + (ivec2(1, 1))))), ((1) / 1), 1)))), mat3x2(1.0), mat2x3(((max(((max(1.0, (clamp(1.0, 1.0, 1.0)))) * 1.0), max(1.0, (clamp(1.0, 1.0, 1.0))))))), 1u, vec3(1.0)), vec3(1.0), _GLF_struct_8(((ivec2((((~ (~ (1)))) - 0))) - ivec2(0, 0)), uvec2(1u), mat3x2(1.0), mat4x3(1.0)), ((! ((! ((bool(bvec4(! (! (! (! (true)))), true, (! (! (true))), false)))))))), mat3(1.0)));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((((injectionSwitch.x > injectionSwitch.y))) || false)) && ((injectionSwitch.x < injectionSwitch.y)))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_10._f2._f2.workgroup_size * workgroup_id;
 if((false))
  barrier();
 if(((! (((! ((! (! ((true && ((true && (false))))))))) || false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = (((((uint(uint((0u ^ (workgroup_base + (((((0u ^ 1u) * (((false ? (atomicMin(virtual_gid, (~ (((true ? ~ (subgroup_size) : (subgroup_id))))))) : 0u)) ^ (subgroup_id)))) | 0u)) * subgroup_size)) + ((((clamp(0u | ((((((((true ? uint(uvec4(0u, 0u, 1u, 0u)) : (195539u))))) | (0u)) ^ ((subgroup_local_id + 1))) % (((max((0u | (subgroup_size)), (clamp((0u | (subgroup_size)), (((((0u | (subgroup_size))) ^ 0u) * 1u)), (((0u | (subgroup_size))) - 0u)))))) / 1u))), 0u | ((((((((max((((true ? ((uint(uvec4(0u, 0u, 1u, 0u))) << 0u) : (195539u)))), (((true ? uint(uvec4(0u, 0u, 1u, 0u)) : (195539u))))))) | (0u)) ^ (max(((subgroup_local_id + 1)), ((((subgroup_local_id + 1))) | 0u))))) + 0u) % (((max((0u | (subgroup_size)), (0u | (subgroup_size))))) / 1u))), 0u | ((((((((true ? uint(uvec4(0u, 0u, 1u, 0u)) : (min((195539u), (195539u))))))) | (0u)) ^ ((subgroup_local_id + 1))) % (((max((max((0u & 43154u) + (((max((0u | (subgroup_size)), (0u | (subgroup_size)))))), (0u & 43154u) + (((max((0u | (subgroup_size)), (0u | (subgroup_size)))))))), (0u & 43154u) + (((max((0u | (subgroup_size)), (0u | (subgroup_size))))))))) / 1u)))))) | (0u | (((((((((bool(bool(true))) ? uint(uvec4(0u, 0u, 1u, 0u)) : (195539u))))) | (0u)) ^ ((subgroup_local_id + 1))) % (((max((0u | (subgroup_size)), (0u | (subgroup_size))))) / 1u))))))))) >> 0u))) + (((min(0u, (0u + (0u))))) | (((0u)) | ((0u | ((clamp((clamp(((((((uint(((uvec2((max(0u, 0u)), 1u)) | uvec2(0u, 0u)))) / 1u)))) / 1u), (0u ^ ((0u))), (0u))), (clamp((0u), (0u), (0u))), (((0u) | (((0u) - 0u))))))))))));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((false) && true)))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if(subgroup_local_id + 1 < ((subgroup_size) >> 0u))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   int i = (((((1 << (int(2))) >> (int(2))) * (((~ (~ (((false ? (0 ^ ((int(ivec2((findMSB(- 20597)), 0))))) : int(ivec3((clamp(0, (~ (~ (((max(0, ((0) >> (0 | 0)))) | (0))))), 0)), 0, 1))))))) / 1)))));
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, (clamp(64, ((0 >> (int(2))) + (64)), 64)), (clamp(4, 4, 4)));
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((((injectionSwitch.x > ((max((mix(float((min(1.0, 1.0))), float((71.24)), bool(false))) * (((injectionSwitch.y) * 1.0)), 1.0 * (float(mat4x3((((injectionSwitch.y) * 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))) || false))) || false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
}
