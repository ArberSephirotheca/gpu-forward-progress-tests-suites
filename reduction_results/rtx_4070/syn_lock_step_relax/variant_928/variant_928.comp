#version 460

struct _GLF_struct_2 {
 vec2 _f0;
 ivec4 _f1;
 ivec3 _f2;
 int _f3;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec4 _f1;
 bvec3 _f2;
 mat4x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 float _f3;
 uvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_4 {
 uint virtual_gid;
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 bvec4 _f3;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((true && (injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (- 5.9)), vec2((vec2(- 40.02, 57.59).y), (float(((vec2((injectionSwitch)[1], 0.0)) / vec2(1.0, 1.0))))), bvec2(false, true))).y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((clamp(injectionSwitch, (mix(vec2(((true ? - 4853.9394 : 55.82)), (- 4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if((! (((! ((true && ((false))))) || false))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((((! (! (bool(bool(true)))))) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((((! (! ((true && ((false || (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((! (! (((((! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))) && true))))))
      barrier();
     if((((false)) || false))
      {
       if((((injectionSwitch.x > ((false ? (injectionSwitch) : injectionSwitch)).y))))
        {
         if((((((false) && true)) || false)))
          {
           if(((! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if(((((((float(((vec3(injectionSwitch.x, 0.0, (min(1.0, 1.0)))) - vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((((bool(bvec4(true, false, false, false))) && true)) && true)) && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(((bool(bool(false)))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false || ((false))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((((true) && true) && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && (! (((! ((! ((false || (((! ((((injectionSwitch.x > injectionSwitch.y))))) && true)))))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > (vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! ((! (((! (false)) || false))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bool((bool(bool((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > (((vec2(injectionSwitch[0], (0.0 + (injectionSwitch[1]))))) / sqrt(vec2(1.0, 1.0))).y))))
  barrier();
 if(((false || ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > (max(((injectionSwitch.y) - 0.0), ((injectionSwitch.y) - 0.0)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((! ((bool(bvec3(! ((bool(bvec4(false, true, true, true)))), false, ((injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if((((! (! ((false) && (! (! ((true && (true)))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((! (! (((((injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 (~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base)));
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_0(mat2(1.0)), _GLF_struct_3(_GLF_struct_1(vec3(1.0), uvec4(1u), bvec3(true), mat4x3(1.0), (~ (((~ (uvec4(1u))) * uvec4(1u, 1u, 1u, 1u))))), _GLF_struct_2((mix(vec2(((min((max(((((injectionSwitch.x > injectionSwitch.y)) ? (- 92.08) : - 783.878)), ((((injectionSwitch.x > injectionSwitch.y)) ? (- 92.08) : - 783.878)))), ((((injectionSwitch.x > injectionSwitch.y)) ? (- 92.08) : - 783.878))))), ((mix(vec2(((true ? (vec2(1.0))[0] : (- 7.2))), (- 905.798)), vec2((- 971.065), (vec2(1.0))[1]), bvec2(false, true))))[1]), vec2((mix(((mix(float((float(((false ? (vec2(1.0, 8.7)) : (vec2((((((max(1.0, 1.0))) / 1.0)) + abs(0.0))))))[0])) / 1.0), float((3857.8866)), bool(false)))), float((vec4((mix(float(2.3), float((3.6)), bool(false))), (max(45.07, 45.07)), - 5.5, 1.6).y)), bool(false))), ((min(668.485, 668.485)))), bvec2(true, false))), ivec4(1), ivec3(1), ((1) - int((injectionSwitch.x)))), mat4x2((mix(((true ? float((0.8)) : (- 90.22))), float(1.0), bool(true)))), 1.0, uvec2(1u), mat2x3((max((mix(float((min((mix(float((- 906.056)), float((min((((((1.0 * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y)) ? 1.0 : (reflect((clamp((1.0 * (min((- 68.34), (- 68.34)))), (((false ? (- 1.5) : float(mat3x2(- 68.34, 1.0, exp(0.0), abs(0.0), 1.0, sin(0.0)))))), - 68.34)), - 0.4)))), (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1.0 : (reflect((clamp((1.0 * (- 68.34)), - 68.34, - 68.34)), - 0.4))))))), (((injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1.0 : ((max(reflect((clamp((1.0 * (- 68.34)), - 68.34, - 68.34)), - 0.4), reflect((clamp((1.0 * (- 68.34)), - 68.34, - 68.34)), - 0.4))))))))), float((((- 3.5)) - 0.0)), bool(false))), ((((((((vec2(0.0, 0.0) + (clamp((vec2(injectionSwitch[0], (max(injectionSwitch, injectionSwitch))[1])), injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x < injectionSwitch.y)) ? 1.0 : (reflect((clamp(((min(((float(mat2x4((clamp(clamp(((min((1.0) / 1.0, (1.0) / 1.0))), 1.0, 1.0), clamp(((1.0) / 1.0), 1.0, 1.0), clamp(((1.0) / 1.0), 1.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, ((((injectionSwitch.x > injectionSwitch.y)) ? (74.46) : 0.0)), 1.0)))), 1.0)) * ((((float(mat3x4(float((mat2((injectionSwitch.y)) * (vec2((min((- 68.34), (- 68.34))), 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0))), - 68.34, - 68.34)), - 0.4)))))))), mat4x2(1.0), bvec4(true));
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = ((_GLF_struct_replacement_4.virtual_gid) << 0u);
 uint next_virtual_gid = (((((max(((true ? (clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) | uvec2(0u, 0u)))) : (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))).y + (clamp((1u * ((min((((((uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, 0u, (((((0u ^ (1u))) - ((((min(((false ? (subgroup_size) : 0u)), 0u))) - 0u) | 0u))) * 1u))))))) / 1u)) >> 0u), ((clamp(((((uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, 0u, ((((clamp(0u ^ (1u), (((0u | (0u ^ (1u)))) << 0u), 0u ^ (1u))))) - (0u | 0u)))))))) / 1u)) >> 0u, ((((uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, 0u, ((((clamp(0u ^ (1u), (((0u | (0u ^ (1u)))) << 0u), 0u ^ (1u))))) - (0u | 0u)))))))) / 1u)) >> 0u, ((((uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, 0u, ((((clamp(0u ^ (1u), (((0u | (0u ^ (1u)))) << 0u), 0u ^ (1u))))) - (0u | 0u)))))))) / 1u)) >> 0u))))))), (uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, 0u, 1u))))), (uint((uvec3(0u, 0u, 0u) | (uvec3(subgroup_id * subgroup_size, (uint(uvec4((uint(uint(0u))), 0u, 0u, 0u))), 1u))))))) + ((((subgroup_local_id + 1) ^ 0u)) % subgroup_size), ((((true ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y : ((uvec3(69533u, 128135u, 176597u) , workgroup_size))))) << 0u) + (((uint((uvec3(0u, 0u, 0u) | (uvec3(((((injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : ((workgroup_size % workgroup_size)))) * subgroup_size, 0u, (0u | (1u)))))))) | ((uint((uvec3(0u, 0u, 0u) | (uvec3(((((injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : ((workgroup_size % workgroup_size)))) * subgroup_size, 0u, 1u))))))) + ((subgroup_local_id + 1) % subgroup_size)))) - 0u)) / uint((injectionSwitch.y)));
 if((false))
  barrier();
 if((bool(bvec4((! (! (((bool(bool(false))) || ((true && ((((((bool(bool((false || ((((vec2(0.0, 0.0) + (((min(injectionSwitch, injectionSwitch)) - (max(sin(vec2(0.0, 0.0)), sin(vec2(0.0, 0.0)))))))).x > (vec2(mat4x2((vec2((min(injectionSwitch[0], injectionSwitch[0])), (min(injectionSwitch[(clamp(1, 1, (~ (~ (1)))))], injectionSwitch[1])))), 0.0, 1.0, (injectionSwitch.x), exp(0.0), 0.0, 0.0))).y)))))) || false))))))))))), true, ((injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false)) && true))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(((bool(bvec3(false, false, false)))))
      barrier();
    }
   if(((! ((bool(((bool(((true) && true))) || false))) && ((! (((false) || (! (! (false)))))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false)) || false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        barrier();
       if((bool(bool(((((vec2(injectionSwitch[0], (mix(float(injectionSwitch[1]), float((6877.6733)), bool(false))))).x > injectionSwitch.y)))))))
        barrier();
       if((false))
        barrier();
       if((false || ((bool(bvec3((false || ((false))), false, ((injectionSwitch.x < injectionSwitch.y))))))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if(((false || (false))))
        barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((bool(bvec4((bool(bool(((((false || (false)))) && true)))), false, false, true))))
    barrier();
   if((false))
    barrier();
  }
 if(((! ((bool(bool(! (((false)) && ((injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((bool(bvec2((false), false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((bool((bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x] = 1;
 if((false))
  barrier();
 atomicStore(buf[(min(next_virtual_gid, next_virtual_gid))], uint(2), ((clamp((4) ^ (int(ivec4((int(ivec2(0, 1))), 0, 0, 0))), (4) ^ 0, (4) ^ 0))), 64, 0);
 if(((((! (! (bool(bvec3(((false) && true), true, true)))))) || (false))))
  barrier();
}
