#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((bool(bvec2((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), true))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > ((((true ? vec2(1.0, 1.0) : (vec2(93.31, 2727.9416)))) * ((injectionSwitch) * exp(vec2(0.0, 0.0))))).y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec3(bool(bvec4((false), true, true, true)), true, false)))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, false, false))))))
  {
   if(((! (! (false)))))
    barrier();
   if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((true ? (float(float(injectionSwitch.y))) : (7.8)))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec3(false, false, false)))))
      barrier();
     barrier();
     if(((true && (false))))
      barrier();
    }
   barrier();
  }
 if((((((false ? (- 9.6) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(((bool(bvec3((! (((bool(bvec3((false || (bool(bvec3(! (! ((false || (! ((false)))))), true, ((((true ? injectionSwitch.x : (- 735.135))) > injectionSwitch.y)))))), true, false)))))), true, false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  barrier();
 if((bool(bvec4((bool(bvec3((false), false, true))), ((injectionSwitch.x > injectionSwitch.y)), false, true))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((false)) && true)) || false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((! ((bool(bvec4(! (false), true, false, true)))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false || ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (((vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((! (! ((((! (! (bool(((((bool((true && ((! (((! (((false)) || false)) || false))))))) || false)) || ((injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((false) || false)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((! ((bool((bvec2(((bvec3((bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec2(! (((false) && ((injectionSwitch.x < injectionSwitch.y)))), true), false)))), false))))))))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((((vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((! ((false || (! (! (! ((false))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((max((vec2(injectionSwitch[0], injectionSwitch[1])), ((true ? injectionSwitch : (injectionSwitch))))).x > (min(((((((max(float(mat2x3((mix(float((- 701.259)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, (cos(0.0) * ((max((mix(float((- 2995.7663)), float(0.0), bool(true))), ((true ? 0.0 : (mix(float((- 81.17)), float((mix(float(((+ 6.6))), float((2.3)), bool(true)))), bool(true))))))))), 0.0, 1.0)), ((true ? float(mat2x3((mix(float((- 701.259)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, (cos(0.0) * ((max((mix(float((- 2995.7663)), float(0.0), bool(true))), ((true ? 0.0 : (mix(float((- 81.17)), float((mix(float(((+ 6.6))), float((2.3)), bool(true)))), bool(true))))))))), 0.0, 1.0)) : (- 8213.6538)))))) * ((max(dot(vec4(1.0, (((true ? 0.0 : (500.322))) + (0.0)), sin(0.0), ((false ? (3164.5349) : (max(sqrt(0.0), sqrt(0.0)))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sin(0.0), sqrt(0.0)), vec4(1.0, 0.0, 0.0, 0.0))))))) / 1.0)), injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = ((true ? ((((gl_WorkGroupSize.x)) | ((max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))) ^ 0u) : ((0u | 0u) + ((atomicAnd(subgroup_size, 84480u))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))) && true)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((bool((bvec3(bvec3(bvec3((false), (false || (true)), true)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x < ((injectionSwitch) + vec2(0.0, 0.0)).y)) && ((true && ((false))))))
    {
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((! (! ((((! (! ((false)))))) && true))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if(((true && (false))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((((false || (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec3((true && (((((injectionSwitch.x > (((bool(bvec2(false, false))) ? (vec2(- 5.9, 566.122)) : ((((false ? (cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : (clamp(injectionSwitch, (clamp(injectionSwitch, ((injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch))))) - sqrt(vec2(0.0, 0.0))))).y)) || (((injectionSwitch.x > injectionSwitch.y))))))), false, false))))
      barrier();
     if((((false) || false)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = ((uint((((injectionSwitch.x)) / sqrt(1.0))) & 168098u) | ((max((min(((workgroup_size) / 1u) * ((false ? (atomicXor(num_workgroup, subgroup_size)) : (min(workgroup_id, (((max(workgroup_id, workgroup_id))) << 0u))))), (max(workgroup_size * workgroup_id, (uint(uvec2((0u ^ (workgroup_size * workgroup_id)), 1u))))))), (min(workgroup_size * (min(((workgroup_id) << 0u), (max(workgroup_id, workgroup_id)))), ((max(max(workgroup_size * (max(workgroup_id, workgroup_id)), (uint(uvec2((0u ^ (workgroup_size * workgroup_id)), 1u)))), max(workgroup_size * workgroup_id, (uint(uvec2((clamp((((0u ^ (workgroup_size * workgroup_id))) | (((false ? (subgroup_size) : (0u ^ (workgroup_size * workgroup_id)))))), (0u ^ (workgroup_size * workgroup_id)), (((0u ^ (workgroup_size * workgroup_id))) >> (0u >> (uint(4u)))))), 1u)))))))))))));
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((! (! ((((! (! (false || (false))))))))))) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if(((bool(bool((! (! (false))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(((! (((! ((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))) && ((injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + (1u * (((true ? subgroup_id * subgroup_size : ((subgroup_size * virtual_gid)))))) + (0u ^ (((~ (~ ((subgroup_local_id + 1)))) % subgroup_size)));
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((((true ? (mat2(1.0) * ((vec2(injectionSwitch[0], (max((mix(vec2((11.69), (115.659)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch))[1])))) : (injectionSwitch))).x > ((injectionSwitch) * mat2(1.0)).y))))
  {
   if((bool((bvec3(bvec3((bvec3(bvec3(bvec3(((true && (((false) && true)))), true, false))))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((! (! ((((true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((! (! (((false) && true)))) || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(((((((vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((((false) && (bool(bvec2((bool(bool(true))), false))))))
    {
     if((false))
      barrier();
     if(((((injectionSwitch.x > injectionSwitch.y)) || (((false) && true)))))
      barrier();
     barrier();
    }
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((! (! ((! ((((false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
  barrier();
 ((false ? (subgroup_local_id) : buf[virtual_gid] = 1));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bool((false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, ((((true ? 64 : (8593)))) << 0), 0);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
}
