#version 460

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 ivec4 _f3;
 mat3x4 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 vec3 _f1;
 ivec4 _f2;
 vec4 _f3;
 float _f4;
 mat3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 float _f1;
 mat4 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 bool _f2;
 bool _f3;
 uint _f4;
 uint workgroup_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
     if((((((false) && true)) || false)))
      return;
    }
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((((((injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(((((true && (((injectionSwitch.x > injectionSwitch.y) || false)))))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   return;
  }
 if((((false) && true)))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((true && ((bool(bvec4((false), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((((false) || false)))
    return;
   return;
  }
 uint num_workgroup = (((uvec3(0u, 0u, 0u)) / ((min((((uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u)) | uvec3(1u, 1u, 1u), ((uvec3((max(1u, 1u)), 1u, 1u)) << uvec3(0u, 0u, 0u)) | uvec3(1u, 1u, 1u))))) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(ivec4(1), 1.0, mat4(1.0)), _GLF_struct_4(_GLF_struct_1(mat4x2((((float(mat3(1.0, (min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) - (1.0 * ((dot((mix(vec2((vec2(1.0, (clamp((((max(1.0, 1.0))) - (dot(vec4(0.0, 1.0, (float(((mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0))) * mat4(1.0)))), 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))[0], (6.1)), vec2((8.4), (clamp((((true ? float((min(float((mix(float((vec2(1.0, (clamp((((max(1.0, 1.0))) - (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))[1]), float((6721.2012)), bool(false)))), float((mix(float((vec2(1.0, (clamp((((max(1.0, 1.0))) - (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))[1]), float((6721.2012)), bool(false))))))) : (- 6.0)))), (vec2(1.0, (clamp(((float((vec3(mat4x3(vec3(((max(1.0, 1.0))) - (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), sin(0.0), cos(0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0)))))), 1.0, 1.0))))[1], (vec2(1.0, (clamp((((max(1.0, 1.0))) - (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))[1]))), bvec2(((injectionSwitch.x > injectionSwitch.y)), true))), (min(vec2(0.0, 0.0), ((vec2(0.0, 0.0)) * vec2(1.0, 1.0)))))))))), mat3x4(1.0), mat3x4((0.0 + (((1.0) - 0.0)))), ivec2(1), mat2x3(1.0), mat2x4(1.0)), uvec3(1u), _GLF_struct_2(((true ? ((mat4(1.0)) / mat4((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) : (mat4(- 1371.5323, 26.53, - 5253.6945, 2589.2917, - 67.75, - 5434.5558, 4.4, 2.7, 260.564, 811.290, 595.458, - 11.98, - 9.6, 57.55, 3.6, - 598.310)))), vec3(1.0), ivec4(1), vec4((float(mat3((min(1.0, (min(1.0, 1.0)))), log(1.0), 1.0, 1.0, (((dot(vec3(exp(0.0), 0.0, 0.0), vec3(0.0, 1.0, (float(mat4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, (((false ? ((float(mat3x4(29.64, 0.0, 1.0, 0.0, (min((mix(float((- 96.80)), float(1.0), bool(true))), (float(((true ? float(1.0) : (6.5))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), abs(((true ? 1.0 : (ceil(- 41.13))))), 1.0, (dot((clamp(vec3(0.0, 0.0, determinant(mat2(0.0, (min((min((max(1.0, 1.0)), 1.0)), 1.0)), 0.0, 0.0))), vec3(0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec3(0.0, 0.0, determinant(mat2((mix(float((max(0.0, (0.0 + (0.0))))), float((8.1)), (! (! (bool(false)))))), 1.0, 0.0, 0.0))))), vec3(1.0, exp(0.0), 1.0))), 1.0, 1.0, 1.0, (min(1.0, 1.0)), 1.0, (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0)))))) / 1.0)), 0.0, 1.0, 0.0, sqrt(1.0))))), 1.0, mat3((max(1.0, (min(1.0, 1.0))))), mat3x4(1.0)), _GLF_struct_3(mat4x2(1.0), mat3x4(1.0), bvec2(true), ((false ? ((73052 - ivec4(- 19437, - 47678, ivec2(69090, 92967)))) : (clamp((max(ivec4(1), ivec4((0 ^ (1))))), (max((max(ivec4(1), ivec4((0 ^ (1))))), (max(ivec4(1), ivec4((0 ^ (1))))))), (max(ivec4(1), ivec4((0 ^ (1))))))))), mat3x4((mix(float(1.0), float((- 9.2)), bool(false)))), true)), true, (bool((true && (bool(true))))), 1u, (clamp((((((uint(uvec3(gl_WorkGroupID.x, 1u, 0u))) | (uint(uvec3(gl_WorkGroupID.x, 1u, 0u)))))) ^ 0u), gl_WorkGroupID.x, gl_WorkGroupID.x)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5.workgroup_id;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false || ((! (! (((! (((! (false)) && true))))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((((((true ? injectionSwitch : (vec2(- 0.7, 2.0)))).x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((bool((bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
    return;
   return;
   if((false))
    return;
  }
 if((((((true && (injectionSwitch.x < injectionSwitch.y)))) && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > (vec2(injectionSwitch[((((injectionSwitch.x > injectionSwitch.y)) ? (- 95054) : 0))], injectionSwitch[1])).y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((((((true ? injectionSwitch.x : ((max(875.925, (float(mat3x2(875.925, 1.0, 0.0, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if(((true && (((((((injectionSwitch.x < injectionSwitch.y)) ? ((((injectionSwitch.x > ((clamp(max(injectionSwitch.y, (((float(mat4x2(injectionSwitch.y, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + 0.0))), max(injectionSwitch.y, (((float(mat4x2(injectionSwitch.y, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + 0.0))), (max(max(injectionSwitch.y, (((float(mat4x2(injectionSwitch.y, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + 0.0))), max(injectionSwitch.y, (((float(mat4x2(injectionSwitch.y, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + 0.0)))))))))) ? (3.6) : (vec2(1.0, 1.0) * (injectionSwitch)).x)) : (6.4))) > (clamp(injectionSwitch, ((true ? (max(injectionSwitch, ((injectionSwitch) * mat2(1.0)))) : (vec2(- 2.2, - 2403.0645)))), (vec2(0.0, 0.0) + (injectionSwitch)))).y))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + (~ (~ (subgroup_local_id)));
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if(((((mix(float(injectionSwitch.x), float((- 43.08)), bool(((injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec3(bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), false)), true, true)))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! ((true && (false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec3(false, false, false)))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((! (! ((false)))))
    return;
   if((false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * (min(subgroup_size, subgroup_size)) + ((0u + ((subgroup_local_id + 1) % subgroup_size)));
 if((false))
  {
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((true && (((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((vec2(vec4((min(injectionSwitch, injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((((max((mix(vec2((- 7.5), (- 53.85)), vec2(((vec2(((vec2((clamp(injectionSwitch, ((clamp(mat2(((((1.0) + 0.0)) - 0.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch)))) * vec2(1.0, 1.0)))))[0], (((vec2((transpose(transpose(mat4(((vec2(((vec2((clamp(injectionSwitch, ((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch)))) * vec2(1.0, 1.0))))), abs(1.0), 1.0, 1.0, 1.0, (min(1.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0))))), 0.0, 1.0, sqrt(1.0), exp(0.0), tan(0.0), determinant(mat4(0.0, (injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0))))))[1]) - 0.0)), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)))) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((! (! ((false || (((bool((bvec3(bvec4((bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true), false))), true))))))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > (min((((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), (clamp(injectionSwitch.y, injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
      return;
     return;
    }
   if((false))
    return;
   if((((false) && true)))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if((false))
      return;
     if(((! (! (false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if(((((((bool(bvec4(false, (true && (true)), false, true))) || ((false))) || false))) && (((bool(bvec2((false || (true)), false)))) && true)))
  {
   if((((((injectionSwitch.x) / 1.0) > (mix(vec2((1.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 6.3)), bvec2(true, false))).y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if(((! ((bool(bvec3(! (false), false, false)))))))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false || ((false))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false || ((((false)) && ((injectionSwitch.x < injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         return;
         if((false))
          return;
        }
       if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, ((injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if((false))
          return;
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((true && ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if((((((false) || false)) || false)))
      return;
     return;
    }
   if((false))
    return;
   if((! (! ((false)))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if(((! (! (false)))))
    return;
   if(((! (! ((bool((bvec3(bvec4(bvec3(false, false, false), ((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(((bool(bool(false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false || ((! (! ((false)))))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((((false) || false)))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if(((bool(bool((true && (false)))))))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (((false) || false)))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((false || (false))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((injectionSwitch.y) + 0.0)))))
        {
         if((false))
          return;
         return;
        }
       if(((false || (((injectionSwitch.x > ((injectionSwitch.y) + sin(0.0))))))))
        return;
       if((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((((false ? (log(vec2(1.0, 1.0)) + ((mix(vec2(- 7872.0360, - 5979.4475), injectionSwitch, notEqual(vec2((max(14.49, 14.49)), - 0.8), vec2(6.4, 501.891)))))) : (vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((! (! ((! (! (((max((float(mat3(injectionSwitch.x, (injectionSwitch.x), 0.0, (dot(vec2(0.0, tan(0.0)), vec2(1.0, 1.0))), sqrt(1.0), 0.0, 1.0, abs(1.0), 1.0))), (float(mat3(injectionSwitch.x, (injectionSwitch.x), 0.0, (dot(vec2(0.0, tan(0.0)), vec2(1.0, 1.0))), sqrt(1.0), 0.0, 1.0, abs(1.0), 1.0))))) > injectionSwitch.y))))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 atomicStore(buf[next_virtual_gid], (min(uint(2), ((false ? (next_virtual_gid) : uint(2))))), 4, 64, 0);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
}
