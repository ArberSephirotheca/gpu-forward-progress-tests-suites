#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(((false || (false))))
  {
   if((! (! ((! (! (((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))))))))
    barrier();
   barrier();
  }
 if((((false)) || false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((! (! (injectionSwitch.x > ((min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((bool(bvec4((false), true, true, false))))
  {
   if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(((! ((! (((! (! (! (((true && (bool((bvec2(bvec3(bvec2(! (! ((false || (! ((false)))))), true), false))))))))))))))))), true, false, false)))), false, false, ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if(((true && (((false) || false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(((! (! ((bool(bvec2(false, false))) || (((bool(bool(false))))))))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((true && ((! (! (((((! (! (false)))) || false))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((! (! (bool(bvec3((((bool(bool(false)))) || false), false, false))))))) || ((injectionSwitch.x > injectionSwitch.y)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((bool(bvec4((injectionSwitch.x > (min(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))), false, false, ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((bool(bvec2((false), (! (! (true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((! (! (false || ((! (false || ((((! ((true && (((false || ((true && (false)))))))))) && true))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((true && ((false || ((false)))))))))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize) | (((gl_WorkGroupSize) * uvec3(1u, 1u, 1u)))).x;
 if((false))
  {
   if(((((bool(bool(((false) && true))))) && true)))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = (max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if((((injectionSwitch.x > ((clamp(clamp((0.0 + (injectionSwitch.y)), injectionSwitch.y, (float(float(injectionSwitch.y)))), clamp(((1.0 * (((true ? 0.0 + (injectionSwitch.y) : (- 5913.1423)))))), injectionSwitch.y, (((float(float(injectionSwitch.y))) + (dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, tan(0.0), 0.0, 1.0)))))), clamp((0.0 + (injectionSwitch.y)), injectionSwitch.y, (float(float(injectionSwitch.y)))))))))))
  {
   if(((! (! (((false) && (bool(bvec4(true, true, true, false)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((false) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((((bool(bvec2(bool(bool(false)), true))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((false)) || false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((! (! ((((injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + ((((subgroup_id) | (min(((false ? (workgroup_size) : (((subgroup_id)) << 0u))), (0u + (((max(subgroup_id, subgroup_id)))))))) * subgroup_size) - 0u) + subgroup_local_id;
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((! (! ((false)))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((bool(bvec4((((false || (bool(bvec2((! (((! ((bool(bvec4(false, true, ((true && ((injectionSwitch.x < injectionSwitch.y)))), true))))) && true))), (((bool((bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, ((injectionSwitch.x < (0.0 + (injectionSwitch.y)))), true), false))))))))))))), false, true, false)))) || ((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((! (! (((true && (((false)))) && true))))) || false))
  barrier();
 atomicStore(write_val, (~ (((0u | ((~ (uint(virtual_gid))) << 0u))))), 4, (min((((((((true ? ((((~ (~ (((((64)) >> 0)) / 1))) ^ 0))) - 0 : (66272))))) ^ ((~ (~ (0))) & - 42706))) | ((((((true ? ((min((((~ (~ (((((64)) >> 0)) / 1))) ^ 0)), (((~ (~ (((((64)) >> 0)) / 1))) ^ 0))))) - 0 : (66272))))) ^ (((true ? 0 & - 42706 : (50899))))))), 64)), (min(0, 0)));
 if((false))
  barrier();
 if((false))
  barrier();
 if(((false || (! (((bool(bvec2((true && (((bool(bvec3(! ((false)), false, false)))))), true)))) || ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > (vec2(((false ? (2.3) : injectionSwitch[0])), injectionSwitch[1])).y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual((1u * (((clamp((~ (((~ ((((write_val))))) - 0u))) >> 0u, (((((((((write_val) | (write_val))) | ((0u ^ (write_val))))))) >> 0u) << 0u), (((write_val))) >> 0u))) | 0u))));
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((true && (((! (! (false))) || (false || ((bool(bvec3(((((injectionSwitch.x > injectionSwitch.y) || false))), true, false)))))))))))
  {
   if(((! (! ((bool(bool(! (! ((((bool(((bool(false || (false))) || false)))))))))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
}
