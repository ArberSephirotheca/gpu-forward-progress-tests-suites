#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((! (! ((injectionSwitch.x > ((((true ? max((mat2(1.0) * (((mix(((((mat2(1.0) * (mat2(1.0) * (vec2((min((((float(mat2x3(((true ? (7.3) : (length(vec4(925.599, 98.83, - 8222.7258, 32.74))))), (dot(vec2(0.0, 0.0), vec2(((1.0) - 0.0), 1.0))), 0.0, 0.0, 0.0, 0.0))) + 0.0)), (min((max((7.3), (7.3))), (7.3))))), (8.4))))))) / vec2(1.0, 1.0)), vec2(((max(injectionSwitch, injectionSwitch)))[0], (exp(0.0) * ((injectionSwitch)[1]))), (bvec2(bvec3((bvec2(bvec4(bvec2(true, ((((! ((true && (! (false))))) || (true && ((true))))) || false)), ((injectionSwitch.x > injectionSwitch.y)), true))), true))))) * mat2((injectionSwitch.y))))), ((false ? (injectionSwitch) : ((mix(((((mat2(1.0) * (mat2(1.0) * (vec2((min((((((float(mat2x3(((true ? (7.3) : (((length(vec4(925.599, 98.83, - 8222.7258, 32.74))) * 1.0)))), (dot(vec2(0.0, 0.0), vec2(((1.0) - 0.0), 1.0))), 0.0, 0.0, 0.0, 0.0))) + 0.0) / 1.0))), (min((max((7.3), (7.3))), (7.3))))), (8.4))))))) / vec2(1.0, 1.0)), vec2(((max(injectionSwitch, injectionSwitch)))[0], (exp(0.0) * ((injectionSwitch)[1]))), (bvec2(bvec3((bvec2(bvec4(bvec2(true, ((((! ((true && (! (false))))) || (true && ((true))))) || false)), ((injectionSwitch.x > injectionSwitch.y)), true))), true))))) * ((true ? mat2((injectionSwitch.y)) : (mat2(6.6, - 6999.0636, - 9.9, - 54.00)))))))) : (roundEven(vec2(- 3.8, - 697.453))))))).y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (~ (~ (workgroup_base))) + subgroup_id * (max(subgroup_size, ((subgroup_size) << 0u))) + subgroup_local_id;
 atomicStore(write_val, (((bool((bvec3(bvec4(bvec3((bool(bvec4(true, false, true, false))), false, false), false))))) ? uint(virtual_gid) : (virtual_gid))), 4, 64, (min(0, ((((clamp(0, ((((0) ^ 0)) | (((0) ^ 0))), (~ (~ (0))))) | (0)) + 0)))));
 buf[virtual_gid] = uint(subgroupAllEqual(((min(((min(write_val, write_val))), ((((min(write_val, write_val))) << 0u)))) | (0u >> (uint(5u))))));
}
