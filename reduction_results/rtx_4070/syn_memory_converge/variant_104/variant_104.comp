#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(((((0.0 + (((injectionSwitch) * mat2(1.0)).x)) > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(((bool(bool((bool(bvec2(false, true))))))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((false))
  return;
 if((false))
  return;
 for(int _injected_loop_counter = int(((max(injectionSwitch, injectionSwitch)).x)); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    continue;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
        continue;
       break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      {
       if((false))
        continue;
       return;
      }
     continue;
    }
   if((true && ((((false)) && true))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! (! ((! (! (false))))))))
      {
       if((true && ((! (! ((false)))))))
        continue;
       if((false))
        break;
       continue;
      }
     if(((true && ((bool(bvec3((! (! (((((true && ((bool(bvec3((! (true && ((! (bool(bvec3(false, false, false))))))) || false, ((injectionSwitch.x > injectionSwitch.y)), true))))))))))), ((((true ? (clamp(injectionSwitch, injectionSwitch, (mix(vec2((injectionSwitch)[0], (- 2.5)), vec2((9.3), (injectionSwitch)[1]), bvec2(false, true))))) : (asin(vec2(7786.9461, - 0.6))))).x > injectionSwitch.y)), (((clamp(((false ? (acosh(- 968.084)) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))
      {
       if((false))
        continue;
       continue;
       if((false))
        break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
     if((((true && (false)) || ((bool(bool(false)))))))
      break;
     if((((false)) && true))
      continue;
    }
   if((false))
    return;
   if((false))
    continue;
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if(((true && (false))))
    return;
   if((bool(bvec4((((false) || false)), true, false, false))))
    {
     if((false))
      break;
     if((((false)) || false))
      {
       if((false))
        continue;
       break;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         break;
        }
       continue;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((((injectionSwitch.x > (clamp(((injectionSwitch.y) - (float(float(0.0)))), ((injectionSwitch.y) - (float(float(0.0)))), ((injectionSwitch.y) - (float(float(0.0)))))))) && true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          break;
         return;
         if((false))
          break;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((((true && (bool(bvec2((((! (! (false)))) || false), true)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     break;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       break;
      }
    }
   if((false))
    {
     if((false))
      break;
     return;
    }
   if(((((false || ((false || ((((true && ((true && (! (! ((injectionSwitch.x > (min(((injectionSwitch) + vec2(0.0, 0.0)), (clamp((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), ((injectionSwitch) + vec2((max((0.0 + (0.0)), ((0.0) - 0.0))), 0.0)), (min(((injectionSwitch) + vec2(0.0, 0.0)), ((((injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))))))).y)))))))) || false)))))))))
    {
     if((bool(bvec4((((((((true ? (max(injectionSwitch.x, injectionSwitch.x)) : ((true ? (2.7) : (6013.0247))))) > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))) && true)), false, true, (((determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (float(mat4x2(0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, (injectionSwitch.x)))), 0.0, 0.0, 1.0, 0.0, 0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))))
      continue;
     if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
      continue;
     if((false))
      continue;
     if((false))
      continue;
     break;
     if((false))
      {
       if(((true && (false))))
        continue;
       break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      continue;
    }
  }
 if((false))
  {
   if((((((false ? (1.1) : injectionSwitch.x)) > ((injectionSwitch) + vec2(0.0, 0.0)).y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((((! ((! ((bool(bvec4(! ((true && ((! (! (((! (false)) || false))))))), false, true, true)))))))) || (bool(bvec2(false, false))))))
  return;
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 uint num_workgroup = (max((clamp(((gl_NumWorkGroups) * ((uvec3(1u, 1u, 1u) << (~ (~ ((uvec3(0u)))))) >> ((uvec3(0u, 0u, 0u) | ((~ (~ (uvec3(0u))))))))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x));
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((((bool(bvec3(((false) || false), true, true))) || ((bool(bvec3((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < injectionSwitch.y)), false))))))))
  {
   if((false))
    return;
   if((((bool(bvec3(((! (! (false)))), false, true)))) || false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if((((((((injectionSwitch.x > injectionSwitch.y) && true))))) && true))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((false) || false)))
    {
     if((((false || ((((! (! (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))))))
      return;
     return;
    }
   if((false || (((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((((false || ((float(mat3x4(injectionSwitch.x, determinant(mat3(0.0, sin(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0))) > injectionSwitch.y))))))
    return;
   return;
  }
 uint workgroup_id = ((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x;
 if((false))
  {
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((! (! ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if((false))
  {
   if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((false))
    {
     if((((false) || (((max((vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))
      return;
     return;
    }
   if((false))
    return;
  }
 if(((bool(bvec3((bool(bvec3(((false) || false), true, true))), false, true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > (mix(float((- 95.57)), float((mix(float((0.4)), float(((false ? (0.1) : injectionSwitch.y))), bool(true)))), bool(true)))))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if(((((vec2((min((clamp(((true ? injectionSwitch[0] : (4.0))), ((true ? injectionSwitch[0] : (4.0))), ((true ? injectionSwitch[0] : (4.0))))), ((true ? injectionSwitch[0] : (4.0))))), (mix(vec2((- 7122.0291), (float(87563u))), vec2((injectionSwitch)[0], (float((max((mix(vec4((- 1.0), (36.77), (6986.4532), (vec4((clamp((((((false ? (injectionSwitch) : ((false ? (injectionSwitch) : injectionSwitch)))))) * abs(vec2(1.0, 1.0)))[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[((1) >> 0)], (injectionSwitch)[1])), 1.0, 0.0, 0.0))[3]), vec4((vec4((clamp((injectionSwitch)[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((((injectionSwitch) / cos(vec2(0.0, 0.0)))))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0))[0], (mix(vec4(((clamp((vec4((clamp(((vec2((clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)), (vec4((clamp(((vec2((clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)), (vec4((clamp(((vec2((clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)))))[0], ((vec4((clamp((injectionSwitch)[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)))[(clamp(1, 1, 1))], ((vec4((clamp(((vec2(injectionSwitch[0], injectionSwitch[1])))[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], ((min(injectionSwitch, injectionSwitch)))[1])), 1.0, 0.0, 0.0)))[2], ((vec4((clamp((injectionSwitch)[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)))[3]), vec4((1.7), (430.043), (- 3109.9610), (88.08)), bvec4(false, false, false, false)))[(max(1, 1))], (vec4((clamp((injectionSwitch)[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((((injectionSwitch))) / vec2(1.0, 1.0))[0], (- 6.2)), bvec2(true, false)))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0))[2], ((float(mat3(((false ? (8517.4665) : (- 31.47 / 484.419))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), bvec4(true, true, true, false))), ((((false ? (vec4(0.5, 1234.7798, 1760.2348, - 8.0)) : false ? (fract(vec4(- 645.717, 64.17, 7162.6408, 67.16))) : vec4((clamp((injectionSwitch)[1], (mix(vec2((6.2), ((injectionSwitch))[1]), vec2(((((injectionSwitch)) * mat2(1.0)))[0], (- 6.2)), (bvec2((bvec3(bvec4(bvec3(bvec2((true && (true)), false), ((injectionSwitch.x > injectionSwitch.y))), true)))))))[1], (injectionSwitch)[1])), 1.0, 0.0, 0.0)))))))))), bvec2((! ((bool((bvec3(bvec4(bvec3(((! (true)) || (! (! (false)))), true, false), ((injectionSwitch.x > injectionSwitch.y))))))))), ((injectionSwitch.x < injectionSwitch.y)))))[1])).x > (max((min(injectionSwitch, ((vec2(1.0, 1.0) * (vec2((mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), 1.0, sqrt(0.0)))))))))).y, injectionSwitch.y))))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = (((~ (~ (((~ (~ (((((uint(uint((min(workgroup_base + subgroup_id * ((subgroup_size) | (subgroup_size)), (clamp(workgroup_base + subgroup_id * ((true ? subgroup_size : (workgroup_id))), ((workgroup_base) | (workgroup_base)) + (((1u * (subgroup_id * subgroup_size))) | 0u), ((true ? workgroup_base : (workgroup_base))) + subgroup_id * subgroup_size)))) + subgroup_local_id))) | (uint(uint(((clamp(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * (min(subgroup_size, subgroup_size)))))) + subgroup_local_id))))) + 0u))))))))) + ((((min((~ (~ (true ? 0u ^ 0u : (1u * (((~ (~ (1u))) * ((((max((44819u), (0u ^ ((44819u)))))) | ((44819u)))))))))), true ? 0u ^ 0u : (44819u)))))));
 if((false))
  return;
 if((! (! (! (((! (! (true && ((! (((((false || (((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))))))
  {
   if(((((((((bool((bool(bvec4(bool(false), false, false, false))))) || false)) && true)) && true))))
    return;
   if((((injectionSwitch.x > ((false ? (injectionSwitch) : injectionSwitch)).y))))
    return;
   if((false))
    return;
   if(((! ((true && (! ((((false || ((((true && (false)) || (((((true)) && true)) && true))))) && true) && ((false || ((((((injectionSwitch.x) * 1.0) > injectionSwitch.y)) || ((false || (true)))))) && (((! (! ((bool(bvec4(false, true, true, false)))))))))))))))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if(((! (! (false)))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if(((! (false || ((! (! ((! ((bool(bool((bool(bvec4(false, true, false, true))))))))))))))))
    return;
   return;
  }
 if((! ((! (! (((! (((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))))))
  return;
 if((false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, (clamp(((((64)) >> ((0) | (((0) << 0)))) >> 0), ((64) >> 0), ((64) >> 0))), 0);
 if(((true && (((((true ? injectionSwitch.x : (1.9))) > injectionSwitch.y))))))
  return;
 (~ (~ (buf[virtual_gid] = uint(subgroupAllEqual((~ (~ ((1u * (write_val))))))))));
 if((false))
  return;
 if(((((((vec2(injectionSwitch[0], (clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)) || false))))
  return;
 if((false))
  return;
}
