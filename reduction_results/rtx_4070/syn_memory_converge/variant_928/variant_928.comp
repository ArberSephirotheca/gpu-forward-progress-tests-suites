#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((bool((! (! (bool(((! (! (bool(((false || (bool(bvec4(bool((false || ((((injectionSwitch.x > (((((max((true ? vec2(injectionSwitch[0], (((vec2(((mat3x2((((injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0, 1.0) * ((max(((vec2(injectionSwitch[0], injectionSwitch[1]))), ((vec2(injectionSwitch[0], injectionSwitch[1]))))))) : (vec2(2141.2969, 5.2))), 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))))) / vec2(1.0, 1.0))[1]) : (injectionSwitch)), (true ? vec2(injectionSwitch[0], (((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[1]) : (injectionSwitch)))))) - (((false || (true)) ? vec2(0.0, 0.0) : (injectionSwitch))))).y))) && true))), false, true, false)))))))))))))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((uint(uint((uint(uint(max((0u ^ (uint(uvec3(((uint(uvec2(((~ (~ (workgroup_size)))), 0u))) << 0u), 1u, 0u)))), uint(uvec3(((0u | ((((workgroup_size) << 0u) ^ 0u)))), (1u * ((clamp(1u, (uint(uvec4(1u, 0u, 1u, 1u))), 1u)))), 0u))))))))))) * workgroup_id;
 uint virtual_gid = workgroup_base + ((max(max(((subgroup_id * subgroup_size) | (((0u << (uint(4u))) ^ (~ (~ ((subgroup_id))))) * subgroup_size)), subgroup_id * subgroup_size), (~ (~ ((((max((min(max(((subgroup_id * subgroup_size) | (clamp((((((clamp(((false ? (subgroup_id) : (0u << (uint(4u))) ^ (subgroup_id))), (0u << (~ (~ ((uint(4u)))))) ^ ((~ (~ ((false ? (num_workgroup) : (max((subgroup_id), (subgroup_id)))))))), (max((1u * ((((min((0u << (uint((clamp(4u, 4u, 4u))))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))) / (0u ^ 1u)))), (1u * ((min((0u << (uint(4u))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))))))))) * subgroup_size) / 1u)), (((((clamp(((false ? (subgroup_id) : (0u << (uint(4u))) ^ (subgroup_id))), (0u << (~ (~ ((uint(4u)))))) ^ ((~ (~ ((false ? (num_workgroup) : (max((subgroup_id), (subgroup_id)))))))), (max((1u * ((((min((0u << (uint((clamp(4u, 4u, 4u))))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))) / (0u ^ 1u)))), (1u * ((min((0u << (uint(4u))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))))))))) * subgroup_size) / 1u)), (((((clamp(((false ? (subgroup_id) : (0u << (uint(4u))) ^ (subgroup_id))), (0u << (~ (~ ((uint(4u)))))) ^ ((~ (~ ((false ? (num_workgroup) : (max((subgroup_id), (subgroup_id)))))))), (max((1u * ((((min((0u << (uint((clamp(4u, 4u, 4u))))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))) / (0u ^ 1u)))), (1u * ((min((0u << (uint(4u))) ^ (subgroup_id), (0u << (uint(4u))) ^ (subgroup_id)))))))))) * subgroup_size) / 1u))))), subgroup_id * subgroup_size), max(((((subgroup_id * subgroup_size)) | (((true ? ((min((clamp(subgroup_id, subgroup_id, subgroup_id)), (min(subgroup_id, subgroup_id)))) * subgroup_size) : (workgroup_id))))) | (((((0u << (uint(4u))) ^ (subgroup_id)) * subgroup_size) | ((min((clamp(((((false ? (subgroup_id) : 0u << (uint(4u))))) ^ (subgroup_id)) * subgroup_size, ((0u << (uint(4u))) ^ (subgroup_id)) * subgroup_size, ((0u << (uint(4u))) ^ (subgroup_id)) * subgroup_size)), ((0u << (uint(4u))) ^ (subgroup_id)) * subgroup_size)))))), subgroup_id * subgroup_size))), max(((subgroup_id * subgroup_size) | (((0u << (uint(((4u) | (4u))))) ^ (subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size))))) << 0u)))))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, (max(0, 0)));
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
}
