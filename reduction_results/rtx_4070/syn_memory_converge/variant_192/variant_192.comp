#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(((((! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, ((injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (vec2(((false ? ((mat2x3(3013.8894, - 8.5, 255.249, - 4.7, 5703.2708, 183.847))) : mat2x3(injectionSwitch, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), exp(0.0), abs((clamp(1.0, 1.0, 1.0))), 1.0))))).y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((true && ((! (! (bool(bvec3((false), ((injectionSwitch.x < injectionSwitch.y)), true)))))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((! (! ((! ((true && (! ((bool(bvec3((injectionSwitch.x > (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))) + vec2(0.0, 0.0)).y), false, (((((bool(bvec3((! (! (false))), false, (((float((transpose(transpose(mat2x3(((false ? (- 5117.1999) : injectionSwitch.x)), 0.0, 0.0, 0.0, cos(0.0), 1.0)))))) < injectionSwitch.y)))))) || false)) && true)))))))))))))))
  {
   if(((bool(bvec3(false, true, (! (! (true))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((((((injectionSwitch.x < injectionSwitch.y)) && ((((clamp(injectionSwitch.x, ((injectionSwitch) / vec2(1.0, (mix(float(((1.0) * 1.0)), float((- 42.13)), bool((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))).x, injectionSwitch.x)) > injectionSwitch.y))))) && ((injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(((bool(bvec4((((((true && (injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)), true, true)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec4(((false) && true), false, true, false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((! (! (bool(bvec4(false, true, true, false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((bool(bool((! (! ((false)))))))) && ((injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(((! ((true && (! (false || ((((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((bool((bool(bvec4(bool((((injectionSwitch.x > (((vec2(1.0, 1.0) * (((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (vec2(1359.2174, - 4385.4005)))))).y)))), false, false, (false || (true))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((! (! ((bool(bvec2((false), false)))))))
    {
     if(((((injectionSwitch.x < injectionSwitch.y)) && ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((bool(bvec4(((bool((bvec3(bvec4((bvec3(bvec4(bvec3((((! (! (false))) && true)), true, false), false))), true)))))), true, true, false))))
    barrier();
   if((((true && (true)) && (bool(bvec4((((bool(bvec3(bool(bvec4(false, true, ((injectionSwitch.x > ((true ? (vec2((clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : (injectionSwitch))).y)), true)), (! (! (true))), false))))), false, false, ((! (((! (bool(bvec4((true && (false)), false, false, ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))))))
    {
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     if(((false || ((((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))) && (false))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = (0u ^ (max((((false ? (num_workgroup) : ((true ? workgroup_base : (((0u ^ (((write_val))))) ^ uint((injectionSwitch.x))))))) + subgroup_id * subgroup_size + subgroup_local_id), (((false ? (num_workgroup) : ((true ? workgroup_base : (((0u ^ (((write_val))))) ^ uint((injectionSwitch.x))))))) + subgroup_id * subgroup_size + subgroup_local_id))));
 if((false))
  {
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((((! ((false || (! (bool(bvec2(((injectionSwitch.x > injectionSwitch.y) || false), false))))))))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint((~ (~ (((virtual_gid)) | ((uint(uvec2((virtual_gid), 0u)))))))), 4, 64, 0);
 if(((! (! (((injectionSwitch.x > ((injectionSwitch.y) - 0.0))))))))
  {
   if(((((bool(bvec4(false, true, false, false))) && true))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > ((true ? injectionSwitch.y : (length(vec4(- 8.4, - 7.8, - 4713.7279, 26.73)))))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 buf[virtual_gid] = ((true ? uint(subgroupAllEqual(write_val)) : (workgroup_base)));
 if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((false)) && true))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
}
