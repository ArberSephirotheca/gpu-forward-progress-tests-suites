#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((false) || false)))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false || ((false))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if(((! (! (false || (((! (((((! (! (false || ((((true && (! (((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))) && true)))))))) || false))))))))))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((bool(bvec4((false), false, true, true))))
  {
   if(((false || (((false) || false)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     if((((false) && true)))
      {
       if((((false) || false)))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((! (! ((((! (bool(bvec2((! ((! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false)) && true))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if(((((min(injectionSwitch.x, (mix(float(injectionSwitch.x), ((true ? float((- 65.65)) : (372.369))), bool(false))))) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
  }
 if((((((false) || (false || (false)))) && true)))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((! (! ((((((((injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((false))
    return;
   return;
  }
 if(((((clamp(injectionSwitch, injectionSwitch, ((max(vec2((min(vec2(injectionSwitch), vec2((((true ? (injectionSwitch) * mat2(1.0) : (injectionSwitch)))))))), vec2(vec2(injectionSwitch))))))).x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((((injectionSwitch.x < injectionSwitch.y)) && ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if((false))
    barrier();
   if(((bool((bvec2(bvec4(bvec2(false, false), false, false)))))))
    return;
   if(((! (! ((! (! (bool(bool((((bool(bool((false))))) && true)))))))))))
    {
     if((! (((! ((false))) || false))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((true && (bool(bvec4((false || ((! (! (false))))), true, true, false)))))))
      barrier();
     if(((((bool(bvec4((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, false))), true, true, false)))) && true)))
      {
       if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false) && true)))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((! (! (false)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((bool(bvec4((bool(bool(bool(bvec3(false, (! (! (((((injectionSwitch.x > injectionSwitch.y))) || false)))), false))))), true, false, true))))))
      return;
    }
   return;
   if((false))
    barrier();
   if((false))
    return;
   if(((bool(bvec4((! ((bool((bool(bvec3(bool(! (false)), false, true))))))), true, true, true)))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((true && (true && ((((! ((false || ((bool(bvec3(! (false || (((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false)))))))))))))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((((bool((false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint num_workgroup = ((gl_NumWorkGroups.x) << 0u);
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((bool(bvec3((bool((bvec2(bvec3(bvec2((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y))), false))))), ((injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
     if((false))
      barrier();
    }
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     return;
    }
   return;
   if((((false) && true)))
    return;
   if((! (! (((((false || (((bool(bvec4((bool(bvec2((false), false))), false, true, true))) || false)))) && true))))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if(((! (! (false)))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((max((float(vec3((mix(float((5486.7164)), float(injectionSwitch.x), bool(true))), 1.0, 0.0))), (0.0 + ((min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if((((false) && true)))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((((bool((bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), false, false, false))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((! ((true && (((! ((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))
      {
       if((false))
        barrier();
       if(((false || (false))))
        barrier();
       if((((! (! ((injectionSwitch.x > (clamp((float((mix(float(float(injectionSwitch.y)), float((7.8)), bool(false))))), injectionSwitch.y, (float(vec3(injectionSwitch.y, 0.0, 1.0))))))))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(((bool((true && (bool((true && (false)))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((bool(bvec2((false), true))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((false))
          return;
         barrier();
        }
       if((false))
        barrier();
       return;
      }
     return;
     if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(((! (! (false)))))
      return;
     if((false))
      return;
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((false) || false)))
    return;
   if(((bool(bvec4((((true && ((true && (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)))))
    return;
   return;
   if(((false || (((((((true ? (mix(float((- 5688.0626)), float((((1.0 * (float((mat3(1.0) * (mat4x3(float(vec4((max((((max(injectionSwitch, injectionSwitch)).x) - 0.0), (max(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, (((1.0 * (1.0))) - 0.0)))))))))), bool(true))) : (sin(acosh((1.0 * ((float(mat3x4((((float(vec2(- 86.91, 1.0)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, (dot(vec2(0.0, 1.0), vec2(1.0, (mix(float((max(0.0, (float(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))), float(((8.5 * 9980.3944))), bool(false)))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, (max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))))) > injectionSwitch.y))) || false)))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((((((false)) && true)) && true))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((! (! ((! (! (bool((bvec2(bvec4((bvec2(bvec2(bvec2((false), true)))), false, true))))))))))))
    {
     if((false))
      return;
     barrier();
    }
   if(((((! (! ((((bool((bvec2(bvec4(bvec2(((((clamp(mat2((injectionSwitch.y)) * (injectionSwitch), mat2((injectionSwitch.y)) * (injectionSwitch), mat2((injectionSwitch.y)) * (injectionSwitch)))) - vec2(0.0, 0.0))).x > (min(injectionSwitch.y, injectionSwitch.y)), false), true, false))))) && true)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if((((((! (! ((((((false) && true) && true)) && true)))))) && true)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if(((((((false || ((false || (false || ((true && ((! ((false || (! (! ((! (! (! ((bool((bool(bvec3(bool((false || (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))))))))))))))))))))
      return;
     if(((((! (! (false)))) && true)))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((((false) && true)))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    return;
   return;
   if((((bool(bvec3(true, false, ((injectionSwitch.x > injectionSwitch.y))))) && (((((mix(float((2.3)), float((mix(float(float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), float((- 485.773)), bool(false)))), bool(true)))) > injectionSwitch.y))))))
    return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  return;
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((true && ((! (! (false)))))))
      return;
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((bool(bool((false)))))
      return;
     if((((false) && true)))
      barrier();
     barrier();
    }
   if((bool(bvec2(((((((true ? float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)) : (302.253)))) > injectionSwitch.y))), true))))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((false)) || false))
  return;
 if((false))
  barrier();
 uint workgroup_id = (min((uvec3(uvec3(gl_WorkGroupID))), gl_WorkGroupID)).x;
 if((((false || ((injectionSwitch.x > (((mix(float((- 4.8)), float((clamp(((mix(float((14.78)), float((max(clamp(((injectionSwitch.y) * 1.0), (((false ? (- 43.92) : (injectionSwitch.y) * 1.0))), ((injectionSwitch.y) * 1.0)), clamp(((injectionSwitch.y) * 1.0), ((injectionSwitch.y) * 1.0), ((injectionSwitch.y) * 1.0))))), bool(((injectionSwitch.x < injectionSwitch.y)))))), ((clamp(float(float(((((injectionSwitch.y) * 1.0)) * 1.0))), float(float(((((injectionSwitch.y) * 1.0)) * 1.0))), float(float(((((mix(float((961.371)), float((injectionSwitch.y)), bool(((injectionSwitch.x < injectionSwitch.y))))) * 1.0)) * 1.0)))))), ((injectionSwitch.y) * 1.0)))), bool(true)))) * (min(cos(0.0), cos(0.0))))))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y) || ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(((((((true && (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if(((false || (((true && ((! (! (bool(bvec3(false, false, false))))))))))))
  {
   if(((bool(bool(false)))))
    return;
   if(((true && (false))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((((bool(bvec4(false, true, false, false)))) || false)))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   if(((! (((! ((bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (((! (((bool((bvec2(bvec4(bvec2(bool((! (! (bool(false))))), false), false, false)))))))) || false)))))
        return;
       return;
      }
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((bool((bvec3(bvec4(bvec3(((((0.0 + (injectionSwitch.x)) > injectionSwitch.y))), true, false), true))))))
      {
       if((false))
        return;
       if(((((injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > (min(injectionSwitch, (vec2(mat3(((injectionSwitch) * vec2(1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))).y))))))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if(((! (! (false)))))
        return;
       if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       return;
      }
     if((false))
      {
       if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((! (((! (false)) || false)))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((((((true && (false)) || false))) && true)))
            return;
           barrier();
          }
         barrier();
         if((false))
          return;
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if(((bool(bvec3(bool(((bool((! (! ((false)))))) || false)), true, false)))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((false))
      {
       if(((! ((! (! (! (((injectionSwitch.x > ((vec2(vec3((injectionSwitch) * mat2((injectionSwitch.y)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))))).y))))))))))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if(((! ((true && ((! (! (! (false))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((((((! (! ((true && (true)))))) && true) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! ((bool(bvec4(! (false), true, true, false)))))))
      return;
     return;
    }
   return;
  }
 if(((((! ((! (! (! (((false) || false))))))))) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((((! (! ((false)))) && true)))
    barrier();
   if((false))
    return;
   barrier();
  }
 uint workgroup_base = ((((workgroup_size) ^ 0u) * ((((workgroup_id) | (workgroup_id))) | ((true ? 0u : (uint(false)))))) | (((workgroup_size) ^ 0u) * (((((min((min(workgroup_id, workgroup_id)), workgroup_id))) | (workgroup_id))) | ((true ? 0u : (uint(false)))))));
 if((false))
  barrier();
 if((! ((false || (! ((false)))))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((true && (false))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > (max(((true ? ((injectionSwitch.y) / sqrt(1.0)) : (949.704))), ((injectionSwitch.y) / sqrt(1.0))))))))
    {
     if((false))
      barrier();
     if(((! (! ((true && (false)))))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     barrier();
     if((false))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if(((((bool(bvec3(bool(bvec2((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), false)), false, false)))))))
    barrier();
   if((((bool((! (((! (bool((bool(bvec4(((bool(bvec2(((false) && true), false)))), true, false, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))))))) && true))
    {
     if(((bool((bvec2((bvec3(bvec4(bvec3(bvec2(false, ((injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y))), false)))))))))
      return;
     return;
    }
   if((false))
    return;
   if(((! (! ((true && ((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))))))))
    return;
   barrier();
   if((false))
    barrier();
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((! (! ((true && ((false)))))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + (0u | (subgroup_local_id));
 atomicStore(write_val, (0u ^ (uint(virtual_gid))), 4, 64, 0);
 if((! ((false || (! (((! (! (false))))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(((((((! ((((((injectionSwitch.x > injectionSwitch.y) || ((injectionSwitch.x > injectionSwitch.y))))) || (! (bool((((bvec2((bvec3(bvec3(bvec3((bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2((((injectionSwitch.x > injectionSwitch.y) && true)), false))), false, (bool(bool(true))))), true))), false))))))))))))))) && true)))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if((true && ((bool(bvec4((((false)) || false), (bool((bvec3(((bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true, (true && ((false || (true)))), (bool(bvec4(true, true, true, false))))), ((injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, ((((((false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false))))))))))
  {
   if((false))
    {
     if(((((! (! (false)))) || false)))
      {
       if((false))
        barrier();
       barrier();
       if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      {
       if(((bool(bvec4(false, true, false, false)))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if(((((! (! (injectionSwitch.x > (clamp(injectionSwitch.y, (float(mat4x3(injectionSwitch.y, ((false ? (sin(- 235.070)) : 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), ((injectionSwitch.y) / 1.0))))))))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if(((true && (false))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((! ((! (! (! ((false))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((false || ((bool(bvec3(((false || (false))), ((injectionSwitch.x > injectionSwitch.y)), (bool(bvec4(false, true, true, false))))))))) && true))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(((! ((true && (! ((((false || (false))) || false))))))))
    return;
  }
 if(((! (! ((((bool((bvec2(bvec2(bvec2(false, true))))))) && true))))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 ((((0u | (((0u | (buf[virtual_gid] = uint(subgroupAllEqual(write_val)))))))) - 0u) >> uint((injectionSwitch.x)));
 if(((bool(bool((true && (false)))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if(((! ((((false || (! (false))) || (! (! (false)))))))))
        return;
       return;
      }
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  return;
}
