#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((bool((bvec2(bvec2(bvec2((false), true)))))) && true)))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((((! (! (((bool(bvec3(false, true, false)))) && true)))) && true))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec4((((((bool(bvec3((false || (injectionSwitch.x > (mix(float(injectionSwitch.y), float((3.4)), (bool(bvec4(((bool(false)) || false), false, false, false))))))), true, false)))))) && true), true, false, (((! (! ((max((vec2(injectionSwitch[0], (mat2(1.0) * (injectionSwitch))[1])).x, (vec2((mix(float((- 1.8)), float(((injectionSwitch[0]) - (sqrt(1.0) * (0.0)))), bool((! (! (true)))))), injectionSwitch[1])).x)) > (mix(vec2(((min(800.747, 800.747))), (mix(float((- 710.867)), float(((- 2.9 / - 9.1))), bool(true)))), vec2((injectionSwitch)[0], (injectionSwitch)[((max((int(int((1 * ((1) | (((1) | (1)))))))), (int(int((1) | (((1) | (1)))))))))]), (bvec2(bvec4(bvec2(((injectionSwitch.x < injectionSwitch.y)), (bool(bvec2(true, false)))), false, true))))).y))))))))))
  {
   if((false))
    barrier();
   if((((false) && true)))
    barrier();
   if((((injectionSwitch.x > ((false ? (degrees(15.37)) : injectionSwitch.y))))))
    barrier();
   if((((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if((((bool((false || (bool((injectionSwitch.x > (((vec2(((injectionSwitch[0]) / 1.0), injectionSwitch[1]))) * mat2(1.0)).y)))))))))
    {
     if((((false) && true)))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((! (! (! ((bool(bvec4((false || ((! (((false || (((false)))) || false))))), false, true, false))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! (! ((false || ((bool(bvec4((false), true, false, true)))))))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false || ((false))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((! ((true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((bool(bool((bool(bvec2(false, false))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((true && ((((false))) || false)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec3(true && ((bool(bvec2((false), false)))), false, false)))))
  {
   if(((false || (bool(bvec2((false), true))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((bool(bvec4(! ((((! (! (! (false))))) || false)), true, true, true))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool((bvec3(bvec3(bvec3((bool(bvec4(false, true, true, true))), ((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y)))), true))))))))
  barrier();
 if((((! ((bool(bvec2(! ((false || (((! (! ((bool(bool(false)))))))))), true)))))) || (! (! (((false) && true))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = (((0u + ((0u ^ (workgroup_size))))) * 1u) * (uint(uvec2((~ (~ (workgroup_id))), (min((min(((1u << (uint(1u))) >> (uint(1u))), ((1u << (uint(1u))) >> (uint(1u))))), ((1u << (uint(1u))) >> (uint(1u))))))));
 if((false))
  barrier();
 uint virtual_gid = (~ (~ (0u | ((((workgroup_base)) | 0u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > ((true ? injectionSwitch.y : (- 111.471)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (((bool(bvec4((false), true, true, true))) && true))))))
  barrier();
 if((false))
  {
   if(((((((injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 atomicStore(write_val, uint((~ (((~ (max((virtual_gid), (virtual_gid)))) >> 0u)))), (min(4, (~ (~ (4))))), 64, 0);
 if(((false || (false))))
  barrier();
 if(((false || ((false || (false))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (min(injectionSwitch, (max(injectionSwitch, injectionSwitch)))).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((false || (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! ((! (! (! (false))))))))
  {
   if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if((bool(bool((bool(bvec4((((! (! ((bool(bvec3((false), true, (true && (((true) && true)))))))))) || false), true, true, true)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((! (! (((! (! (((bool((! (! (bool((((((injectionSwitch.x > injectionSwitch.y)))) && (bool(((bvec3(bvec3(bvec3((bvec3(bvec3(bvec3((bvec3(bvec4(bvec3(true, false, false), false))))))))))))))))))))) || false)))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((mat2(1.0) * (injectionSwitch)).x > (min(injectionSwitch, (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((9.4), (float(false))), bvec2(false, false))))).y))))
  {
   if(((bool((false || (bool(((! ((! ((! (! (((! (! (true && (false)))) || false))))))))))))))))
    barrier();
   if(((true && (false))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if(((((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false || (((! (! ((! ((bool(bvec2(! (false), true))))))))))))
    {
     if((false))
      barrier();
     barrier();
     if(((true && (false))))
      barrier();
    }
   if(((bool(bool(false)))))
    {
     if(((! (! (((((false) || false)))))) && true))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((false || (false))))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if(((((clamp((vec2(mat3x4(injectionSwitch, (dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, (float(mat4((mix(float(1.0), float((- 6749.5077)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log((clamp(1.0, 1.0, 1.0)))))), ((0.0) / 1.0), 0.0))), 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).x, injectionSwitch.x, (((max(float(mat3x4(max(injectionSwitch.x, (float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), 1.0, 0.0, (((((min(0.0, 0.0))) / ((true ? 1.0 : (- 4.7)))) / 1.0)), exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (mix(float(float(mat3x4((min(max(injectionSwitch.x, (float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), (mix(float((vec4(- 1.3, ((- 340.639) / 1.0), - 1230.0753, 863.925).q)), float(max((mix(float((41.70)), float(injectionSwitch.x), bool(((injectionSwitch.x < injectionSwitch.y))))), (float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), bool(true))))), 1.0, 0.0, ((((((0.0) / ((true ? 1.0 : (((clamp((float((transpose(transpose(mat4(((false ? (- 1607.0115) : (((- 4.7)) - 0.0))), 1.0, 0.0, (injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), (float(mat3x4((((- 4.7)) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0))), (((- 4.7)) - 0.0)))) + length(0.0))))) / 1.0))) * 1.0), exp(0.0), 1.0, (mix(float((- 34.85)), float((float(float(1.0)))), bool(true))), 0.0, 1.0, 1.0, (max(1.0, (max(1.0, 1.0)))), 1.0))), float((- 7943.8635)), bool(false))))))))) > injectionSwitch.y))))
  {
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((true && (((false) && true)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((false)) || false)) && ((injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(((((((((true && (((injectionSwitch.x > injectionSwitch.y) && (((min((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))) && true))))) && true)))
    barrier();
   if((false))
    barrier();
   if(((((((bool(bvec3((false || (false)), false, true))) ? (vec2(- 9.9, - 8.7)) : (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if(((false || (false))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((bool((bvec2(((bvec2(bvec3(bvec2(bvec4((bvec2(bvec2(bvec2(bvec2((((((injectionSwitch.x > injectionSwitch.y)))) && true), true))))), true, true)), false)))))))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual((0u + (((write_val) | (write_val))))));
 if(((bool(bvec4(((false) || false), false, false, true)))))
  barrier();
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec3((false), false, true))))
  {
   if(((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(((true && ((((true && (false))) || false)))))
    barrier();
   barrier();
  }
 if((((false) && true)))
  {
   if((bool(bool(((bool(bvec3(((! (! (bool(bvec4((((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(true, ((injectionSwitch.x > injectionSwitch.y)), true))) || false)))), false, true, false)))))), true, ((false || ((((false) || false)) || false)))))) && (! ((bool(bvec4(! (((false))), true, false, ((injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if((((injectionSwitch.x > ((((((((injectionSwitch.y)) * 1.0)) * 1.0)) + 0.0) + 0.0)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
}
