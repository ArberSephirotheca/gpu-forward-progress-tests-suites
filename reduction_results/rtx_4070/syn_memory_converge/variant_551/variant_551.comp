#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_base;
 if((false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size;
 do
  {
   do
    {
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(false);
  }
 while(false);
 if((false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))
    {
     if((false))
      return;
     if(true)
      {
       if((false))
        barrier();
      }
     else
      {
      }
     if((false))
      return;
     if((((false) || false)))
      barrier();
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        return;
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    break;
  }
 if((false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid;
 for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> ((clamp(int(0), int(0), int(0))))); _injected_loop_counter ++)
  {
   if((false))
    {
     do
      {
       if((false))
        return;
      }
     while(false);
     barrier();
    }
   do
    {
     for(int _injected_loop_counter = ((1 << (((int(1)) - 0))) >> (int(1))); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
      {
       if((false))
        break;
       if((false))
        {
         if((false))
          return;
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
     if((((((false) && true))) || false))
      barrier();
     if(((! (! (false)))))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     return;
     if((false))
      continue;
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if(true)
      {
       if(((! (! (false)))))
        barrier();
      }
     else
      {
      }
    }
  }
 while(false);
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     if(((bool(bvec4((true && (((injectionSwitch.x > injectionSwitch.y)))), false, true, (true && (false)))))))
      barrier();
     if((false))
      return;
    }
   while((true && (false)));
  }
 if(((! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.x = subgroup_id;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 while(false);
 if((false))
  return;
 if(false)
  {
  }
 else
  {
   ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.x) << 0u);
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if(false)
        {
         if((false))
          return;
        }
       else
        {
         return;
        }
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         if((false))
          return;
         return;
        }
       else
        {
        }
       if((false))
        return;
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if(true)
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.x = subgroup_size;
  }
 if(true)
  {
   if((false))
    return;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   do
    {
     if((false))
      return;
     if((false))
      return;
    }
   while(false);
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(false)
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.x;
 if(true)
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != (~ (~ (((((0) << 0)) + 0)))); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
      }
     else
      {
      }
     if(((true && ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
      return;
    }
  }
 else
  {
  }
 if(((false || (bool(bvec2((false), (bool(bvec2(true, false)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(true)
  {
   GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
  }
 else
  {
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(true)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if((false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if((false))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec2(false, false)))))
        return;
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
       if((false))
        {
         if((false))
          continue;
         continue;
        }
      }
     if(((((float(mat3x2((max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, sin(0.0), (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if((false))
        break;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if(true)
        {
         return;
        }
       else
        {
        }
       if((((bool(bvec4(bool((bvec2(bvec2(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))))
        continue;
      }
     if(false)
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
       barrier();
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(((((mix(vec2((- 4.6), (max((mix(float((injectionSwitch)[1]), float((- 24.37)), bool(false))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (- 9.0)), bvec2(true, false))).x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if((false))
        break;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
   if((((injectionSwitch.x < injectionSwitch.y)) && (false)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(1))); _injected_loop_counter --)
        {
         return;
         if((false))
          break;
        }
      }
    }
  }
 while(false);
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = ((int((injectionSwitch.y)) << ((0 ^ (int(4))))) >> (int(4))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       return;
      }
     if((false))
      return;
    }
   barrier();
  }
 if((false))
  return;
 uint num_workgroup = (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(true)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
  }
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.w = (min(num_workgroup, num_workgroup));
 do
  {
   if((false))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ int((injectionSwitch.x))); _injected_loop_counter ++)
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 while(false);
 for(int _injected_loop_counter = int((injectionSwitch.y)); (! (! (_injected_loop_counter > 0))); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.x = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.w;
   if((false))
    continue;
  }
 if(((true) || false))
  {
   if(((false || (false || ((false))))))
    {
     if((false))
      return;
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
     return;
    }
   if((false))
    return;
   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.x = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.x;
   do
    {
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((true && ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((false))
      return;
     if((false))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 << (int(0))); _injected_loop_counter --)
    {
     if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     barrier();
    }
   if((false))
    return;
   if(((bool(bvec3(! (! (((true) && true))), true, false)))))
    {
     if((false))
      return;
     if((false))
      return;
     if(((((! (! (injectionSwitch.x > (((vec2(mat4x2(injectionSwitch, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)))) + vec2(0.0, 0.0)).y)))))))
      {
       if((((false) && true)))
        {
         if(true)
          {
           return;
           if((false))
            return;
          }
         else
          {
          }
        }
       if((false))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
        }
       while(false);
       barrier();
      }
     if((true && ((false))))
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if(true)
          {
           for(int _injected_loop_counter = 0; ((_injected_loop_counter) / 1) != int((((min((false ? (vec2(92.48, - 1.2)) : injectionSwitch), (false ? (vec2(((clamp(float((transpose((mat3x2(mat4(transpose(mat2x3(92.48, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), (max(float((transpose((mat3x2(mat4(transpose(mat2x3(92.48, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), float((transpose((mat3x2(mat4(transpose(mat2x3(92.48, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))), float((transpose((mat3x2(mat4(transpose(mat2x3(92.48, 0.0, 1.0, 1.0, 1.0, 1.0))))))))))), - 1.2)) : injectionSwitch)))).y)); _injected_loop_counter ++)
            {
             if((false))
              {
               if((false))
                break;
               continue;
              }
             if((((! (! (! ((! ((injectionSwitch.x > (max((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))
              {
               if((false))
                barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 for(int _injected_loop_counter = (1 ^ int((injectionSwitch.x))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                  }
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 barrier();
                }
               else
                {
                }
              }
             if((false))
              barrier();
             return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                break;
               if((false))
                break;
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          break;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         if((false))
          return;
        }
      }
    }
   else
    {
    }
  }
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(((! (((((bool(bvec3((! (false)) || false, true, ((injectionSwitch.x > injectionSwitch.y))))) && true)))))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 do
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
    }
   while(false);
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.w = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
 if(true)
  {
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if((false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.w = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.w;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if((false))
  {
   do
    {
     return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.z = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.z = (clamp(GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size, ((false ? (GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size)), ((((((((GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size))) | uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)))).z;
  }
 if((false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.w * GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.z;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z = workgroup_base;
 do
  {
   if((false))
    {
     do
      {
       if((false))
        return;
       if(true)
        {
         if((false))
          break;
         barrier();
        }
       else
        {
        }
       if((false))
        break;
      }
     while(false);
     if((false))
      return;
    }
  }
 while(false);
 for(int _injected_loop_counter = ((1 << (int(1))) >> ((((0 ^ (int(1)))) << 0))); _injected_loop_counter > ((false ? (- 28768) : 0)); _injected_loop_counter --)
  {
   if((false))
    {
     if((false))
      break;
     return;
    }
   if(true)
    {
     if(((bool(bool((bool(bvec4((bool(bvec2(false, false))), true, true, true))))))))
      {
       do
        {
         do
          {
           barrier();
          }
         while(false);
         if((false))
          break;
        }
       while(false);
      }
    }
   else
    {
    }
  }
 if(((true && (false))))
  {
   do
    {
     barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 uint virtual_gid = (min((min((0u ^ (GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (clamp(((GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) | (((false ? (subgroup_local_id) : GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))), (uint(uint((~ (~ (((GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) | (((false ? (subgroup_local_id) : GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))))))), ((GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) | (((false ? (subgroup_local_id) : GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))))), GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.z + (clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (max(((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) / uvec2(1u, 1u)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)).x * ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid) / uvec4(1u, 1u, 1u, 1u)).z)) + (~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y)));
 if(true)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.y = virtual_gid;
    }
   while(false);
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.y = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_basenum_workgroup.xyz.y;
 if(((((false) && ((injectionSwitch.x < injectionSwitch.y))) || (false))))
  {
   if((false))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if(false)
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14num_workgroupvirtual_gidworkgroup_idworkgroup_size.y;
  }
 if(false)
  {
  }
 else
  {
   do
    {
     if((((false) && ((true) && ((injectionSwitch.x < injectionSwitch.y))))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(false);
  }
 ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w = GLF_merged4_0_1_13_1_1_11_2_1_12_3_1_14subgroup_sizevirtual_gidworkgroup_idworkgroup_size.y) / uint((injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     if(((bool(bvec3(false, true, true)))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(1))); _injected_loop_counter --)
    {
     if((false))
      {
       if(true)
        {
         if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
        }
       else
        {
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(true)
    {
     if((((! (! (((! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
    }
   else
    {
    }
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     do
      {
       if((false))
        return;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((bool(bvec4((bool(bvec4(((false) && true), false, false, false))), true, false, false)))) && true)))
    {
     do
      {
       if((false))
        barrier();
      }
     while(false);
     do
      {
       if((false))
        {
         do
          {
           if(((false || (false))))
            break;
           barrier();
          }
         while(false);
        }
      }
     while((! (! ((true && (((injectionSwitch.x > injectionSwitch.y))))))));
     if((false))
      barrier();
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if(((bool(bvec3((! (! (false))), false, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     do
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            break;
           if((false))
            barrier();
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                   if((false))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if((! (! ((false)))))
              {
               do
                {
                 barrier();
                }
               while((true && (false)));
              }
             return;
            }
          }
         if(false)
          {
           if(((false || (false))))
            continue;
          }
         else
          {
           return;
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if(false)
      {
      }
     else
      {
       if(true)
        {
         if((((false) || false)))
          {
           if((false))
            return;
           barrier();
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
     if(((injectionSwitch.x < (min(injectionSwitch.y, injectionSwitch.y)))))
      {
       if((false))
        return;
       barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((((((injectionSwitch) * mat2((injectionSwitch.y))).x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         do
          {
           return;
          }
         while(false);
         if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       break;
      }
     if((false))
      continue;
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       continue;
       if((false))
        break;
      }
     continue;
     if((false))
      {
       if((false))
        return;
       continue;
      }
     if((false))
      return;
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false || ((bool(bool(((injectionSwitch.x < injectionSwitch.y))))))))
          {
           barrier();
           if((false))
            break;
          }
         else
          {
          }
        }
       else
        {
        }
      }
     return;
     if((false))
      continue;
    }
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if((false))
    return;
   if((bool(bvec3(true, false, true))))
    {
     for(int _injected_loop_counter = (0 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       atomicStore(write_val, uint(((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w : (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y)))), 4, (clamp(64, (((clamp(64, 64, 64))) << 0), (1 * (64)))), 0);
      }
    }
   else
    {
    }
   if((false))
    return;
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false || ((((false)) && true))))
  return;
 if(true)
  {
   if(false)
    {
    }
   else
    {
     if(((((max((vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          return;
        }
       else
        {
         if((! (! ((false)))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if(false)
      {
      }
     else
      {
       do
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((! (! ((false)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             break;
            }
           if((false))
            break;
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            break;
           return;
           if((false))
            {
             if((false))
              return;
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
          }
         if(((! (! (false)))))
          {
           if((false))
            break;
           if(true)
            {
             if(((bool(bvec4((true && (((injectionSwitch.x > injectionSwitch.y)))), false, true, false)))))
              {
               if((false))
                continue;
               barrier();
              }
            }
           else
            {
            }
           if((false))
            return;
           barrier();
          }
         if(false)
          {
          }
         else
          {
           if(true)
            {
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
           if((false))
            continue;
          }
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            return;
          }
         if(((! (! (false)))))
          break;
         if((! ((! (! (! (((((dot(vec3(0.0, 1.0, log(1.0)), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))) * (injectionSwitch.x)) < injectionSwitch.y)))))))))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              break;
             if(false)
              {
              }
             else
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           buf[GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w] = uint(subgroupAllEqual(write_val));
          }
         else
          {
           for(int _injected_loop_counter = ((1 << (int(6))) >> (((false ? (- 59458) : int(6))))); _injected_loop_counter != (0 | (0)); _injected_loop_counter --)
            {
             if(false)
              {
               if((false))
                continue;
              }
             else
              {
               if((false))
                {
                 if((false))
                  break;
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((false))
                break;
              }
            }
           if((false))
            barrier();
           if(((true && (((bool(bvec3((((((injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))), true, true))) || false)))))
            {
             if((false))
              break;
             if((false))
              break;
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
               if((false))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
               if((false))
                return;
              }
             if((false))
              return;
             break;
            }
          }
         if((false))
          return;
         if((false || ((false || (((((! (((! (! (false || (! (! (! (((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))))))))
          {
           do
            {
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
           while(false);
           if((false))
            {
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (4356 & (62539 & (0 ^ 0))); _injected_loop_counter != ((((~ (~ (min((((0)) | ((0))), (0)))))) + 0) | 1); _injected_loop_counter ++)
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       while(false);
      }
    }
  }
 else
  {
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = ((1 << (int(5))) >> ((max(int(5), int(5))))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      return;
    }
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
}
