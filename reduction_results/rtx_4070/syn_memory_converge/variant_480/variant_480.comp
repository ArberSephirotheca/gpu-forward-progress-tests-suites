#version 460

struct _GLF_struct_13 {
 uvec2 _f0;
 uvec4 _f1;
 bool _f2;
} ;

struct _GLF_struct_12 {
 bool _f0;
 bvec4 _f1;
 bvec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 uint virtual_gid;
 bvec3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 bvec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 int _f0;
 bvec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 vec3 _f1;
 vec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 int _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 int _f1;
 mat2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_15 {
 uint _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 float _f1;
 int _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bvec4 _f1;
 _GLF_struct_2 _f2;
 ivec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 vec2 _f1;
 ivec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_local_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((true && (false))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false || (((bool((true && (bool(((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((((bool(bvec2((false || (injectionSwitch.x < injectionSwitch.y)), ((true) && true)))))) && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(((((mix(float(injectionSwitch.x), float((7402.5616)), bool(((injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
  }
 if(((((1.0 * (injectionSwitch.x)) > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(mat2x4((1.0 * (1.0))), vec2(1.0), ivec2(1), bvec4(true))), _GLF_struct_3(ivec4(1), bvec4(true), _GLF_struct_2(mat3x4(1.0), 1.0, 1, mat3x4(1.0), ivec3(1)), ivec2((clamp(1, 1, (~ (~ (1)))))), bvec4(true)), gl_SubgroupInvocationID);
 if(((! ((! (! (! (false))))))))
  barrier();
 uint num_workgroup = (uvec3((clamp(uvec4(gl_NumWorkGroups, 1u), uvec4(gl_NumWorkGroups, 1u), uvec4(gl_NumWorkGroups, 1u))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y)))) && ((injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > (clamp((min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((((true && (((max(injectionSwitch.x, (mix(float((65.25)), float((1.0 * ((mix(float((float(true))), float(injectionSwitch.x), bool(true)))))), bool(true))))) > injectionSwitch.y))))) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((true ? injectionSwitch.x : (((bvec2(true, true) != bvec2(false, true)) ? - 3.4 : - 8.9)))) > (exp(vec2(0.0, 0.0)) * ((mat2(1.0) * (((mix(vec2(((7.1 * 7.2)), (max((vec2(0.0, 0.0) + (((mix(vec2(((((((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(- 169.544, 577.971)) : (((log(vec2(1.0, 1.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))))) * mat2(1.0))))[0], (min(((((vec2(mat3x4(((((log(vec2(1.0, 1.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0)) * vec2(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), (min((((((log(vec2(1.0, 1.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0)))), (min((((((log(vec2(1.0, 1.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0)))), (((((log(vec2(1.0, 1.0)) + ((vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))))))))))[1]), vec2((1.1), (47.74)), bvec2(false, false))) - vec2(0.0, 0.0)))), (vec2(0.0, 0.0) + (injectionSwitch))))[1]), vec2((max((vec2(0.0, 0.0) + ((mix(vec2((vec2(mat2((((max((((((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0)), (((injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0))), 1.0, 0.0)))[0], (vec2(mat2((((max((((((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0)), (((injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0))), 1.0, 0.0)))[1]), vec2(((false ? 4.2 : - 8185.4491)), (vec3(- 9070.1033, - 1.2, - 76.27).z)), bvec2(false, false))))), ((((max(((vec2(0.0, 0.0)) * vec2(1.0, 1.0)), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)) + (injectionSwitch))))[0], ((27.50 + - 93.05))), bvec2(((((true) || false)) && true), false)))))))).y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((((min(float(mat4(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0)), float(mat4(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), (max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(1u, _GLF_struct_6(_GLF_struct_5(mat3x2(1.0), 1), 1, mat2(1.0), vec3(1.0)), _GLF_struct_8(_GLF_struct_7(bvec3(true), (mix(vec3((vec3(1.0))[0], (- 6539.1053), (vec3(1.0))[2]), vec3((5863.3625), (vec3(1.0))[1], (1.0 * ((- 1.4)))), bvec3(false, true, false))), vec2(1.0), mat3(1.0))), _GLF_struct_14(_GLF_struct_9(uvec4(1u)), _GLF_struct_10(((((((1) >> 0)) | (1))) >> 0), bvec4(true), vec2(1.0)), _GLF_struct_11(mat3x2(1.0), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_4.subgroup_local_id, bvec3(true), mat2x3(1.0), ivec3(1), bvec4(true), mat2x4(1.0)), _GLF_struct_12(true, bvec4(true), bvec3((! ((bool(bvec3(! (((! (! (((injectionSwitch.x > injectionSwitch.y))))) || ((! (! (true)))))), false, false)))))), ((1u) / 1u)), _GLF_struct_13(uvec2(1u), (max(uvec4(1u), uvec4(1u))), true), bvec4(true)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 atomicStore(write_val, (~ (((~ (uint(_GLF_struct_replacement_15._f3._f2.virtual_gid))) | (~ (uint(_GLF_struct_replacement_15._f3._f2.virtual_gid)))))), 4, 64, 0);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((((injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))
  {
   if((((false) || false)))
    barrier();
   if((false))
    {
     if((((((false) && true) && true))))
      barrier();
     if((true && ((false))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(((! (! (! (! (((true && ((! ((true && (! (false)))))))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((! (! ((! (! ((injectionSwitch.x > (mix(float((6390.4535)), float((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if((((((false) || false)) || false)))
    barrier();
   if((false))
    {
     if((bool(bvec4((! (! ((false)))), false, false, true))))
      barrier();
     barrier();
    }
  }
 buf[_GLF_struct_replacement_15._f3._f2.virtual_gid] = uint(subgroupAllEqual(((write_val) - 0u)));
 if((false))
  barrier();
 if(((((! (! ((max(injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)))) > (max(injectionSwitch, injectionSwitch)).y)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
}
