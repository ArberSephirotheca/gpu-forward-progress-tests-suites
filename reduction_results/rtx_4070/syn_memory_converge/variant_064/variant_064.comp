#version 460

struct _GLF_struct_4 {
 uint workgroup_size;
 bool _f0;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 ivec3 _f0;
 mat4x3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 ivec2 _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((((false)) && ((false || ((((injectionSwitch.x < injectionSwitch.y)) && true))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((bool(bvec4(false, true, (((injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((! (! ((false)))))
      {
       if((bool(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((true && (bool((((bvec2(bvec2(bvec2(bvec2((bvec2(bvec3(bvec2(bvec3(bvec2((bool(bool(false))), true), false)), false))))))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (bool(bvec3((bool(bool(((! (! ((bool((true && (bool(bool(((bvec3(bvec4(bvec3(bvec3(bvec3((false), false, true))), false))))))))))))))))), true, false))))))
      barrier();
     barrier();
    }
  }
 if((((true && (((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(((mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), uvec4(1u), mat2x4(1.0), _GLF_struct_1(_GLF_struct_0(gl_SubgroupInvocationID, ivec3((clamp(1, 1, 1))), mat4x3((1.0 * (1.0))), mat4(1.0))), _GLF_struct_2((mat2(((mat4(((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), ivec2(1));
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool((bvec2(bvec4(bvec2(! (! ((false))), false), true, true)))))))
    barrier();
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((! (! ((false)))) && true)))
  {
   if((false))
    barrier();
   if(((bool(bvec4((((true && (((false)) || false))) || false), ((injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if(((bool(bvec2((false || (((false) && true))), true)))))
      barrier();
     barrier();
    }
   barrier();
   if(((((true && (((injectionSwitch.x > injectionSwitch.y) || false)))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > (((float(mat2((((((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) / 1.0) / 1.0), 1.0, 0.0, 0.0))) / (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))))))
  barrier();
 if((false))
  {
   if((((((((false) && true))) && true) && true)))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true) || (((! ((bool(bvec3(! (((false) || false)), ((injectionSwitch.x < injectionSwitch.y)), ((! (! (bool(bvec2((true && (((injectionSwitch.x < injectionSwitch.y)))), false)))))))))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((true && (false))))
      {
       if(((((min(((injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec2(false, true)))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((false)) || false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((bool(bvec2(((! (! (bool(bvec4(true && (false), true, ((! (! ((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))), true)))))), ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((((0.0 + ((mix(float(injectionSwitch.x), float((9794.7796)), bool(false))))) > injectionSwitch.y)) || false))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (bool(bvec4((false), false, (bool(bvec4(true, true, false, true))), false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((false || (false))))
  barrier();
 if((false))
  barrier();
 if((((bool(bvec2(bool(bvec2(false, false)), true))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if(((bool(bvec3(false, true, true)))))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > (vec2(mat3x2((max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, (injectionSwitch.x), 1.0, (float(mat2x4(0.0, 1.0, 0.0, 0.0, exp(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, 1.0))), 0.0, ((true ? 0.0 : (vec3(588.794, - 78.81, - 0.9).z))), (max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_WorkGroupSize.x, ((false || (((! (! (bool(bool(false)))))))) || (true)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! (true && ((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), false)))))))))))
  {
   if((((false) && true)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(((bool(bvec2((((clamp(((injectionSwitch) * mat2(1.0)), (clamp(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))), ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), false)))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((bool(bvec4((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false, false, false))))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((! (! ((false)))))
  barrier();
 if((((false || (bool(bvec2(false, false)))))))
  {
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    {
     if((((((injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((bool(bvec3((false), false, (((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   barrier();
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 uint workgroup_base = ((clamp(~ (~ (_GLF_struct_replacement_4.workgroup_size * workgroup_id)), ~ (~ (_GLF_struct_replacement_4.workgroup_size * workgroup_id)), ~ (~ (_GLF_struct_replacement_4.workgroup_size * workgroup_id)))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = ((((min((min(((max(0u ^ ((~ (~ ((((workgroup_base) | ((max((max(workgroup_base, (uint(uvec2(workgroup_base, 0u))))), workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (max((~ (1u)), (~ (1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), (max(0u ^ ((~ (~ ((((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + ((max(((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u, ((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u)))) / 1u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), 0u ^ ((~ (~ (((min(((workgroup_base) | ((max(workgroup_base, workgroup_base)))), ((workgroup_base) | ((max(workgroup_base, workgroup_base)))))) + (((min((((1u * (subgroup_id))) / (~ (~ ((clamp(1u, 1u, 1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + ((_GLF_struct_replacement_3._f3._f0.subgroup_local_id) ^ 0u))))))))))) | (0u ^ ((~ (~ ((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id)))))), ((max(0u ^ ((~ (~ ((((workgroup_base) | ((max((max(workgroup_base, (uint(uvec2(workgroup_base, 0u))))), workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (max((~ (1u)), (~ (1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), (max(0u ^ ((~ (~ ((((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + ((max(((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u, ((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u)))) / 1u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), 0u ^ ((~ (~ (((min(((workgroup_base) | ((max(workgroup_base, workgroup_base)))), ((workgroup_base) | ((max(workgroup_base, workgroup_base)))))) + (((min((((1u * (subgroup_id))) / (~ (~ ((clamp(1u, 1u, 1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + ((_GLF_struct_replacement_3._f3._f0.subgroup_local_id) ^ 0u))))))))))) | (0u ^ ((~ (~ ((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id)))))))), ((max(0u ^ ((~ (~ ((((workgroup_base) | ((max((max(workgroup_base, (uint(uvec2(workgroup_base, 0u))))), workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (max((~ (1u)), (~ (1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), (max(0u ^ ((~ (~ ((((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + ((max(((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u, ((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u)))) / 1u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id))))), 0u ^ ((~ (~ (((min(((workgroup_base) | ((max(workgroup_base, workgroup_base)))), ((workgroup_base) | ((max(workgroup_base, workgroup_base)))))) + (((min((((1u * (subgroup_id))) / (~ (~ ((clamp(1u, 1u, 1u)))))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + ((_GLF_struct_replacement_3._f3._f0.subgroup_local_id) ^ 0u))))))))))) | (0u ^ ((~ (~ ((((workgroup_base) | ((max(workgroup_base, workgroup_base)))) + (((min((((1u * (subgroup_id))) / (~ (~ (1u)))) * subgroup_size, subgroup_id * subgroup_size))) >> 0u) + _GLF_struct_replacement_3._f3._f0.subgroup_local_id)))))))))) / (~ (((~ (1u)) * 1u))));
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((! (! ((bool(bvec3(((true) && true), true, ((injectionSwitch.x < injectionSwitch.y))))) && (bool(bvec4((false), (false || ((bool(bvec2(false, false))))), true, true))))))) || false))))
  barrier();
 ((((buf[virtual_gid] = ((false ? (workgroup_base) : uint(subgroupAllEqual(write_val)))))) ^ ((true ? ((true ? uint((injectionSwitch.x)) : (workgroup_id))) : (workgroup_id)))) >> (43777u & (~ ((((1u * ((clamp(~ (0u), ~ (0u), ~ ((((uint(uint((~ (~ (0u))))))) / 1u)))))) | ((((! ((false || (! (false))))) ? (subgroup_size) : 1u * (((~ ((clamp(~ ((((0u >> ((clamp(uint(5u), (1u * (uint(5u))), (min(uint((min((min(5u, (~ (~ ((1u * (5u))))))), 5u))), ((true ? uint(5u) : (workgroup_base))))))))) + ((((clamp(~ (0u), ~ (0u), ~ (0u))) + 0u)))))), ~ ((((0u >> ((clamp(uint(5u), (1u * (uint(5u))), (min(uint((min((min(5u, 5u)), 5u))), ((true ? uint(5u) : (workgroup_base))))))))) + ((((clamp(~ (0u), ~ (0u), ~ (0u))) + 0u)))))), ~ ((((0u >> (((max(clamp(uint(5u), (1u * (uint(5u))), (min(uint((min((min(5u, 5u)), 5u))), ((true ? uint(5u) : (workgroup_base)))))), clamp(uint(5u), (1u * (uint(5u))), (min(uint((min((min(5u, 5u)), 5u))), ((true ? uint(5u) : (workgroup_base))))))))))) + ((((clamp(~ (0u), ~ (0u), ~ (0u))) + 0u)))))))))) | ((clamp(~ (0u), ~ (0u), ~ (0u)))))))))))))));
 if((false))
  barrier();
 if((false))
  {
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec2((true && (((((((! (! (! (((true && (true && ((false || ((! ((((((injectionSwitch.x > injectionSwitch.y))) && true) || false)))))))))))))) || false))) || false))), true)))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
}
