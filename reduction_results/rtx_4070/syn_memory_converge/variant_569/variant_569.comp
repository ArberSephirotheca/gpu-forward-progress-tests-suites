#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((bool(bool(false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (((min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! ((false || (! (false)))))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((bool((false || (bool(false)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (vec2(vec4(((injectionSwitch) - vec2(0.0, 0.0)), determinant(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))).y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((bool((bvec3(bvec3(bvec3((false), false, true)))))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[(max(1, 1))])).y))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false || ((((false || (((mix(vec2((- 687.377), (- 2963.4679)), vec2((injectionSwitch)[(int(ivec4(0, int((injectionSwitch.x)), 1, 0)))], (((((injectionSwitch.x > (1.0 * (injectionSwitch.y)))) ? (injectionSwitch) : injectionSwitch)))[1]), bvec2(true, true))).x < injectionSwitch.y)))) && (((bool((bvec3(bvec3(bvec3(((((((! (! (bool(bvec3(((true && ((bool(bvec4((false), false, true, false)))))), false, ((injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true) && true), true, false))))))))))))
  barrier();
 if((((injectionSwitch.x > ((clamp(clamp(injectionSwitch, (mat2(1.0) * (injectionSwitch)), (max(injectionSwitch, injectionSwitch))), ((clamp(injectionSwitch, (mat2(1.0) * (injectionSwitch)), (max(injectionSwitch, injectionSwitch)))) * mat2(1.0)), clamp(injectionSwitch, (mat2(1.0) * (injectionSwitch)), (max(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(((! (! (((false) || false))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((((! (((! (bool(bool((! (! ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && true))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if((false))
  {
   if(((true && (false))))
    barrier();
   if((((bool(bvec3((((injectionSwitch.x > injectionSwitch.y)) && true), false, false))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec4(false, (bool((false || ((! (! ((bool(bvec4((true && ((bool(bool(bool(true)))))), false, false, false)))))))))), true, true)))))
  barrier();
 if((false))
  barrier();
 if(((bool(bool(false)))))
  {
   if(((((injectionSwitch.x > ((float(mat4x2(float(mat3(injectionSwitch.y, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))) || (((false) || false)))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((((clamp((max(((injectionSwitch) * ((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), injectionSwitch)), (max(((injectionSwitch) * mat2(1.0)), injectionSwitch)), (max(((injectionSwitch) * mat2(1.0)), injectionSwitch)))).x > injectionSwitch.y)))) && (((max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
  {
   if(((((clamp(((mix(float((37.75)), float(max(((false ? (- 2515.0083) : injectionSwitch.x)), ((false ? (- 2515.0083) : injectionSwitch.x)))), bool(true)))), ((false ? (- 2515.0083) : injectionSwitch.x)), ((false ? (- 2515.0083) : injectionSwitch.x)))) > (mix(float((- 9487.4189)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(((((bool(bvec3((((float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y) || false), true, true)))))))
  barrier();
 if((false))
  barrier();
 if(((! (! (true && ((false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((((true ? ((max(((mat2(1.0) * (injectionSwitch)).x) * 1.0, ((mat2(1.0) * (injectionSwitch)).x) * 1.0))) : (max((0.0 + ((determinant(((mat4(- 2.2, 29.01, - 1330.4792, - 30.13, - 5078.3946, - 342.874, 9.0, 0.9, 610.863, - 3.8, 942.684, 698.474, - 705.803, 9.7, 7.2, - 57.93)) * mat4(1.0)))))), ((sqrt(0.0) + (determinant(mat4(- 2.2, 29.01, - 1330.4792, - 30.13, - 5078.3946, - 342.874, 9.0, 0.9, 610.863, - 3.8, 942.684, 698.474, - 705.803, 9.7, 7.2, ((- 57.93) / 1.0)))))))))) > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(((! (! (((injectionSwitch.x < injectionSwitch.y))))) && ((false))))
  {
   if((false))
    barrier();
   if(((bool((bvec3(bvec4(bvec3(((((((! (! ((bool(bvec3((((bool((! (! (((bool(! (! (false)))) && ((injectionSwitch.x < injectionSwitch.y)))))))))), false, true)))))))) && true)) && true), false, false), true))))) && true))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((((mix(float(((+ vec2(- 2.0, - 5.9).y))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
    }
   if((! (! ((! (! (((bool(bvec3((! (! (false))), false, true)))))))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((true && (true && ((false))))))
      barrier();
     if((((((false ? (875.029) : (mix((min((((true ? clamp(float(((injectionSwitch.x) / 1.0)), float(((injectionSwitch.x) / 1.0)), float(((injectionSwitch.x) / 1.0))) : (- 33.00)))), float(((injectionSwitch.x) / 1.0)))), float((- 5.0)), (bool(bvec2(bool(false), true))))))) > ((min((((injectionSwitch) * mat2((injectionSwitch.y))) - abs(vec2(0.0, 0.0))), (injectionSwitch) * mat2((injectionSwitch.y))))).y))))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (((true ? vec2((mat3(1.0) * (mat3(((injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) : (vec3(- 805.349, 8.6, 7.6).pp)))).y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if(((((! (bool(bvec4(((false || (! ((! (! (false))))))), false, true, true)))))) && ((injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((false) && true)))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > ((float(mat3(((clamp(((max((((injectionSwitch) * mat2(1.0)).y), (((injectionSwitch) * mat2(1.0)).y)))), ((max((((injectionSwitch) * mat2(1.0)).y), (((injectionSwitch) * mat2(1.0)).y)))), (max(((max((((injectionSwitch) * mat2(1.0)).y), (((injectionSwitch) * mat2(1.0)).y)))), ((max((((injectionSwitch) * mat2(1.0)).y), (((injectionSwitch) * mat2(1.0)).y)))))))) / (max(((false ? (sign(99.01)) : 1.0)), 1.0))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, (dot(vec3((min(1.0, 1.0)), 0.0, (clamp(0.0, (mix(float(0.0), float((clamp((mix(float((- 280.181)), float((- 43.09)), bool(false))), (float((vec2(mat4x2(vec2((- 280.181), determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), (min((- 280.181), (- 280.181)))))), bool(false))), 0.0))), vec3(0.0, 1.0, 1.0)))))) - 0.0)))))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((false)) || (! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if(((((max(injectionSwitch.x, (((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y))))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y) && ((((true ? (vec2(mat4x3((mix(vec2((715.451), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (1.6)), bvec2(((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : (step(injectionSwitch, vec2(- 64.26, 7.4))))).x < (vec2(injectionSwitch[0], ((false ? (- 21.61) : injectionSwitch[1])))).y))))), true, true, true)))))
      {
       if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((((! (! (false))) && true))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((! (! ((bool(bool((false))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      barrier();
     if((((false)) || false))
      {
       if((((! (! (((false || ((bool(bool(injectionSwitch.x > (clamp(((injectionSwitch) - vec2(0.0, 0.0)), (mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))))))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((bool(bvec3(((max(injectionSwitch, injectionSwitch)).x > ((max(mix(vec2((injectionSwitch)[0], (0.0 + ((injectionSwitch)[1]))), vec2(((clamp(- 7.7, (min(- 7.7, - 7.7)), (min(- 7.7, (clamp((max(- 7.7, (float(mat2x4(((true ? - 7.7 : (7.7))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (max(- 7.7, (float(mat2x4(((true ? - 7.7 : (7.7))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (max(- 7.7, (float(mat2x4(((true ? - 7.7 : (7.7))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))))), (vec4(((mix(float((- 8621.2158)), float(float(mat3x4(- 8.6, sqrt(1.0), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(0.0))), 0.0, abs(1.0), exp(0.0), 1.0, (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0))), bool(true)))), - 6.0, 3673.7664, (min((max((min(25.09, 25.09)), 25.09)), 25.09))).w)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (0.0 + ((float(vec4((injectionSwitch)[1], 1.0, (injectionSwitch.x), 1.0)))))), vec2(((clamp(- 7.7, (min(- 7.7, - 7.7)), (min(- 7.7, (max(- 7.7, (float(mat2x4(((true ? - 7.7 : (7.7))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))), (vec4(- 8.6, - 6.0, 3673.7664, (min((max((min(25.09, 25.09)), 25.09)), 25.09))).w)), bvec2(false, false))))).y), true, ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((((vec2(0.0, 0.0) + ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
         if((true && ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   if(((((! (! (false))) || false))))
    {
     if((! (! ((bool(bool((((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
  }
 if((bool(bvec4((! (! (((true && (bool(bvec2((false), true)))))))), false, true, true))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 if((((((bool(bvec3((! ((! (! (! (! (((true && (bool(bvec3((((! (! ((! (bool(bvec3(((((false))) || false), false, false)))) && (! (! (true)))))))), true, false)))))))))))), false, true)))) && true)) || false))
  {
   if((((((bool(bool(bool((bool((bvec3(bvec4(bvec3(bool(((false) && true)), false, false), false)))))))))) && true))))
    {
     if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((((false)) || false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 (0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((float(float(((mat2(1.0) * (vec2((float(mat2x3((mix(float((- 85.11)), float((0.0 + (injectionSwitch[0]))), bool(true))), (dot(vec4((max(((0.0) - 0.0), 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, (0.0 + (1.0)), 1.0, 0.0, sin(0.0), (injectionSwitch.y))), 1.0, 1.0, 1.0))), injectionSwitch[1])))).x))) > injectionSwitch.y))))
  {
   if((false))
    {
     if((((false)) || false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if(((((((! (! (bool(bvec2((bool(bvec3(bool(bvec2(((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)))), false, (! ((((((max(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)) && ((! (((! ((! (false))))) || false)))))))), true)))))))) || false)))
    {
     if((false))
      barrier();
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(((bool(bvec2(false, false)))))
    barrier();
   if((((injectionSwitch.x > ((((injectionSwitch.y) / 1.0)) - (mix(float(0.0), float((- 146.164)), bool(false))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((((mix(vec2((mix(float((injectionSwitch)[0]), ((true ? (mix(float((min(float((- 1.0)), float((- 1.0))))), float((9.6)), bool(false))) : (856.623))), bool(false))), (float(vec2((5.6), 0.0)))), vec2((clamp((min((min((- 8.9), (- 8.9))), (min((min((- 8.9), (- 8.9))), (min((- 8.9), (- 8.9))))))), (min((- 8.9), (- 8.9))), (min((- 8.9), (- 8.9))))), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((true && (((injectionSwitch.x > (((((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y))))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec3(false, false, false)))))
  {
   if((false))
    barrier();
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((((mix(float(injectionSwitch.x), float((0.4)), bool(false))) > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], ((true ? injectionSwitch[1] : (7.8))))).y))))
      barrier();
    }
   if(((! (! (false)))))
    {
     if(((bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((bool(bvec3((! (! ((bool(bvec2(((injectionSwitch.x > (clamp((mix(((true ? float(injectionSwitch.y) : (5262.3337))), float((41.35)), bool(false))), (mix(((true ? float(injectionSwitch.y) : (5262.3337))), float((41.35)), bool(false))), (mix(((true ? float(injectionSwitch.y) : (5262.3337))), float((41.35)), bool(false))))))), false)))))), false, false)))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && ((false))))
  barrier();
 if((false))
  barrier();
 if(((((min(injectionSwitch, injectionSwitch)).x > (max((0.0 + (injectionSwitch.y)), (min(injectionSwitch.y, ((injectionSwitch) * vec2(1.0, 1.0)).y))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(((bvec2(bvec4(bvec2((bvec2(bvec3(bvec2((bvec2(bvec2(bvec2(false, false))))), false)))), true, true))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((((((injectionSwitch.x > injectionSwitch.y)))) || false) || false)))
  {
   if((false))
    barrier();
   if(((((vec2(mat2((mix(vec2((- 400.716), ((- 9.6 + - 3.4))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true))), 1.0, 0.0))).x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if((false))
      barrier();
     if(((false || (bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((bool(bvec2(false, (bool(bvec3(((false) || ((injectionSwitch.x > injectionSwitch.y))), false, ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if(((bool((bvec3(bvec3(bvec3(false, (bool(bvec2(false, false))), true))))))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((bool(bool((false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((true && (false))))
    barrier();
   if(((false || (false))))
    {
     if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((true && ((bool(bool(false)))))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false || ((((injectionSwitch.x > ((false ? (2.2) : (max((float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))), injectionSwitch.y))))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(((true && (false || ((false))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bool(((false) || (((! (! (((min(((min(injectionSwitch.x, injectionSwitch.x))) * 1.0, ((min(injectionSwitch.x, injectionSwitch.x))) * 1.0))) > injectionSwitch.y)))))))))))
    {
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
     if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if((((false)) && true))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((true ? (max(injectionSwitch.x, injectionSwitch.x)) : (263.482))) > injectionSwitch.y))))
    barrier();
   if(((((((min((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), ((true ? injectionSwitch.x : (3.9))))) > injectionSwitch.y)) || false))))
    {
     if((bool(((bool((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, true))))) || false))))
      barrier();
     if((false))
      barrier();
     if(((bool((bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((false)) || false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if(((((false || (false))) && true)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((true && (bool(bvec3((((((dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))) * (injectionSwitch.x)) > injectionSwitch.y)) || (false)), false, (! (((! (bool(bvec4((true), ((injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))))))))))
  barrier();
 if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(((true && ((true && (((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(((! (! (true && ((((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if(((true && (bool(bvec2((bool(bvec3((true && ((false))), false, false))), false))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      barrier();
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if(((((true && (((! (((! (((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(false, true))))))) && true)) && true)))))))
  {
   if((false))
    barrier();
   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (false)))))
  barrier();
 if(((((bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
  barrier();
 if((true && ((false))))
  barrier();
 if((((((bool(bool((injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 uint workgroup_base = (~ (~ (workgroup_size))) * workgroup_id;
 if(((false || (bool(bool((bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), true)))))))))
  {
   if((false))
    barrier();
   if((((false)) || false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((((((max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(((1.0) + 0.0))))).x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
    }
   if(((((! (! (false)))) && true)))
    {
     if((bool(bvec3((((false)) && true), false, true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((((((bool(bvec2((false || ((((false || ((true && ((! (! (false || (((injectionSwitch.x > ((((clamp((injectionSwitch), ((false ? (injectionSwitch) : (injectionSwitch))), (injectionSwitch))) * mat2(1.0))) / vec2(1.0, 1.0)).y)))))))))))) || false)), true))))) || false)))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if(((((true && ((false || (bool(bvec2((false), true)))))))) && true))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((true && ((clamp(((((clamp((injectionSwitch), (mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2((- 1.6), (- 6.6)), bvec2(false, false))), (injectionSwitch)))) / vec2(1.0, 1.0)) * mat2((injectionSwitch.y))).x, ((((clamp((injectionSwitch), (mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2((- 1.6), (- 6.6)), bvec2(false, false))), (injectionSwitch)))) / vec2(1.0, 1.0)) * mat2((injectionSwitch.y))).x, ((((clamp((injectionSwitch), (mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2((- 1.6), (- 6.6)), bvec2(false, false))), (injectionSwitch)))) / vec2(1.0, 1.0)) * mat2((injectionSwitch.y))).x)) > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(((((true && ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = (((((max(((((((false ? (workgroup_base) : ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((uvec2(0u, ((((min((0u) >> 0u, ((~ (~ (0u)))) >> 0u))) / 1u))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y) | 0u)))) | (((((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((uvec2(0u, ((((min((0u) >> 0u, (0u) >> 0u))) / 1u))) ^ (((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) + uvec2(0u, 0u))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y)) | 0u) | 0u)))) | (((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((((((uvec2(((false ? (workgroup_id) : 0u)), ((((min((0u) >> 0u, (0u) >> 0u))) / 1u))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) | ((uvec2(((false ? (workgroup_id) : 0u)), ((((min((0u) >> 0u, (0u) >> 0u))) / 1u))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))) >> uvec2(0u, 0u))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y) | 0u))), ((((((false ? (workgroup_base) : ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((uvec2(0u, ((((min((0u) >> 0u, ((~ (~ (((((0u) / 1u)) / 1u))))) >> 0u))) / 1u))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y) | 0u)))) | (((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((uvec2((clamp(0u, 0u, (0u | (0u)))), ((((min((0u) >> 0u, (0u) >> 0u))) / (0u ^ (((1u) | (1u))))))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y) | 0u)))) | (((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * (((clamp((clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (max((((uvec2(0u, ((((min((0u) >> 0u, (0u) >> 0u))) / 1u))) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) >> uvec2(0u, 0u))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) >> uvec2(0u, 0u)).y) | 0u)))))) + 0u)) ^ 0u) + (((((0u) | (0u)) ^ (max((subgroup_local_id) | ((~ (((~ (subgroup_local_id)) ^ 0u)))), (subgroup_local_id) | ((~ (((~ (subgroup_local_id)) ^ 0u)))))))));
 if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 atomicStore(write_val, ((uint((max(((virtual_gid) / 1u), virtual_gid)))) | (uint((0u | (virtual_gid))))), 4, ((~ ((int(ivec4(~ (max(64, (((((((clamp(64, 64, 64))) - 0)) - (((0 ^ ((((0 ^ (0)))) + 0)) - 0)))) << ((0) | ((int(int(0)))))))), 0, 0, 0)))))), ((0) | ((((0 ^ 0) | 0)) & - 80533)));
 if((false))
  barrier();
 if((((false)) || (! ((((injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((false || (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((bool(bool((((! (! ((false) && true)))))))))
  barrier();
}
