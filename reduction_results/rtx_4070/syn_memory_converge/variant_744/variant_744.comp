#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         do
          {
           if(((((bool(bvec3(false, false, false)))) && true)))
            {
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
          }
         while(false);
         barrier();
         if((false))
          barrier();
        }
       barrier();
       if(((false || (false))))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
        }
       while(false);
      }
    }
   else
    {
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     barrier();
    }
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(true)
  {
   if(true)
    {
     do
      {
       for(int _injected_loop_counter = (- 42957 & 0); _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((bool(bvec4(false, true, true, false))))
          {
          }
         else
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   else
    {
     if((false))
      barrier();
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((! (! (false))))
    {
     if(true)
      {
       if((false))
        barrier();
      }
     else
      {
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     while(((false) && true));
    }
   else
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     if(((bool(bvec3(false, false, false)))))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if(true)
      {
       if((false))
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     do
      {
       if(((true && (false))))
        barrier();
      }
     while(false);
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if(true)
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            {
             if(true)
              {
               if((false))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> (int(8))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                }
               if((false))
                {
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 barrier();
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(((false || (false))))
                    barrier();
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(((! (! (false)))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
               if(true)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (int((injectionSwitch.x)) << (int(8))); _injected_loop_counter < (0 | 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((1 ^ 1) >> (int(3))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                {
                 if(false)
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((! (! (true))))
                    {
                     if(true)
                      {
                       if((false))
                        barrier();
                       barrier();
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if(((! ((true && (! ((true && (false)))))))))
                {
                 do
                  {
                   if((((false) && true)))
                    barrier();
                   for(int _injected_loop_counter = ((1 ^ 1) | 0); _injected_loop_counter != (((1 << (int(0))) >> (int(0))) & 1); _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 barrier();
                 for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   if((false))
                    {
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(4))); _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                    }
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 do
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(true)
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       barrier();
                      }
                     if(((! (! (false)))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                    }
                   else
                    {
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                 while(false);
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if(true)
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   if((false))
                    {
                     if((false))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     barrier();
                    }
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 | int((injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(true)
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                      }
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                 do
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 while((false || (false)));
                }
              }
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               barrier();
              }
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             do
              {
               if(true)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       do
                        {
                         if(((! (! (false)))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       while(false);
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((false))
                      barrier();
                     do
                      {
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = (int(((ivec2((0 >> (int(5))), 1)) | (ivec2((0 >> (int(5))), 1))))); _injected_loop_counter != ((((0 | 1) << (int(7))) >> (int(7))) | 1); _injected_loop_counter ++)
                              {
                               barrier();
                               if((false))
                                {
                                 for(int _injected_loop_counter = ((1 << (int(1))) >> (((int(1)) << 0))); _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 barrier();
                                }
                               if((false))
                                barrier();
                               if(true)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           if((! (! (false))))
                            {
                            }
                           else
                            {
                             if((false))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1 << (int(4))) >> (int(4))) << (int(4))) >> (int(4))); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                       while(false);
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                      }
                     while((! ((! (! (! (false)))))));
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             do
              {
               do
                {
                 barrier();
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
              {
               if((false))
                {
                 if(true)
                  {
                   barrier();
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(true)
                    {
                     if(((true && (false))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
              }
             else
              {
              }
            }
           if((false))
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
      }
     do
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 else
  {
   if((false))
    barrier();
  }
 if(false)
  {
  }
 else
  {
   if((false))
    {
     for(int _injected_loop_counter = ((1 << (((false ? (69669) : int(0))))) >> (((int(0)) << 0))); _injected_loop_counter != (0 >> (int(8))); _injected_loop_counter --)
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(true)
    {
     barrier();
     if((false))
      barrier();
    }
   else
    {
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(false)
    {
     if((false))
      {
       if((false))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       barrier();
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if((false))
    {
     if((false))
      barrier();
     if(true)
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       barrier();
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
          }
         barrier();
        }
       if((false))
        barrier();
      }
    }
  }
 while((bool(bvec2(false, true))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if((false))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(false);
     if((false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(false);
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(5))); _injected_loop_counter --)
      {
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((bool(bvec4(true, false, false, ((injectionSwitch.x < injectionSwitch.y))))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(true)
                {
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               if(true)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               else
                {
                 if((((false) || false)))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if((false))
                barrier();
              }
             else
              {
              }
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (0 ^ (1 & 1)); _injected_loop_counter != (0 & - 31435); _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             for(int _injected_loop_counter = (0 << (((int(3)) | (0 | 0)))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               do
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               while(false);
              }
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if(false)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
           if(((bool((bool(bool(bool(((false) || false)))))))))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           if((false))
            barrier();
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(true)
          {
           if(true)
            {
             if((((! (! (true)))) && ((injectionSwitch.x < injectionSwitch.y))))
              {
               if((false))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
               if((((false) && true)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           do
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
             if(false)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if(false)
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(false);
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(false)
                      {
                       if(((true && (false))))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                           if((! (! (true))))
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > (max(0, 0)); _injected_loop_counter --)
                                {
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                            }
                           else
                            {
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(4))); _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                       if((false))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if(((! (! (false)))))
                      {
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != ((((1 << (int(4))) >> (int(4))) << (((true ? int(0) : (32317))))) >> ((1 * (int(0))))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               while((! ((! (! (! (false)))))));
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         else
          {
           do
            {
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             if(((bool(bvec2(false, false)))))
              barrier();
            }
           while(false);
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           barrier();
          }
         if((((false || (bool((bvec3(bvec4(bvec3(false, false, true), true)))))))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
        }
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       do
        {
         barrier();
         do
          {
           if((false))
            barrier();
          }
         while(false);
        }
       while(false);
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if((false))
    {
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((! (! ((true && (false)))))))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec4(false, true, true, false)))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false || (false)))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if(((! ((bool(bvec3(! ((true && (false))), true, false)))))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     do
      {
       if((false))
        {
         if((false))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(false);
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       for(int _injected_loop_counter = ((0 ^ 0) >> (int(1))); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     do
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     while(false);
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) || false)))
    barrier();
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < (0 | ((1 << (int(5))) >> (int(5)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 if(false)
  {
   if((false))
    barrier();
  }
 else
  {
   if((false))
    {
     do
      {
       barrier();
      }
     while(false);
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
      }
     while(false);
     barrier();
    }
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
         if((false))
          barrier();
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (0 << (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(false)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               if((false))
                barrier();
              }
            }
           else
            {
             if(true)
              {
               if((false))
                barrier();
               barrier();
              }
             else
              {
              }
             if((false))
              barrier();
            }
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
             if((false))
              barrier();
             if(true)
              {
               if((false))
                barrier();
               if(((bool(bool(false)))))
                barrier();
              }
             else
              {
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if((false))
                barrier();
              }
             while(false);
            }
          }
         do
          {
           if((false))
            barrier();
           if((false))
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 if(true)
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         while(false);
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           do
            {
             do
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(false);
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             do
              {
               barrier();
               if((false))
                barrier();
              }
             while(false);
            }
          }
        }
      }
    }
  }
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     barrier();
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  {
   do
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(6))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(false);
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
    {
     if((false))
      {
       for(int _injected_loop_counter = ((1 << (int(2))) >> (((int(2)) | (int(2))))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
       do
        {
         if((false))
          barrier();
        }
       while(false);
      }
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(((bool(bool(((((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter != (((0 ^ 1) << (int(7))) >> (int(7))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
    }
   else
    {
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(false)
    {
     if((false))
      barrier();
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
     if(false)
      {
      }
     else
      {
       do
        {
         if((false))
          barrier();
         if(true)
          {
           if(true)
            {
             for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != (0 << (int(5))); _injected_loop_counter --)
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 while(false);
                }
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
             if((false))
              barrier();
             if((false))
              barrier();
            }
          }
         else
          {
          }
         if((false))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       while(false);
      }
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = (0 & - 99894); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     do
      {
       barrier();
      }
     while(false);
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec4(false, true, true, false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   for(int _injected_loop_counter = (0 << (((true ? int(3) : (46560))))); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(((! (! (false)))))
  barrier();
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(true)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = ((ivec3(- 30984, 81952, - 83754).z % - 20840) & (0 & 34842)); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(((false || (false))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
            barrier();
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if((false))
          barrier();
         if(true)
          {
           do
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               barrier();
               if((false))
                barrier();
              }
            }
           while(false);
          }
         else
          {
          }
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   while(false);
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(true)
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(true)
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       do
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if(false)
          {
          }
         else
          {
           do
            {
             if((false))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
                      {
                       if((false))
                        barrier();
                      }
                     barrier();
                    }
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               barrier();
              }
            }
           while(false);
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         do
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         while(false);
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       while(false);
       if((false))
        barrier();
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != (max(0, (max(0, 0)))); _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
             if(true)
              {
               if((false))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((((false) && true)))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           while(false);
           if((false))
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
  }
 else
  {
   if(((false) && true))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
      }
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if((false))
    {
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool(bvec2(false, false)))))
      barrier();
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if(((((! (! (false)))) && true)))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
              }
             if((false))
              barrier();
            }
           while(false);
           if(false)
            {
            }
           else
            {
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                }
               barrier();
              }
            }
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            {
             if(((bool(bvec4(false, true, true, true)))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             barrier();
            }
          }
         do
          {
           if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(true)
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         while(false);
        }
       barrier();
       for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
          }
         if(((bool(bvec2(false, true)))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           do
            {
             if((false))
              {
               if(((! ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if((false))
                barrier();
              }
            }
           while(false);
          }
        }
       barrier();
      }
     if((false))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(false);
          }
         if((false))
          barrier();
        }
      }
     if(((true && (false))))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((false))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      barrier();
    }
  }
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if(((true && (false))))
              barrier();
             if(true)
              {
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
          }
         barrier();
        }
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(true)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           barrier();
           if((false))
            barrier();
           do
            {
             if((false))
              {
               if((((false) || false)))
                barrier();
               if(false)
                {
                 if((false))
                  barrier();
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
            }
           while(false);
          }
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         do
          {
           barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
        }
       else
        {
        }
       if(((((! (! (false)))) || false)))
        barrier();
      }
    }
   do
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if(true)
            {
             if((false))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if(true)
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if((false))
                    barrier();
                  }
                }
               else
                {
                }
               if((false))
                barrier();
              }
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if(true)
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
         if((false))
          barrier();
        }
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   do
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(false);
   if((false))
    barrier();
   if((false))
    barrier();
   if(true)
    {
     if((false))
      {
       if(true)
        {
         barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       else
        {
         if((false))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(false);
          }
        }
      }
     for(int _injected_loop_counter = (1 * (0)); _injected_loop_counter != ((1) | (1)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
        }
       if((((false) || false)))
        barrier();
       if(true)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != ((65476 - 62874) & 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if((false))
            barrier();
           if((false))
            {
             do
              {
               if(((! (! (false)))))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             barrier();
            }
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if(true)
  {
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if((false))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
  }
 if((false || (true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bool((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     for(int _injected_loop_counter = ((1 << (int(6))) >> ((clamp(int(6), int(6), int(6))))); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
             if((false))
              {
               do
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while((true && ((! (! (false))))));
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(true)
              {
               barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
           if((false))
            barrier();
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if(true)
              {
               if((false))
                barrier();
               barrier();
              }
             else
              {
               if((false))
                barrier();
              }
            }
           if((false))
            barrier();
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < (max(1, 1)); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         do
          {
           for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != (0 | (0 << (int(8)))); _injected_loop_counter --)
            {
             if((false))
              {
               if(false)
                {
                 if((false))
                  barrier();
                }
               else
                {
                 barrier();
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              {
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
               barrier();
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         while(false);
         for(int _injected_loop_counter = (0 << (((false ? (9289) : int(3))))); _injected_loop_counter != (int((injectionSwitch.x)) ^ 1); _injected_loop_counter ++)
          {
           if((false))
            {
             for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(((bool(bvec3((bool(bool(false))), true, true)))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((! (! (false))))
          {
          }
         else
          {
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       if(false)
        {
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false);
          }
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != (max(0, 0)); _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
     do
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             barrier();
            }
           else
            {
            }
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         do
          {
           if((false))
            barrier();
           barrier();
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while((bool(bvec4(false, true, true, false))));
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if(((! (((! (false)) || false)))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if((false))
  {
   do
    {
     barrier();
    }
   while((! (! (false))));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 do
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((false))
        barrier();
       barrier();
      }
     while(false);
    }
   if((false))
    {
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(false)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(true)
            {
             if((false))
              barrier();
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         else
          {
           if(((! (! (false)))))
            barrier();
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((true && (true)))
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           barrier();
           if((false))
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > ((43169 << - 93991) & 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
        }
      }
     else
      {
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 while(false);
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  barrier();
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       do
        {
         if((((false) && true)))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     if(true)
      {
       if(false)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if(true)
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         else
          {
           if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
            barrier();
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
            }
          }
        }
       else
        {
         do
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   if(true)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                         barrier();
                        }
                      }
                     if(false)
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        {
                         if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if((bool((bvec2(bvec2(bvec2((false || (false)), false)))))))
                  {
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if((((false) || false)))
                            barrier();
                          }
                         barrier();
                        }
                       if((false))
                        barrier();
                       barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((((false) || false)))
                      barrier();
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                    }
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                         if(true)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       while((! (! (false))));
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = ((((1 << (int(4))) >> (int(4))) ^ 0) & 1); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                      }
                     if((false))
                      {
                       if(((bool((bvec2(bvec4(bvec2(false, true), true, false)))))))
                        barrier();
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if((false))
                          barrier();
                        }
                       while(false);
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((false))
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                     for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter > (0 & 58660); _injected_loop_counter --)
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y)) || (true)))
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                         if((false))
                          barrier();
                         for(int _injected_loop_counter = 1; _injected_loop_counter > ((0) | (0)); _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                        }
                       barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((((false) && true)))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((false))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       barrier();
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter != ((true ? 1 : (- 10528))); _injected_loop_counter ++)
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            {
                             if((false))
                              {
                               if(((false || (false))))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                               barrier();
                              }
                             barrier();
                            }
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     if((false))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((false))
                                {
                                 do
                                  {
                                   if(true)
                                    {
                                     if((false))
                                      barrier();
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                     if((false))
                                      barrier();
                                    }
                                   else
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                    }
                                  }
                                 while(false);
                                }
                               for(int _injected_loop_counter = ((1 << ((0 ^ (int(6))))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                }
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                              }
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((false))
                              barrier();
                             if(false)
                              {
                              }
                             else
                              {
                               if(true)
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(false);
                                         if(true)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if((false))
                                              barrier();
                                             barrier();
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                          }
                                        }
                                       if(((bool(bvec3(false, false, true)))))
                                        barrier();
                                      }
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(true)
                                  {
                                   do
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(false);
                                    }
                                   while(false);
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         while(false);
                        }
                       if(true)
                        {
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       while(false);
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(true)
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                  }
                }
              }
             else
              {
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if((false))
              barrier();
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(false)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((! (! (false)))))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if((false))
                  barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       if((((false) && true)))
                        barrier();
                      }
                    }
                  }
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
               if((false))
                barrier();
               for(int _injected_loop_counter = (0 + (0)); _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             while(false);
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while(false);
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           do
            {
             if(true)
              {
               buf[virtual_gid] = uint(subgroupAllEqual(write_val));
              }
             else
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         else
          {
           if((false))
            barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       do
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           for(int _injected_loop_counter = ((67892 & 0) << (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), false, true)))))
              barrier();
             if((false))
              barrier();
             if(((false || (bool(bool(false))))))
              {
               if((false))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(false);
       if((false))
        barrier();
       if((false))
        {
         for(int _injected_loop_counter = ((int((injectionSwitch.x)) << (int(8))) << (int(5))); _injected_loop_counter < ((true ? 1 : (- 982))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if(((true) || false))
            {
             barrier();
             do
              {
               if((false))
                barrier();
              }
             while(false);
            }
           else
            {
             if((false))
              barrier();
            }
          }
        }
       else
        {
        }
      }
     if((false))
      barrier();
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 ^ 0) << (int(6))) >> (int(6))); _injected_loop_counter ++)
    {
     do
      {
       barrier();
      }
     while(false);
    }
  }
 if(true)
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter != (0 << (int(3))); _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != (min(1, 1)); _injected_loop_counter ++)
    {
     if((false))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if(false)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(((bool(bvec4(false, true, false, true)))))
          barrier();
        }
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if(false)
        {
        }
       else
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          {
           for(int _injected_loop_counter = ((false ? - 69780 : 12149) & 0); _injected_loop_counter < ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
            {
             barrier();
             if((false))
              barrier();
             if((false))
              barrier();
             do
              {
               if((false))
                barrier();
              }
             while(false);
            }
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter < ((1) | 0); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     do
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((bool(bvec4(bool(bvec3(false, true, false)), false, true, false)))))
            {
            }
           else
            {
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
            {
             if(true)
              {
               do
                {
                 barrier();
                }
               while((bool((bvec2(bvec3(bvec2(((false) && true), false), true))))));
               do
                {
                 if((false))
                  {
                   if(false)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                }
              }
             if((false))
              barrier();
            }
          }
         while(false);
         if((false))
          barrier();
        }
      }
     while(false);
    }
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (((1 << (int(1))) >> (((int(1)) >> 0))) | 1); _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
}
