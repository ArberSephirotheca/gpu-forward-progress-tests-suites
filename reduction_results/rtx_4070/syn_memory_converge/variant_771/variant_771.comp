#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((false || (bool(bool(false))))))
  {
   if((bool(bvec2(((true && (false))), ((injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (! ((! ((((injectionSwitch.x > injectionSwitch.y)) || (((false) && true)))))))))))))
    barrier();
   if((bool(bvec2((false), false))))
    {
     if(((((mix(float(injectionSwitch.x), float((min(((- - 1.9)), ((- - 1.9))))), bool(false))) > injectionSwitch.y))))
      barrier();
     if(((((float(mat3(injectionSwitch.x, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((false)) || (! (! (false)))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((((! ((! (! (! (((min(injectionSwitch, (mix(vec2((injectionSwitch)[0], (609.682)), vec2((- 2.9), (injectionSwitch)[1]), bvec2(false, true))))).x > (vec2(injectionSwitch[(((~ (((~ (((false ? (10415) : 0)) | ((false ? (10415) : 0)))) >> 0)))))], injectionSwitch[1])).y)))))))) && true))))
      barrier();
     barrier();
     if((! ((! (! (! ((false))))))))
      barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((! (! (((((! (! ((! (! ((bool(bvec4(false, false, true, true))))))))))) || false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((! (! ((((! (! (! (((bool(bool(bool(bvec3(! (((((injectionSwitch.x > (((mix(float((- 7.0)), ((float(injectionSwitch.y)) / 1.0), bool(((injectionSwitch.x < injectionSwitch.y)))))) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0, 0.0, 0.0)))))) || false)), true, false)))))))))))) || false))))))
  {
   if((bool(bvec4((false), true, true, true))))
    {
     if((! (! ((false)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! (! ((((false) && true))))) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec4(false, true, false, false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > (clamp((min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      barrier();
     if((((! (! ((false))))) && true))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((! (! (false)))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((false || (((((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2(false, false)))))
  barrier();
 if((false))
  {
   if(((false || (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((bool(bvec4(false, true, true, true)))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((! (! ((bool(bvec2(false, false))))))))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
    {
     if((false))
      barrier();
     if((((((true && ((! (! (((mix((clamp(float((- 0.9)), ((float((- 0.9))) * 1.0), float((((false ? (65.58) : - 0.9)))))), float(((max(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, (min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, (clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.x, 1.0, (max((((mix(float(1.0), float((98.65)), bool(false)))) * 1.0), (mix(float(1.0), ((false ? ((float(false))) : float((98.65)))), bool((! (! (false)))))))), 0.0, length(vec3((((float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))))) * determinant(mat3(1.0, 0.0, 0.0, (injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), bool(true))) > ((false ? (- 1624.9626) : ((injectionSwitch.y) + 0.0))))))))))) || (((true && (false))) || false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((false) && true)))
        barrier();
       if(((((min((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((false)) && true))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((! (! (false)))))
          {
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      {
       if((((! ((bool(bvec3(! ((bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if(((((((! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      {
       if((false))
        barrier();
       if((((bool(bvec2(bool(bool(false)), true))))))
        barrier();
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      {
       if((((((! (! (bool((bvec3(bvec3(bvec3((bool(bvec2(((false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true))), true, true)))))))))))))
        barrier();
       if(((! (! (((((true ? (clamp(injectionSwitch.x, injectionSwitch.x, ((true ? injectionSwitch.x : (- 2744.1169))))) : (590.479))) > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if((((((false ? ((injectionSwitch / vec2(18.31, - 752.109))) : injectionSwitch)).x > (mix(vec2((- 9.8), (mix(float((- 2465.0084)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], (- 7137.6628)), bvec2(true, false))).y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((((! ((true && ((false || ((! (! (! (false))))))))))) && true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 uint workgroup_size = ((((((((clamp(true ? min(gl_WorkGroupSize, gl_WorkGroupSize) : (uvec3(81045u, 173603u, 170296u)), (uvec3(1u, 1u, 1u) * (true ? min(gl_WorkGroupSize, gl_WorkGroupSize) : (uvec3(81045u, 173603u, (max(170296u, 170296u)))))), (((false || (true))) || false) ? min(gl_WorkGroupSize, gl_WorkGroupSize) : (uvec3(81045u, 173603u, 170296u)))))))) + uvec3(0u, 0u, (min(0u, 0u))))) | uvec3((((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(111.304, 1848.6973)) : injectionSwitch)).x), (injectionSwitch.x), (injectionSwitch.x))).x;
 if((((false) && true)))
  barrier();
 if((((((((false) && true) || false))) && true)))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((bool(bool(((bool(bvec4(false, false, false, false))) || false))))) || (! ((! (! (! ((false))))))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = ((clamp((clamp((0u >> (uint(1u))), (0u >> (uint((uint(uvec3(((0u | 0u) ^ (1u)), 0u, 1u)))))), (~ (~ ((0u >> (uint(1u)))))))), (0u >> (uint(1u))), (~ (~ ((0u >> (uint(1u)))))))) | (gl_WorkGroupID.x));
 if(((bool(bvec3(false, true, true)))))
  barrier();
 uint workgroup_base = ((((injectionSwitch.x > injectionSwitch.y)) ? (num_workgroup) : workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + (max(subgroup_id * subgroup_size, ((subgroup_id * subgroup_size) * 1u))) + subgroup_local_id;
 if((((false) || false)))
  barrier();
 atomicStore(write_val, uint(virtual_gid), ((4) | ((int(ivec2(4, 0))))), 64, (~ (~ (0))));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(((((write_val) ^ ((false ? (write_val) : 0u))) | ((clamp(0u, 0u, (((bool(bool(true))) ? (uint(uint(0u))) : (workgroup_id))))) << (uint(7u)))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    {
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
}
