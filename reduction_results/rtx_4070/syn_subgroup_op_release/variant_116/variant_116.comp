#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if(((bool((bvec2(bvec3(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))), false)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if(((true && ((bool((bvec2(bvec2(bvec2(false, false))))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (max(((~ (~ ((clamp(((~ (~ ((((true ? clamp((uvec3(gl_WorkGroupSize[0], (1u * (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), gl_WorkGroupSize, gl_WorkGroupSize) : (((subgroup_size | uvec3(21628u, 146965u, 7746u)) | uvec3(121826u, 43070u, 172252u)))))))))), ((~ (~ ((clamp((uvec3(gl_WorkGroupSize[0], (1u * (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), gl_WorkGroupSize, gl_WorkGroupSize)))))), ((~ (~ ((clamp(((max(uvec3(gl_WorkGroupSize[0], (1u * (gl_WorkGroupSize[1])), ((true ? (min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])) : (num_workgroup)))), uvec3(gl_WorkGroupSize[0], (1u * (gl_WorkGroupSize[1])), ((true ? (min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])) : (num_workgroup))))))), gl_WorkGroupSize, gl_WorkGroupSize))))))))))) - uvec3(0u, 0u, 0u)).x, ((gl_WorkGroupSize.x) << (0u >> (uint(3u))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (0u ^ (((uint(uvec3((true ? workgroup_base : (108763u)), 0u, (((max(max((1u << (uint(7u))), (1u << (uint(7u)))), max((1u << (uint(7u))), (1u << (uint(7u))))))) >> (uint(7u))))))))) + (clamp((((max(subgroup_id, subgroup_id))) / 1u), subgroup_id, subgroup_id)) * (((min(subgroup_size, subgroup_size)) >> 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((false ? (atomicAdd(subgroup_size, workgroup_size)) : (1u * (((((true && (false)) ? (subgroup_size) : (subgroup_id) * 1u))))) * subgroup_size)) + ((((((subgroup_local_id + 1) % subgroup_size) - 0u))) / 1u);
 if((false))
  barrier();
 if((bool(bvec2((false), false))))
  {
   if(((((bool(bvec4(false, true, true, false))))) || false))
    barrier();
   if(((((mix(vec2(((+ - 18.49)), (4908.8328)), vec2((min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((true && ((! (((! ((((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (max(((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))), (mix(vec2((- 76.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (618.826)), bvec2(true, false))))).y))))
    {
     if(((! (! (false)))))
      {
       if((true && ((false))))
        barrier();
       if(((((! (! (((((false ? (- 92.55) : injectionSwitch.x)) > injectionSwitch.y)))))) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((((((! ((false || (! (false || ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))) || false))
  {
   if((false || ((bool(bool((true && ((false)))))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 (0u | ((((0u | (0u | ((((buf[virtual_gid] = 1) / 1u)))))) / ((0u | 0u) | (1u)))));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((bool(bvec4((false), true, ((injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! (! (bool(bvec3((! ((! (! (((! (bool(bool(((((false || ((((clamp(injectionSwitch.x, ((injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y) && true))))))))))) && ((injectionSwitch.x < injectionSwitch.y))))))), false, false))))))))
  barrier();
 if(((bool(bool((bool(bvec4(((((injectionSwitch.x > injectionSwitch.y))) && true), true, false, false))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((0u ^ (subgroup_local_id)) + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), ((4) >> 0), (0 ^ (64)), 4);
   if(((((! (! (false))) || (false || ((bool(((bvec2(bvec2(bvec2(bvec2((bvec2(bvec2(bvec2((bool(bool(((injectionSwitch.x > (((mix(float(injectionSwitch.y), float(((2161.5056 - - 1.4))), (! (! (bool(false))))))) * 1.0)))))), false))))))))))))))))))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((false || ((((false) && true)))))
    barrier();
   if((((injectionSwitch.x > (mix(float(((mix(float((((((! (! (true)))) || false) ? (vec2(- 674.424, - 639.680).r) : (49.82)))), float(- 3939.6860), bool(true))))), float((mix(float(injectionSwitch.y), float((8530.4218)), bool(((injectionSwitch.x > injectionSwitch.y)))))), ((((bool(((((((((false || ((false || (false)))) || (((true ? injectionSwitch : (vec2(- 1811.9413, 1688.6367)))).x < (mix(vec2(((true ? ((((true) || ((injectionSwitch.x > injectionSwitch.y))) ? (injectionSwitch)[0] : (4008.5638))) : (76.07))), (injectionSwitch)[(clamp(1, (~ (~ (1))), (max(1, 1))))]), vec2((78.67), ((float(mat4(- 9.0, ((false ? (557.225) : (float(vec2(((1.0) + 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0, sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(determinant(mat2(1.0, ((false ? (897.428) : 1.0)), 0.0, 1.0))))), 0.0, 1.0, 0.0, exp(log(1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length((min(normalize(1.0), normalize(1.0)))))))))), bvec2((((vec2((transpose((transpose(transpose(transpose((mat2(mat3x2(mat2(injectionSwitch, 1.0, 1.0)))))))))))).x > injectionSwitch.y)), (((mix(float((min((mix(float((- 7896.8823)), float(injectionSwitch.x), bool(true))), (mix(float((- 7896.8823)), float(injectionSwitch.x), bool(true)))))), float((- 78.70)), bool(((false) || false)))) > injectionSwitch.y))))).y))) || false))) || false)))) && ((injectionSwitch.x < injectionSwitch.y)))) || false)))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > ((injectionSwitch.y) + 0.0)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((bool((bvec3(bvec4(bvec3((false), false, ((injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch.x > (max((float(vec2(injectionSwitch.y, 0.0))), ((injectionSwitch.y) * 1.0))))) && true))))
      barrier();
     if((false || ((((! (! ((false))))) && ((injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if((false || (true && (((((((injectionSwitch.x < injectionSwitch.y)) && ((false))))) && true)))))
    barrier();
  }
 else
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(((bool(bool(false)))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], ((uint(2)) << 0u), ((((injectionSwitch.x < injectionSwitch.y)) ? ((4) | (4)) : (((((380) / 1)) | 0)))), 64, 4);
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((true && (false))))
      barrier();
     if((! ((false || (((bool(bvec2((! (! (((! (! (! ((true && ((false))))))) && true)))), ((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(((((bool(bvec4((! (! ((((max(injectionSwitch, injectionSwitch)).x > ((min(vec2(vec2((min(injectionSwitch, injectionSwitch)))), ((vec2(vec2((min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0))))).y))))), true, true, true)))) && true)))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    barrier();
   if((false))
    barrier();
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   subgroupAll(true);
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > ((float(mat2(max(((max(max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), ((max(max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), abs(1.0), 1.0, 1.0))))))))
  barrier();
 if(((((true && (injectionSwitch.x > ((true ? (((mix(float(injectionSwitch.y), float((- 2.0)), bool(false)))) + 0.0) : ((false ? ((mix(float(- 8963.0327), float(((+ - 57.87))), bool(false)))) : (length(injectionSwitch))))))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! ((! (! (! (bool(bvec2((false || (bool(bvec4(((false)), ((injectionSwitch.x < injectionSwitch.y)), false, false)))), true))))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((bool(bvec4(false, false, true, (((((! ((true && (! ((bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))) && true))))) && true)))))))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((false ? (floor(vec2(3.8, 68.90))) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
}
