#version 460

struct _GLF_struct_0 {
 uvec4 _f0;
 uint workgroup_base;
 vec2 _f1;
 mat4x2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 _GLF_struct_1 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((((false)) && true))
    return;
   if(((bool(bvec3(false, true, true)))))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  return;
 if((((((1.0 * (float(mat3x4(((false ? (- 8.0) : injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), log(1.0), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_size = (((((min(((false ? (uvec3(136867u, 146769u, 120387u)) : (uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), (uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u))) | (((gl_WorkGroupSize) | uvec3(((0u) ^ 0u), 0u, 0u)))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x4(1.0), _GLF_struct_1(_GLF_struct_0(uvec4(1u), ((true ? (~ ((clamp(~ (workgroup_size), ~ (workgroup_size), ~ (workgroup_size))))) : (atomicCompSwap(workgroup_size, workgroup_id, workgroup_size)))) * (~ (((~ (workgroup_id))) | 0u)), ((vec2((mix(float((7252.6076)), float(((false ? (- 34.20) : (clamp((1.0 * (1.0)), (1.0 * (1.0)), (1.0 * (1.0))))))), bool(((injectionSwitch.x < injectionSwitch.y))))))) * mat2(1.0)), mat4x2(1.0), bvec3(true)), mat3x2((max(1.0, 1.0)))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_struct_replacement_2._f1._f0.workgroup_base + (min((((~ ((0u << (uint(5u))) | ((~ (subgroup_id * subgroup_size)))))) * 1u), (1u * ((~ ((0u << (uint(5u))) | ((~ (subgroup_id * subgroup_size))))))))) + subgroup_local_id;
 uint next_virtual_gid = (((((injectionSwitch.x > injectionSwitch.y)) || (false)) ? ((min(((uint(uvec2((min((subgroup_size), (subgroup_size))), (uint((injectionSwitch.x)) << (uint(3u)))))) | 0u), uint(uvec2((min((subgroup_size), (subgroup_size))), (uint((injectionSwitch.x)) << (uint(3u)))))))) : _GLF_struct_replacement_2._f1._f0.workgroup_base + ((subgroup_id) - 0u) * subgroup_size + ((clamp(1u * (((((((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : ((subgroup_local_id + 1) % subgroup_size)))) + 0u)) | (((false ? (((min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size))))) | ((min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))))) : ((subgroup_local_id + 1) % subgroup_size)))))), (1u * ((~ (((~ (1u)) | (~ (1u))))))) * (((((((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : ((((((subgroup_local_id + ((false ? (- 71657) : 1)))) << 0u) % subgroup_size)) << 0u)))) - 0u)) | 0u)), (~ ((max((((min(~ (1u * (uint(uvec3((((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp((~ (~ (workgroup_id))), workgroup_id, workgroup_size)))) : (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))), 0u, 1u)))), ~ ((0u | (1u * ((((~ ((~ (~ (~ ((~ (~ (uint(uvec4((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : ((subgroup_local_id + 1) % subgroup_size)), 0u, 1u, 1u)))))))))))))))))))) | ((min(((true ? ~ (1u * (((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : ((subgroup_local_id + (~ (~ (1)))) % subgroup_size))))) : (workgroup_size))), ~ (1u * (((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : (((true ? (subgroup_local_id + 1) % subgroup_size : (atomicXor(subgroup_local_id, atomicXor(subgroup_local_id, num_workgroup)))))))))))))), (min(~ (1u * (((false ? (min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size)))) : (((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))), ~ (1u * (((false ? (((min((clamp(workgroup_id, workgroup_id, workgroup_size)), (clamp(workgroup_id, workgroup_id, workgroup_size))))) ^ 0u) : ((subgroup_local_id + 1) % subgroup_size))))))))))))))));
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((((((injectionSwitch) * mat2((injectionSwitch.y))).x > injectionSwitch.y))) || false)))
    return;
   return;
  }
 if(((0u | (((((((max(subgroup_local_id, (max(subgroup_local_id, subgroup_local_id))))) | ((max(subgroup_local_id, (max(subgroup_local_id, subgroup_local_id)))))))) | (((true ? ((max(subgroup_local_id, (max(subgroup_local_id, subgroup_local_id))))) : (subgroup_id))))))) | ((clamp((max(subgroup_local_id, (max(subgroup_local_id, subgroup_local_id)))), (max(subgroup_local_id, (max(subgroup_local_id, subgroup_local_id)))), (((max(subgroup_local_id, (((((max(subgroup_local_id, subgroup_local_id))) << 0u)) + 0u)))) * 1u))))) + 1 < subgroup_size)
  {
   atomicStore(buf[(~ (~ (((false ? (atomicCompSwap(subgroup_local_id, virtual_gid, workgroup_id)) : next_virtual_gid)))))], uint(((2) / (max(1, 1)))), (max((~ (~ ((max(4, 4))))), (max(4, 4)))), 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), ((4) | 0), (((clamp(64, 64, 64))) >> 0), 4);
   if((false))
    return;
   if((false))
    return;
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if(((! (! (false)))))
    return;
   if((false))
    return;
   subgroupAll(true);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(((6.6)), (float(98826u))), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
  }
}
