#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if((false || ((false))))
  barrier();
 uvec4 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec2 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id;
 if(((bool(bvec3(false, false, false)))))
  {
   if((false))
    barrier();
   return;
  }
 uvec4 GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid;
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((((false) || false)))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
    }
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id;
 if((false))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = (0 << (int(2))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id;
  }
 if((false))
  barrier();
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(false);
   if((false))
    barrier();
   if((false))
    return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size;
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if((false))
  return;
 if(((bool(bool(false)))))
  {
   if((! (! (((bool(bvec3(bool(bvec3(true, false, false)), true, true))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     return;
     do
      {
       if((false))
        return;
      }
     while((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))));
     if(((false || (false))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((false || (false))))
    return;
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.y = subgroup_id;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.y;
 do
  {
   if((false))
    {
     if((((bool(bvec2((true && (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))), true))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > ((injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       return;
      }
     while((! (! (false))));
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(false);
 if((((((! (! (true)))) && true) && ((! (! (! (! ((false))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
 if((false))
  barrier();
 if(((bool(bool(((injectionSwitch.x > (float(((vec4(((injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0)) * mat4(1.0)))))))))))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
  }
 while(((false) && true));
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(((false || (false))))
        barrier();
       break;
      }
     barrier();
    }
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((! (! (false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
     if((false))
      barrier();
    }
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = ((0 ^ (0 ^ 1)) ^ int((injectionSwitch.y))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.x = subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   do
    {
     GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.x;
    }
   while(false);
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter < (int((injectionSwitch.y)) | ((max(55871, 55871)) & (0 << (~ (~ ((((((int(2)) - 0))) / 1))))))); _injected_loop_counter ++)
      {
       return;
       if((false))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             return;
            }
          }
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
           if((false))
            barrier();
          }
        }
      }
    }
   return;
   if((false))
    return;
   if((((false)) && true))
    {
     if((false))
      return;
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.w = num_workgroup;
 if((false))
  return;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.x = GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.w;
 if((false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.x;
 uint workgroup_size = ((true ? gl_WorkGroupSize : (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id))).x;
 if(false)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = (clamp(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z));
 if((false))
  barrier();
 if((false))
  return;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.w = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y;
 if((false))
  {
   do
    {
     if((false))
      barrier();
     barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      break;
     barrier();
     if((false))
      continue;
    }
   for(int _injected_loop_counter = (((0 ^ int((injectionSwitch.y))) << ((min(int(0), int(0))))) >> ((max(int(0), int(0))))); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if(false)
      {
       if((false))
        barrier();
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if(((((bool(bool((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
          barrier();
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); (0 ^ (_injected_loop_counter)) != 1; _injected_loop_counter ++)
          {
           if(((! ((bool(bvec2(! ((! (! (false)))), true)))))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 << (int(2))) | 0); _injected_loop_counter --)
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if(((false || (false))))
          barrier();
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       while((((bool(bvec4(((false) || false), false, true, true))) || ((injectionSwitch.x > injectionSwitch.y)))));
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> (int(6))); (~ (~ ((0 | ((0 ^ (((false ? (_injected_loop_counter) : _injected_loop_counter ++))))))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.z = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.w;
          }
        }
       for(int _injected_loop_counter = 0; (((bool(bvec4(_injected_loop_counter != (int((injectionSwitch.y)) | 1), false, ((injectionSwitch.x > injectionSwitch.y)), true))) && true)); _injected_loop_counter ++)
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((false || (false))))
            barrier();
           if((false))
            {
             if((false))
              break;
             barrier();
            }
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((false))
        {
         if(((((bool(bvec3(bool(bvec3((false), false, false)), false, false))))) && true))
          barrier();
         continue;
        }
       if(((bool(bvec2(false, false)))))
        {
         if(((! (! (false)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           if((false))
            barrier();
          }
         barrier();
         if((false))
          break;
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); ((true ? _injected_loop_counter ++ : (_injected_loop_counter))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
          }
         if((false))
          barrier();
        }
      }
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = (1 | (((1 ^ 0) << (int(7))) >> (int(7)))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y = workgroup_id;
 if(true)
  {
   if((((((! (! (bool((bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false))))))))))))
    barrier();
  }
 else
  {
   if((((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if(((! (! ((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     barrier();
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   do
    {
     if((false))
      break;
     for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
      {
       if((((false) || false)))
        barrier();
       if((false))
        {
         if((false))
          {
           do
            {
             if((false))
              return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(false);
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         return;
         if(((bool(((bool(false)) && true)))))
          barrier();
        }
      }
    }
   while(false);
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if(true)
  {
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 while((true && (false)));
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   ((GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.z = GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.y) >> 0u);
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
   if((false))
    barrier();
   if(((bool((bool(bvec4(bool(false), true, true, true)))))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(((true && ((((((false || ((vec2(0.0, 0.0) + (((true ? injectionSwitch : (injectionSwitch))))).x > injectionSwitch.y))) && ((true) && true))))))))
    barrier();
   if((false))
    barrier();
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 ((GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.y = GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.z) * 1u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
     return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (mix(vec2((- 77.59), ((true ? (injectionSwitch)[1] : (- 778.282)))), vec2((injectionSwitch)[0], (- 4.7)), bvec2(true, false))).y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       return;
       if((false))
        barrier();
      }
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = (min(GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.z, GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.z)) * GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.y;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.x = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y;
 if((false))
  {
   if(((false || (false))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   return;
  }
 if(((false || (false))))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.x + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(false);
    }
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y))) || false))
  {
   GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.y = virtual_gid;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint next_virtual_gid = (max(GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.x, GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenum_workgroup.xyz.x)) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size.z);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bool(false)))))
  barrier();
 ((((GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x = next_virtual_gid) << 0u)) - 0u);
 if((false))
  barrier();
 GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.w = GLF_merged2_0_1_16_1_1_12next_virtual_gidworkgroup_id.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if((false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = ((clamp(uint(uvec3(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.w, ((((0u) << 0u)) | 0u), (125756u & uint((injectionSwitch.x))))), uint(uvec3(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.w, 0u, (125756u & uint((injectionSwitch.x))))), uint(uvec3(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.w, 0u, (125756u & uint((injectionSwitch.x))))))));
 if(((! (! (false)))))
  barrier();
 if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(false)
  {
   if((! (((! ((bool(bvec3((false), true, false))))) || ((false) && true)))))
    barrier();
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((false))
      return;
    }
   ((((true ? buf[GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.y] = 1 : (GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_idnext_virtual_gid.xyz.y)))) ^ 0u);
   if(((true && (false))))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       for(int _injected_loop_counter = 0; (false || (_injected_loop_counter != 1)); _injected_loop_counter ++)
        {
         if((false))
          {
           if((((true && (((injectionSwitch.x > injectionSwitch.y))))) && ((injectionSwitch.x < injectionSwitch.y))))
            {
            }
           else
            {
             if((false))
              barrier();
             barrier();
            }
          }
         barrier();
         do
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if((false))
            break;
          }
         while((! (! (false))));
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       if((false))
        {
         if((false))
          barrier();
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (((float(mat2x3(injectionSwitch.y, tan((dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, (injectionSwitch.x), 0.0))) - 0.0))))))
    return;
   if((false))
    barrier();
   if(((bool(bvec4(bool(bvec3(true, true, true)), true, (((bool((bvec2((bvec3(bvec4(bvec3(bvec2(false, false), false), true))))))) || false)), true)))))
    {
     barrier();
    }
   else
    {
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if(true)
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     do
      {
       if((false))
        barrier();
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 else
  {
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((((true && ((((false || ((((injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true)) || false))
  return;
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((((bool(bvec4((false), ((injectionSwitch.x > injectionSwitch.y)), true, false))) || false))) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          continue;
         barrier();
        }
       if((false))
        barrier();
       if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         if((false))
          break;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(false);
           if((false))
            barrier();
          }
         barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while((false || (((injectionSwitch.x > injectionSwitch.y)))));
            }
           barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((false))
            barrier();
           barrier();
          }
         while((! ((false || (! (((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))))));
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if(true)
        {
         return;
        }
       else
        {
        }
      }
    }
   barrier();
  }
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     continue;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   do
    {
     for(int _injected_loop_counter = ((1 << (((int(1)) >> 0))) >> (((int(1)) - 0))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
    }
   while(false);
   if((((true && ((! (! (((bool(bvec4(false, true, (true && (true)), (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))))) || false))))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((! (! ((false)))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(false)
        {
         if((false))
          {
           if((false))
            barrier();
           if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
            {
             if((false))
              barrier();
             continue;
            }
           return;
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > (abs(exp(0.0)) * (injectionSwitch.y))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             continue;
            }
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((true && (true)))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             while(false);
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if(((false || (false))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
           if((false))
            {
             if((bool((bvec3(bvec4(bvec3((false), true, false), false))))))
              barrier();
             if((false))
              return;
             barrier();
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              break;
             barrier();
             if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)))))))))
              barrier();
            }
          }
         if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
      }
     if(false)
      {
      }
     else
      {
       return;
       if(((true && (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(true)
        {
         if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(((! (! (false)))))
            barrier();
           break;
          }
         barrier();
         if((false))
          barrier();
        }
       else
        {
        }
       if(true)
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((false))
      break;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
  }
 while(false);
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < ((true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_size : ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id * 15034u)))).z)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if((false))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = (~ (~ ((clamp(((1 << (int(6))) >> (int(6))), ((1 << (int((((int(ivec4(6, 1, 1, 1)))) - 0)))) >> (int(6))), ((1 << (int(6))) >> (int(6)))))))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     return;
    }
   if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if((false))
      barrier();
     return;
     if((false))
      barrier();
    }
   if((((bool(bvec4(true, true, true, true)))) || false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
    }
   else
    {
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], (~ ((min(~ (uint(2)), ~ ((uint(uvec3(((uint(2)) << 0u), 0u, 0u)))))))), (min(4, 4)), 64, 4);
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if(false)
      {
       if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
      }
     else
      {
       barrier();
       if(((! (! (false)))))
        barrier();
      }
    }
   subgroupAll(false);
   if(((bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     return;
    }
   do
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > (mix(float((9017.1856)), float(injectionSwitch.y), bool(true)))))))
        {
         if((false))
          barrier();
         do
          {
           if((! (! ((false)))))
            barrier();
          }
         while((((mix(vec2((- 73.31), (- 31.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, ((injectionSwitch.x < injectionSwitch.y))))).x > (max(injectionSwitch.y, injectionSwitch.y)))));
         barrier();
         if((false))
          barrier();
        }
      }
     if((false))
      barrier();
    }
   while((((! (! (false)))) && true));
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(true)
      {
       if((false))
        barrier();
       do
        {
         return;
        }
       while(false);
      }
     else
      {
      }
    }
  }
 else
  {
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bool(bool((bvec2(bvec3(bvec2((false), true), false)))))))))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
       if(true)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > (mix(float((- 3749.6467)), float(injectionSwitch.y), bool(true)))))))
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                break;
               if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
      }
     if(((bool(bool(false)))))
      barrier();
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       if((false))
        return;
       return;
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
     if((((((false)) || false)) || (true && (false))))
      {
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if((false))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(2), 4, 64, 4);
   if((false))
    barrier();
   subgroupAll(true);
  }
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
}
