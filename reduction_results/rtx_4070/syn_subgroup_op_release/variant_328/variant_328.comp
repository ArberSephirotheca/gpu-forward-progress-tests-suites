#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  barrier();
 if(((true && ((! (! (false)))))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((false) || false)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize) | ((min((~ (((~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)))).x;
 if((false))
  {
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((((((((injectionSwitch.x > injectionSwitch.y) && true))))) && true)) && ((injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((! (! ((! (! (! (! (false)))))))))))
    barrier();
   barrier();
  }
 uint workgroup_id = ((gl_WorkGroupID.x) >> uint((injectionSwitch.x)));
 uint workgroup_base = (clamp(workgroup_size * workgroup_id, (((~ (~ (workgroup_size)))) >> 0u) * workgroup_id, ((false ? (subgroup_local_id) : workgroup_size * workgroup_id))));
 if((((injectionSwitch.x > (((((! ((((true && (bool(((bvec3(bvec3(bvec3(bvec4(bvec3((((! (! ((! ((! (! (! ((((false || (false || (! ((injectionSwitch.x > (max((mix(float((float(true))), float((min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)))))))) || false))))))))))) || false), true, true), false)))))))))))))) ? (vec2(- 6.1, 141.986)) : (vec2(0.0, (((float(mat3x2((clamp((mix(float((2539.9197)), float(((false ? (9.0) : 0.0))), bool(true))), (max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))) + 0.0)) + ((max((injectionSwitch), (((true ? (mat2(1.0) * (injectionSwitch)) : (injectionSwitch)))))))))) / vec2(1.0, ((1.0) - 0.0))).y))))
  {
   if((! (! ((! (! ((false))))))))
    barrier();
   if((false))
    {
     if(((((true && ((min((float(mat3x2((mix(vec2((94.88), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (1.0 * ((- 9767.7299)))), (bvec2(bvec2(bvec2(((injectionSwitch.x < injectionSwitch.y)), false)))))).x, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), (mix(vec2((94.88), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (1.0 * ((- 9767.7299)))), (bvec2(bvec2(bvec2(((injectionSwitch.x < injectionSwitch.y)), false)))))).x)) > (min(injectionSwitch.y, (mix(float((- 9123.8595)), float(((mix(float((27.55)), float((min((injectionSwitch.y), (injectionSwitch.y)))), bool(true))) - 0.0)), bool(true)))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((bool(bvec3((((((bool(bool(((((((mix(vec2(((vec2(0.0, 0.0) + ((mix(vec2((55.02), (- 9.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))[0], (123.248)), vec2((7.5), ((vec2(0.0, 0.0) + ((mix(vec2((55.02), (- 9.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))[1]), bvec2(false, true)))) - vec2(0.0, ((0.0) * 1.0))).x > injectionSwitch.y)))))) && true) && (bool(bool(true)))))), true, true))) && true)))
  {
   if((true && ((! (((((! ((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))) && true) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y) || false), true, false)))))))
    barrier();
   barrier();
  }
 uint virtual_gid = ((true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : (atomicExchange(workgroup_size, num_workgroup))));
 if((false))
  barrier();
 if((((((injectionSwitch) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((bool(bvec4(false, (true && (true)), true, true)))))
    barrier();
   if((false))
    barrier();
   if((! (((! (((bool(bool(((false)) || false)))))) && true))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[(((0 | (0))) | (0))], (injectionSwitch)[1]), vec2((0.2), (- 449.097)), bvec2((! (! ((! (! (false)))))), false))).y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), (((true && ((bool((bvec3(bvec4((bvec3(bvec4(bvec3(((! ((bool(bvec4((true && (! (bool(bvec4((false || (false)), true, true, false))))), false, false, false)))))), false, false), false))), true)))))))) || (((mix((((float(mat2x3(float((- 0.1)), ((0.0) * 1.0), 1.0, 1.0, 0.0, 0.0)))) - 0.0), float(((false ? (vec2(- 3.8, - 5.5)) : injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (bool(bvec2((! (! ((false || (false))))), false))), false)))) && (! (! (bool(((bool(bvec3(bool((bvec2(bvec2(bvec2(bool((true)), false))))), true, false)))))))))))
  {
   if(((! (! (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), (bool(bvec2(false, false))), false, true)))))))
    barrier();
   if((bool(bool((false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((false || (! ((bool(bvec4(! (false), ((injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((((clamp((false ? ((uvec3(((true ? 117864u : (virtual_gid))), 11306u, 1126u) * uvec3(124830u, 171018u, 59245u)).p) : subgroup_local_id), (false ? ((uvec3(((true ? 117864u : (virtual_gid))), 11306u, 1126u) * uvec3(124830u, 171018u, 59245u)).p) : subgroup_local_id), (false ? ((uvec3(((true ? 117864u : (virtual_gid))), 11306u, 1126u) * uvec3(124830u, 171018u, 59245u)).p) : subgroup_local_id)))) + 1) % subgroup_size);
 if((false))
  {
   if((((false)) || false))
    barrier();
   if((((injectionSwitch.x > (float(mat4x3(injectionSwitch.y, exp(0.0), 1.0, 0.0, 1.0, sqrt(0.0), sqrt(1.0), 1.0, (max(0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > ((((clamp(vec2((mat2(mat2(mat2(injectionSwitch, 1.0, 0.0))))), vec2((mat2(mat2(mat2(injectionSwitch, 1.0, 0.0))))), vec2((mat2(mat2(mat2(injectionSwitch, 1.0, 0.0))))))))) / vec2(1.0, 1.0)).y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! ((((false || (! (true && ((((max((max(((injectionSwitch) + abs(vec2(0.0, 0.0))), ((injectionSwitch) + abs(vec2(0.0, 0.0))))), ((injectionSwitch) + abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))))))) || false))))))
  barrier();
 if((false))
  barrier();
 ((false ? ((((++ num_workgroup))) | 0u) : ((((((((((buf[virtual_gid] = 1) / 1u)) << 0u))) / 1u) << 0u)) / 1u)));
 if((((! (true && ((! ((bool(bvec2((bool((true && (bool((! ((! (! (((! (subgroup_local_id + 1 < subgroup_size))) || false)))))))))), (bool(bvec3(false, ((true) && true), (bool(bvec2(false, false))))))))))))))) || false))
  {
   if((((! (! (! (! (true)))))) && ((bool(bvec4(((! (! ((((! (! ((! ((false || ((bool((bvec2(bvec2(bvec2(! ((bool(bvec2(injectionSwitch.x > (clamp((mix(float((mix(float((1183.9174)), float((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), float((969.554)), bool(false))), (clamp(injectionSwitch.y, ((true ? injectionSwitch.y : (atanh(- 4.1)))), injectionSwitch.y)), (((true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : (log2(- 1323.9487))))))), true)))), false))))))))))))))))))), true, false, true))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), ((4) / 1), 64, 4);
   if((! (! (((true && ((bool(bool(false))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if((((false)) || false))
        {
         if(((! (! (false)))))
          {
           if((((((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((false) || false)))
        barrier();
       if(((((((((false || (injectionSwitch.x > injectionSwitch.y))))) || false)) || ((false || (bool(bool((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))
        barrier();
       barrier();
      }
     if((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if((! (! ((((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((true && (((((injectionSwitch.x > injectionSwitch.y)) || ((true && ((true && (false))))))))))
    {
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[(((((uint(uint(next_virtual_gid)))) / 1u)) << 0u)], (((~ (~ (0u))) ^ (~ (~ ((uint((max(uvec4(uint(2), 1u, 0u, (min(uint(((1.0 * ((((clamp(false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x)))))))), uint(((1.0 * ((((clamp(false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x))))))))))), uvec4((uint((min(uvec4(uint(2), 0u, 0u, 0u), uvec4(uint(2), 0u, 0u, 0u))))), 1u, 0u, uint(((1.0 * ((((clamp(false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x, false ? (1.9) : injectionSwitch.x)))))))))))))))))), 4, (~ (~ (((~ ((~ (64)))) - 0)))), 4);
   if((bool(bvec4((false), false, true, false))))
    {
     if((((((false)) || false)) && true))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((false || ((bool(((bool(false)) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   subgroupAll(true);
  }
}
