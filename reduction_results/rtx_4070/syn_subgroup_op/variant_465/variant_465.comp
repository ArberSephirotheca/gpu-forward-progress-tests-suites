#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id;
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 (uvec3(0u, 0u, 0u) ^ (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base));
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    barrier();
  }
 uvec4 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 do
  {
   GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if((false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.w = subgroup_id;
   if(((true && ((! (! (((false) && true))))))))
    barrier();
  }
 while(false);
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x = GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.w;
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.y = (((uvec2((min(0u, 0u)), 0u) + ((max(((bool(bvec4(bool(bvec4((false || (true)), true, true, true)), true, false, ((injectionSwitch.x < injectionSwitch.y)))))) ? GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy : (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size), true ? ((clamp(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).xy : (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))))))).x;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(((! (! ((bool(bool((bool(bvec4(bool(bvec3(true, true, true)), true, false, true)))))))))))
    {
     if(false)
      {
      }
     else
      {
       GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x = subgroup_size;
      }
    }
   else
    {
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z = GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z = (clamp((clamp((max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u))), (max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u))), (max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u))))), (min((max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u))), (max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u))))), (max((min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z)), ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.z) + 0u)))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.y = subgroup_local_id;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.x = GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.y;
  }
 uint num_workgroup = ((((injectionSwitch.x > injectionSwitch.y)) ? (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) : gl_NumWorkGroups)).x;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.x = num_workgroup;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.y = (clamp((uvec4(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[3])), GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, (uvec4(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base[3])))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(true)
  {
   GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y = workgroup_size;
  }
 else
  {
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((((((bool(bvec4((injectionSwitch.x > ((((injectionSwitch) / vec2(1.0, 1.0))) - vec2((min(0.0, ((0.0) + 0.0))), 0.0)).y), (true && (((injectionSwitch.x > injectionSwitch.y)))), true, false))) && true)) || false)))))
      {
       for(int _injected_loop_counter = 0; (! (! (false || ((! ((((((injectionSwitch.x > injectionSwitch.y)) || ((((bool(bvec3(((false || (! (((((((injectionSwitch.x > injectionSwitch.y)) || ((_injected_loop_counter != 1)))) && true) || false))))), true, true))) && true)))) || (! (! (false))))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 if((false))
  barrier();
 if(false)
  {
  }
 else
  {
   if((! ((bool(bvec2((bool(bvec3(! (true), true, ((false) || false)))), (true && (true))))))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       (((((((~ (((((~ (0u ^ ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = (~ (~ ((clamp(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).zw))).y)))) - 0u))) / 1u))) ^ 0u)) - (((false ? (subgroup_size) : (0u + (0u)))) ^ 0u))) / (~ (~ (((true ? ((false ? (subgroup_id) : (0u ^ ((((0u ^ ((clamp((min((0u + (((1u) >> 0u))) << (uint(0u)), 1u << (uint(0u)))), (min(1u << (uint(0u)), 1u << (((uint(0u))) << 0u))), (min(1u << (uint(0u)), 1u << ((uint(uvec4(uint(0u), (0u << ((min((((false ? (workgroup_size) : 1u * (uint(0u))))), (((false ? (workgroup_size) : 1u * (uint(0u))))))))), (0u << (uint(5u))), (1u & 1u)))))))))))) >> (uint(0u))))))) : (88949u)))))));
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 do
  {
   do
    {
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 ^ ((((int(((float(vec2(injectionSwitch.x, 0.0))))) << (int(2))) ^ (1 | 0))))); ((0 ^ ((clamp((_injected_loop_counter), (_injected_loop_counter), (_injected_loop_counter))))) | (_injected_loop_counter)) > (max(((int((injectionSwitch.x))) | (((~ (~ (((0 ^ (int(((clamp(((injectionSwitch.x) / 1.0), injectionSwitch.x, (float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))) << 0)))))), (clamp(int((injectionSwitch.x)), int((clamp((injectionSwitch.x), (injectionSwitch.x), (clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))))), int((injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 >> (int(3))); _injected_loop_counter != (int(((ivec4(((1 << (int(0))) >> (int(0))), 1, 0, ((0) | ((max(0, 0)))))) | (ivec4(((1 << (int(0))) >> (int(0))), 1, 0, 0))))); _injected_loop_counter ++)
          {
           GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.w = workgroup_id;
          }
        }
      }
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  barrier();
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y = GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.w;
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y;
 if(false)
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_base;
  }
 if((((true && ((float(mat3((((mat2(1.0) * (injectionSwitch)).x) - 0.0), 1.0, 0.0, 0.0, 1.0, 0.0, (dot(vec3(0.0, 1.0, 1.0), vec3((dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))), log(1.0), sqrt(0.0)))) < injectionSwitch.y)))))
  {
   (0u ^ (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.z = (min((((0u ^ ((max(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z, (min(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z, GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z))))))) << 0u), (0u ^ ((max(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z, (min(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z, GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.z))))))))));
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w = GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.z;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(((((injectionSwitch.x > injectionSwitch.y) || false))));
  }
 if((false))
  {
   if((((clamp((mix(vec2((- 1432.8560), (11.30)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, ((injectionSwitch.x < injectionSwitch.y))))), (clamp(injectionSwitch, injectionSwitch, (vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x < injectionSwitch.y)))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.w;
 uint virtual_gid = ((uint(uvec4(max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w + (0u | (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.y)) * (uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)).z + GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.x, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w + ((GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) - 0u) + GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.x), ((uint(uvec4((~ (~ ((1u << ((max(uint(5u), uint(5u))))) >> (((uint(5u)) >> 0u))))), 0u, 0u, uint((injectionSwitch.y)))))), 1u, (uint(uint(1u)))))));
 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.y = virtual_gid;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = ((~ (~ (((uint(((false ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) : uvec2(GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.y, 0u))))) >> 0u)))));
 if((false))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 uint next_virtual_gid = ((0u | (((false ? (workgroup_size) : (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w + ((false ? (packSnorm4x8(vec4(5.7, - 23.05, 55.03, 5.2))) : ((clamp(((uvec4(0u, 0u, 0u, 0u) + (((true ? (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, ((false ? (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id) : (max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base)))))))) : (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id)))))) ^ uvec4(0u, 0u, 0u, 0u), ((uvec4(0u, 0u, 0u, 0u) + (((true ? (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, ((false ? (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id) : (max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base)))))))) : (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id)))))) ^ uvec4(0u, 0u, 0u, 0u), ((uvec4(0u, 0u, 0u, 0u) + (((true ? (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, ((false ? (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id) : (max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, (clamp(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14num_workgroupsubgroup_idsubgroup_sizeworkgroup_base)))))))) : (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id)))))) ^ uvec4(0u, 0u, 0u, 0u)))).y)) * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z + ((1u * ((GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.x + 1) % ((false ? (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)).z)))))))) ^ (1u ^ 1u));
 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.x = (clamp(((next_virtual_gid) / uint((injectionSwitch.y))), next_virtual_gid, ((next_virtual_gid) >> 0u)));
 if(true)
  {
   if(false)
    {
    }
   else
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while((! (! (((! (! ((! (! ((false || (((0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))))))))));
        }
      }
    }
   do
    {
     for(int _injected_loop_counter = (1 ^ 1); (min(_injected_loop_counter, _injected_loop_counter)) < 1; _injected_loop_counter ++)
      {
       GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x = GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_12next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_id.x;
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
  }
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x] = 1;
 if(false)
  {
   do
    {
     do
      {
       if(((false) && true))
        {
        }
       else
        {
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
      }
     while(false);
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 ^ (min((0), (0)))); ((_injected_loop_counter --) ^ 0))
    {
     if((((((bool(bvec2(((! (! (false)))), false))))) || false) && true))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (((int(ivec3((((true ? 0 : (ivec4(- 23943, 91493, - 12809, - 39166).w))) ^ 0), 1, ((1 << (int(2))) >> (int(2))))))) | 0); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > (min(0, 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((((~ ((false ? (23589u) : (~ (((GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz.x) ^ 0u)))))))) >> (((uint(uvec2((1u ^ 1u), 0u)))) * 1u)) | (((((GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basesubgroup_id.xyz) ^ uvec3(0u, 0u, 0u))) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x)) + 1 < (uvec4(0u, 0u, 0u, 0u) + ((min(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, ((((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) / ((false ? ((clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))) : uvec4(((true ? (((uint(uvec3(1u, (0u >> (0u ^ ((max((uint(6u)), (uint(6u))))))), 1u)))) * 1u) : (bitfieldExtract((((clamp(111965u, 111965u, 111965u))) >> (0u << (uint(8u)))), - 30113, ((_injected_loop_counter) ^ 0))))), ((((1u) | (1u))) << (0u << (uint(6u)))), (clamp(1u, 1u, 1u)), 1u))))) << uvec4((((clamp(0u, ((((min(1u << (uint(0u)), 1u << (uint(0u))))) >> (uint(0u))) * (min((clamp(((((~ (~ (0u)))) - 0u)), ((((~ (~ (0u)))) - 0u)), (((0u + (((((~ (~ (0u)))) - 0u))))) | ((0u + (((((~ (~ (0u)))) - 0u)))))))), ((((~ (~ (0u)))) - 0u))))), 0u))) | 0u), (((((0u ^ (((0u)) | ((0u)))))) >> 0u) >> 0u), (min(0u, (((uint(uint(((~ (~ (((0u | (0u)))))) | ((0u | (0u)))))))) | (0u)))), 0u)))))).z)
            {
             do
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if(true)
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(false);
             if(((true && ((false) && true))))
              {
              }
             else
              {
               buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x] = (0 ^ ((((~ (~ (((2)) / 1))))) << 0));
              }
             if(false)
              {
              }
             else
              {
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; ((((~ (((((true ? false ? (- 75336) : ((((((injectionSwitch.x > injectionSwitch.y)) ? ((_injected_loop_counter)) : (int((injectionSwitch.x)) + (((((true ? ~ ((true ? ((false ? (57782) : _injected_loop_counter)) : ((max(((((true ? (~ (~ ((64217 & _injected_loop_counter)))) : ((_injected_loop_counter ++))))) >> int((injectionSwitch.x))), (64217 & _injected_loop_counter)))))) : (atomicMax(_injected_loop_counter, bitfieldReverse(_injected_loop_counter)))))) - 0)))))) << int((injectionSwitch.x))) : (ivec4(27181, - 60574, - 41309, 17253).r))))))))) + 0) != ((true ? (max((((~ ((min(~ (0), ~ (0)))))) ^ 0), 0)) : (_injected_loop_counter))); _injected_loop_counter --)
                    {
                     if(((true) && true))
                      {
                       for(int _injected_loop_counter = 1; ((_injected_loop_counter) / (clamp((max((clamp((~ (~ (1))), 1, 1)), ((1) * 1))), ((1) * (clamp(1, 1, 1))), 1))) != int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         subgroupAll((! (! (false))));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 if((false))
                  barrier();
                }
               while(false);
              }
             for(int _injected_loop_counter = 0; (true && (_injected_loop_counter != ((((max((1 << (int(7))) >> (int(7)), (1 << (int(7))) >> (int(7))))) | ((1 << (int(7))) >> (int(7))))))); _injected_loop_counter ++)
              {
               if(true)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if(((((! (! ((((((injectionSwitch) - tan(vec2((((sin(0.0) + ((clamp(true ? (clamp(0.0, 0.0, 0.0)) : (125.802), true ? (clamp(0.0, 0.0, 0.0)) : (125.802), true ? (clamp(0.0, 0.0, 0.0)) : (125.802))))))), 0.0))).x > (min((((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / abs(((1.0) * round(length(normalize(vec2((injectionSwitch.y), (injectionSwitch.y)))))))), (((clamp(((true ? (vec2(1.0, 1.0) * ((((false ? (vec2(5.4, - 5.2)) : (injectionSwitch)))) / vec2((injectionSwitch.y), (injectionSwitch.y)))).y : (0.0 + ((236.510))))), injectionSwitch.y, (clamp(injectionSwitch, (max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) / 1.0))))))) || false))) || false))))
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if((false))
                      {
                       for(int _injected_loop_counter = ((~ (~ (int((injectionSwitch.x))))) >> (int(2))); _injected_loop_counter != (((((clamp((max((~ (~ (1 << (int(4))))) / 1, (~ (~ (1 << (int(4))))) / 1)), (~ (~ (1 << (int(4))))) / 1, (~ (~ (max((1 << (int(4))), (1 << (int(4))))))) / 1))))) >> (int(4))); _injected_loop_counter ++)
                        {
                         do
                          {
                           if((false || (((injectionSwitch.x < injectionSwitch.y)))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         while(false);
                        }
                      }
                     if((false))
                      barrier();
                     if(((bool(bool(false)))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if(((((min((min(injectionSwitch, injectionSwitch)).x, (min(injectionSwitch.x, injectionSwitch.x)))) > ((false ? (((4502.6912)) - 0.0) : injectionSwitch.y))))))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                       do
                        {
                         if((false))
                          barrier();
                        }
                       while(false);
                      }
                    }
                  }
                }
               else
                {
                }
              }
            }
           else
            {
             if(true)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x] = 2;
                }
              }
             else
              {
              }
             if((false))
              barrier();
             if((false))
              {
               if(((! (! (false || ((false)))))))
                barrier();
               if(true)
                {
                 for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter < ((1 << (int(5))) >> (((int(5)) - 0))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               subgroupAll((bool(bvec4((bool((bool(bvec4(bool(true), true, ((false) && true), false))))), false, false, ((injectionSwitch.x > injectionSwitch.y))))));
              }
            }
          }
         if((false))
          barrier();
        }
      }
    }
  }
 if(true)
  {
   if((false))
    barrier();
  }
 else
  {
  }
}
