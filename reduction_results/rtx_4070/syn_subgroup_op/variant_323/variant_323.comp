#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(((((mix(float(injectionSwitch.x), float((0.3)), bool(false))) > injectionSwitch.y))))
  return;
 if((! (! ((false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(((((bool(bool(injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if((false))
    barrier();
   if(((((true && (((injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((true && ((injectionSwitch.x > (min((float(mat4((min((mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y, (((mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y) - 0.0))), 0.0, 1.0, 1.0, (min((min(1.0, 1.0)), 1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, ((0.0) - 0.0), 0.0, 0.0, log(1.0)))), (((max((((mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y) / 1.0), (min((max((mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))), (mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))))), (mix(vec2((- 856.285), (- 7638.5991)), vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), bvec2(true, true))))).y))) / 1.0)))))))))
  {
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = ((gl_NumWorkGroups) | ((clamp(((((clamp((min(uvec3(uvec4(gl_NumWorkGroups, ((1u << (uint(6u))) >> ((((clamp((max(uint(6u), uint(6u))), uint(6u), uint(6u)))) + ((0u) + 0u)))))), uvec3(uvec4(gl_NumWorkGroups, ((((1u << (uint(6u))) >> ((((clamp(uint((((min(6u, 6u))) | 0u)), uint(6u), uint(6u)))) + ((0u) + 0u)))) - 0u)))))), uvec3(uvec4(gl_NumWorkGroups, ((max((1u << (uint(6u))) >> ((((clamp(uint(6u), uint(6u), uint(6u)))) + ((0u) + 0u))), (1u << (uint(6u))) >> ((((clamp(uint(6u), uint(6u), uint(6u)))) + ((0u) + 0u)))))))), uvec3(uvec4(gl_NumWorkGroups, ((1u << (uint(6u))) >> ((((clamp(uint(6u), uint(6u), uint(6u)))) + ((((0u) + 0u)) | (((0u) + 0u))))))))))) | (uvec3(uvec4((max((uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), ((((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))), ((1u << (uint(6u))) >> ((((clamp(uint(6u), uint(6u), uint(6u)))) + ((0u) + 0u))))))))), gl_NumWorkGroups, (min((min(gl_NumWorkGroups, gl_NumWorkGroups)), ((gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))))).x;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((mix(vec2((6878.0715), (244.036)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((((((false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if((false))
      return;
     barrier();
     if((((false)) && true))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).y))))
    return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((! (! (true && (false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((true && ((((false)) && true))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint virtual_gid = (max((max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * ((clamp((((subgroup_size) ^ 0u)), (((subgroup_size)) | ((subgroup_size))), (~ (~ (((((uint(uvec3(max((subgroup_size), (subgroup_size)), 1u, 0u))) ^ 0u)))))))) | ((~ (~ (subgroup_size))))) + subgroup_local_id;
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((! (! (((((mix(vec2((injectionSwitch)[0], ((- 4534.1061))), vec2((28.69), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(((bool(bvec2(false, ((injectionSwitch.x < ((true ? injectionSwitch.y : (- 5.0))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if(((false || (false))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool((bvec3(bvec4(bvec3(false, true, ((injectionSwitch.x < injectionSwitch.y))), true)))))))
    barrier();
   if(((((clamp(injectionSwitch, injectionSwitch, (vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if(((bool(bvec4((true && (false)), false, true, true)))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if(((((! (! ((true && ((true && ((((! (! (injectionSwitch.x > ((((vec2((mat3x4(mat4(mat3x4(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, ((((true ? (mix(float((float((mat2x3(0.0, 0.0, 0.0, (((((true && ((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))) && true))))) ? (373.336) : 0.0)), 0.0, 0.0) + (mat2x3(0.0, 0.0, 0.0, sin(0.0), round(length(normalize(1.0))), 0.0)))))), float((8.4)), bool(false))) : (- 4.6))) - 0.0)), 0.0, 0.0)))))) / (vec2(vec4(vec2(1.0, 1.0), length(0.0), 0.0)))))).y)))) && true))))))))))))
    barrier();
   if((false))
    return;
   return;
  }
 if(((true && ((((true && (((bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), false)))) && true)) && ((injectionSwitch.x < injectionSwitch.y))))))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint next_virtual_gid = ((false ? (subgroup_size) : workgroup_base + subgroup_id * subgroup_size)) + (((0u | (subgroup_local_id)) + 1) % subgroup_size);
 if((((injectionSwitch.x > ((true ? injectionSwitch.y : (- 925.985)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((false || ((false))))
    return;
  }
 buf[virtual_gid] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((((false) || false)))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((bool(bvec4((bool(bvec4((false), true, ((injectionSwitch.x < injectionSwitch.y)), true))), false, true, ((injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if((false))
    barrier();
   if((((false) && true)))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if((false))
    {
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   if((! (! ((((false)) || false)))))
    {
     if((false))
      return;
     if((false))
      return;
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > (clamp((mix(float(injectionSwitch.y), float((444.251)), bool(((injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(((! (((! ((bool(bool(false))))) && true)))))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if((((bool(bvec4(! (! (false)), false, false, true))))))
    barrier();
   if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   subgroupAll((bool(bvec3(false, true, true))));
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec4(false, true, true, false)))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    return;
   if(((bool(bool(false)))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   ((buf[next_virtual_gid] = 2) / 1u);
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((((((injectionSwitch.x > injectionSwitch.y))) || ((false) && true))))
      barrier();
    }
   subgroupAll(true);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  return;
}
