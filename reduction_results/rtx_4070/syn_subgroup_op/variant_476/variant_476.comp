#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec4(false, ((injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((bool((bvec2((bvec2(bvec4(bvec2(bvec2((((((bool(bvec3(bool(bool(true && ((false)))), false, ((injectionSwitch.x > injectionSwitch.y))))) && true)))), true)), true, true))))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((true && ((false)))) && true))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((false) || false)))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(((((max(injectionSwitch.x, (0.0 + ((((clamp(((false ? (vec2(- 4.6, 4.9)) : (min((vec2(mat2(injectionSwitch, 1.0, 0.0))), ((false ? (vec2(- 465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))), (max((min((vec2(mat2(injectionSwitch, 1.0, 0.0))), ((false ? (vec2(- 465.768, 453.097)) : injectionSwitch)))) * mat2(1.0), (min((vec2(mat2(injectionSwitch, 1.0, 0.0))), ((false ? (vec2(- 465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))), (min((vec2(mat2(injectionSwitch, 1.0, 0.0))), ((false ? (vec2(- 465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))))).x)))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((((bool(bvec2(((((! ((! (((! (! (! (! (injectionSwitch.x > (clamp(((true ? injectionSwitch.y : (5.3))), (max(injectionSwitch.y, injectionSwitch.y)), (min((min(injectionSwitch.y, injectionSwitch.y)), (mix(float((- 4.5)), float(injectionSwitch.y), bool(true)))))))))))) && true))))))) || (bool(bool(false)))), false)))))))
    barrier();
   if(((bool(bool(false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! ((true && (! (false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if(((((((true ? mat2(1.0) * (injectionSwitch) : (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bvec3(false, false, false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((bool(bool(false)))))
  barrier();
 if((((bool(bvec4(((bool(bvec3(false, false, true))) && true), false, true, false))))))
  barrier();
 if((! (! (((bool(bvec2(((false)) && true, ((true) && true)))))))))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize.x) / 1u);
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(((bool(bvec3(((false) && true), true, false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, (! (! ((bool(bvec2(true, false))))))))))))
  barrier();
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((true && ((bool(bvec2((false), true))))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((false || (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bvec4(false, false, false, true)))))
    barrier();
   if(((((mix(float((clamp(injectionSwitch.x, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x))), float(((vec4(- 43.29, - 232.497, - 8.0, - 8.4) * mat4(5.9, - 7.2, - 4520.5179, 5038.4123, (clamp(- 57.68, - 57.68, - 57.68)), - 0.0, 497.263, - 2.9, - 142.726, - 4679.2671, - 2.8, 660.010, - 2.5, - 4.1, - 4.3, 952.095)).g)), bool(false))) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    {
     if((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, true))) || false)))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((false) || false)))
      barrier();
    }
   if((((((((bool(bvec4(bool(bvec2((mix(float(injectionSwitch.x), (((clamp(true ? float(((- 1.6))) : (37.96), true ? float(((- 1.6))) : (37.96), (min(true ? float(((- 1.6))) : (37.96), true ? float(((- 1.6))) : (37.96))))))), bool(((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) > injectionSwitch.y, true)), (! (! (((false) || false)))), true, true))) && true)))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = (clamp((((max(true ? ((workgroup_base) | 0u) : ((false ? (workgroup_base) : (((workgroup_id)) | ((workgroup_id))))), true ? ((workgroup_base) | 0u) : (workgroup_id))))), ((workgroup_base) | (0u & 68107u)), workgroup_base)) + subgroup_id * (clamp((((uint(uvec3((clamp(((~ (~ (~ ((~ (((min(((subgroup_size) ^ 0u), ((subgroup_size) ^ 0u)))))))))) | ((((false ? (workgroup_base) : (subgroup_size))) ^ 0u))), ((subgroup_size) * 1u), subgroup_size)), 0u, (max((min(1u, 1u)), (max(1u, (~ (~ (1u)))))))))) ^ 0u)), ((((uint(uvec4((clamp(((((((((0u + ((min((uint((injectionSwitch.x)) | (subgroup_size)), subgroup_size))))) | (((subgroup_size) - 0u))))) | ((subgroup_size)))) << 0u) | (subgroup_size), (((subgroup_size)) | ((subgroup_size))) | (subgroup_size), (((subgroup_size)) | ((subgroup_size))) | (subgroup_size))), 0u, (((0u + (uint((injectionSwitch.x)))) << (min(0u, 0u)))), 0u)))) - (0u >> (uint(7u))))), (~ (~ (subgroup_size))))) + subgroup_local_id;
 if((((bool(bvec4(! (! (((true && (true && ((bool(bvec4((! (! (false))), true, ((injectionSwitch.x > injectionSwitch.y)), false))))))))), false, false, ((injectionSwitch.x < injectionSwitch.y))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y) && true), false))) || false))))))
  {
   if(((bool(bvec2(false, true)))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > (clamp((mix(vec2((injectionSwitch)[0], (((injectionSwitch)[1]) - 0.0)), vec2((float(false)), (875.301)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
  {
   if(((true && ((! (! ((((max(injectionSwitch.x, injectionSwitch.x)) > (log(vec2(1.0, 1.0)) + (injectionSwitch)).y)))))))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint next_virtual_gid = ((min((workgroup_base), (((workgroup_base) | 0u)))) | (workgroup_base)) + subgroup_id * ((subgroup_size) >> ((0u << (uint(5u))) << (uint(8u)))) + (((((((true ? max(((subgroup_local_id + 1) % subgroup_size), ((((uint((min(uvec2((subgroup_local_id + 1), 0u), uvec2((subgroup_local_id + 1), 0u))))) | 0u)) % (clamp((min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))) : (workgroup_id)))) >> uint((injectionSwitch.x))))) << ((((((((injectionSwitch.x > injectionSwitch.y)) ? (atomicCompSwap(workgroup_base, (uint(uvec3(subgroup_id, (1u * ((clamp(0u, 0u, 0u)))), 1u))), 188737u)) : uint((injectionSwitch.x))) - 0u)) + 0u))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = ((true ? (clamp(1, 1, 1)) : (- 60816)));
 if(((((injectionSwitch.x < injectionSwitch.y)) && (((true && (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec3((! (! (bool(bvec3((((false) && true)), true, false))))), (((clamp(((true ? injectionSwitch.x : (- 56.97))), injectionSwitch.x, ((((min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x)) < injectionSwitch.y)), false)))))
  barrier();
 if((false))
  barrier();
 if((((((true ? injectionSwitch : (abs(vec2(7.8, - 43.41))))).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((true && (false))))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((((bool(bool(false))) || false))))
    barrier();
   barrier();
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (((! (((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
  }
 if((false || (((false || (bool(bvec4(((subgroup_local_id) | ((((((~ ((clamp(~ (((((true ? subgroup_local_id : (subgroup_id)) >> 0u)))), ~ (((((true ? subgroup_local_id : (subgroup_id)) >> 0u)))), ~ (((((true ? subgroup_local_id : (subgroup_id)) >> 0u)))))))) | 0u)) | 0u)))) + 1 < subgroup_size, true, false, false))))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || (true && (false))))
    barrier();
   if(((! (! ((((bool(bool(true))) || (false || (false)))) && ((bool(bool((false))))))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > (1.0 * (injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false || ((false || (((bool(bvec4(false, true, false, (true && (true)))))))))))
      {
       if((false || (((! (! (((((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
        barrier();
       barrier();
      }
     if(((true && (false))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((! (false || ((((! (false))) && true))))))
      barrier();
     barrier();
    }
   if(((((0.0 + ((mix(vec2(((vec2(((mat2(mat2x3(((((true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : (mat2(319.505, - 251.244, - 4.4, 5.7))) : ((mat2(32.72, - 4.4, 3.9, - 92.38) - - 88.41)) : (mat2(mat2x3(- 62.55, 760.414, - 7.3, - 33.61, 7103.5729, 71.47))))))))))))))[0], ((vec2(((mat2(mat2x3(((((true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : (mat2(319.505, - 251.244, - 4.4, 5.7))) : ((mat2(32.72, - 4.4, 3.9, - 92.38) - - 88.41)) : (mat2(mat2x3(- 62.55, 760.414, - 7.3, - 33.61, 7103.5729, 71.47))))))))))))))[1]), vec2((6.9), (- 2.4)), bvec2(false, false))).x)) > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > (vec2(0.0, 0.0) + (((injectionSwitch) + vec2(0.0, 0.0)))).y))))
      barrier();
     if((false))
      barrier();
     if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((false || (false))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((((max((float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((true && (! (! ((((bool(bool(false)))) && true))))))))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) && true))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if((false))
      {
       if((((false) || false)))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((((((injectionSwitch.x > injectionSwitch.y))) || false)) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((((((((false)) || false)) || false) || false) || false))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > (((((((injectionSwitch.x < injectionSwitch.y)) && (true))) || false) ? (float(float(injectionSwitch.y))) : (566.706)))))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((! (! ((((injectionSwitch.x > (clamp(((((injectionSwitch.x < injectionSwitch.y)) ? ((injectionSwitch) / vec2(1.0, 1.0)) : (ldexp(injectionSwitch, findLSB(ivec2(- 22741, - 80392)))))), injectionSwitch, ((mat2((injectionSwitch.y)) * ((injectionSwitch) * mat2(1.0)))))).y)))))))
        barrier();
       barrier();
      }
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((((false) && true)))
    barrier();
   subgroupAll((bool(bvec4((! (! ((! (! (false)))))), true, false, false))));
   if((false))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((1.0 * (float(((max((vec2(((false ? (- 9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0), (vec2(((false ? (- 9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0)))))))) > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec3((((false || ((((true && ((! ((false || (! (false)))))))) || false)))) || false), true, true)))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
   buf[next_virtual_gid] = 2;
   if((false))
    barrier();
   if((false))
    barrier();
   subgroupAll(true);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((! (! ((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((((((clamp(injectionSwitch.x, (min(injectionSwitch, ((injectionSwitch) / vec2(1.0, 1.0)))).x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! ((true && (! (false)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
}
