#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((clamp(((((uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)) << uvec3(0u, 0u, ((0u) - 0u)))).x), ((((uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)) << uvec3(0u, 0u, ((0u) - 0u)))).x), ((((uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)) << uvec3(0u, 0u, ((0u) - 0u)))).x))) | (((min((((((uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))) + ((min(gl_WorkGroupSize, gl_WorkGroupSize)))).x) / 1u) ^ 0u), (((uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))) + ((clamp((((min(gl_WorkGroupSize, gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), (min(gl_WorkGroupSize, gl_WorkGroupSize)), (min(gl_WorkGroupSize, gl_WorkGroupSize)))))).x) / 1u)))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * (~ (~ (((workgroup_id) | 0u))));
 uint virtual_gid = ((((true ? ((((workgroup_base) | (0u >> (uint(5u))))) | (workgroup_base)) + (uint(((uvec3(((((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | 0u)), ((0u | (uint(uvec3(1u, 0u, 1u))))), 0u)) ^ (max((((((uvec3(0u, 0u, ((0u) ^ 0u))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), (((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, (uint(uvec4(((0u) >> 0u), 1u, 1u, (0u & (176503u + 149511u)))))))))))))) + (((((((mix(((float(injectionSwitch.x)) / 1.0), float((- 44.25)), ((bool(false)) || false))) < injectionSwitch.y)) && true)) ? subgroup_local_id : (subgroup_size))) : (workgroup_id)))) >> 0u);
 uint next_virtual_gid = workgroup_base + (~ (~ (subgroup_id * subgroup_size))) + ((((true ? ((((uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u))))) - 0u) : (workgroup_size)))) | (((clamp((0u | ((clamp((uint((injectionSwitch.x)) ^ ((min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (uint(((uint((0u | ((clamp((uint((injectionSwitch.x)) ^ ((min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) << 0u))), (0u | ((clamp((uint((injectionSwitch.x)) ^ ((min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))));
 buf[virtual_gid] = (min(((1) / 1), 1));
 if((bool(bvec4(subgroup_local_id + ((true ? 1 : ((clamp((~ ((int(((ivec2(~ (0 ^ ((0 ^ ((((- 66265)) ^ 0))))), 0)) + ivec2(0, 0)))))), (~ (~ (- 66265))), (~ (~ (- 66265)))))))) < (((max(subgroup_size, (~ (((~ (subgroup_size)) | (~ (subgroup_size))))))) | (max((min(subgroup_size, subgroup_size)), subgroup_size)))), false, true, false))))
  {
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
  }
 else
  {
   ((((buf[next_virtual_gid] = 2) * 1u)) ^ 0u);
   subgroupAll(true);
  }
}
