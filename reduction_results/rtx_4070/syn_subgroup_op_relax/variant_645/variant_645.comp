#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (int(ivec4(1, 0, 0, 1))); _injected_loop_counter ++)
    {
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((int((injectionSwitch.y)) << (int(4))) >> ((~ (~ (int(4)))))); _injected_loop_counter ++)
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
            }
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 if(false)
  {
   if((false))
    barrier();
  }
 else
  {
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     if(false)
      {
      }
     else
      {
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
  {
   if(((true && (false))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if((false))
    {
     if((! (! (((false) && true)))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(false);
 if(true)
  {
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       if((false))
        barrier();
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool((bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false), false)))))))
    {
     if(((! (! (false)))))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(2))) >> (((false ? (- 97645) : int(2))))); _injected_loop_counter ++)
      {
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != (0 & 70601); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(false);
    }
   if(((bool(bvec3(false, false, true)))))
    {
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 & 1)) | ((1 & 1))); _injected_loop_counter ++)
        {
         if(false)
          {
          }
         else
          {
           do
            {
             return;
            }
           while(false);
          }
        }
      }
     else
      {
      }
     if((false))
      return;
    }
   do
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter < (int((injectionSwitch.y)) ^ (0 & - 60078)); _injected_loop_counter ++)
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       for(int _injected_loop_counter = ((0 << (int(7))) ^ 1); _injected_loop_counter > (int(int(0))); _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((false))
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false))
          barrier();
        }
       if(((false || (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     if(false)
      {
      }
     else
      {
       barrier();
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
         if((false))
          barrier();
        }
      }
    }
   if((false))
    return;
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      continue;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((! (! (true)))) && true))
        {
         if((false))
          {
           if((false))
            barrier();
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
  }
 while(false);
 do
  {
   if((false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((false) && true)))
          continue;
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   while(false);
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     do
      {
       if((false))
        return;
       if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         barrier();
        }
      }
     while(false);
    }
   else
    {
    }
   return;
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
         if(((false || (false))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(false);
        }
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if(false)
    {
    }
   else
    {
     if(true)
      {
       do
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                         if((false))
                          barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(true)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if(((! (! ((false || (false)))))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      return;
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((! (! (true))))
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                         if((false))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      barrier();
                     if((false))
                      break;
                     if(((false) && true))
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < ((~ (~ (((1 << (int(3))) >> (int(3)))))) ^ int((injectionSwitch.x))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if((false))
                  barrier();
                }
              }
            }
           while(false);
           barrier();
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 while(false);
                }
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             continue;
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(2))); _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(true)
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
      }
     else
      {
      }
     if(((bool(bvec4(false, true, true, ((injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = ((0 & 63462) | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            barrier();
           if(true)
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
             if((false))
              continue;
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            break;
          }
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((bool(bvec2((bool(bool(((injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       for(int _injected_loop_counter = (~ (~ ((1 | 0)))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       for(int _injected_loop_counter = ((1 << (int(7))) >> (int(7))); _injected_loop_counter > ((0) ^ 0); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              barrier();
             if(true)
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           barrier();
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
    }
  }
 while(false);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
         if((false))
          barrier();
        }
       return;
      }
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if(true)
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((bool(bvec4(false, true, true, false))))
            {
            }
           else
            {
             if(true)
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               do
                {
                 barrier();
                 if((false))
                  barrier();
                }
               while((! (((! (((injectionSwitch.x > injectionSwitch.y)))) && true))));
               if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
                {
                 if((false))
                  break;
                 barrier();
                }
               if(((true && (false))))
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     do
                      {
                       barrier();
                      }
                     while(false);
                    }
                  }
                 if(true)
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                 do
                  {
                   if(((! (! (false)))))
                    barrier();
                  }
                 while(false);
                }
              }
             else
              {
               for(int _injected_loop_counter = (min(1, 1)); _injected_loop_counter > (0 >> (int(8))); _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if((false))
              continue;
             if((false))
              barrier();
            }
          }
        }
       else
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            return;
          }
         else
          {
           if((false))
            barrier();
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if((false))
  barrier();
 do
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (min(1, (min(1, 1)))); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(((false || (false))))
          barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    continue;
   if((false))
    barrier();
   if((false))
    barrier();
  }
 while(false);
 if(true)
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     buf[virtual_gid] = 1;
    }
   else
    {
     if((false))
      barrier();
    }
  }
 else
  {
  }
 if(false)
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(true)
    {
     if(true)
      {
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(true)
          {
           if((false))
            barrier();
           do
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               do
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    barrier();
                   if(true)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       return;
                      }
                    }
                   else
                    {
                    }
                  }
                 while(false);
                }
               while(false);
               do
                {
                 if((((false) && true)))
                  barrier();
                 if((false))
                  {
                   if((false))
                    barrier();
                   continue;
                  }
                 if((false))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(1))) >> (((int(1)) | (int(1))))); _injected_loop_counter ++)
                    {
                     if(subgroup_local_id + 1 < subgroup_size)
                      {
                       do
                        {
                         if((false))
                          barrier();
                        }
                       while((true && (false)));
                       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = ((0 >> (int(4))) >> (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           do
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(((! (! (false)))))
                                  break;
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           while((! (! (false))));
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if(true)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               if(true)
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(true)
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                       if(true)
                                        {
                                         if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
                                          {
                                           do
                                            {
                                             if((false))
                                              barrier();
                                             barrier();
                                            }
                                           while(false);
                                          }
                                         if((false))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   barrier();
                                  }
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                  {
                                   if((false))
                                    {
                                     do
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(false);
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                   if((false))
                                    barrier();
                                  }
                                }
                              }
                             while(false);
                             do
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    return;
                                  }
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    return;
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                                      {
                                       if((false))
                                        barrier();
                                       continue;
                                      }
                                     barrier();
                                    }
                                  }
                                 if((false))
                                  barrier();
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     do
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                   barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                               for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if(true)
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if(true)
                                      {
                                       if(true)
                                        {
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if(true)
                                              {
                                               barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                            {
                                             if((false))
                                              {
                                               if((false))
                                                {
                                                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                  {
                                                   barrier();
                                                  }
                                                }
                                               barrier();
                                               if((false))
                                                barrier();
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if(true)
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 else
                                  {
                                   if((false))
                                    break;
                                   if((false))
                                    barrier();
                                  }
                                }
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               if(true)
                                {
                                 barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                               else
                                {
                                }
                              }
                             while(((false) || false));
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if((false))
                              break;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       if(false)
                        {
                         if((false))
                          barrier();
                        }
                       else
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           do
                            {
                             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
                             do
                              {
                               if(true)
                                {
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                }
                              }
                             while(false);
                             if((false))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      barrier();
                                     if(false)
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                   if((false))
                                    break;
                                   if((false))
                                    barrier();
                                  }
                                }
                              }
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                           while(false);
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if(((false || (false))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         do
                          {
                           if((false))
                            barrier();
                          }
                         while(false);
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           subgroupAll(false);
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = ((1 << (int(7))) >> (((int(7)) ^ 0))); _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(2))); _injected_loop_counter --)
                                {
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                               if((false))
                                barrier();
                              }
                            }
                           if((false))
                            barrier();
                           if((false))
                            return;
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = 1; _injected_loop_counter != (min(0, 0)); _injected_loop_counter --)
                                {
                                 if((false))
                                  {
                                   if((false))
                                    {
                                     if(((bool(bool(false)))))
                                      barrier();
                                     if((false))
                                      barrier();
                                     continue;
                                    }
                                   if((false))
                                    barrier();
                                   return;
                                  }
                                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      barrier();
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   if((false))
                                    return;
                                  }
                                }
                               if((false))
                                barrier();
                              }
                            }
                           barrier();
                          }
                        }
                       if(((true && (false))))
                        return;
                       if(false)
                        {
                        }
                       else
                        {
                         do
                          {
                           do
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               if((false))
                                break;
                               do
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     if((false))
                                      continue;
                                     if((false))
                                      {
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                      }
                                    }
                                   while(false);
                                  }
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                               if((false))
                                break;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  break;
                                 if((false))
                                  {
                                   do
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                   while(((injectionSwitch.x > injectionSwitch.y)));
                                   if((false))
                                    barrier();
                                  }
                                 barrier();
                                }
                              }
                            }
                           while(false);
                          }
                         while(false);
                        }
                       if((false))
                        barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if(((bool(bvec3(false, true, true)))))
                            {
                             if(false)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                               do
                                {
                                 if((false))
                                  return;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((((false) || false)))
                                  barrier();
                                 barrier();
                                }
                               while(false);
                              }
                            }
                          }
                         return;
                        }
                       if((false))
                        return;
                      }
                     else
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                          }
                         do
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                             if(((! (! (((false) && true))))))
                              barrier();
                            }
                           barrier();
                           if((((false) && true)))
                            barrier();
                          }
                         while(false);
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       do
                        {
                         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
                        }
                       while(false);
                       for(int _injected_loop_counter = ((0 >> (int(2))) >> (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if(true)
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                {
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > ((0) ^ (0 ^ 0)); _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                 if((false))
                                  return;
                                }
                               if((false))
                                barrier();
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  return;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             if((false))
                              barrier();
                            }
                           while(false);
                           if((false))
                            continue;
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(((true && (false))))
                              barrier();
                             if((false))
                              barrier();
                             if((false))
                              break;
                             if((false))
                              barrier();
                             if((false))
                              continue;
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       if((false))
                                        barrier();
                                       for(int _injected_loop_counter = (0 >> (int(3))); _injected_loop_counter != (1 | (1 ^ 0)); _injected_loop_counter ++)
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                              }
                                            }
                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                           if((false))
                                            barrier();
                                          }
                                        }
                                      }
                                     while(false);
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      return;
                                     break;
                                     if(((true && ((! (! (false)))))))
                                      barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  {
                                   if(true)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   return;
                                   if(true)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    {
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       continue;
                                      }
                                     barrier();
                                    }
                                   if((false))
                                    break;
                                   barrier();
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  {
                                   do
                                    {
                                     if((false))
                                      barrier();
                                    }
                                   while(((injectionSwitch.x > injectionSwitch.y)));
                                   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(false)
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                                    {
                                     if((false))
                                      {
                                       if(true)
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   if((false))
                                    return;
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                 for(int _injected_loop_counter = (((int((injectionSwitch.y)) ^ 0) << (((int(4)) / 1))) >> ((clamp(int(4), int(4), int(4))))); _injected_loop_counter != 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                      {
                                       if((false))
                                        barrier();
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         return;
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if((false))
                                            barrier();
                                           return;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                             if((false))
                              barrier();
                             if(true)
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               if((false))
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != ((75690) & 0); _injected_loop_counter --)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                       if((false))
                                        barrier();
                                      }
                                     if((false))
                                      barrier();
                                    }
                                  }
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    return;
                                  }
                                 while(false);
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                 if((false))
                                  barrier();
                                 for(int _injected_loop_counter = ((int((injectionSwitch.x))) / 1); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 if((false))
                                  barrier();
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  break;
                                }
                               for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != ((0) / (1 & 1)); _injected_loop_counter --)
                                {
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                      }
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 while(false);
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                 barrier();
                                }
                              }
                             else
                              {
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(((((false || (false))) || false)))
                              {
                               if((false))
                                barrier();
                               break;
                              }
                            }
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((false))
                              barrier();
                            }
                           if((((false) || false)))
                            {
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = (0 << (int(1))); _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             break;
                             if((false))
                              continue;
                            }
                          }
                         else
                          {
                          }
                        }
                       do
                        {
                         if(true)
                          {
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             do
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if(((! (! (false)))))
                                    {
                                     for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                      }
                                     return;
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 do
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 while(false);
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if(((false || (false))))
                                    {
                                     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != (0 & - 61669); _injected_loop_counter --)
                                      {
                                       barrier();
                                      }
                                    }
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if((false))
                                      barrier();
                                     if((false))
                                      return;
                                     if((false))
                                      barrier();
                                     barrier();
                                     if((false))
                                      barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  continue;
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                         if((false))
                                          barrier();
                                        }
                                      }
                                     if((false))
                                      barrier();
                                    }
                                  }
                                 while(false);
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                            }
                           else
                            {
                            }
                           if((false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(6))); _injected_loop_counter --)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                 while(false);
                                }
                              }
                            }
                           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((false))
                                barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if((false))
                              {
                               if(true)
                                {
                                 if((false))
                                  break;
                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = ((1 << (((int(6)) - 0))) >> (int(6))); _injected_loop_counter > ((0) - 0); _injected_loop_counter --)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                }
                               else
                                {
                                 if((false))
                                  break;
                                }
                              }
                             if((false))
                              {
                               if((false))
                                break;
                               barrier();
                               if((false))
                                barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       while(false);
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          continue;
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((false))
                          {
                           if((false))
                            {
                             if(true)
                              {
                               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if((false))
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     continue;
                                    }
                                   barrier();
                                  }
                                 barrier();
                                 if(true)
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if((false))
                                  barrier();
                                }
                              }
                             else
                              {
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(((bool(bvec4(false, false, false, true)))))
                                barrier();
                               barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                return;
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                }
                               if((false))
                                break;
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             if((false))
                              barrier();
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if((false))
                                  barrier();
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   do
                                    {
                                     barrier();
                                    }
                                   while((true && (((injectionSwitch.x > injectionSwitch.y)))));
                                  }
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           do
                            {
                             barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = (int((injectionSwitch.x)) << (int(4))); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 return;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               barrier();
                              }
                            }
                           while(false);
                           if(true)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           else
                            {
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = ((max(0, 0)) >> (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               if(((bool((! (! (bool(false))))))))
                                barrier();
                               if((false))
                                break;
                               if((false))
                                barrier();
                              }
                            }
                           if((false))
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         if((false))
                          {
                           if(true)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                           do
                            {
                             barrier();
                            }
                           while(((false) && true));
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                          {
                           if((false))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                               if((false))
                                barrier();
                              }
                             else
                              {
                               for(int _injected_loop_counter = (0 | (0 << (int(6)))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                 if((false))
                                  continue;
                                }
                               if((false))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter < (0 | (1 | 0)); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           subgroupAll(true);
                           if(((! ((! (! (! (false))))))))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                     if((false))
                      {
                       if(false)
                        {
                         if((false))
                          return;
                        }
                       else
                        {
                         barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               while(false);
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (min(1, 1)); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             do
              {
               return;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         else
          {
           if((false))
            barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
         if((false))
          barrier();
         if((false))
          return;
        }
       barrier();
      }
    }
   else
    {
    }
   if((false))
    barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(true)
    {
     if(true)
      {
       if(true)
        {
         if((false))
          barrier();
         do
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
           if(((((injectionSwitch.x > injectionSwitch.y))) && true))
            {
            }
           else
            {
             if((false))
              {
               do
                {
                 if(((true) && ((injectionSwitch.x < injectionSwitch.y))))
                  {
                   if((((false) && true)))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                         if(true)
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 | 1); _injected_loop_counter ++)
                            {
                             if((false))
                              return;
                             if(true)
                              {
                               barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if((false))
                                barrier();
                              }
                             else
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                         if(((bool(bool(false)))))
                          barrier();
                         if((false))
                          barrier();
                        }
                      }
                     while(false);
                    }
                  }
                 else
                  {
                  }
                }
               while(false);
               if((false))
                barrier();
              }
            }
          }
         while(false);
         if((false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter != (0 & (23945 & - 88091)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      return;
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((false))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((! (! (false)))))
                  {
                   if((false))
                    barrier();
                   return;
                   do
                    {
                     if((false))
                      barrier();
                    }
                   while(false);
                   if((false))
                    barrier();
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      return;
                     barrier();
                     if((false))
                      barrier();
                    }
                  }
                 if((false))
                  return;
                 barrier();
                 if((false))
                  barrier();
                }
               if(((! (! (false)))))
                break;
              }
             if((false))
              barrier();
             if((false))
              barrier();
            }
           barrier();
           if((false))
            barrier();
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             do
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
            }
          }
         else
          {
          }
        }
       else
        {
         if((false))
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           do
            {
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 barrier();
                 if((false))
                  return;
                }
              }
            }
           while(false);
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> ((min(int(6), int(6))))); _injected_loop_counter ++)
          {
           if((false))
            return;
          }
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           return;
          }
         for(int _injected_loop_counter = ((0 | 0) | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            {
             for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
      }
    }
   while(false);
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((true) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if((false))
  {
   if(((bool((false || (bool(false)))))))
    barrier();
   barrier();
  }
}
