#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (uvec3(gl_WorkGroupSize[0], ((true ? ((gl_WorkGroupSize[1]) >> 0u) : (atomicAdd(subgroup_local_id, subgroup_size)))), gl_WorkGroupSize[2])).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (uint(uvec2(workgroup_size, 1u))) * workgroup_id;
 uint virtual_gid = (clamp((~ (~ (~ ((((uint((clamp(uint(~ ((workgroup_base + subgroup_id * subgroup_size))), uint(~ ((workgroup_base + subgroup_id * subgroup_size))), uint(~ (((((((0u ^ (((workgroup_base) | (workgroup_base))))) - ((0u) | (0u))) + subgroup_id * subgroup_size)) + 0u)))))))) ^ 0u))))), (~ (~ (~ ((((uint((clamp(uint(~ ((workgroup_base + subgroup_id * subgroup_size))), uint(~ ((workgroup_base + subgroup_id * subgroup_size))), uint(~ ((((((((((workgroup_base) | (workgroup_base)))) * 1u) - 0u) + subgroup_id * subgroup_size)) + 0u)))))))) ^ 0u))))), (~ (~ (~ ((((uint((clamp(uint(~ ((((workgroup_base) << (0u | 0u)) + subgroup_id * subgroup_size))), uint(~ ((workgroup_base + subgroup_id * subgroup_size))), uint(~ ((((((((workgroup_base) | (workgroup_base))) - 0u) + subgroup_id * subgroup_size)) + 0u)))))))) ^ ((0u) ^ 0u)))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((((subgroup_id) | (subgroup_id)) * (min(subgroup_size, ((subgroup_size) | (((subgroup_size) | 0u)))))) ^ 0u) + ((0u ^ ((uint(uint(((0u | ((uint((injectionSwitch.x)) ^ (((0u) << 0u))))) + ((max(((((((0u | (((false ? (workgroup_size) : ((uint(uvec3(min(subgroup_local_id, subgroup_local_id), uint((injectionSwitch.x)), 1u))))))))) ^ (~ (((~ (0u)) - 0u))))) / 1u) + 1), (~ (~ (((((((0u | (((false ? (workgroup_size) : ((uint(uvec3(min(subgroup_local_id, subgroup_local_id), uint((injectionSwitch.x)), 1u))))))))) ^ (((false ? (subgroup_id) : (uint(uvec3(uint(uvec4((~ (~ (0u))), 1u, 0u, 1u)), 1u, 0u)))))))) / 1u) + 1))))))))))) % subgroup_size)));
 buf[virtual_gid] = (((0 | (((min((((min((1) / 1, (1) / 1)))), (((min((1) / 1, (1) / 1)))))) | ((0 ^ (1))))))) / 1);
 if((false || ((((uint(uvec2(((subgroup_local_id + 1) | (subgroup_local_id + 1)), 0u)))) | 0u) < subgroup_size)))
  {
   int i = (((((int((ivec3((int(((((ivec4(0, 0, (1 | 1), 1)) << ivec4(0, 0, 0, 0)) | ((ivec4(0, 0, (1 | 1), 1)) << ivec4(0, 0, 0, 0)))))), 0, 0) ^ (ivec3(0, 0, ((1 << (((((int(1))) ^ 0)) / ((1) ^ 0))) >> (((((int(1)) | (int(1))) - int((injectionSwitch.x))))))))))) - 0) / 1)));
   buf[next_virtual_gid] = ((((true) && true) ? (min(2, 2)) : (- 35824)));
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
