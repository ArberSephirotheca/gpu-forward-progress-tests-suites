#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((((clamp(uvec3(uvec4((clamp(gl_NumWorkGroups, (uvec3(gl_NumWorkGroups[0], (uvec3(uvec3((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))))[1], (1u * (gl_NumWorkGroups[2])))), gl_NumWorkGroups)), 0u)), uvec3(uvec4((clamp(gl_NumWorkGroups, (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], (1u * (gl_NumWorkGroups[2])))), gl_NumWorkGroups)), 0u)), uvec3(uvec4((clamp(gl_NumWorkGroups, (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], (1u * (gl_NumWorkGroups[2])))), gl_NumWorkGroups)), 0u)))))) + uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = ((gl_WorkGroupSize) ^ uvec3(((0u) ^ 0u), 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (1u * (workgroup_base + subgroup_id * ((~ (~ (((((true ? (max(0u ^ ((min(subgroup_size, (~ (~ (subgroup_size)))))), 0u ^ ((min(subgroup_size, (~ (~ (subgroup_size)))))))) : (subgroup_local_id)))))))) | (subgroup_size)) + subgroup_local_id));
 if((false))
  return;
 uint next_virtual_gid = (clamp(workgroup_base + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), ((true ? (uint(uvec4((~ (~ (workgroup_base + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)))), (0u << (uint(0u))), 1u, 1u))) : (atomicAdd(workgroup_base, subgroup_local_id)))), (0u + (workgroup_base + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)))));
 buf[virtual_gid] = (max(1, 1));
 if((false || (((false || ((! (((! (((((! ((((! (! (! ((((true && (false))) && ((injectionSwitch.x < injectionSwitch.y)))))))) || false))) || ((false || ((((true && (((! (bool((bvec2(bvec4(bvec2(((bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), false, true, false)))), false), false, true)))))) && ((bool(bool(! (((! (((injectionSwitch.x < injectionSwitch.y)))) && true))))))))))))))) && (((! (((! ((((bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))) && true))) && true))))))))) || ((false) && true)))))) || false))))
  {
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(((((((! (((! (true && ((true && ((false || (((((bool(bvec3((((false || ((1.0 * ((((min(((true ? injectionSwitch : (vec2(- 27.72, 8875.3343)))), injectionSwitch))) * vec2(1.0, 1.0)).x)) > ((((false ? (- 9439.2588) : injectionSwitch.y))) * 1.0)))) || false), false, true)))) || (true && (false))))))))))) && true)))) && true)))))
    return;
   if((((! (! ((((bool((bvec3(bvec4(((bvec3(bvec4(bvec3(bvec3(bvec3(((max(((((min(((min((((((false ? (- 62.90) : max(((1.0 * ((false ? (2.9) : ((injectionSwitch.x) + 0.0))))), injectionSwitch.x))))) * 1.0), (((false ? (- 62.90) : max(((1.0 * ((false ? (2.9) : ((injectionSwitch.x) + 0.0))))), injectionSwitch.x))))))) - 0.0, ((max(((((false ? (2.9) : injectionSwitch.x))) - 0.0), injectionSwitch.x))) - (mix(float((5.0)), float(0.0), (false || ((bool((bvec3(bvec3(bvec3((bool(bvec2(bool(true), false))), false, true)))))))))))))) - 0.0), injectionSwitch.x)) > ((((clamp(min(injectionSwitch.y, (determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + (((((float(float((((((bool(bool((bool(bvec2(true, true))))))) && true) ? (injectionSwitch.y) * 1.0 : ((+ 6.0))))))))) / 1.0)))), (max((clamp(((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? (9.6) : (((clamp(min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), (((min(((injectionSwitch.x > injectionSwitch.y)) ? (9.6) : (clamp(min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) ? (9.6) : (clamp(min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))), (0.0 + ((max((((((max(injectionSwitch.x, ((false ? (- 2621.7839) : injectionSwitch.x)))) > injectionSwitch.y)) ? (9.6) : (clamp(min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), (mix(float((5.7)), float((mix(float((- 6.0)), float(((((injectionSwitch.x > injectionSwitch.y)) ? (9.6) : (clamp(min((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))), bool(true)))), bool(true))))))))), (((((min((max(injectionSwitch.x, ((true ? injectionSwitch.x : (- 4.1))))), injectionSwitch.x)) > injectionSwitch.y)) ? (9.6) : (clamp(min((max(injectionSwitch.y, (mix(float(((- float(false)))), float(injectionSwitch.y), bool(((true) && true)))))), injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))), min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))), ((false || (bool(bvec4(false, true, true, true))))), (((clamp(((injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)) < (min(injectionSwitch, injectionSwitch)).y))))), true)))), false))))) || false))))))))
    return;
  }
 else
  {
   buf[next_virtual_gid] = (int(ivec3(((max((2) << 0, (2) << 0))), int((((injectionSwitch.x)) + 0.0)), ((0) - 0))));
  }
}
