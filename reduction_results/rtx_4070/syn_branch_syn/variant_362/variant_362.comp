#version 460

struct _GLF_struct_20 {
 int i;
 uvec3 _f0;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 uvec3 _f1;
 mat2 _f2;
 float _f3;
 mat4 _f4;
 ivec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 mat2x3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 _GLF_struct_17 _f1;
 ivec3 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 uvec2 _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 vec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 _GLF_struct_14 _f1;
 uvec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 mat2x3 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 bvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 ivec3 _f1;
 uint _f2;
 mat2x4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bool _f1;
 mat2x4 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 uvec2 _f1;
 bool _f2;
 vec4 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 _GLF_struct_3 _f1;
 uvec3 _f2;
 uvec4 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_13 _f2;
 uint num_workgroup;
 int _f3;
 _GLF_struct_15 _f4;
 uvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec2 _f1;
 uint subgroup_local_id;
 bvec3 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 _GLF_struct_1 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
     if((false))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(((! (! ((! (! (false))))))))
    continue;
   if(false)
    {
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if((false))
      break;
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         continue;
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       if(false)
        {
         if((false))
          {
           do
            {
             return;
            }
           while(false);
          }
        }
       else
        {
         return;
         if((false))
          continue;
        }
       if((false))
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
    }
  }
 while(false);
 if((false))
  return;
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        return;
      }
    }
   else
    {
     if((((false) || false)))
      {
       if((false))
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       return;
       if((false))
        {
         if((! (! (true))))
          {
           return;
          }
         else
          {
          }
        }
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         break;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if(((! (! ((bool(bvec2(false, false))))))))
          break;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     while(false);
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
    }
   if(true)
    {
     do
      {
       if((false))
        return;
      }
     while(false);
     return;
     if(((! (! ((false || (false)))))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          continue;
         return;
         if((false))
          continue;
        }
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
     do
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(((bool(bvec3(false, true, true)))))
          {
           do
            {
             return;
             if((false))
              continue;
            }
           while(false);
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              return;
             if((false))
              {
               if((false))
                return;
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
            }
           do
            {
             if((false))
              break;
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 return;
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   continue;
                  }
                }
              }
             if((false))
              break;
            }
           while(false);
          }
        }
       else
        {
        }
      }
     while(false);
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((true) && true))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(false);
            }
           if((false))
            continue;
           if(false)
            {
            }
           else
            {
             if((false))
              return;
             if((false))
              continue;
             do
              {
               for(int _injected_loop_counter = ((1) ^ 0); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 return;
                }
              }
             while(false);
            }
           if((false))
            break;
           if((false))
            break;
           if((false))
            continue;
          }
         else
          {
           if((false))
            {
             if(((false || (((false) || false)))))
              break;
             if((false))
              continue;
             if((false))
              continue;
             continue;
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((false))
          return;
         if((false))
          continue;
        }
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        continue;
      }
     if((false))
      continue;
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           return;
          }
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            continue;
          }
         break;
        }
       continue;
       if((false))
        return;
      }
    }
   while(false);
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     do
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         return;
        }
      }
     while(false);
    }
   if(true)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(true)
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   else
    {
    }
   if(true)
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       do
        {
         return;
         if((false))
          return;
        }
       while(false);
      }
    }
   else
    {
     if((false))
      return;
     if(((! (! (false)))))
      return;
     if((false))
      return;
    }
  }
 if((false))
  return;
 if((bool(bvec4(true, true, false, false))))
  {
   do
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            return;
          }
         if((false))
          return;
         if((false))
          {
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            return;
           return;
           if((false))
            return;
          }
         else
          {
           if((false))
            return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   while(false);
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if(((bool(bvec4(false, false, false, false)))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((false))
          break;
         if((false))
          return;
         if(true)
          {
           if((false))
            return;
           if((bool(bvec4(true, false, ((injectionSwitch.x < injectionSwitch.y)), false))))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               return;
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if(false)
              {
              }
             else
              {
               return;
              }
            }
          }
        }
      }
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   if((true && (false)))
    {
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y)) || (true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
     else
      {
       if((false))
        return;
       do
        {
         if((false))
          return;
        }
       while(false);
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec3(((false) && true), false, true)))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     if(((false || (false))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          break;
         if((false))
          return;
         break;
        }
       if((false))
        continue;
       if((false))
        return;
       if(((bool(bool(false)))))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   if((false))
    return;
  }
 else
  {
  }
 if(false)
  {
   if((false))
    return;
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if(((bool(bool(false)))))
        return;
       if((bool(bool(false))))
        {
        }
       else
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           do
            {
             do
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(((bool(bool(false)))))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if((false))
                      break;
                     return;
                    }
                  }
                 if((false))
                  continue;
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
             while(false);
            }
           while(false);
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 return;
                }
               else
                {
                }
              }
             do
              {
               return;
              }
             while((! (((! (false)) || false))));
            }
           do
            {
             if((false))
              return;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         if((false))
          return;
        }
      }
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       if((false))
        return;
      }
     else
      {
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          continue;
         if(true)
          {
           if((false))
            return;
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         else
          {
           if((false))
            break;
          }
        }
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(true)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & ((1 << (int(2))) >> (int(2)))); _injected_loop_counter ++)
            {
             return;
            }
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          return;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if((false))
          {
           if(true)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               return;
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if((false))
      return;
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
    {
     if(true)
      {
       if((false))
        continue;
       if((false))
        return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(false)
      {
       if((false))
        continue;
      }
     else
      {
       if((false))
        return;
      }
     if((false))
      break;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (94862 & (0 >> (int(4)))); _injected_loop_counter --)
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        return;
      }
     else
      {
      }
    }
  }
 if((((false) && true)))
  {
   if((false))
    return;
   if(true)
    {
     return;
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      return;
    }
   else
    {
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      break;
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = (0 | (0 << (int(7)))); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
            {
             return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
   while(false);
   if((false))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    return;
   do
    {
     if((false))
      return;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       return;
       if((false))
        break;
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       do
        {
         if((false))
          continue;
         return;
         if(true)
          {
           if((false))
            return;
          }
         else
          {
          }
        }
       while(false);
      }
     else
      {
      }
    }
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      break;
     if((false))
      {
       if((false))
        break;
       break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if((false))
      continue;
     for(int _injected_loop_counter = (0 ^ (0)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               continue;
               if(((true && (false))))
                continue;
              }
             if((false))
              continue;
             if((false))
              break;
             break;
            }
           if(false)
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              continue;
             if((false))
              {
               if((false))
                return;
               break;
              }
            }
           else
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if(true)
              {
               if((false))
                {
                 if((false))
                  break;
                 continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(true)
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       return;
                       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                        continue;
                      }
                    }
                  }
                 else
                  {
                  }
                 return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if((false))
                {
                 if(((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
                  break;
                 continue;
                 if((false))
                  break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((! (! (false)))))
                  continue;
                 return;
                }
              }
             if(false)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(false)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(((false || (false))))
                    continue;
                   continue;
                  }
                }
               else
                {
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   do
                    {
                     return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   while(false);
                   if((false))
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       break;
                      }
                     if(((! (! (false)))))
                      return;
                     continue;
                    }
                  }
                 if((false))
                  break;
                }
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(true)
                  {
                   if((false))
                    return;
                  }
                 else
                  {
                   if((false))
                    continue;
                  }
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   break;
                  }
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (int((injectionSwitch.y)) ^ 0); _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 break;
                }
               if((false))
                continue;
               if((false))
                {
                 if(((bool(bvec3(false, false, false)))))
                  {
                   if((false))
                    return;
                   if((false))
                    break;
                   continue;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    return;
                   return;
                  }
                 if((false))
                  break;
                 continue;
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (max(((1 << (int(2))) >> (int(2))), ((1 << (int(2))) >> (int(2))))); _injected_loop_counter ++)
              {
               if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 do
                  {
                   do
                    {
                     if((false))
                      continue;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        break;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          continue;
                         break;
                        }
                       do
                        {
                         if((false))
                          return;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             continue;
                            }
                           continue;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            continue;
                           if((false))
                            break;
                           if(true)
                            {
                             return;
                            }
                           else
                            {
                            }
                           if((false))
                            continue;
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          return;
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            break;
                           return;
                          }
                         else
                          {
                          }
                         do
                          {
                           if(false)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             if((false))
                              {
                               if((false))
                                continue;
                               continue;
                              }
                            }
                           else
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                return;
                               return;
                              }
                            }
                           if((false))
                            {
                             if((false))
                              continue;
                             continue;
                             if((false))
                              continue;
                            }
                          }
                         while(false);
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           continue;
                          }
                        }
                       while(false);
                      }
                     else
                      {
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 while(false);
                }
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 continue;
                }
               if((false))
                continue;
               if((false))
                return;
               if((false))
                continue;
              }
             if((false))
              return;
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  break;
                 return;
                 if((false))
                  break;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | (0 >> (int(6)))); _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      return;
                     return;
                    }
                  }
                 break;
                 if(true)
                  {
                   if((false))
                    break;
                   for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   if(((false || (false))))
                    continue;
                   if((false))
                    break;
                   if((false))
                    return;
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if((((false) && true)))
                break;
               return;
              }
             if((false))
              {
               if((false))
                continue;
               return;
              }
            }
           if(((true && (false))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(true)
            {
             if((false))
              return;
            }
           else
            {
            }
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               continue;
              }
             if((false))
              break;
             continue;
             if((false))
              continue;
            }
          }
        }
      }
     if((false))
      return;
     if((false))
      return;
    }
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
        {
         return;
        }
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x4(1.0), _GLF_struct_1(vec2(1.0), bvec2(true), gl_SubgroupInvocationID, bvec3(true), _GLF_struct_0(mat2x4(1.0), uvec3(1u))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((true && (false))))
  return;
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   if(false)
    {
     if((false))
      {
       if((false))
        break;
       do
        {
         return;
        }
       while(false);
       if((false))
        return;
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
        {
         if((false))
          return;
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((false) && true)))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           return;
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        break;
       if((false))
        {
         if((false))
          {
           do
            {
             return;
            }
           while(false);
          }
         return;
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            {
             if((false))
              continue;
             continue;
            }
           if((false))
            continue;
           if((((false) || false)))
            continue;
           return;
          }
        }
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(false)
          {
           do
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                return;
               if((false))
                return;
              }
             else
              {
              }
            }
           while(false);
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               for(int _injected_loop_counter = ((0 ^ 1) & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 do
                  {
                   return;
                  }
                 while(false);
                }
              }
            }
           else
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if((false))
              {
               do
                {
                 return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((((false) && true)))
              break;
             if((false))
              return;
            }
          }
         else
          {
           return;
           if((false))
            {
             if((false))
              continue;
             if((false))
              break;
             if(true)
              {
               return;
              }
             else
              {
               if((! (! (true))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((false))
          return;
         if((false))
          return;
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       do
        {
         return;
        }
       while(false);
       if((false))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
     if((false))
      return;
    }
   else
    {
     if((false))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       continue;
      }
     if((false))
      continue;
     if((((false) && true)))
      {
       if((false))
        break;
       break;
      }
     if(((true) && true))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(false);
      }
     else
      {
       if((false))
        break;
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      break;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           do
            {
             if((false))
              {
               do
                {
                 return;
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                return;
               if((false))
                break;
              }
             if((false))
              continue;
             if((false))
              {
               if((false))
                continue;
               break;
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            continue;
           if((false))
            {
             if(false)
              {
              }
             else
              {
               return;
               if((false))
                return;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            break;
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
             if((false))
              return;
            }
           if((false))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          break;
        }
       if((false))
        return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        continue;
       if((false))
        break;
       if((false))
        {
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              return;
             if((false))
              return;
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               return;
              }
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              {
               if((false))
                {
                 if((false))
                  break;
                 return;
                }
               return;
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               return;
              }
            }
           if(false)
            {
             if((false))
              break;
             if((false))
              continue;
            }
           else
            {
             return;
            }
           if((false))
            {
             if(((bool(bvec2(false, true)))))
              break;
             return;
            }
          }
         if((((false) || false)))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           break;
          }
         if(true)
          {
           return;
          }
         else
          {
          }
         if((false))
          return;
         if((false || (true)))
          {
           if((false))
            {
             if((false))
              continue;
             return;
             if(((! (! (false)))))
              return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
            continue;
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         if((false))
          break;
         return;
        }
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if((false))
          {
           do
            {
             return;
            }
           while(false);
          }
         if((false))
          {
           do
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               return;
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false))
          {
           if((false))
            return;
           return;
          }
        }
       if(((! (! (false)))))
        break;
       if((false))
        continue;
      }
     if((false))
      break;
     if((false))
      continue;
     if(((bool(bvec2(false, false)))))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(false)
        {
        }
       else
        {
         return;
         if((false))
          {
           if(false)
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     if((false))
      {
       if((false))
        return;
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           return;
          }
        }
       if(false)
        {
        }
       else
        {
         return;
         if(((true && (false))))
          break;
        }
      }
     for(int _injected_loop_counter = (((1 & 1) << ((max((min(int(4), int(4))), int(4))))) >> (((true ? int(4) : (- 12350))))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((false))
          break;
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
            }
           if((false))
            {
             if(((((true && (false))) || false)))
              continue;
             continue;
            }
           continue;
           if((false))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          {
           if((false))
            break;
           break;
          }
         do
          {
           GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = _GLF_struct_replacement_2._f1.subgroup_local_id;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           continue;
           if((false))
            break;
           if((false))
            continue;
          }
         if(((! (! (false)))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            return;
           break;
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            break;
           if((false))
            {
             do
              {
               return;
              }
             while(false);
            }
           if((false))
            continue;
           if((false))
            break;
          }
         if((false))
          {
           if((false))
            {
             if((false))
              break;
             if(((true && (false))))
              {
               if((false))
                continue;
               if((false))
                break;
               if((false))
                continue;
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    break;
                   return;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((false))
                  break;
                }
               if((false))
                break;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if((false))
                {
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                 do
                  {
                   return;
                  }
                 while((! (! (false))));
                }
               break;
              }
             if((false))
              break;
             if((false))
              {
               if((false))
                continue;
               continue;
               if((false))
                continue;
              }
             if((false))
              {
               if((false))
                return;
               break;
              }
             if((false))
              continue;
             break;
             if((false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if((false))
            {
             if(((bool(bool(false)))))
              {
               if((false))
                return;
               continue;
              }
             break;
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            break;
           if((false))
            continue;
           continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(((true && ((! (! (false)))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((! (! (false)))))
              continue;
             break;
            }
           if((false))
            return;
           if((false))
            break;
           return;
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if(false)
      {
       if((false))
        continue;
      }
     else
      {
       if((false))
        {
         if((false))
          continue;
         if((false))
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              continue;
            }
           else
            {
            }
           if((false))
            return;
          }
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(true)
          {
           if((false))
            {
             if(false)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if((false))
                break;
              }
             else
              {
               if((false))
                {
                 if((false))
                  continue;
                 return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if((false))
              {
               if((false))
                break;
               break;
              }
             if((false))
              continue;
             return;
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              {
               if((false))
                break;
               if((false))
                continue;
               break;
              }
            }
           else
            {
             if((false))
              continue;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if((false))
                    continue;
                   if((false))
                    return;
                   break;
                  }
                 if((false))
                  break;
                 if((false))
                  break;
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < (((clamp(1, 1, 1))) >> (- 37870 & 0)); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   break;
                  }
                }
               if(((true) && true))
                {
                 if((false))
                  return;
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                return;
               if(true)
                {
                 if((false))
                  continue;
                 if((false))
                  break;
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      break;
                     return;
                    }
                   continue;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               else
                {
                }
               if((false))
                return;
              }
             if((false))
              {
               if((false))
                return;
               return;
              }
            }
           if((false))
            {
             if((false))
              return;
             return;
            }
           if(((bool(bvec2(false, false)))))
            continue;
           if(false)
            {
            }
           else
            {
             do
              {
               if(true)
                {
                 if((false))
                  {
                   if((false))
                    return;
                   continue;
                  }
                 return;
                 if((false))
                  break;
                 if((false))
                  continue;
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    break;
                   break;
                  }
                 if((false))
                  continue;
                }
              }
             while((! (! (false))));
             if((false))
              continue;
            }
           if(((true && ((false || (false))))))
            {
             if((false))
              continue;
             if((false))
              continue;
             break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if((false))
            {
             if((false))
              {
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  return;
                }
               do
                {
                 if(true)
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                    }
                   if(false)
                    {
                     if((false))
                      continue;
                    }
                   else
                    {
                     return;
                    }
                  }
                 else
                  {
                  }
                 do
                  {
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((false))
                    return;
                  }
                 while(false);
                 if((false))
                  return;
                 if((false))
                  {
                   if(true)
                    {
                     if((false))
                      break;
                     return;
                    }
                   else
                    {
                    }
                  }
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if((false))
              {
               if((false))
                break;
               return;
              }
             do
              {
               if((false))
                return;
               if(((true) && true))
                {
                 return;
                }
               else
                {
                }
               if((false))
                break;
               if((false))
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   continue;
                  }
                 if((false))
                  return;
                 if((false))
                  break;
                 break;
                }
               if((false))
                break;
               if((false))
                continue;
               if((false))
                return;
              }
             while(false);
            }
          }
         else
          {
           if((false))
            break;
           if((false))
            break;
           if((false))
            {
             if((false))
              return;
             if(false)
              {
              }
             else
              {
               return;
              }
            }
           if((false))
            {
             if(((false || (false))))
              {
               if((false))
                continue;
               if((false))
                continue;
               if((false))
                {
                 if((false))
                  continue;
                 return;
                }
               if(true)
                {
                 return;
                }
               else
                {
                }
               for(int _injected_loop_counter = ((0 & 60543) << (((int(6)) | int((injectionSwitch.x))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  return;
                }
              }
             if(false)
              {
              }
             else
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             if(((true && (false))))
              return;
            }
           if((false))
            {
             do
              {
               if((false))
                return;
               if((false))
                return;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 return;
                }
               if((false))
                {
                 if((false))
                  break;
                 do
                  {
                   do
                    {
                     return;
                    }
                   while(false);
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             while(false);
             if((false))
              {
               do
                {
                 return;
                }
               while(false);
              }
             if((false))
              break;
            }
           if((false))
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   return;
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                  }
                }
              }
             if((false))
              {
               if((false))
                break;
               if((false))
                continue;
               do
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if((false))
              continue;
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                }
               return;
              }
             while(false);
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != (35030 & 0); _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
        }
      }
     if((false))
      return;
     if((false))
      continue;
     do
      {
       if((false))
        return;
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         if((false))
          continue;
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(false);
         if(true)
          {
           if((false))
            break;
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             do
              {
               if(((! (! (false)))))
                {
                 do
                  {
                   return;
                  }
                 while(false);
                }
              }
             while(false);
            }
           if(((((! (! (false)))) || false)))
            break;
          }
         else
          {
          }
        }
       else
        {
         if((((bool(bvec4(bool(bvec3(false, true, true)), true, true, true))))))
          break;
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(false)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               return;
              }
             if((false))
              {
               if((false))
                break;
               if((false))
                continue;
               continue;
               if((false))
                continue;
              }
             if((false))
              return;
            }
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if((false))
        continue;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
     if((false))
      {
       do
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (int((injectionSwitch.x)) ^ 0); _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              continue;
             if((false))
              return;
             break;
            }
           return;
          }
        }
       while(false);
      }
     if((false))
      {
       if(true)
        {
         if((false))
          return;
        }
       else
        {
        }
       return;
      }
     if(((false || (false))))
      break;
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             return;
            }
          }
         return;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          {
           if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              break;
             return;
             if((false))
              break;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if((false))
          continue;
         if((false))
          {
           do
            {
             return;
            }
           while(false);
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((false))
          {
           if((false))
            break;
           if((false))
            continue;
           if((false))
            return;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           return;
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               return;
              }
             else
              {
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     while(false);
    }
  }
 while(false);
 do
  {
   if((false))
    {
     do
      {
       if((false))
        break;
       do
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                }
               while(false);
              }
             continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            break;
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            continue;
          }
         if(((! ((bool(bool(! (false))))))))
          {
           if((false))
            continue;
           if((false))
            return;
           break;
           if((false))
            continue;
          }
         for(int _injected_loop_counter = ((0 ^ 1) ^ 1); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
          {
           if((false))
            break;
           if((false))
            {
             if(((false || (false))))
              break;
             if(false)
              {
              }
             else
              {
               return;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
            }
           if((false))
            return;
          }
        }
       while(false);
      }
     while(false);
     do
      {
       if((false))
        return;
      }
     while(false);
     do
      {
       if((false))
        break;
       if((false))
        continue;
       if(false)
        {
         if(((bool(bvec4((false || (false)), false, false, ((injectionSwitch.x > injectionSwitch.y)))))))
          break;
        }
       else
        {
         do
          {
           if((false))
            continue;
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if((false))
              return;
             if(true)
              {
               if((false))
                {
                 if((((false) || false)))
                  break;
                 break;
                }
               if((false))
                return;
               if((false))
                return;
               return;
              }
             else
              {
              }
             for(int _injected_loop_counter = (0 >> (((int(8)) - 0))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               if((false))
                break;
               if((false))
                continue;
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((false))
                    break;
                   if((false))
                    return;
                   if((false))
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     continue;
                    }
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    continue;
                   do
                    {
                     if((false))
                      break;
                     if((! (! ((true && (false))))))
                      {
                       if(((bool(bvec2(false, false)))))
                        break;
                      }
                     else
                      {
                       if((false))
                        break;
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if((false))
                          return;
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            continue;
                           return;
                          }
                        }
                       if((false))
                        return;
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    return;
                   if((false))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                  }
                 if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), true)))))
                  {
                   if((false))
                    return;
                   continue;
                   if((false))
                    break;
                  }
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(false);
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         do
          {
           if((false))
            return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        {
         if((false))
          continue;
         continue;
        }
       if((false))
        return;
      }
     if((false))
      {
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if((false))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             continue;
             if((false))
              break;
             if((false))
              return;
            }
           if((false))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             return;
            }
           else
            {
            }
           if((false))
            return;
           if((false))
            continue;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
      }
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((false))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      break;
                     continue;
                    }
                  }
                 if((false))
                  return;
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                {
                 return;
                }
               if((false))
                {
                 if((false))
                  break;
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if((false))
                  break;
                }
              }
             if((false))
              continue;
             if(((! (! (false)))))
              return;
            }
           else
            {
            }
           return;
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(6))); _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  return;
                 continue;
                }
               continue;
               if((false))
                continue;
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  continue;
                 return;
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    return;
                  }
                 if((false))
                  break;
                }
               if((false))
                {
                 for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != ((((true ? 0 : (83519)))) | (((true ? 0 : (83519))))); _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   return;
                   if((false))
                    break;
                   if((false))
                    continue;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if((false))
                  continue;
                 return;
                }
              }
            }
           if((false))
            return;
          }
        }
       if((false))
        break;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        break;
      }
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter != (int((injectionSwitch.y)) | 1); _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        break;
       if((false))
        continue;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((false))
      return;
    }
  }
 while(false);
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_7(vec2(1.0), _GLF_struct_3(bvec4(true), uvec2(1u), true, vec4(1.0), mat3x4(1.0), mat2x3(1.0)), uvec3(1u), uvec4(1u), _GLF_struct_4(uvec4(1u)), _GLF_struct_5(bvec3(true), 1u, uvec2(1u)), _GLF_struct_6(mat4x2(1.0))), _GLF_struct_10(vec3(1.0), true, mat2x4(1.0), _GLF_struct_8(uvec4(1u), ivec3(1), 1u, mat2x4(1.0), ivec4(1)), _GLF_struct_9(vec3(1.0), bvec3(true), mat3x4(1.0))), _GLF_struct_13(_GLF_struct_11(mat2x3(1.0), vec3(1.0)), mat2x3(1.0), _GLF_struct_12(ivec3(1))), gl_NumWorkGroups.x, 1, _GLF_struct_15(bvec4(true), _GLF_struct_14(mat2(1.0), mat2x4(1.0), bvec3(true), vec2(1.0), vec3(1.0)), uvec2(1u), mat2(1.0)), uvec3(1u), mat2x3(1.0));
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       return;
      }
    }
   if((false))
    return;
   if((true && (true)))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      {
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(true)
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(false);
       if((false))
        continue;
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if((false))
          return;
        }
       while(false);
      }
     else
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       if((false))
        return;
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(6))) >> (((int(6)) | 0))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if((false))
    break;
  }
 if(((false || (false))))
  return;
 if(false)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(false)
        {
        }
       else
        {
         if((false))
          continue;
         if((false))
          return;
         do
          {
           return;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if((false))
        break;
      }
     while(false);
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if(((true) || false))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   if((false))
    return;
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      return;
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if(false)
      {
      }
     else
      {
       GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = _GLF_struct_replacement_16.num_workgroup;
      }
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(false)
    {
    }
   else
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       do
        {
         return;
        }
       while(false);
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         return;
         if((false))
          {
           if((false))
            break;
           return;
          }
         if((false))
          return;
        }
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  return;
 do
  {
   if((false))
    continue;
   if((false))
    break;
   do
    {
     if((false))
      continue;
     if(true)
      {
       if((false))
        break;
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if(((true && (false))))
              continue;
             break;
            }
           if(((! (! (((((injectionSwitch.x > injectionSwitch.y))) || false))))))
            break;
           if(true)
            {
             return;
             if((false))
              break;
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if((false))
              break;
             if((false))
              break;
             if((false))
              continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(false);
      }
     else
      {
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   if((false))
    break;
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        continue;
      }
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     if((false))
      break;
    }
   if((false))
    return;
  }
 while(false);
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((((! (! (false)))) || ((injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if((false))
      break;
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           break;
          }
         return;
        }
       if((false))
        return;
       if((false))
        continue;
      }
     else
      {
       if((false))
        continue;
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            return;
           return;
          }
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           if((false))
            {
             if(false)
              {
               if((false))
                break;
               if((false))
                return;
               if((false))
                return;
              }
             else
              {
               do
                {
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    continue;
                   return;
                  }
                 if((false))
                  {
                   if((false))
                    return;
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if((false))
                      return;
                     return;
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if(true)
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < ((0 ^ 0) ^ (0 | (1 & 1))); _injected_loop_counter ++)
                        {
                         if((false))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if((false))
                                break;
                               return;
                              }
                            }
                          }
                         return;
                        }
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        return;
                       if((true && (true)))
                        {
                         do
                          {
                           return;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         while(false);
                        }
                       else
                        {
                        }
                       if((false))
                        continue;
                      }
                     if((false))
                      continue;
                     if((false))
                      continue;
                    }
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    continue;
                   if((false))
                    return;
                   if((false))
                    return;
                   if(((bool(bvec2(false, false)))))
                    break;
                   if((false))
                    break;
                   if((false))
                    return;
                  }
                 if((false))
                  return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if((false))
              return;
            }
          }
         do
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if(true)
                {
                 return;
                 if(((bool(bool(false)))))
                  break;
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
          }
         while(false);
         if((false))
          {
           if((false))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
             if((false))
              return;
            }
           for(int _injected_loop_counter = ((1 << (int(7))) >> (int(7))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if(false)
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    return;
                   if((false))
                    continue;
                   if(true)
                    {
                     if(true)
                      {
                       if((false))
                        {
                         do
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                         while(false);
                         if((false))
                          continue;
                        }
                       if((false))
                        {
                         if((false))
                          return;
                         break;
                        }
                       for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(true)
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     else
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if((false))
                          continue;
                         continue;
                         if((false))
                          continue;
                        }
                       if((false))
                        return;
                       if((true && (false)))
                        {
                         if((false))
                          break;
                        }
                       else
                        {
                         if((false))
                          continue;
                         if((false))
                          {
                           do
                            {
                             if((false))
                              {
                               if((false))
                                continue;
                               return;
                              }
                             return;
                             if((false))
                              {
                               if((false))
                                return;
                               continue;
                              }
                            }
                           while(false);
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       if((false))
                        {
                         if((false))
                          break;
                         break;
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        return;
                       break;
                      }
                     if((false))
                      return;
                     break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if((false))
                      continue;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      {
                       if((false))
                        {
                         if((false))
                          break;
                         continue;
                        }
                       return;
                      }
                     return;
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        continue;
                       continue;
                      }
                     if((false))
                      break;
                     continue;
                    }
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      continue;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(false)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          continue;
                         break;
                        }
                       if((false))
                        break;
                       if((false))
                        return;
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           return;
                          }
                         while(false);
                        }
                       if((false))
                        continue;
                       if((false))
                        {
                         if((false))
                          {
                           if((false))
                            return;
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                            }
                           if((false))
                            {
                             if((false))
                              break;
                             break;
                            }
                          }
                         continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if((false))
                        continue;
                       if((false || (true)))
                        {
                         return;
                        }
                       else
                        {
                        }
                       if((false))
                        {
                         if((false))
                          continue;
                         return;
                        }
                       if((false))
                        break;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        break;
                       continue;
                      }
                     if((false))
                      break;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if((false))
                  return;
                 if((false))
                  continue;
                 if((false))
                  continue;
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               for(int _injected_loop_counter = (max(1, 1)); _injected_loop_counter != (0 >> (int(1))); _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 continue;
                }
               if((false))
                {
                 if((false))
                  continue;
                 break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               if((false))
                continue;
               return;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(false)
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
              }
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if((false))
            return;
           for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(7))) >> (int(7))); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                return;
               continue;
              }
             if((false))
              break;
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(false);
          }
         if(true)
          {
           if((false))
            break;
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             if(((bool(bvec4(false, false, false, false)))))
              {
               if((false))
                continue;
               return;
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               do
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if(((true && ((bool(bool(false)))))))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                     return;
                    }
                   if(((bool((! (! (bool(((injectionSwitch.x > injectionSwitch.y))))))))))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  continue;
                 if((false))
                  {
                   if((false))
                    return;
                   break;
                  }
                }
               while(false);
              }
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             do
              {
               if((false))
                {
                 if((false))
                  continue;
                 return;
                }
              }
             while(false);
             return;
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
         if((((false) || false)))
          {
           if(true)
            {
             if((false))
              continue;
             if(true)
              {
               if((false))
                {
                 if((false))
                  return;
                 break;
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  return;
                }
               else
                {
                }
               if(false)
                {
                }
               else
                {
                 do
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                           break;
                          }
                         if(((! (! (false)))))
                          continue;
                         return;
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(((false || (false))))
                      continue;
                    }
                   else
                    {
                     if((false))
                      continue;
                    }
                  }
                 while(false);
                }
              }
             else
              {
              }
             if((false))
              return;
             if((false))
              continue;
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if((false))
              continue;
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               return;
              }
            }
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           if((false))
            return;
          }
         if((false))
          return;
         if((false))
          continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           for(int _injected_loop_counter = (0 >> ((clamp(int(2), int(2), int(2))))); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
            }
          }
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((((1 << (int(5))) >> (int(5))) << (((int(1)) ^ 0))) >> (int(1))); _injected_loop_counter ++)
            {
             if((false))
              break;
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               return;
              }
            }
          }
         if((false))
          break;
         return;
        }
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(false);
 if(false)
  {
  }
 else
  {
   if(true)
    {
     if((false))
      {
       if((false))
        return;
       if(true)
        {
         return;
         if((false))
          return;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(false)
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
           if((false))
            return;
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              return;
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
             return;
            }
           if((false))
            return;
          }
        }
       while(false);
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
    }
   else
    {
    }
  }
 if((false))
  return;
 if(((bool(bool(false)))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * subgroup_size + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     for(int _injected_loop_counter = (0 >> ((int(ivec3(int(5), 1, 1))))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       if((false))
        continue;
      }
     if((false))
      return;
    }
   else
    {
    }
  }
 do
  {
   if((false))
    {
     do
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
         if((false))
          continue;
        }
       if((false))
        continue;
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           if((false))
            {
             if((false))
              break;
             return;
            }
           return;
          }
         if((false))
          break;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            return;
           if((false))
            return;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              break;
            }
           else
            {
             return;
             if((false))
              continue;
            }
          }
         if((false))
          continue;
         if((false))
          return;
         if((false))
          continue;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       if((false))
        return;
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << ((~ (~ (int(5)))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         if((false))
          {
           for(int _injected_loop_counter = (- 77011 & 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              return;
            }
           return;
          }
         if((false))
          continue;
        }
       if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
        return;
      }
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          break;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
    }
  }
 while(false);
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (false))))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
       if(((true) || false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     return;
    }
   else
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if(false)
  {
  }
 else
  {
   do
    {
     if((false))
      {
       if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if((false))
        break;
       if((false))
        break;
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           return;
          }
         if((false))
          break;
        }
       if((false))
        continue;
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (((0 >> (int(7)))) / 1); _injected_loop_counter --)
        {
         if(true)
          {
           if((false))
            return;
          }
         else
          {
          }
        }
       return;
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * subgroup_size + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % subgroup_size);
 if((false))
  return;
 if((false))
  return;
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false))
    return;
  }
 if(false)
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = next_virtual_gid;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((false) && true))
  {
  }
 else
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false || (false)))
        {
        }
       else
        {
         return;
        }
      }
     continue;
    }
   if((false))
    {
     if((false))
      break;
     break;
    }
   if((false))
    return;
  }
 while(false);
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(true)
    {
     if((false))
      return;
     if((false))
      return;
    }
   else
    {
    }
  }
 if((false))
  {
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     if(false)
      {
       if((false))
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             do
              {
               if((false))
                return;
              }
             while(false);
             return;
            }
           if((false))
            return;
          }
         if((false))
          return;
         return;
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
      }
    }
   if((false))
    return;
  }
 if(false)
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       return;
      }
     else
      {
      }
    }
   if((false))
    return;
  }
 else
  {
   if(true)
    {
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
     if((false))
      return;
    }
   else
    {
    }
   if((false))
    return;
   if((((false) || false)))
    return;
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
        }
       else
        {
        }
      }
     if((false))
      return;
     if((false))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
     if(((bool(bvec2(((((injectionSwitch.x > injectionSwitch.y))) || false), true)))))
      return;
    }
   if(false)
    {
    }
   else
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            continue;
           do
            {
             if(true)
              {
               if((false))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        continue;
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                         if((false))
                          {
                           if((false))
                            break;
                           if((false))
                            continue;
                           continue;
                           if((false))
                            return;
                          }
                        }
                      }
                     return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   while(false);
                  }
                 while(false);
                }
              }
             else
              {
              }
             if((false))
              return;
             if((false))
              {
               if((false))
                continue;
               continue;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           if((false))
            break;
           continue;
          }
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << ((0 | (int(2))))) >> (int(2))); _injected_loop_counter ++)
            {
             return;
            }
          }
         return;
        }
       if((false))
        return;
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    {
     do
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          break;
         break;
        }
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     while(false);
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(false);
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(0))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(((! (! (false)))))
  {
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     do
      {
       return;
      }
     while(false);
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((false))
  return;
 if(true)
  {
   for(int _injected_loop_counter = (int((injectionSwitch.x)) & - 51989); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      return;
     buf[virtual_gid] = 1;
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              continue;
             continue;
            }
           continue;
          }
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             return;
            }
           if((false))
            continue;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         continue;
         if((false))
          {
           if((false))
            continue;
           if((false))
            {
             if((false))
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             return;
            }
           continue;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if((false))
      continue;
     return;
     if((false))
      return;
     if((false))
      break;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        return;
      }
     return;
    }
   do
    {
     if((false))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         do
          {
           if((false))
            return;
           if(false)
            {
            }
           else
            {
             return;
            }
           if((false))
            {
             if(true)
              {
               return;
              }
             else
              {
              }
            }
           if((false))
            {
             if((false))
              return;
             return;
            }
          }
         while(false);
         if((false))
          return;
         if((false))
          break;
        }
       else
        {
        }
       if(((! (! (false)))))
        break;
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         if((false))
          continue;
         if(true)
          {
           return;
          }
         else
          {
          }
        }
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        break;
       continue;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
    }
   while(false);
   if((false))
    return;
   do
    {
     return;
    }
   while(false);
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(true)
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       if(true)
        {
         return;
         if((false))
          break;
         if((false))
          break;
         if((false))
          continue;
        }
       else
        {
         if((false))
          break;
        }
      }
    }
   while(false);
   do
    {
     if(true)
      {
       if((false))
        return;
       if((false))
        return;
      }
     else
      {
      }
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(false);
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
    {
     if((false))
      return;
    }
   if((false))
    return;
   if(true)
    {
     if((false))
      {
       do
        {
         if((false))
          {
           if((false))
            continue;
           return;
          }
        }
       while(false);
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
   if((false))
    {
     if(((true && (false))))
      return;
     if((false))
      return;
     return;
    }
   if(true)
    {
     if((false))
      return;
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = ((0) | (0)); _injected_loop_counter != ((1 << ((int(ivec3(int(5), 0, int((injectionSwitch.y))))))) >> ((0 ^ (int(5))))); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if((false))
          {
           if((false))
            break;
           continue;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            break;
           if((false))
            continue;
          }
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
     if(((! (! ((true && (false)))))))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if(true)
    {
     do
      {
       if((false))
        return;
      }
     while(false);
     if((false))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
    }
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(false);
   if((false))
    return;
   return;
  }
 if(((! (! (false)))))
  return;
 for(int _injected_loop_counter = ((1 << (((((true ? int(3) : (- 34035)))) / 1))) >> (((int(3)) | (int(3))))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if(true)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((bool(bool(true))))
          {
           if((false))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(((! (! ((! (! (false))))))))
              {
               if((false))
                return;
               return;
              }
             if((false))
              continue;
             if((false))
              {
               if((false))
                return;
               break;
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                break;
               if((false))
                return;
               return;
              }
             if((false))
              break;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             if((false))
              {
               if((false))
                {
                 if((false))
                  return;
                 if((false))
                  break;
                 return;
                }
               if(true)
                {
                 if(((bool(bvec2(false, false)))))
                  return;
                }
               else
                {
                }
               return;
              }
             if(((! (! (false)))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              {
               if(true)
                {
                 if((false))
                  return;
                }
               else
                {
                }
               return;
              }
             if((false))
              {
               if((false))
                break;
               return;
              }
             do
              {
               if((false))
                break;
               return;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if(false)
              {
               if((false))
                break;
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  break;
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              {
               do
                {
                 if((false))
                  return;
                }
               while(false);
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((false))
            {
             if((false))
              break;
             if((false))
              {
               for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if(((false || (false))))
                  {
                   if((false))
                    {
                     if((false))
                      break;
                     return;
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                      {
                       return;
                      }
                     if((false))
                      break;
                    }
                   if((false))
                    return;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if(((bool(bool(false)))))
                break;
              }
             if((false))
              return;
             if(true)
              {
               return;
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            return;
           do
            {
             if((false))
              {
               if((false))
                return;
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
            }
           while(false);
          }
         else
          {
           if(((((bool(bool(false)))) && true)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                }
              }
             return;
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((false))
      {
       do
        {
         do
          {
           return;
           if((false))
            break;
          }
         while(false);
         if((false))
          continue;
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(false)
      {
       if((false))
        continue;
       if((false))
        continue;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((false || (false))))
          break;
         if(false)
          {
          }
         else
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            break;
           if((false))
            {
             if((false))
              continue;
             break;
             if((false))
              break;
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> ((max(int(1), ((int(1)) | 0))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                return;
               if((false))
                continue;
               if((false))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                continue;
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           if((false))
            continue;
          }
         while(false);
        }
       if((false))
        return;
       if(((! (! (false)))))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < subgroup_size)
            {
             if((false))
              break;
             if((false))
              return;
             if((false))
              return;
             if((false))
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if((false))
                {
                 if((false))
                  break;
                 if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                  continue;
                 return;
                }
               return;
              }
             if((false))
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             if((false))
              return;
             _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(uvec3(1u), uvec2(1u), _GLF_struct_21(bvec3(true), _GLF_struct_17(bvec4(true), uvec4(1u), mat4x3(1.0), mat3x2(1.0), ivec2(1), mat2x3(1.0), ivec3(1)), ivec3(1), _GLF_struct_18(uvec3(1u), uvec3(1u), mat2(1.0), 1.0, mat4(1.0), ivec3(1), vec2(1.0)), _GLF_struct_19(mat2(1.0), mat3x2(1.0), bvec2(true)), _GLF_struct_20(0, uvec3(1u)), vec2(1.0)));
             do
              {
               for(int _injected_loop_counter = (0 << (int(6))); _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    {
                     if(true)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((false))
                            continue;
                           do
                            {
                             if((false))
                              {
                               if(true)
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                            }
                           while(false);
                           if((false))
                            continue;
                           break;
                          }
                        }
                       else
                        {
                         if((false))
                          continue;
                         if(false)
                          {
                          }
                         else
                          {
                           do
                            {
                             do
                              {
                               if((false))
                                return;
                               return;
                              }
                             while(false);
                            }
                           while(false);
                          }
                         if((false))
                          continue;
                         if((false))
                          continue;
                        }
                       if(true)
                        {
                         if((false))
                          return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      break;
                     if((false))
                      break;
                    }
                   continue;
                  }
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     break;
                    }
                   return;
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        return;
                       continue;
                      }
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       break;
                      }
                     return;
                     if((false))
                      continue;
                     if((false))
                      {
                       if((false))
                        continue;
                       return;
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    {
                     if((false))
                      return;
                     if((false))
                      return;
                     return;
                    }
                   if((false))
                    continue;
                   return;
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if((false))
                      continue;
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        return;
                      }
                     break;
                    }
                   if((false))
                    {
                     if((false))
                      return;
                     if((false))
                      break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     continue;
                    }
                  }
                 if((false))
                  break;
                 do
                  {
                   do
                    {
                     buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x] = 2;
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           do
                            {
                             if((false))
                              continue;
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if((false))
                                continue;
                               return;
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         else
                          {
                          }
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            break;
                           continue;
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          return;
                        }
                       if((false))
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         break;
                        }
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          return;
                         continue;
                        }
                       break;
                       if((false))
                        return;
                      }
                     if((false))
                      {
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          return;
                         break;
                        }
                       if((false))
                        break;
                       if((false))
                        {
                         if((false))
                          continue;
                         if((false))
                          continue;
                         break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       if((false))
                        return;
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          continue;
                         continue;
                        }
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           return;
                          }
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((false))
                                return;
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               return;
                               if((false))
                                return;
                              }
                            }
                           break;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         break;
                         if((false))
                          break;
                         if((false))
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                             continue;
                            }
                           if((false))
                            return;
                           if((false))
                            {
                             if((false))
                              continue;
                             continue;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if((false))
                            continue;
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         if((false))
                          return;
                        }
                       if((false))
                        continue;
                       if((false))
                        {
                         if((false))
                          return;
                         continue;
                        }
                       return;
                       if((false))
                        return;
                       if((false))
                        return;
                      }
                     if((false))
                      {
                       if((false))
                        return;
                       if((false))
                        {
                         if((false))
                          continue;
                         break;
                        }
                       do
                        {
                         if((false))
                          {
                           if((false))
                            break;
                           if((false))
                            {
                             if(((! (! (false)))))
                              {
                               if((false))
                                continue;
                               continue;
                              }
                             break;
                            }
                           for(int _injected_loop_counter = ((1 << ((~ ((int(int(~ (int(7))))))))) >> (((false ? (75976) : int(7))))); _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             return;
                            }
                           if((false))
                            break;
                           if((false))
                            continue;
                          }
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if((false))
                            return;
                           break;
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         if((false))
                          return;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            continue;
                           continue;
                          }
                         if((false))
                          break;
                        }
                       while((! (! (((injectionSwitch.x > injectionSwitch.y))))));
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(false)
                        {
                        }
                       else
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                       if((false))
                        break;
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 while(false);
                 if((false))
                  return;
                 if(true)
                  {
                   if((false))
                    {
                     if(true)
                      {
                       do
                        {
                         if((false))
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               return;
                              }
                            }
                           return;
                          }
                        }
                       while(false);
                       return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               if(true)
                {
                 if(true)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     return;
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             if((false))
              {
               if((false))
                {
                 if((false))
                  return;
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 if((false))
                  break;
                 for(int _injected_loop_counter = ((0 ^ 1) ^ 0); _injected_loop_counter != ((false ? (- 20725) : int((injectionSwitch.x)))); _injected_loop_counter --)
                  {
                   if((false))
                    continue;
                   if((false))
                    return;
                   if((false))
                    break;
                  }
                 return;
                }
               return;
              }
             if((false))
              break;
             for(int _injected_loop_counter = 0; _injected_loop_counter < (~ ((1 * (~ (((1 << (int(5))) >> (int(5)))))))); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
             if(true)
              {
               if(true)
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        break;
                       if((false))
                        continue;
                       return;
                      }
                     if((false))
                      break;
                     if((false))
                      continue;
                    }
                   while(false);
                   if((false))
                    return;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((((false) || false)))
                    break;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x] = 2;
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     break;
                    }
                   if((false))
                    break;
                   if((false))
                    break;
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((false))
                  {
                   for(int _injected_loop_counter = (((0) - 0) ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     return;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       return;
                      }
                    }
                   if((false))
                    continue;
                  }
                }
               else
                {
                 if((false))
                  return;
                }
              }
             else
              {
              }
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if(true)
              {
               if((false))
                continue;
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & ivec3(75999, 63972, 96973).p); _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false))
                    return;
                   return;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                {
                 if((false))
                  break;
                 continue;
                }
               if((false))
                return;
               if((false))
                {
                 if((false))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(false)
                  {
                   if((false))
                    break;
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
               if((false))
                return;
              }
            }
          }
         else
          {
           if(true)
            {
             if((false))
              return;
            }
           else
            {
            }
          }
        }
      }
     if((false))
      return;
     if((false))
      return;
     if(true)
      {
       if((false))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            return;
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
             if((false))
              {
               if((false))
                continue;
               if((false))
                continue;
               return;
              }
            }
          }
        }
      }
     else
      {
      }
     if(true)
      {
       if((false))
        continue;
       if((false))
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            return;
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            break;
          }
         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((true && (true)))
              {
               return;
              }
             else
              {
              }
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     else
      {
      }
     if((false))
      return;
     if((false))
      break;
     if((false))
      {
       if(((! (! (false)))))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         return;
        }
       else
        {
         if((false))
          return;
        }
      }
    }
   else
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        break;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     do
      {
       if((false))
        return;
       if(false)
        {
         if((false))
          continue;
        }
       else
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             if((false))
              return;
             break;
             if((false))
              continue;
            }
           return;
          }
        }
      }
     while(false);
     if((false))
      break;
    }
  }
 for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (((true ? int(7) : (- 8948))))) >> (int(7))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if(((false || (false))))
        break;
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              continue;
             do
              {
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while((((injectionSwitch.x < injectionSwitch.y)) && (false)));
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((false))
            break;
           if((false))
            break;
          }
        }
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if((false))
        break;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
  }
 else
  {
   if(((true && (false))))
    return;
   for(int _injected_loop_counter = (0 | 1); _injected_loop_counter > (0 << (int(3))); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
  }
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
    {
     if((false))
      {
       if(true)
        {
         do
          {
           return;
          }
         while(false);
        }
       else
        {
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           if((false))
            continue;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if(((bool((bvec3(bvec4(bvec3(false, false, true), true)))))))
              break;
             return;
            }
           if((false))
            break;
          }
         while(false);
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((true) || false))
            {
             if((false))
              return;
            }
           else
            {
            }
           if((false))
            continue;
           return;
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(false);
         return;
         if((false))
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               return;
              }
            }
           return;
          }
         if((false))
          break;
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        return;
      }
    }
   while(false);
   do
    {
     if((false))
      continue;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
   while(false);
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
    }
   else
    {
     return;
    }
  }
}
