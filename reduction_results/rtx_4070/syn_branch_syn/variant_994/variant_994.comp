#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid;
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 for(int _injected_loop_counter = 1; (! (! (_injected_loop_counter > (clamp(0, 0, ((false ? (79675) : 0))))))); _injected_loop_counter --)
  {
   if(true)
    {
     ((GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy = GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) << uvec2((((min(((0u) - (~ (~ (0u)))), 0u))) * 1u), 0u));
    }
   else
    {
    }
   if((((bool(((bool(bvec3(bool(bool(bool((false)))), false, false)))))) && true)))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.y = subgroup_local_id;
 if(((! ((! ((! ((((bool(bool(! (! (! (false)))))) && true)))))))) || (((((injectionSwitch.x < injectionSwitch.y)) && (((false) && true)))))))
  return;
 if((false))
  return;
 uint num_workgroup = (0u ^ (((gl_NumWorkGroups.x) / 1u)));
 uint workgroup_size = (~ ((uint((min(uint(~ (((gl_WorkGroupSize.x) * 1u))), uint(~ (((((min((0u + ((gl_WorkGroupSize.x))), (0u + ((gl_WorkGroupSize.x))))) * 1u))) << 0u))))))));
 if((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) && ((! ((true && (! (true && ((bool(bool((bool(bool(true)))))))))))))))
  {
   do
    {
     return;
    }
   while(false);
  }
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint workgroup_base = ((((((((workgroup_size)) - 0u)) - 0u) - 0u)) / (uint(uvec3(1u, 1u, 0u)))) * ((((true ? ((workgroup_id) * 1u) : (subgroup_size))) + (0u & (7650u % 189617u))));
 uint virtual_gid = (((uint(uint(workgroup_base + subgroup_id * (1u * (subgroup_size)))))) >> 0u) + (((((! (! ((bool(bvec2(true, ((((false || (false)) || ((! (! (injectionSwitch.x < ((false ? (809.743) : injectionSwitch.y))))))))))))))) ? (min((clamp(((true ? GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid : ((uvec3(193352u, 37225u, 120385u) % workgroup_id)))), GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid, (clamp(GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid, GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid, GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid)))), ((false ? (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid) : GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid)))) : (uvec3(185848u, 31519u, 48577u))))) | uvec3(0u, (0u + ((clamp(((0u) ^ 0u), 0u, 0u)))), 0u)).xy.y;
 uint next_virtual_gid = workgroup_base + ((subgroup_id * subgroup_size) / 1u) + ((((((clamp((GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.y), (((GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.y)) * 1u), (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.y))) | (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.y)) + 1)) + (0u ^ (0u))) % subgroup_size);
 if(((! ((bool(bool((true && (! ((! (! ((! ((bool(bool((! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))
  return;
 if(false)
  {
  }
 else
  {
   GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.z = next_virtual_gid;
  }
 do
  {
   GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.x = GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.z;
  }
 while(false);
 if((false))
  return;
 if(((true && (false))))
  return;
 for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 buf[virtual_gid] = (0 | (1));
 if((((clamp(((((injectionSwitch.x < injectionSwitch.y)) ? (~ (~ (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy))) : (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) * ((uvec2(1u, 1u) << (uvec2(1u))) >> (((uvec2(1u)) | ((uvec2(0u, 0u) | (uvec2(1u))))))), (~ ((max(~ (((((injectionSwitch.x < injectionSwitch.y)) ? (~ (~ (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy))) : (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) * ((uvec2(1u, 1u) << (uvec2(1u))) >> (((uvec2(1u)) | ((uvec2(0u, 0u) | (uvec2(1u)))))))), ~ (((((injectionSwitch.x < injectionSwitch.y)) ? (~ (~ (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy))) : (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) * ((uvec2(1u, 1u) << (uvec2(1u))) >> (((uvec2(1u)) | ((uvec2(0u, 0u) | (uvec2(1u)))))))))))), ((((injectionSwitch.x < injectionSwitch.y)) ? (~ (~ (GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy))) : (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) * ((uvec2(1u, 1u) << (uvec2(1u))) >> (((uvec2(1u)) | ((uvec2(0u, 0u) | (uvec2(1u))))))))))).y + (max(1, 1)) < subgroup_size)
  {
   do
    {
     if((false))
      {
       do
        {
         if(((false) && true))
          {
          }
         else
          {
           return;
          }
        }
       while((((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))) && true));
       if((false))
        break;
      }
    }
   while(false);
   if(((true && (false))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > (max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if((! (((! (! ((! (! ((((! (! (! ((false)))))) && ((injectionSwitch.x < injectionSwitch.y))) || ((((false || (((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))) && ((injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
    }
   else
    {
     if(true)
      {
       if((true && ((! (! ((false)))))))
        return;
      }
     else
      {
      }
     if((false))
      return;
    }
   int i = 0;
   if((((false || (false || ((bool(bvec4((true && (((injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = (((0 & - 26917)) / 1); ((_injected_loop_counter != 1) && true); (((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? (bitfieldExtract(i, - 32412, - 61950)) : _injected_loop_counter ++)))
        {
         return;
        }
       if((false))
        return;
      }
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((bool(bvec4(bool((bvec2(bvec4(bvec2((bool(bvec4((((((injectionSwitch.x > injectionSwitch.y) || false)))), true, false, false))), true), true, true)))), true, false, true)))))
            continue;
           if((false))
            break;
           return;
          }
         if((false))
          continue;
        }
       if((((float(mat2x4(((false ? (61.29) : ((true ? injectionSwitch : (injectionSwitch))).x)), tan(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), sqrt(0.0), 0.0, (injectionSwitch.y), 0.0))) < injectionSwitch.y)))
        {
         if((((false) || false)))
          return;
         if((bool(bvec3(false, true, false))))
          {
          }
         else
          {
           return;
           if(((! (! (bool(bool((! (! ((false)))))))))))
            break;
           if((false))
            {
             if((false))
              return;
             break;
            }
          }
        }
       else
        {
         do
          {
           if((false))
            return;
           if(true)
            {
             if((false))
              {
               for(int _injected_loop_counter = (min((((max((1 ^ 0), (1 ^ 0)))) / 1), ((true ? (1 ^ (~ (~ ((min(0, 0)))))) : (i))))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         while((! ((bool(bvec4(! (false), false, false, false))))));
        }
       if((true && ((((true && (true)) && (true && ((((bool((bvec2(bvec2(bvec2((false) && true, false)))))))))))))))
        continue;
       if((true && ((false || ((false))))))
        return;
      }
     ((buf[GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.x] = 2) << (max(0u, 0u)));
     if(((((bool(bvec4((! (! (false))), (bool(bvec3(true, false, false))), false, false)))) || false)))
      break;
     if((false))
      continue;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ (((min((max(1, 1)), ((false ? (i) : 1))))) | (1))); _injected_loop_counter != (((true ? ((int(((int(1)) | (int(ivec3((int(1)), 0, int((injectionSwitch.y)))))))) ^ (((min(1, 1))) | 0)) : (i))) >> (((((true ? ((int(7)) | (int(7))) : (i))) - 0)))); _injected_loop_counter --)
      {
       if(((((true ? injectionSwitch.x : (417.056))) < injectionSwitch.y)))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(((((false || ((((injectionSwitch) + vec2(0.0, 0.0)).x > ((injectionSwitch) + abs(vec2((float((0.0 + (((float((clamp(((true ? 0.0 : (370.383))), 0.0, 0.0)))) - 0.0))))), 0.0))).y))))) || false))
    {
    }
   else
    {
     if(((((((((((max(vec2(mat4(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, (dot(vec4(1.0, (mix(float((- 1.9)), float(0.0), bool(true))), 0.0, 0.0), vec4(((((1.0) - 0.0)) * 1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), vec2(mat4(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))))) + vec2(0.0, 0.0)))).x) - sqrt(0.0)) > (min(injectionSwitch.y, (mix(float(injectionSwitch.y), float((min((9.5), (9.5)))), bool(false)))))))))
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; ((_injected_loop_counter ++) | 0))
          {
           if((! (! (false))))
            {
            }
           else
            {
             return;
            }
           if((false))
            break;
          }
         if((false || ((bool(bvec4((false), ((injectionSwitch.x > (clamp((float(float(injectionSwitch.y))), injectionSwitch.y, injectionSwitch.y)))), (! (! (true))), false))))))
          return;
        }
       do
        {
         if((false))
          continue;
         if((false))
          {
           if(true)
            {
             return;
            }
           else
            {
             if((((injectionSwitch.x > ((injectionSwitch.y) / exp(0.0))))))
              continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            break;
          }
         if((false))
          {
           if((((injectionSwitch.x > (vec2(((vec3(injectionSwitch, (float(vec3(1.0, 0.0, ((false ? (- 844.233) : 1.0))))))) / vec3(1.0, 1.0, 1.0)))).y))))
            return;
           continue;
          }
        }
       while(((false) && true));
       return;
       if((false || (true)))
        {
         if((false))
          {
           do
            {
             if((false))
              continue;
             return;
            }
           while(((false) || false));
          }
        }
       else
        {
        }
      }
     if((false))
      return;
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > ((true ? injectionSwitch.y : (- 502.888)))))))
      {
       if(false)
        {
        }
       else
        {
         do
          {
           return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
     if((((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || ((bool(bvec4(bool((bvec2(bvec4((bvec2(bvec4(bvec2(false, true), false, ((injectionSwitch.x < injectionSwitch.y))))), true, true)))), true, true, true))))))
      return;
    }
   if((((injectionSwitch.x > ((clamp(1.0, 1.0, 1.0)) * (injectionSwitch.y))))))
    return;
  }
 else
  {
   if((false))
    {
     if((((false) && true)))
      return;
     if((! (! (true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = (0 << (int(6))); _injected_loop_counter < (clamp(int(((float(mat4x3(injectionSwitch.y, 0.0, abs(0.0), 0.0, (injectionSwitch.x), 0.0, 0.0, 1.0, (injectionSwitch.x), abs(1.0), 0.0, 0.0))))), int(((float(mat4x3(injectionSwitch.y, 0.0, abs(0.0), 0.0, (injectionSwitch.x), 0.0, 0.0, 1.0, (injectionSwitch.x), abs(1.0), 0.0, 0.0))))), int(((float(mat4x3(injectionSwitch.y, 0.0, abs(0.0), 0.0, (injectionSwitch.x), 0.0, 0.0, 1.0, (injectionSwitch.x), abs(1.0), 0.0, 0.0))))))); _injected_loop_counter ++)
        {
         if((false))
          return;
         return;
        }
      }
     else
      {
      }
    }
   if(true)
    {
     if(true)
      {
       if(((true && (((false) || false)))))
        {
         if((((bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))))))
          {
           if(((! (! (false)))))
            return;
          }
         else
          {
          }
         if((false || ((false))))
          {
           if((((false) || false)))
            return;
           return;
          }
         do
          {
           for(int _injected_loop_counter = (clamp(int((injectionSwitch.x)), int((((injectionSwitch.x)) + 0.0)), int((injectionSwitch.x)))); _injected_loop_counter != (min(1, 1)); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         while((! (! ((((bool(bvec3(false || (bool(bvec2(((false) || (bool(bvec2((bool(bvec3(((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y)), false, true))), ((! (! (((! (! ((true && (injectionSwitch.x < (max(injectionSwitch.y, injectionSwitch.y)))))))))))))))), false))), true, false)))))))));
        }
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     buf[GLF_merged2_0_2_58_2_1_16GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnext_virtual_gid.xy.x] = 2;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((((((((((injectionSwitch.x < injectionSwitch.y)) ? ((true ? injectionSwitch.x : (0.2))) : (47.16)))) / 1.0) > injectionSwitch.y))) || false)))
        continue;
       continue;
      }
    }
   if(true)
    {
     if(((injectionSwitch.x < (mix(vec2((21.47), (- 976.672)), vec2((injectionSwitch)[0], (((vec2(mat2x3((((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0))[1]), bvec2(true, true))).y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
}
