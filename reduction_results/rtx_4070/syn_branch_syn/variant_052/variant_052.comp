#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((! (! ((((false)) || false)))) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = (((((clamp((1u), (1u), ((false ? (subgroup_size) : (1u))))) | 0u)) >> 0u) * (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = ((((~ (~ ((workgroup_size)))) * (0u + (1u)))) | 0u) * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((! (! ((! (! ((false))))))))
  barrier();
 if((true && ((((((((! (! (bool(bvec2(true && ((true && ((false)))), false)))))) && true)) && true))))))
  barrier();
 if((bool(bvec4((((((injectionSwitch.x > ((float(mat4x3(float((mat2(mat3x2(((false ? (mat2(4.1, 882.015, - 10.74, - 35.40)) : (mat2(1.0) * (mat2((min(injectionSwitch.y, injectionSwitch.y)), sqrt(0.0), 1.0, 0.0))))))))), determinant(mat3(0.0, sin(0.0), abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), (injectionSwitch.x), 0.0, 1.0))))) || false)))), true, false, true))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = ((true ? ((workgroup_base + (clamp(((subgroup_id) | (subgroup_id)) * (0u + (((1u * (0u)) ^ ((((min((max(subgroup_size, subgroup_size)), subgroup_size))) - 0u))))), subgroup_id * (min(subgroup_size, subgroup_size)), (max((((uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))) << 0u)), ((0u ^ (~ (~ ((uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))))))))))))) / 1u) : ((uint(uvec2(bitfieldReverse(132739u), ((1u << (uint(((0u + (((((clamp(4u, 4u, 4u))) | (4u))) - 0u)))))) >> (uint(4u))))))))) + ((((max(((uint(uvec2((((((((((min(injectionSwitch.x, (float(mat4x3(((true ? injectionSwitch.x : (0.2))), 1.0, 0.0, 0.0, 1.0, 1.0, (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y))))) ? ((1u * (((false ? (num_workgroup) : (0u ^ (atomicMax(subgroup_id, num_workgroup)))))))) : 0u))) << 0u), 0u))) * 1u), uint(uvec2(((0u) << 0u), 0u))))) + ((false ? (max((subgroup_id), (((subgroup_id)) >> 0u))) : (((0u + ((false ? (workgroup_id) : ((max(subgroup_local_id, subgroup_local_id)))))) << 0u))))));
 uint next_virtual_gid = (clamp(((workgroup_base) / 1u), workgroup_base, workgroup_base)) + subgroup_id * ((~ (~ (clamp((0u), (0u), (0u))))) ^ ((~ (((~ (subgroup_size)) - 0u))))) + (((clamp(subgroup_local_id + (max(1, (0 | (1)))), ((subgroup_local_id + (max(1, (0 | (1))))) ^ 0u), (0u | (subgroup_local_id + (max(1, (0 | (1))))))))) % (0u ^ ((clamp(subgroup_size, subgroup_size, subgroup_size)))));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((! (((! ((false || ((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))))) && ((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if((bool(bool((false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 buf[virtual_gid] = 1;
 if(((subgroup_local_id + 1 < subgroup_size) && (((vec2(((false ? (39.83) : injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y))))
  {
   if((bool(bvec4((true && ((true && (((((bool(bvec3((! ((true && (! (bool(bvec3((bool((true && (bool((false)))))), ((injectionSwitch.x > injectionSwitch.y)), false))))))), false, false)))) && (((vec2(mat3x2(injectionSwitch, 1.0, 0.0, (dot(vec4(0.0, 1.0, ((0.0) / abs(1.0)), 0.0), vec4(0.0, 1.0, 0.0, (mix(float((6.2)), float(0.0), bool(true)))))), 1.0))).x < (exp(0.0) * (injectionSwitch.y)))))))))), true, (false || (true)), true))))
    barrier();
   int i = (min(0, (max(0, 0))));
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > (((clamp(injectionSwitch.y, injectionSwitch.y, (mix(float((- 86.68)), float(injectionSwitch.y), bool(true))))) / 1.0))))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
  }
}
