#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 if((false))
  return;
 if(((true && (false))))
  return;
 uvec4 GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size;
 if(true)
  {
   if(false)
    {
    }
   else
    {
     if((false))
      return;
    }
  }
 else
  {
  }
 uvec4 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   do
    {
     return;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 if(true)
  {
   if((((((((injectionSwitch.x > injectionSwitch.y)) ? (- 221.525) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 else
  {
  }
 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 if(((true && ((! (! (false))))) || (false)))
  {
  }
 else
  {
   if((false))
    return;
  }
 uvec4 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size.xy = GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy = (((min(GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size, GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size))) | (GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size)).xy;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = (clamp(subgroup_id, subgroup_id, subgroup_id));
 if((false))
  return;
 if((false))
  return;
 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.w = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(false)
  {
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
  }
 if((false))
  return;
 if((false))
  return;
 if(true)
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((! (! (((((bool((bvec3(bvec3(bvec3(bool(bool(((false || (((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true, true)))))) && true)))))))
    {
    }
   else
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); (true && (_injected_loop_counter > 0)); ((((((_injected_loop_counter --) << 0)) ^ 0)) - (0 & int(true))))
        {
         if((false))
          break;
         for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               return;
              }
             if(((! (! (false)))))
              continue;
            }
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((false) || false)))
              {
               if((false))
                break;
               continue;
              }
             return;
            }
          }
         else
          {
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           break;
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(((true && (true && (false)))))
  {
   if(((bool(bvec4(false, true, true, true)))))
    return;
  }
 else
  {
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
    }
  }
 do
  {
   do
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (((int(2)) | (int(2))))) >> (int(2))); _injected_loop_counter ++)
        {
         if((((bool(bvec3(! (! (false)), false, false))))))
          return;
        }
      }
     else
      {
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 while(false);
 if((false))
  {
   do
    {
     if(false)
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = (84727 & 0); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            break;
           return;
          }
         if((false))
          break;
        }
       while(false);
      }
     if((false))
      continue;
    }
   while(((((injectionSwitch.x > injectionSwitch.y) || ((injectionSwitch.x > injectionSwitch.y))))));
   if((false))
    return;
  }
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.y = num_workgroup;
 do
  {
   if(((((true && ((! (! ((! (! (false))))))))) || false)))
    return;
  }
 while(false);
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = (uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id)).xyz.y;
   if((false))
    return;
  }
 if(true)
  {
   if((false))
    {
     if((false))
      {
       for(int _injected_loop_counter = ((int((injectionSwitch.y)) << ((clamp(int(5), int(5), int(5))))) >> (int(5))); _injected_loop_counter != (0 >> ((max(int(7), ((int(7)) ^ 0))))); _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = 1; ((_injected_loop_counter) ^ 0) != 0; _injected_loop_counter --)
      {
       return;
      }
    }
   if((false))
    {
     do
      {
       if((false))
        continue;
       do
        {
         return;
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            return;
          }
        }
       while((((true && (false || (bool(bvec4(false, true, false, true))))))));
       if((false))
        {
         if((false))
          return;
         do
          {
           return;
          }
         while(false);
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
      }
     while(false);
     do
      {
       if(((((min((max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     while(false);
    }
  }
 else
  {
   do
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(false);
   if((false))
    return;
   if(((true && (! (! ((false)))))))
    return;
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if((false))
  {
   do
    {
     return;
    }
   while(false);
  }
 if(((((bool(bool(bool(((true && (false || (bool(false))))))))) && true))))
  {
  }
 else
  {
   if((false))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.y)); (false || ((! (! (_injected_loop_counter != 0))))); _injected_loop_counter --)
    {
     do
      {
       if((false))
        continue;
       if((! ((! (! ((bool(bvec2(! ((false)), true)))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       if(true)
        {
         GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.y = GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w;
         if((((injectionSwitch.x > ((clamp(float((transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, (mix(float(1.0), float((- 149.981)), bool(false))), length(0.0), 0.0, 0.0, 1.0))))), float((transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, (mix(float(1.0), float((- 149.981)), bool(false))), length(0.0), 0.0, 0.0, 1.0))))), float((transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, (mix(float(1.0), float((- 149.981)), bool(false))), length(0.0), 0.0, 0.0, 1.0))))))))))))
          {
           if((false))
            break;
           break;
          }
         do
          {
           if(true)
            {
             if((false))
              break;
             if(((! (! ((bool(bool(false))))))))
              {
               if((false))
                break;
               do
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > ((false ? (_injected_loop_counter) : 0)); _injected_loop_counter --)
                      {
                       if((false))
                        return;
                      }
                    }
                   if((false))
                    continue;
                   return;
                   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                     if((false))
                      break;
                    }
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           else
            {
            }
          }
         while(false);
        }
       else
        {
         if((false))
          continue;
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
          }
         while(false);
        }
       if(((((bool(bvec4(((((true ? injectionSwitch.x : (- 96.59))) > injectionSwitch.y)), true, false, false)))) || false)))
        {
         if((((false) || false)))
          break;
         continue;
        }
       if(((true && ((bool(bvec3((((injectionSwitch.x < injectionSwitch.y)) && (false)), false, false)))))))
        {
         if((false))
          {
           if(((true) && true))
            {
             return;
            }
           else
            {
            }
          }
         continue;
        }
       if((false))
        return;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   if((false))
    {
     do
      {
       return;
      }
     while(false);
     if((false))
      return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
  {
   GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size.w = workgroup_size;
  }
 do
  {
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   if((false))
    continue;
  }
 while((bool(bvec3(((injectionSwitch.x > ((false ? (injectionSwitch) : ((injectionSwitch) + vec2(0.0, 0.0)))).y)), true, false))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(true)
  {
   if(true)
    {
     if((false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_base = ((GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size.w) / 1u) * workgroup_id;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 << (((int(8)) | (((int(8))) >> 0)))); _injected_loop_counter --)
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      break;
    }
   else
    {
     if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
  }
 for(int _injected_loop_counter = int(((min(injectionSwitch, ((injectionSwitch) - vec2(0.0, 0.0)))).y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
  {
   if((false || ((bool(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))))))))
    {
     if((false))
      continue;
     return;
    }
  }
 if((! (((! ((((injectionSwitch.x > injectionSwitch.y))))) && true))))
  return;
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.w * GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.w * GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z + ((0u ^ ((min((((clamp((((subgroup_local_id) << 0u) + 1) % GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z, (subgroup_local_id + (0 | (1))) % GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z, (((subgroup_local_id + 1) % GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z) << 0u)))) / 1u), (subgroup_local_id + 1) % GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z)))));
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if((false))
    return;
   if((false))
    return;
  }
 while(false);
 if(((injectionSwitch.x > (max((max(injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(true)
      {
       GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size.z = next_virtual_gid;
       do
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(((injectionSwitch.x > (((min(((true ? injectionSwitch.y : (- 9891.2065))), injectionSwitch.y))) * 1.0))));
      }
     else
      {
       if((false))
        {
         do
          {
           return;
          }
         while(false);
         if((false))
          return;
        }
       if((false))
        return;
      }
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    return;
   if(false)
    {
    }
   else
    {
     if(true)
      {
       if((false))
        return;
       GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.x = ((GLF_merged3_0_2_54_2_1_16_3_1_14GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidworkgroup_size.z) | 0u);
       do
        {
         do
          {
           if((false))
            {
             do
              {
               return;
              }
             while(false);
            }
          }
         while(false);
        }
       while((((vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)));
      }
     else
      {
      }
     if((false))
      return;
     if((true && (false)))
      {
       if((false))
        return;
      }
     else
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if((false))
          return;
         if(false)
          {
          }
         else
          {
           return;
          }
         if((false))
          continue;
        }
       while(false);
      }
    }
   if(((bool((bvec2(bvec4(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if(false)
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   for(int _injected_loop_counter = ((~ (~ ((((clamp(0, (~ (~ (0))), 0)))) | (((clamp(0, (~ (~ (0))), 0))))))) >> (((int(5)) - 0))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1) ^ 0); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   if(((((clamp((mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if(((false || (false))))
    return;
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if((false))
  return;
 if((false))
  return;
 do
  {
   if((! (! ((false)))))
    return;
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   do
    {
     if((false))
      {
       if(true)
        {
         if(((false || ((injectionSwitch.x > injectionSwitch.y)))))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             continue;
            }
           return;
           if((false))
            {
             if(false)
              {
              }
             else
              {
               return;
              }
            }
           if((false))
            continue;
          }
         if((false))
          {
           for(int _injected_loop_counter = 1; ((_injected_loop_counter != int((injectionSwitch.x))) && true); _injected_loop_counter --)
            {
             return;
            }
           if((false))
            continue;
          }
        }
       else
        {
        }
      }
     if(((((! ((true && (((! ((clamp((mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, (mix(float((4.2)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)) && true)))))))))
      continue;
    }
   while(((injectionSwitch.x > (max((max((((min(injectionSwitch.y, (((false ? (- 8.3) : float(float(injectionSwitch.y)))))))) / 1.0), injectionSwitch.y)), injectionSwitch.y)))));
   if((false))
    break;
  }
 while(false);
 if(((((((injectionSwitch.x > injectionSwitch.y)) || ((false || (((injectionSwitch.x > ((injectionSwitch.y) / 1.0)) || false)))))))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     return;
    }
  }
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.z = GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.x;
 if((false))
  {
   if(false)
    {
     if((false))
      return;
    }
   else
    {
     if(true)
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        return;
      }
     else
      {
       if((false))
        return;
      }
    }
   if((false))
    return;
  }
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 | 0) << (((int(5)) + 0))); _injected_loop_counter --)
    {
     if((bool(bvec3(true, true, false))))
      {
       do
        {
         return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     else
      {
      }
    }
  }
 do
  {
   if((false))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          continue;
         return;
        }
       do
        {
         if((false))
          return;
         return;
        }
       while(false);
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.x = ((GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup) ^ uvec4(0u, 0u, 0u, 0u)).z;
    }
   for(int _injected_loop_counter = ((1 << ((~ (~ (int(0)))))) >> (int(0))); (bool(bvec2(_injected_loop_counter > 0, false))); _injected_loop_counter --)
    {
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(false);
 do
  {
   if((false))
    return;
  }
 while(false);
 if((false))
  return;
 buf[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z] = 1;
 if((false))
  return;
 do
  {
   if((((((((mix(vec2((mat2(1.0) * (injectionSwitch))[0], (78.73)), vec2((- 2574.1869), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(false);
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false || ((! (! (false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     if((false))
      {
       if((false))
        continue;
       break;
      }
     if((false))
      break;
     if((false))
      {
       for(int _injected_loop_counter = (0 | ((1 ^ 1))); _injected_loop_counter < ((((1 << (int(4))) >> (int(4))) << ((~ (~ ((0 ^ (((int(7)) >> 0)))))))) >> ((((0 | (((~ (~ ((int(7)))))) - 0))) | 0))); _injected_loop_counter ++)
        {
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((false) || false)))
          continue;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if(true)
      {
       do
        {
         if(subgroup_local_id + 1 < GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizesubgroup_id.xyz.z)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               do
                {
                 if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
                  return;
                }
               while(false);
               if((false))
                return;
              }
             if((false))
              {
               if((false))
                {
                 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                 if((((injectionSwitch.x > (mat2((injectionSwitch.y)) * (injectionSwitch)).y))))
                  continue;
                }
               continue;
              }
             continue;
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               for(int _injected_loop_counter = ((((((true ? (int((injectionSwitch.y)) & 1) : ((46116 << - 7804))))) ^ 0) << (int(1))) >> (int(1))); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false))
                    return;
                   return;
                  }
                }
              }
            }
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               return;
              }
            }
           do
            {
             if((false))
              break;
             do
              {
               if((((false) && true)))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    continue;
                   if((false))
                    {
                     if((false))
                      break;
                     break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 else
                  {
                   if((false))
                    continue;
                   if((false))
                    break;
                   return;
                  }
                }
              }
             while((! (! (false))));
            }
           while((((! (! (false)))) && true));
           int i = 0;
           if(true)
            {
             buf[GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.x] = 2;
            }
           else
            {
             if((false))
              {
               if((false))
                break;
               break;
              }
             if((false))
              break;
             if((false))
              {
               if((((false) || false)))
                break;
               if((false))
                return;
               continue;
              }
            }
           if((false))
            break;
          }
         else
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int(((max((((clamp(mix(float((injectionSwitch.x)), float((vec3(338.749, 0.0, 85.10).b)), bool(false)), mix(float((injectionSwitch.x)), float((vec3(338.749, 0.0, 85.10).b)), bool(false)), mix(float((injectionSwitch.x)), float((vec3(338.749, 0.0, 85.10).b)), bool(false))))) + 0.0), mix(float((injectionSwitch.x)), float((vec3(338.749, 0.0, 85.10).b)), bool(false)))))); _injected_loop_counter --)
              {
               do
                {
                 if((false))
                  break;
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      continue;
                     buf[GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.x] = 2;
                     if((false))
                      {
                       do
                        {
                         return;
                         if((false))
                          continue;
                        }
                       while(false);
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     continue;
                    }
                   if((false))
                    break;
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       while(((false) || (! ((true && (! (false)))))));
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          break;
         do
          {
           return;
          }
         while(false);
         if((false))
          {
           if((((false) || false)))
            return;
           if(true)
            {
             if((false))
              break;
             return;
            }
           else
            {
             if((false))
              return;
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
                {
                 if((false))
                  continue;
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if((false))
            return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((false))
        return;
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if((((! (! ((false || ((injectionSwitch.x < injectionSwitch.y))))))) && ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if((false || (false)))
  {
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(8))); _injected_loop_counter --)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   if((! (! ((false)))))
    {
     if((false))
      return;
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
     do
      {
       if((false))
        return;
      }
     while(false);
     if(false)
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((false))
          return;
        }
      }
     if((false))
      return;
     if((false))
      return;
     for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter > (0 << (int(7))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((false))
          continue;
         return;
        }
      }
    }
  }
 else
  {
  }
}
