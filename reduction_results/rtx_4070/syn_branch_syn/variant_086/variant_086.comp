#version 460

struct _GLF_struct_7 {
 ivec4 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 mat3 _f3;
 ivec4 _f4;
 bvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 vec2 _f1;
 bvec4 _f2;
 ivec2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_5 {
 uint _f0;
 ivec4 _f1;
 bvec4 _f2;
 bvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 bvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 mat3 _f1;
 bvec2 _f2;
 mat3 _f3;
 mat2 _f4;
 ivec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bool _f3;
 vec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 ivec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint subgroup_size;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 _GLF_struct_2 _f1;
 vec4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_8 _f4;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   if(true)
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x4(1.0), _GLF_struct_2(_GLF_struct_0(mat3(1.0), mat3(1.0), mat3x4(1.0), ivec3(1), mat4(1.0)), gl_SubgroupSize, _GLF_struct_1(uvec3(1u), 1u)), vec4(1.0), _GLF_struct_6(_GLF_struct_3(vec4(1.0), mat3(1.0), bvec2(true), mat3(1.0), mat2(1.0), ivec3(1), mat2x4(1.0)), _GLF_struct_4(mat3x4(1.0), mat3x2(1.0), ivec2(1), bvec3(true), vec2(1.0)), _GLF_struct_5(1u, ivec4(1), bvec4(true), bvec2(true), bvec2(true)), true, vec2(1.0), mat3(1.0)), _GLF_struct_8(mat3(1.0), vec2(1.0), bvec4(true), ivec2(1), _GLF_struct_7(ivec4(1), mat4x3(1.0), mat4x2(1.0), mat3(1.0), ivec4(1), bvec2(true), ivec2(1))));
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      {
       for(int _injected_loop_counter = ((1 << ((0 ^ (int(1))))) >> (int(1))); _injected_loop_counter > (0 >> (((int(1)) | ((max(int(1), int(1))))))); _injected_loop_counter --)
        {
         if(false)
          {
          }
         else
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = (int((injectionSwitch.y)) ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (clamp(((true ? 58686 : 73910) & 0), ((((true ? 58686 : 73910) & 0)) / 1), ((true ? 58686 : 73910) & 0))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
            }
          }
         do
          {
           barrier();
          }
         while(false);
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(true)
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if((false))
              barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
      }
     if((false))
      barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(false)
    {
     if(true)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(((! (! (false)))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
          }
         else
          {
           if(false)
            {
            }
           else
            {
             do
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             while(false);
             barrier();
            }
          }
        }
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter > ((0) | (0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if((false))
  {
   if((bool(bvec2(true, true))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
           if((false))
            barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(true)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         for(int _injected_loop_counter = (((1 | 1) << (((int(1)) << 0))) >> (int(1))); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if(false)
            {
             if(((false || (false))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
               if((false))
                barrier();
              }
            }
           else
            {
             if((false))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               while(false);
              }
            }
          }
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           do
            {
             do
              {
               if((false))
                barrier();
               barrier();
               if((false))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(false);
            }
           while(false);
          }
         if(((bool(bool(false)))))
          {
           if(true)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(false)
                {
                }
               else
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 while(false);
                }
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_9._f1.subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_9._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_9._f1.subgroup_size);
 if(true)
  {
   if(false)
    {
     if((false))
      barrier();
    }
   else
    {
     if((true && (((true) && true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           while(false);
           if((false))
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if(((false) && true))
              {
               if((false))
                barrier();
              }
             else
              {
               if((false))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     do
                      {
                       do
                        {
                         if(((true && (false))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != ((0) | 0); _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                             do
                              {
                               if((false))
                                barrier();
                              }
                             while(false);
                            }
                           for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = ((1 << (int(5))) >> (((int(5)) | 0))); _injected_loop_counter > (0 << ((min(int(0), int(0))))); _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               if(false)
                                {
                                }
                               else
                                {
                                 if(true)
                                  {
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     if(true)
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        {
                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                       do
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         if(true)
                                          {
                                           if((false))
                                            {
                                             if((false))
                                              barrier();
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                             barrier();
                                             if((false))
                                              barrier();
                                            }
                                          }
                                         else
                                          {
                                           if((false))
                                            barrier();
                                          }
                                        }
                                       while(false);
                                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                            {
                                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                              {
                                               do
                                                {
                                                 if((false))
                                                  barrier();
                                                 do
                                                  {
                                                   for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                                    {
                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                      barrier();
                                                    }
                                                   if((false))
                                                    barrier();
                                                   if(false)
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if((false))
                                                      {
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                       if(false)
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if((false))
                                                          {
                                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                              barrier();
                                                             for(int _injected_loop_counter = (0 | int((injectionSwitch.x))); _injected_loop_counter != (((1 << (int(3))) >> (int(3))) & 1); _injected_loop_counter ++)
                                                              {
                                                               if(false)
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 if((false))
                                                                  barrier();
                                                                }
                                                               barrier();
                                                              }
                                                            }
                                                          }
                                                         barrier();
                                                        }
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                      }
                                                    }
                                                  }
                                                 while(false);
                                                 if((false))
                                                  {
                                                   if((false))
                                                    barrier();
                                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                      barrier();
                                                    }
                                                   barrier();
                                                   if((false))
                                                    barrier();
                                                  }
                                                 do
                                                  {
                                                   if((false))
                                                    {
                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                      barrier();
                                                     barrier();
                                                    }
                                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if((false))
                                                      barrier();
                                                     if(false)
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if((false))
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          barrier();
                                                         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                                          {
                                                           do
                                                            {
                                                             if(true)
                                                              {
                                                               if((false))
                                                                {
                                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                                  {
                                                                   if((false))
                                                                    barrier();
                                                                   barrier();
                                                                  }
                                                                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                                                  {
                                                                   do
                                                                    {
                                                                     if((false))
                                                                      barrier();
                                                                    }
                                                                   while(false);
                                                                   if((false))
                                                                    barrier();
                                                                   if((false))
                                                                    barrier();
                                                                   if((false))
                                                                    barrier();
                                                                   barrier();
                                                                  }
                                                                 if((false))
                                                                  barrier();
                                                                }
                                                              }
                                                             else
                                                              {
                                                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                                {
                                                                 if((false))
                                                                  barrier();
                                                                }
                                                              }
                                                            }
                                                           while(false);
                                                           barrier();
                                                          }
                                                        }
                                                       if((false))
                                                        barrier();
                                                      }
                                                     if((false))
                                                      {
                                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                                          {
                                                           if((false))
                                                            barrier();
                                                           do
                                                            {
                                                             do
                                                              {
                                                               if(false)
                                                                {
                                                                 if((false))
                                                                  barrier();
                                                                }
                                                               else
                                                                {
                                                                 if((! (! (((false) || false)))))
                                                                  {
                                                                  }
                                                                 else
                                                                  {
                                                                   if(false)
                                                                    {
                                                                     do
                                                                      {
                                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                                        barrier();
                                                                      }
                                                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                                                    }
                                                                   else
                                                                    {
                                                                     barrier();
                                                                    }
                                                                  }
                                                                }
                                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                                {
                                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                                  barrier();
                                                                 barrier();
                                                                }
                                                              }
                                                             while(false);
                                                            }
                                                           while(false);
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       if((false))
                                                        barrier();
                                                       if((false))
                                                        {
                                                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                                          {
                                                           if((false))
                                                            {
                                                             if((((false) && true)))
                                                              barrier();
                                                             barrier();
                                                            }
                                                           barrier();
                                                           if((false))
                                                            barrier();
                                                          }
                                                         if((false))
                                                          barrier();
                                                        }
                                                      }
                                                     if((false))
                                                      barrier();
                                                     if((false))
                                                      barrier();
                                                     if((false))
                                                      {
                                                       for(int _injected_loop_counter = ((int(false) & 0) & 78588); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                        {
                                                         barrier();
                                                        }
                                                      }
                                                     do
                                                      {
                                                       barrier();
                                                      }
                                                     while(false);
                                                     if(false)
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                                        {
                                                         if(true)
                                                          {
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            {
                                                             if((((injectionSwitch.x < injectionSwitch.y)) && (false)))
                                                              {
                                                               if((false))
                                                                barrier();
                                                              }
                                                             else
                                                              {
                                                               if(true)
                                                                {
                                                                 if(true)
                                                                  {
                                                                   if((false))
                                                                    {
                                                                     if((false))
                                                                      barrier();
                                                                     barrier();
                                                                    }
                                                                   barrier();
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                             if(((true && (false))))
                                                              barrier();
                                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                                              barrier();
                                                            }
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       else
                                                        {
                                                         if((false))
                                                          barrier();
                                                        }
                                                      }
                                                     if((false))
                                                      barrier();
                                                    }
                                                  }
                                                 while(false);
                                                 if((false))
                                                  barrier();
                                                 if((false))
                                                  barrier();
                                                 if((false))
                                                  {
                                                   if((false))
                                                    barrier();
                                                   do
                                                    {
                                                     do
                                                      {
                                                       barrier();
                                                      }
                                                     while(false);
                                                    }
                                                   while(false);
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    {
                                                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        {
                                                         if(true)
                                                          {
                                                           if((false))
                                                            barrier();
                                                           barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       if((false))
                                                        barrier();
                                                       barrier();
                                                      }
                                                    }
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    barrier();
                                                  }
                                                }
                                               while(((false) || false));
                                              }
                                            }
                                           if((false))
                                            barrier();
                                          }
                                         while(false);
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                        {
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                           if((false))
                                            barrier();
                                          }
                                        }
                                      }
                                     if((((bool(bvec4(bool(bvec3(false, true, false)), true, false, false))))))
                                      {
                                       if((false))
                                        {
                                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                          {
                                           if((false))
                                            barrier();
                                           for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                                            {
                                             barrier();
                                             if((false))
                                              barrier();
                                            }
                                          }
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                       barrier();
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         if((false))
                                          barrier();
                                        }
                                       while(false);
                                       barrier();
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                            }
                           do
                            {
                             if((false))
                              {
                               if(true)
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           while(false);
                          }
                        }
                       while((false || (false)));
                      }
                     while(false);
                     if(((((! (! (false)))) || false)))
                      {
                       for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   if(true)
                    {
                     if(false)
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                       if(true)
                        {
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           do
                            {
                             if(((! (! (false)))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                               barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                              }
                            }
                           while(false);
                          }
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                   do
                    {
                     if((false))
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if(true)
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> ((int(ivec3(int(0), 0, 0))))); _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = (0 << ((~ (~ (int(5)))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = (0 << ((1 * (int(7))))); _injected_loop_counter != (1 & int((injectionSwitch.y))); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       if(((bool((bvec3(bvec3(bvec3(false, true, false))))))))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         barrier();
                                        }
                                      }
                                     while(false);
                                     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(8))); _injected_loop_counter --)
                                      {
                                       barrier();
                                      }
                                    }
                                  }
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                }
                              }
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       do
                        {
                         barrier();
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       do
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       while(false);
                       if((false))
                        barrier();
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                     if(false)
                      {
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(((false || (false))))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if((false))
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       else
                        {
                        }
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                        }
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(true)
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             if(true)
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                              }
                             else
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if(((true && ((! (! (false)))))))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           barrier();
                          }
                         else
                          {
                          }
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                    }
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                }
              }
            }
           if((false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   if((false))
    barrier();
  }
 else
  {
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 do
  {
   if(true)
    {
     if((false))
      {
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if((false))
          barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    {
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
              {
               if((false))
                barrier();
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             buf[virtual_gid] = 1;
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
   while((bool(bvec4(false, false, false, true))));
  }
 while(false);
 if(true)
  {
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             do
              {
               barrier();
               if((false))
                barrier();
              }
             while(false);
            }
          }
         else
          {
          }
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   if((bool(bvec4(true, false, false, false))))
    {
     do
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if(true)
            {
             if(subgroup_local_id + 1 < _GLF_struct_replacement_9._f1.subgroup_size)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        {
                         do
                          {
                           if((false))
                            barrier();
                           if(true)
                            {
                             if((((false) || false)))
                              barrier();
                             for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   do
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(false);
                                    }
                                   while(false);
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(false);
                         if((false))
                          barrier();
                         if(true)
                          {
                           if(true)
                            {
                             do
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                             if((false))
                              {
                               do
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  barrier();
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                 if((false))
                                  barrier();
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                            }
                           else
                            {
                            }
                           do
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                               if(false)
                                {
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                 do
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 while(false);
                                 if((false))
                                  barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  barrier();
                                 if(((true) || false))
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               barrier();
                               if((false))
                                {
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               do
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                               while(false);
                              }
                            }
                           while(false);
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if(((true && ((bool(bvec3(false, false, false)))))))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if((false))
                barrier();
               int i = 0;
               if(true)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   if((((true && (true))) || false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = ((1 << (int(4))) >> ((0 ^ (int(4))))); _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               else
                {
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(false)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(true)
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       barrier();
                       if((false))
                        {
                         if((bool(bool(false))))
                          {
                          }
                         else
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                   buf[next_virtual_gid] = 2;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if((false))
                      barrier();
                    }
                   while(((false) || false));
                   barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if(true)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if((false))
                      {
                       if(false)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                             if((false))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(((bool(bvec4(false, false, false, true)))))
                  barrier();
                }
               else
                {
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(true)
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                         for(int _injected_loop_counter = 0; _injected_loop_counter < (1 * (1)); _injected_loop_counter ++)
                          {
                           if(true)
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> ((~ (~ (int(7)))))); _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                           else
                            {
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if((false))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if((false))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           if((false))
                            barrier();
                           if(true)
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if((false))
                                barrier();
                               barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         while(false);
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         do
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                         while(false);
                         for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  {
                   do
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     do
                      {
                       do
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((false))
                      barrier();
                    }
                   while(false);
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                       barrier();
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(((! (! (false)))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 while(false);
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   if((false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if(false)
                      {
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                }
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if((false))
                {
                 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
                  barrier();
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                         if((false))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     while(false);
                    }
                  }
                }
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                 buf[next_virtual_gid] = 2;
                }
               else
                {
                }
               do
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(((bool(bvec3(false, true, false)))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           for(int _injected_loop_counter = ((1 << ((int(ivec4(int(2), 1, 1, 1))))) >> (int(2))); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
            {
             if((false))
              {
               if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
          }
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             do
              {
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
     while(false);
    }
   else
    {
    }
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      barrier();
    }
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
         barrier();
        }
       while(false);
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
      }
     do
      {
       if((false))
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         barrier();
        }
      }
     while(((false) && true));
     if((false))
      {
       for(int _injected_loop_counter = (0 >> (int(1))); _injected_loop_counter != (((max(1, 1)) << (int(3))) >> (int(3))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if((false))
      {
       if((false))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       while(false);
      }
     do
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     while(false);
    }
   else
    {
     if((false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((! (! (true))))
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if((false))
                {
                 do
                  {
                   if((false))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         else
          {
          }
         if(((true && (false))))
          barrier();
        }
       if((false))
        barrier();
      }
     while(false);
     if((((false) && true)))
      {
       if((false))
        barrier();
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((false))
    barrier();
   if(true)
    {
     if(true)
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
   if((false))
    barrier();
   if(false)
    {
    }
   else
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(false)
    {
    }
   else
    {
     if((((false) && true)))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
        }
       if(((false || (false))))
        barrier();
       do
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               do
                {
                 barrier();
                }
               while(false);
              }
             if((false))
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(((bool(bvec4(false, false, true, true)))))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
        }
       while(false);
       if((false))
        barrier();
      }
    }
   do
    {
     if(((bool(bvec2(false, false)))))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
         barrier();
        }
      }
    }
   while(false);
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if(((false) && true))
          {
          }
         else
          {
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 if((false))
  barrier();
}
