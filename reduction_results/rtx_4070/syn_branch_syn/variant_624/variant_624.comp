#version 460

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((true && (false))))
  return;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((false) && true)))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((((float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, sqrt(1.0)))) > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((false) || false)))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if(((! ((false || (! (false)))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if((false))
  return;
 if(((! ((bool(bvec2(! (((false) && true)), false)))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((! ((bool(bvec4((! (! (! ((false))))), false, false, false))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint num_workgroup = ((gl_NumWorkGroups.x) ^ 0u);
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_WorkGroupID.x, _GLF_struct_0(vec3(1.0)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_1.workgroup_id;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((((false) || false)))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false) || false)))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if(((((bool(bvec3(false, (((((true) || false) && (false))) && true), false))))) || false))
  {
   if((false))
    return;
   if((((((false) && true))) && true))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((false))
      return;
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((! (! (bool(bvec3(false, true, false))))))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
    }
   if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (((false) || false)))))
      {
       if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), ((((injectionSwitch.x > injectionSwitch.y))) && true)))))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              return;
             return;
            }
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        {
         if(((! (! (false)))))
          return;
         return;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((bool(bvec2((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), false))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((! (! ((false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(((((clamp(((injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
   if(((bool(bvec3(false, true, false)))))
    return;
  }
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((! (! ((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (3679.4319)), vec2((float(false)), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
  return;
 uint virtual_gid = (~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y))) + (clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if((false))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(((bool((bool(bvec3(bool(false), true, ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * subgroup_size + ((subgroup_local_id + ((((1) / 1)) | (1))) % subgroup_size);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((false) || false)))
  {
   if((false))
    return;
   return;
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(((! (! (false)))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((bool(bool(((((false ? (atanh(vec2(8230.5495, 6.2))) : injectionSwitch)).x > injectionSwitch.y)))))) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x] = 1;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((0u | (subgroup_local_id)) + ((1) | (1)) < subgroup_size)
  {
   if((false))
    return;
   if((false))
    return;
   if(((((false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, ((injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   if((false))
    return;
   if((false))
    return;
   int i = 0;
   buf[next_virtual_gid] = 2;
  }
 else
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if(((bool(bvec2(false, false)))))
      return;
     if((((injectionSwitch.x > (((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
      return;
     return;
     if(((true && (false))))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      break;
     if(((! (! (false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        break;
       if((false))
        {
         if((false))
          {
           if((false))
            break;
           break;
          }
         continue;
        }
       if((((false) || false)))
        break;
       if((bool(bvec4((! (! ((false)))), ((injectionSwitch.x < injectionSwitch.y)), ((true) || false), true))))
        {
         if((false))
          {
           if((false))
            return;
           continue;
          }
         if((false))
          continue;
         continue;
        }
       break;
      }
     buf[next_virtual_gid] = 2;
     if((false))
      return;
     if(((((injectionSwitch.x > injectionSwitch.y)) || ((false || (((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if((((injectionSwitch.x > (min((float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y))))))
        {
         if((false))
          continue;
         return;
        }
       break;
      }
     if((false))
      break;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       break;
      }
     if((false))
      return;
     if((false))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      {
       if((false))
        break;
       continue;
      }
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if((false))
          break;
         break;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((bool(bvec4((! (! ((bool(bool((((injectionSwitch.x > injectionSwitch.y))))))))), (((! (! (true)))) && true), true, false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if(((true && ((bool(bvec2(false, true)))))))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((! (! ((false)))))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((((((false ? (- 32.87) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > (mix(vec2((max((injectionSwitch)[0], (injectionSwitch)[0])), (8208.5979)), vec2((267.662), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
}
