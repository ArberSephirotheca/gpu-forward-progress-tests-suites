#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((clamp(false ? (uvec3(95910u, 114903u, (uint((injectionSwitch.x)) | (88849u)))) : gl_WorkGroupID, false ? (uvec3(95910u, 114903u, (uint((injectionSwitch.x)) | (88849u)))) : gl_WorkGroupID, false ? (uvec3(95910u, 114903u, (uint((injectionSwitch.x)) | (88849u)))) : gl_WorkGroupID)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((((subgroup_local_id + 1)) / 1u) % subgroup_size);
 if((false || (false)))
  {
  }
 else
  {
   ((0u << (uint(2u))) ^ (buf[virtual_gid] = 1));
  }
 if((! (! ((((((((mix(vec2(((vec2(vec3(true ? ((true ? (max((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : (clamp(vec2(8.9, 7.9), vec2((min((clamp(45.90, (mix(float(45.90), float((675.724)), bool(false))), 45.90)), 45.90)), - 8.7), vec2(- 3.2, 4.1))))) : ((vec2(mat3x4((- 73.07 / (clamp(vec2(((3243.6417) * (injectionSwitch.y)), - 2.6), vec2(((3243.6417) * (injectionSwitch.y)), - 2.6), vec2(((3243.6417) * (injectionSwitch.y)), - 2.6)))), 0.0, 1.0, (max(determinant(mat4(1.0, 0.0, (1.0 * (1.0)), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, ((0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, (max(0.0, 0.0)), 0.0, log(1.0), 1.0)))), 0.0, 1.0, 1.0, abs(1.0), ((1.0) / 1.0), 1.0, 1.0)))), ((false ? (((((true ? 85.84 : (0.1)))) / 1.0)) : ((false ? (6296.1387) : (((bool(bvec3(true, false, (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))) ? (clamp(0.0, 0.0, (mix(float(0.0), float((- 8762.1332)), bool(false))))) : (- 3870.4117)))))))))))[0], (- 912.917)), vec2((9.2), ((vec2(vec3(true ? ((true ? (max((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : (clamp(vec2(8.9, 7.9), vec2((min((clamp(45.90, (mix(float(45.90), float((675.724)), bool(false))), 45.90)), 45.90)), - 8.7), vec2(- 3.2, 4.1))))) : ((vec2(mat3x4((- 73.07 / (clamp(vec2(((3243.6417) * (injectionSwitch.y)), - 2.6), vec2(((mix(float((- 0.7)), float((3243.6417) * (injectionSwitch.y)), bool(((injectionSwitch.x < injectionSwitch.y)))))), - 2.6), vec2(((3243.6417) * (injectionSwitch.y)), (max(- 2.6, - 2.6)))))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (clamp((min(0.0, (clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), log(1.0), 1.0)), 0.0, 1.0, 1.0, abs(1.0), ((1.0) / 1.0), 1.0, 1.0)))), ((false ? (85.84) : ((false ? (6296.1387) : ((true ? (clamp(0.0, 0.0, (mix(float(0.0), (((min(float((- 8762.1332)), float((- 8762.1332))))) / 1.0), bool(false))))) : (- 3870.4117)))))))))))[1]), bvec2(false, true)))) * vec2((min(((1.0) * 1.0), 1.0)), 1.0)))).x < injectionSwitch.y))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, ((4) | ((min(4, (0 + (((4) / 1))))))));
  }
 else
  {
  }
}
