#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if((((false)) || false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((false) || false)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if((bool(bvec4((((false)) || false), false, false, false))))
    {
     if((false))
      return;
     return;
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((false) || false)))
    {
     if((((bool((bvec3(bvec4(bvec3(false, false, true), false))))) || (false))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false || ((false))))
        barrier();
       barrier();
      }
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)))) && ((injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || ((true && (false))))))
    return;
   if(((((! (! (((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  return;
 if((! (! (((! ((true && (! ((true && (((injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (bool(((bool((((((((injectionSwitch.x > injectionSwitch.y))) || false))) || false))) && true)))))))
  barrier();
 if((false))
  return;
 if(((bool(bvec4(false, true, true, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((! ((true && ((bool(bool(! ((bool(((bool((((((injectionSwitch.x > injectionSwitch.y)) && true))))) || false))))))))))))
  {
   if((false))
    barrier();
   if((((false || ((true && ((! (! (bool(bvec4(false, true, true, false))))))))))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if(((((true && (false))) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((((false)) && true))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((bool(bvec3(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      return;
     if(((((! (! (false)))) || false)))
      return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if(((((mix(float(((- float(- 3315)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((! (! (! (! ((((((clamp(((injectionSwitch.x) / 1.0), ((injectionSwitch.x) / 1.0), ((injectionSwitch.x) / 1.0))) > injectionSwitch.y)) && true))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((true && (false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((((! (! ((bool(bvec3((true && (injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true))))))))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec2(((((injectionSwitch) / vec2(1.0, 1.0)).x > (0.0 + (float(vec3(((((mix(float((9.5)), float((clamp(injectionSwitch.y, injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(((injectionSwitch.x < injectionSwitch.y))))))) - 0.0), cos(0.0), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))), true)))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
       if((false))
        return;
      }
     return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((false || ((false) && true))) || false))))
    barrier();
   if(((true && (false))))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((bool((bvec2(bvec2(bvec2((bool(bvec4((((false || ((injectionSwitch.x > injectionSwitch.y))))), true, (false || ((((bool(bool(true)))) || ((injectionSwitch.x > injectionSwitch.y))))), ((false) && true)))), false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(((! ((true && (! (false)))))))
      barrier();
    }
  }
 if((false))
  {
   if(((true && (false))))
    return;
   barrier();
  }
 if((((false) || false)))
  {
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   return;
  }
 if((false))
  {
   if(((true && ((bool(bvec3(false, true, false)))))))
    return;
   if((false))
    return;
   if((false))
    {
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
   if(((false || ((false || (false))))))
    {
     if((((! (! (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > (min(((clamp(mat2((mix(float(1.0), float((7464.9265)), bool(((injectionSwitch.x > (max((min(injectionSwitch.y, injectionSwitch.y)), (min(((injectionSwitch.y) + 0.0), injectionSwitch.y)))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), (min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y, ((clamp(mat2((mix(float(1.0), float((7464.9265)), bool(((injectionSwitch.x > (max((min(injectionSwitch.y, injectionSwitch.y)), (min(((injectionSwitch.y) + 0.0), injectionSwitch.y)))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), (min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y))))))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       barrier();
       if((false))
        return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((bool(bvec2(false, true)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if(((bool((bvec2(bvec4(bvec2((! (! (((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false), true, false)))))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(((bool(bool(((((injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 if(((! (! (false)))))
  {
   if((true && ((false))))
    return;
   barrier();
  }
 if((false))
  return;
 if(((((clamp(injectionSwitch.x, ((((false ? (- 17.76) : injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = (1u * (((max(((max(gl_WorkGroupID.x, gl_WorkGroupID.x))), ((max(gl_WorkGroupID.x, gl_WorkGroupID.x))))) + 0u)));
 if((false))
  {
   if(((! ((bool(bool(! ((! (! ((false || (false)))))))))))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > (((min(injectionSwitch.y, injectionSwitch.y))) / exp(0.0))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((((((injectionSwitch.x < injectionSwitch.y)) && (((false) || false)))) || ((injectionSwitch.x > injectionSwitch.y)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((false)) || false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, (clamp(injectionSwitch.y, (min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((true && ((false))))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if(((((mix(vec2((- 28.99), (min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (5.4)), bvec2(true, false))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if(((((! (! (((false) && true) || ((! (! (bool(bvec2(false, false)))))))))))))
  barrier();
 if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
  {
   if((false))
    return;
   if(((true && (false))))
    barrier();
   return;
  }
 if((((bool(bool(((! ((false || (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false || ((false || ((((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bool(false)))))
    return;
   return;
   if((false))
    return;
  }
 uint virtual_gid = ((workgroup_base + (((uint(uvec2(subgroup_id * subgroup_size, (0u | (0u)))))) + 0u) + subgroup_local_id) << 0u);
 if((false))
  return;
 if(((((false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((! ((! (((! (! ((((bool(bvec4((false), (! (((! (false)) && true))), true, true)))) && true)))) && true))))))
  {
   if((((false)) && true))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
  }
 if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((((false) && (! (! ((((! (! (true)))) || false)))))))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint next_virtual_gid = ((((false ? (workgroup_id) : (~ (~ (workgroup_base))))) | ((false ? (workgroup_id) : (~ (~ (workgroup_base))))))) + subgroup_id * subgroup_size + (((clamp(~ (((~ ((uint(uvec4((((subgroup_local_id + ((((1) | 0)) | 0))) >> 0u), 0u, 0u, ((1u << (uint(3u))) >> (uint(3u)))))))) * 1u)), ~ ((~ ((~ (~ (~ ((((0u ^ (((~ ((subgroup_local_id + 1))) * 1u)))) - 0u)))))))), ~ (((~ ((subgroup_local_id + 1))) * 1u))))) % subgroup_size);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((clamp((max(injectionSwitch.x, injectionSwitch.x)), (mix(float(injectionSwitch.x), float((70.57)), bool(false))), (((max(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > ((injectionSwitch.y) / 1.0)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((bool((bvec3(bvec4(bvec3((bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y))), true))))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((((((bool(bvec4(bool(bvec4((bool(bvec4(((min(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))) > injectionSwitch.y, true, false, false))), true, true, true)), true, true, (((vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))))))))
  {
   if(((! ((! (! (! (false))))))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((((! ((((true && (! (false))))) && true))) && true)))
  {
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((((((((true ? (injectionSwitch) * mat2(1.0) : (vec2(225.577, 676.393))))).x > (min((((((bool((bool(bvec3((! (! (bool(injectionSwitch.x > injectionSwitch.y)))), true, true))))))) ? (length((true ? injectionSwitch : vec2(42.72, 1.8)))) : injectionSwitch.y)), (((((bool((bool(bvec3((! (! (bool(injectionSwitch.x > injectionSwitch.y)))), true, true))))))) ? (length((true ? injectionSwitch : vec2(42.72, 1.8)))) : injectionSwitch.y))))))) && true)) || ((false) || false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 buf[virtual_gid] = 1;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, ((injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   barrier();
  }
 if((false))
  return;
 if(((! (! (((((((! (! ((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))) && ((injectionSwitch.x < injectionSwitch.y))) || false))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((false))
  return;
 if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  {
   if((false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], (uint((injectionSwitch.y)) * (uint(2))), 4, 64, 4);
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((! (! ((((false) || false))))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool((bvec3(bvec4(bvec3((false), true, true), true))))))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
}
