#version 460

struct _GLF_struct_7 {
 bvec3 _f0;
 bvec3 _f1;
 vec2 _f2;
 mat2x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 _GLF_struct_7 _f1;
 uint _f2;
 int _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 vec2 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_4 {
 bool _f0;
 int _f1;
 bool _f2;
 mat4 _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 uint subgroup_size;
 ivec3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 bool _f1;
 mat4 _f2;
 vec3 _f3;
 uvec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 bvec3 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 bool _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_8 _f4;
 uint _f5;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > ((clamp(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)), (min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))))))
  return;
 if((bool(bvec4((false), false, false, (! (! (true)))))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if((((bool(bvec4((false || ((! (! (((! (! (injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (clamp((max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y))))))))), false, false, ((! ((! (! (! (bool(bvec2((((vec2(mat4x2(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, sqrt(0.0), 1.0))).x > (((mix(float((- 8294.0566)), float(((injectionSwitch.y) / (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), bool(true)))) - 0.0))), false)))))))))))))))
  {
   if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    barrier();
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((! (! (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false || (((false || (false))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((((bool(bvec4(((bool(bool(((injectionSwitch.x > injectionSwitch.y))))) || ((false))), false, true, false)))) || ((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if((! (! ((((((injectionSwitch.x > injectionSwitch.y)) || (((bool(bvec2(false, false))) && true)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(vec2(1.0), true, bvec3(true), ((false ? (min((injectionSwitch), (injectionSwitch))) : (mix(vec2((vec3(719.965, - 42.47, 4025.7577).b), (vec2((min((min(1.0, 1.0)), ((false ? (- 7.2) : (min((float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, (dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0))))))))[1]), vec2((vec2((min((min(1.0, 1.0)), ((false ? (- 7.2) : (min((float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, (dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0))))))))[0], (vec2(- 806.079, - 5273.6398).g)), bvec2(true, false)))))), ivec2(1)), ((uvec3(164124u, 53033u, 131799u) & uvec3(0u, 0u, 0u)) ^ (uvec3((max(1u, 1u))))), _GLF_struct_3(uvec2(1u), bvec3(true), _GLF_struct_2(((ivec2((clamp(1, (clamp(1, 1, 1)), 1)))) ^ ivec2(0, 0)), true, mat4(1.0), vec3(1.0), uvec4(1u), mat3x2(1.0))), _GLF_struct_6(gl_SubgroupSize, (((max(ivec3(ivec3(ivec3(ivec3(((((clamp(((((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0)))) * ivec3(1, 1, 1)), ((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0))), ((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0))))))) >> ivec3(0, 0, 0)))))), ivec3(ivec3(ivec3(ivec3(((((clamp(((((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0)))) * ivec3(1, 1, 1)), ((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0))), ((min(ivec3(1), (clamp((min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1))), (min(((ivec3(1)) * ivec3(1, 1, 1)), ivec3(1)))))))) | (((false ? ((mat4x2(- 272.358, - 9509.1258, - 0.5, 617.089, - 826.836, 3.9, - 64.35, - 3.0) , bitfieldReverse(ivec3(- 52174, - 55437, 29479)))) : ((ivec3(0, 0, 0)) / ivec3(1, 1, 1)))) >> (ivec3(0))))))) >> ivec3(0, 0, 0)))))))))), _GLF_struct_4(true, 1, true, mat4(((1.0) * 1.0)), 1u), _GLF_struct_5(ivec2(1), (mix(vec2((- 3.0), (((((vec2(1.0)) * mat2(1.0))) - vec2(0.0, 0.0)))[1]), vec2((mix(float((160.799)), float((((((vec2(1.0)) * mat2(1.0))) - vec2(0.0, 0.0)))[0]), bool(true))), (735.772)), bvec2(true, false))), mat3x2(1.0), mat2x4((max((((sqrt(0.0) + ((((((((max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0) < injectionSwitch.y)) ? 1.0 : (- 7.2))))), 1.0))))), _GLF_struct_8(uvec4(1u), _GLF_struct_7(bvec3(((bool(bvec3(bool(bvec3(true, true, false)), false, false))))), bvec3(true), vec2(1.0), mat2x3(1.0), 1u), 1u, (clamp(1, 1, 1)), 1.0, mat3x4(1.0)), 1u);
 if(((! (! (((false)) || false)))))
  return;
 if((false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((true && ((false))))
  {
   if((false))
    return;
   return;
  }
 uint num_workgroup = ((min(((max((((min((max((clamp((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (((uvec3(0u, 0u, (uint(uvec2((clamp(0u, 0u, 0u)), 1u)))) + ((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) / ((false ? (uvec3(75557u, 184583u, 174698u)) : uvec3(((1u) ^ (0u ^ 0u)), 1u, (min(1u, 1u))))))))) << uvec3(0u, 0u, (min(0u, 0u)))), (max(((clamp(min((((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((((false ? ((uvec3(100344u, 13545u, 13195u))) : (min((uvec3(uvec4((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), 0u))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))))) | ((((false ? ((uvec3(100344u, 13545u, 13195u))) : (min((uvec3(uvec4((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), 0u))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min((((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((((false) || false) ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(((min((~ (~ (((((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))) + uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u) + (((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))))), (~ (~ ((((((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (((((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / ((max(uvec3(uvec3(uvec3(1u, 1u, 1u))), ((uvec3(uvec3(uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (((~ (((~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups)))))) / uvec3(1u, 1u, 1u)))))) | uvec3(0u, 0u, 0u)))))) | ((min((uvec3(0u, 0u, 0u) ^ ((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), ((gl_NumWorkGroups) / uvec3((min(1u, 1u)), 1u, 1u))))))))))))).x), ((max((((min((max((clamp((uvec3(0u, 0u, 0u) ^ (((gl_NumWorkGroups) | (gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | ((uvec3(uvec3((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))), (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (((uvec3(0u, 0u, 0u) + ((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[(~ (~ ((clamp(2, 2, 2)))))]))))) / ((false ? (uvec3(75557u, 184583u, 174698u)) : uvec3(((1u) ^ (0u ^ 0u)), 1u, 1u))))))) << uvec3(0u, 0u, (((((min(0u, 0u))) >> 0u)) | ((~ (~ ((min(0u, 0u))))))))), (max(((clamp(min((((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min((((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | (((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min((((uvec3(0u, 0u, 0u) ^ (((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))) | (((false ? ((uvec3(100344u, 13545u, 13195u))) : ((~ (~ ((min(uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))))))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))))), (~ ((min(~ ((((((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / ((max(uvec3(uvec3(uvec3(1u, 1u, 1u))), ((uvec3(uvec3(uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (((~ (((~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups)))))) / uvec3(1u, 1u, 1u))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3((min(1u, 1u)), 1u, 1u))))))), ~ ((((((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / ((max(uvec3(uvec3(uvec3(1u, 1u, 1u))), ((uvec3(uvec3(uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (((~ (((~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups)))))) / uvec3(1u, 1u, 1u))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3((min(1u, 1u)), 1u, 1u))))))))))))))).x))) | ((max((min((((min((uvec3(0u, 0u, (uint((clamp(uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u), uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u), ((uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u)) - uvec3(0u, 0u, 0u))))))) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3((clamp(((1u) ^ (0u ^ 0u)), ((1u) ^ (0u ^ 0u)), ((1u) ^ (0u ^ 0u)))), 1u, (clamp(1u, ((1u) - (0u << (uint(6u)))), 1u))))))) << uvec3(0u, 0u, (min(0u, 0u)))), (((min((uvec3(0u, 0u, (uint((clamp(uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u), uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u), ((uvec3((((uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))) | (uint((min(uvec2(0u, 1u), uvec2(0u, 1u))))))), 1u, 1u)) - uvec3(0u, 0u, 0u))))))) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3((clamp(((1u) ^ (0u ^ 0u)), ((1u) ^ (0u ^ 0u)), ((1u) ^ (0u ^ 0u)))), 1u, (clamp(1u, ((1u) - (0u << (uint(6u)))), 1u))))))) << uvec3(0u, 0u, (min(0u, 0u)))))), (max((min(((((uvec3((uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec3(0u, 0u, 0u), 1u))))) ^ (gl_NumWorkGroups))) | (((((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3((~ (~ (0u))), 0u, 0u) ^ (gl_NumWorkGroups)))) | ((~ (~ ((false ? ((uvec3(100344u, 13545u, 13195u))) : (uvec3((~ (~ (0u))), 0u, 0u) ^ (gl_NumWorkGroups))))))))))), (((min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, ((true ? 1u : (subgroup_local_id))), 1u)))), (~ (~ ((((((((min((uvec3(0u, 0u, 0u) ^ (((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))), ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))) | ((min((uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))))))))).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * (((~ (~ ((clamp((min(uvec2(0u, 0u), (uvec2(uvec4(uvec2(0u, (0u | ((1u * (0u))))), 0u, 1u))))), (max((uvec2(uvec3((min(uvec2(0u, 0u), (uvec2(uvec4(uvec2(0u, ((min(0u | ((1u * (0u))), (clamp(0u | ((1u * (0u))), (1u * (0u | ((1u * (0u))))), 0u | ((1u * (0u))))))))), 0u, 1u))))), 1u))), (min(uvec2(0u, 0u), (uvec2(uvec4(uvec2(0u, ((((min(0u, ((0u) | (0u))))) / 1u) | ((1u * (0u))))), 0u, 1u))))))), (min(uvec2(0u, 0u), (uvec2(uvec4(uvec2(0u, (0u | ((1u * (0u))))), 0u, 1u)))))))))) << ((clamp(uvec2(3u), ((uvec2(((((3u) ^ 0u)) * 1u))) * (((false || (false)) ? (uvec2(98045u, 185332u)) : ((uvec2((((injectionSwitch) - vec2(0.0, 0.0)).y), (injectionSwitch.y))) >> uvec2(0u, 0u))))), (min(uvec2(3u), uvec2(3u))))))) | ((((((0.0 + ((1.0 * (((clamp((mix(float((- 664.597)), float(clamp((vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x)), bool(true))), clamp((vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x), ((clamp((vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x, (vec2(mat2x4(injectionSwitch, 1.0, log(1.0), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0))).x)) + 0.0)))))))) < injectionSwitch.y)) ? (uvec2((0u ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id[0])), GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id[1])) : (uvec2(31507u, 183998u)))))).y;
 uint virtual_gid = workgroup_base + (~ (~ ((~ (((~ (((subgroup_id)) << 0u))) / 1u))))) * _GLF_struct_replacement_9._f3.subgroup_size + (uint(uvec3(subgroup_local_id, 1u, 1u)));
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = (((min((clamp(virtual_gid, virtual_gid, (min((max((max(virtual_gid, virtual_gid)), (max(virtual_gid, virtual_gid)))), (max(virtual_gid, virtual_gid)))))), (clamp(virtual_gid, virtual_gid, (min((max((max(virtual_gid, virtual_gid)), (max(virtual_gid, virtual_gid)))), (max(virtual_gid, virtual_gid)))))))) | (clamp(virtual_gid, virtual_gid, (min((max((max(virtual_gid, virtual_gid)), (max(virtual_gid, virtual_gid)))), (max(virtual_gid, virtual_gid))))))));
 if((bool(bvec2((((((((injectionSwitch.x > injectionSwitch.y)) ? (radians(869.748)) : injectionSwitch.x)) > (0.0 + (injectionSwitch.y))))), false))))
  barrier();
 uint next_virtual_gid = workgroup_base + ((subgroup_id) + 0u) * _GLF_struct_replacement_9._f3.subgroup_size + (((min((((uint(uvec3(((max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))), 1u, 0u)))) ^ 0u), (min((((uint(uvec3(((subgroup_local_id) ^ 0u), 1u, 0u)))) ^ 0u), (((uint(uvec3(((subgroup_local_id) ^ 0u), 1u, 0u)))) ^ ((0u) - 0u)))))) + 1) % _GLF_struct_replacement_9._f3.subgroup_size);
 buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x] = ((false ? (24125) : ((1 * (((int(int(1))) >> 0))))));
 atomicStore(buf[next_virtual_gid], uint(2), 4, (0 | (64)), 4);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((true && (false))))
  barrier();
}
