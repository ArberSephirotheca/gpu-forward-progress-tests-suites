#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  return;
 if((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) || (false || (((false) && true)))), true))))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if(((((vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec4(false, false, true, ((injectionSwitch.x < injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((true && (((! (! (bool(bvec2((false), true)))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (clamp(injectionSwitch, smoothstep(- 47.47, 7865.5761, 3977.3942), - 116.710)))).x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
    }
   if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if(((false || (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((false || (false))))
      return;
     if((true && ((true && ((false))))))
      return;
     return;
     if((! (! ((false)))))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(((bool(bvec4((((bool(bvec3(false, false, true)))) && true), true, true, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
  }
 if(((((min(injectionSwitch, (vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if(((bool(bool(! (! ((((((true && (injectionSwitch.x < injectionSwitch.y))))) && true))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   for(int _injected_loop_counter = 1; (! (! ((((((! (! (((false)) && true))) ? (atomicExchange(_injected_loop_counter, (((~ (~ (- 95936)))) + (0 << (int(0)))))) : _injected_loop_counter)) > 0) && true)))); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       if((false))
        return;
       return;
       if((false))
        {
         if((false))
          break;
         return;
        }
       if((! (! ((false)))))
        return;
      }
     if(((bool(bool(((((clamp(float(mat4((clamp(injectionSwitch.x, (min((max((clamp((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, (((1.0 * (injectionSwitch.x))) - 0.0))), injectionSwitch.x)), injectionSwitch.x)), ((injectionSwitch.x) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt((clamp(1.0, 1.0, ((1.0) * 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4(((injectionSwitch) * mat2(1.0)).x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, (max(sqrt(1.0), sqrt(1.0))), 1.0, 0.0, ((0.0) - (float(vec4(0.0, (max(0.0, 0.0)), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), (1.0 * (float(((mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) > ((((((false ? (mat2(- 9.2, 545.777, 4132.4257, - 7462.6795)) : mat2(1.0))) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0)).y)))))))
      {
       if((false))
        break;
       if((false))
        return;
       if((false || ((false))))
        continue;
       return;
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       if(((true && (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if((! (((injectionSwitch.x < injectionSwitch.y)) && ((! ((false || ((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))))))
        break;
      }
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((false || (false)) || false))))
    return;
   if((false || (((! ((bool(bvec2(! (((! (! (true))) && (false))), true)))))))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if((false))
      return;
    }
  }
 else
  {
   if((false))
    return;
  }
 if((! (! (false || (((bool(bvec4((false), false, ((((injectionSwitch.x) * 1.0) > injectionSwitch.y)), true)))))))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > (mix(float((- 803.780)), float(injectionSwitch.y), bool(true)))))))
    return;
   if((false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
  {
   if((false))
    return;
   return;
  }
 if(((! ((! (! (((! (false)) && true))))))))
  {
   if(((bool(bool(false)))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 uint num_workgroup = ((gl_NumWorkGroups.x) - 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((((! (! (bool((bvec2(bvec3(bvec2(false, false), true))))))))) && true) || ((false))))
  {
   if((false))
    return;
   return;
  }
 if((! (! ((false)))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  return;
 if((bool(bvec4((bool((bvec2(bvec2(bvec2((((((bool(bool(bool(bvec4((float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y, (false || (((false) || false))), false, true))))))))), true)))))), false, true, true))))
  {
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
      return;
     return;
    }
   if((false))
    return;
   if(((false || ((false || (false))))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(((! (! (false)))))
  {
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 uint virtual_gid = (~ (~ (((min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) ^ 0u)));
 if((false))
  return;
 if((bool(((bool((false || ((false))))) && true))))
  return;
 if((((false || (! (! (((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((881.552), ((37.94 * 452.948))), bvec2(false, false))).y)))))))))
  {
   if((false))
    return;
   if(((true && (false))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = (((1u * ((max(workgroup_base, (~ (~ ((max(workgroup_base, (max(((true ? workgroup_base : (workgroup_id))), ((workgroup_base) | 0u)))))))))) + subgroup_id * subgroup_size + (((((0u ^ (subgroup_local_id + 1))) | 0u)) % (clamp(((subgroup_size) | (subgroup_size)), subgroup_size, ((((subgroup_size) / 1u)) | 0u))))))) / 1u);
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((! (! (true))) && (false)) && true))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((((injectionSwitch) + vec2(0.0, 0.0)).x > ((mix(vec2((mat2(1.0) * ((vec2(0.0, 0.0) + (injectionSwitch))))[0], (- 7.0)), vec2((vec3(- 354.686, 25.72, 3024.8131).t), (mat2(1.0) * ((vec2(0.0, 0.0) + (injectionSwitch))))[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y)))))).y))))
    {
     if((false))
      return;
     if((((false) || (((vec2(1.0, 1.0) * (injectionSwitch)).x > (((mix(float(((43.84 + 708.492))), float(injectionSwitch.y), bool(((injectionSwitch.x < injectionSwitch.y)))))) - 0.0))))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > (clamp(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (mix(vec2((- 55.12), (injectionSwitch)[1]), vec2((vec2(1.0, 1.0) * ((injectionSwitch)))[((0) >> 0)], (- 800.590)), bvec2(true, false))))).y))))
      return;
    }
   if((((false) || (! (! (false))))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if(true)
    {
     if((false))
      {
       if((false))
        return;
       if((((false) || false)))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((! (! (((false || (false)))))))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((((false) || false)))
        return;
       return;
      }
     if((false))
      return;
    }
   else
    {
     if(((((((determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y))) && ((((injectionSwitch.x < (mix(float(injectionSwitch.y), float((0.0)), bool(false))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   do
    {
     if((false))
      {
       if((false))
        continue;
       if((false))
        break;
       return;
      }
     if((false))
      return;
     if((((((true ? injectionSwitch : (vec2(- 857.402, 1.5)))).x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        break;
       return;
      }
     if((false))
      break;
     if((false))
      return;
    }
   while((((((true ? vec2(mat2x4((clamp(((true ? injectionSwitch : (injectionSwitch))), ((true ? injectionSwitch : (injectionSwitch))), ((true ? injectionSwitch : (injectionSwitch))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : (injectionSwitch)))).x > injectionSwitch.y)));
   if(((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > (max(injectionSwitch.y, ((((clamp((injectionSwitch.y), (1.0 * ((injectionSwitch.y))), ((float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))))) * 1.0)) - 0.0)))))))
  return;
 if(((true && (((! (! ((! (! (bool(bvec4((bool(bvec4((bool(bvec3(((((injectionSwitch.x > injectionSwitch.y) && ((injectionSwitch.x < injectionSwitch.y))))), false, (bool(bvec3((true && ((! (! ((bool(bvec3(((true) || false), true, true)))))))), true, true)))))), false, ((injectionSwitch.x > injectionSwitch.y)), false))), true, true, false)))))))))))))
  {
   if((((injectionSwitch.x > ((injectionSwitch) * exp(vec2(0.0, 0.0))).y))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((false))
  return;
 if((((((! (! (! ((! (bool(bvec2(((true && (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), (clamp(4, (clamp(4, 4, 4)), ((((4) >> 0)) / 1))), 64, 4);
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (((! (((((((bool(bvec3(true && ((((((((float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y)))) && true))), false, ((injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)) || false)) || false)))))
  {
   if(false)
    {
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((((((true ? injectionSwitch : (vec2(- 5922.3750, - 243.412)))).x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((((bool(bvec2(false, true)))) && true)))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if(((false || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   return;
  }
}
