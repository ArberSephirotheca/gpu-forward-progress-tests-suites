#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((false)) && true))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((! (! (false)))) && true)))
  {
   if((false))
    barrier();
   return;
   if((false))
    return;
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((bool(bvec2((true && (false)), true)))))
  {
   if((false))
    return;
   barrier();
  }
 if((! (((! ((false))) || false))))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((((((min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false || ((false))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if(((! (! ((! (! (false))))))))
      return;
     barrier();
    }
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((false) || false)))
        return;
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((((false) && true)))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((! (((injectionSwitch.x < injectionSwitch.y)) && ((((! (((false || ((injectionSwitch.x > ((mix(vec2((clamp(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[0], (2233.1293)), vec2((1522.8227), ((true ? (clamp(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[1] : (9707.8172)))), bvec2(false, true)))).y))))))) && true))))) || false)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if(((bool(bvec2((true && (bool(bvec4(((((false || (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))), false)))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((bool((bool(bool((bool(bvec2(bool((false)), false)))))))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    barrier();
   return;
  }
 if((false))
  return;
 if((((false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(((true && (false))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if(((! (((! ((((injectionSwitch.x > injectionSwitch.y)) || (! (! (! (! (false)))))))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((bool(bvec4((false), true, true, false))))
      return;
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((((clamp(injectionSwitch, injectionSwitch, (clamp(((injectionSwitch) + (mix(vec2((vec2(0.0, 0.0))[0], (0.0 + ((5.5)))), vec2((vec3(- 43.14, - 7864.3794, 7.0).p), (vec2(0.0, 0.0))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > ((true ? (max(injectionSwitch, injectionSwitch)) : (ceil(injectionSwitch)))).y))))
      return;
     return;
     if(((! (! (false)))))
      {
       if(((true && (! ((! (! (! ((false))))))))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       barrier();
       if((true && ((false))))
        return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
  }
 if((! (! ((false)))))
  {
   if((false))
    return;
   barrier();
  }
 if(((bool(bvec4((true && ((false || (((injectionSwitch.x > injectionSwitch.y)))))), ((true) || false), true, (! ((! (! (! (false)))))))))))
  {
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(((false || ((bool(bvec3(false, true, true)))))))
    return;
   if((false))
    {
     if((((((false ? (mix(9.8, - 7.0, true)) : (max((float(float(injectionSwitch.x))), injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
     if(((((((clamp((mix((min((max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2((- 1.1), (- 8280.9997)), bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)) + abs(abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if((false))
        return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false || ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > (float(vec3(injectionSwitch.y, 0.0, 0.0)))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if(((bool(bvec4(false, true, true, true)))))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 uint workgroup_size = (uint((injectionSwitch.y)) * ((uvec3(uvec3(((gl_WorkGroupSize) * (uvec3(1u, (max(1u, 1u)), 1u) | uvec3((~ (~ (1u))), 1u, 1u)))))).x));
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if((false))
  return;
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if((false))
    barrier();
   if(((! (! (false)))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((false) || false)) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((((((((mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)) && ((injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if((((false)) && true))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((false))
          barrier();
         return;
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((((false) && true)))
        barrier();
       if((false))
        return;
      }
     if((false))
      {
       if((((false) && true)))
        return;
       if((((false) || false)))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
       if((false))
        return;
      }
     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((! (! ((false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if(((((((max(injectionSwitch.x, injectionSwitch.x))) / cos(0.0)) > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if(((((vec2(1.0, (max(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(((! (! ((! (! (false))))))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if((false))
        return;
      }
     if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > ((clamp(vec2((mat3x4(mat3x4((transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, (dot(vec3((min(1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))))), vec2((mat3x4(mat3x4((transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, (dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, (min(1.0, (min(1.0, 1.0)))), 1.0, 0.0, 0.0, sin(0.0))))))))), (min(vec2((mat3x4(mat3x4((transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, (dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))))), vec2((mat3x4(mat3x4((transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, (dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))))))))))))).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       return;
       if(((((clamp(injectionSwitch.x, ((clamp(0.0, 0.0, 0.0)) + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         return;
        }
       if(((! (! (false)))))
        return;
       if((false))
        barrier();
      }
     if((((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(((bool(bool(false)))))
        barrier();
       if((false))
        {
         if((false))
          return;
         if(((((clamp(injectionSwitch, (vec2(((vec4(injectionSwitch, 0.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))))
          return;
         return;
         if((false))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if((false))
          return;
         return;
        }
       return;
      }
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((! (! ((bool(bvec4(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), (false || (((true) && true))))), true, true, ((bool((bvec3(bvec3((bvec3(bvec3(bvec3(! ((! (! (! ((true && (false))))))), false, true)))))))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((false || (((bool(bvec3(false, true, true))))))) || false))
    {
     if((false))
      return;
     if(((true && ((true && (false))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       return;
      }
     barrier();
    }
   if(((((! (! (((((injectionSwitch.x > (min(injectionSwitch.y, (min((mix(vec2((73.34), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 90.94)), bvec2(true, false))), injectionSwitch)).y))))) || false))))) && true)))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec2(false, true)))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > (vec2(vec3(injectionSwitch, 1.0))).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) || false)))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((false) || false)))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((false))
          barrier();
         if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((bool(bvec2(bool(bvec3(false, true, false)), true))))))
            barrier();
           if(((bool(bvec4(false, true, false, false)))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             if((false))
              return;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            barrier();
          }
         return;
         if((false))
          return;
        }
       return;
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if(((! (! ((true && (((false) && true))))))))
          {
           if((false))
            return;
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + ((subgroup_id) << (0u >> (uint(8u)))) * subgroup_size + (max(((((~ (~ (min(subgroup_local_id, (((uint(((mix(vec2((5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 67.42)), bvec2(true, false))).x)) + (((subgroup_local_id) | 0u)))) >> 0u)))))) + 1) % subgroup_size), ((((~ (uint((uvec3(0u, 0u, 0u) ^ (uvec3((((((~ (min(subgroup_local_id, (((((uint(((mix(vec2((5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 67.42)), bvec2(true, false))).x)) + (((((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))) | ((~ (min(subgroup_local_id, (((((uint(((mix(vec2((5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 67.42)), bvec2(true, false))).x)) + (((((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))))) << 0u), 0u, 0u))))))) + ((1) / 1)) % subgroup_size)));
 if((false))
  {
   if(((false || (false))))
    return;
   if((false))
    return;
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   if(((false || (bool(bool((false)))))))
    return;
   if((false))
    {
     if((false))
      return;
     if(((false || (false))))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((bool(bvec4((((((true ? (vec2(1.0, 1.0) * (injectionSwitch)) : (injectionSwitch))).x > injectionSwitch.y))), false, true, true))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((((false) || false)))
        barrier();
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((bool(bvec3((false), false, ((injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if((true && (! (! ((! (! (((false))))))))))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
      }
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((false))
  return;
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((! (! ((false)))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if(((((vec2(vec4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((! (! ((((bool(bvec3(bool(bvec4(((mix(vec2(((20.58 / float(false))), (max((1.0 * (((true ? (- 22.19) : (3.3))))), (min((- 22.19), (- 22.19)))))), vec2((injectionSwitch)[0], (min((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), true, false, false)), false, true))))))))))
    {
     if((false))
      barrier();
     if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, ((injectionSwitch.x < injectionSwitch.y)), true))))))
      barrier();
     barrier();
     if((false))
      return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) && true)))
    return;
   if((((injectionSwitch.x > (float(mat3x4(((((mix(float(((- 0.0))), float(((mix(float((- 5613.0738)), ((true ? float(injectionSwitch.y) : (971.413))), (bool(bvec4(bool((((((min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y))), false, false, false)))))) / 1.0), (bool(bvec4(bool(((true) || false)), false, false, ((injectionSwitch.x < injectionSwitch.y)))))))) - 0.0)), 0.0, 0.0, (clamp(0.0, 0.0, ((0.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), cos(0.0))))))))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((false) && true)))
          return;
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
         if(((((vec2(mat4(((injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, ((((min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0)))))) + 0.0), 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))).x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       barrier();
       if(((bool(bvec3(false, true, true)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       if(((((((! ((true && (! (((bool(bvec3((injectionSwitch.x > injectionSwitch.y) && true, false, true)))))))))) && true)))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) || false)))
      return;
     barrier();
    }
   if((false))
    barrier();
   if(((! (! ((bool(bool(false))))))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((! (! ((((injectionSwitch.x > ((float(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0)), 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * (injectionSwitch.y)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if(((((mat2((injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((bool(bvec4((! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((true) && true), false, (((float(mat3(injectionSwitch.x, 1.0, ((true ? 0.0 : (795.274))), 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))) < injectionSwitch.y))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     if(((bool(bvec4(false, true, false, false)))))
      {
       if((false))
        return;
       if(((bool(bvec3(false, false, false)))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > (min(injectionSwitch, ((injectionSwitch) - vec2(0.0, 0.0)))).y))))
        barrier();
       return;
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && ((! (! ((bool(bvec3(false, false, false))))))))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
       if((((injectionSwitch.x > ((float(mat3x2(float(vec2(injectionSwitch.y, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
      }
     return;
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((((false) && true)))
          return;
         barrier();
        }
       barrier();
       if((false))
        return;
      }
     if((false))
      return;
    }
  }
 if((false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if(((bool(bool(((false) || false))))))
      return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((bool(bvec4((false), true, true, true)))) && true))
      return;
    }
   barrier();
   if((((! (! (bool(bool(false))))))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if(((true && (false))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false)))))
  {
   if((((false) && true)))
    return;
   if((((((true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
    barrier();
   return;
  }
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    return;
   barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((! (! ((bool(bvec3((false), true, false)))))))
    return;
   return;
  }
 if(((bool(bvec3(false, false, false)))))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    barrier();
  }
}
