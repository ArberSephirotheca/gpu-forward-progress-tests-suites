#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (~ (~ (workgroup_size * ((workgroup_id) | ((((((~ (~ (((0u >> (uint(2u))) ^ (workgroup_id))))))) >> 0u) | 0u))))));
 uint virtual_gid = (((min(((((workgroup_base + ((false ? (40818u) : (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id) >> 0u)) * 1u), (((uint(uvec2((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (0u << (((uint(6u)) | uint((((((injectionSwitch.x) + 0.0)) + 0.0))))))))) ^ (0u >> (uint(3u))))) + (((min(subgroup_local_id, ((true ? subgroup_local_id : (workgroup_id)))))) | (((false ? ((0u ^ (((0u << (uint(1u))) ^ ((max(num_workgroup, num_workgroup))))))) : subgroup_local_id))))))) | ((min(((((workgroup_base + ((false ? (40818u) : (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id) >> 0u)) * 1u), (((uint(uvec2((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (0u << (((uint(6u)) | uint((((((injectionSwitch.x) + 0.0)) + 0.0))))))))) ^ (0u >> (uint(3u))))) + (((min(subgroup_local_id, ((true ? subgroup_local_id : (workgroup_id)))))) | (((false ? ((0u ^ (((((0u << (uint(1u)))) - (0u >> ((~ (~ (uint(5u))))))) ^ ((max(num_workgroup, num_workgroup))))))) : subgroup_local_id))))))));
 uint next_virtual_gid = workgroup_base + (0u | (subgroup_id)) * (max(subgroup_size, (((~ (((~ ((((injectionSwitch.x > injectionSwitch.y)) ? ((workgroup_base ^ atomicXor(num_workgroup, workgroup_id))) : ((min(subgroup_size, subgroup_size)))))) | (((~ (((clamp(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size))))))) | uint(((sqrt((clamp(((false ? (vec2(37.10, 3.4)) : abs(vec2(1.0, 1.0)))), abs(vec2(1.0, 1.0)), abs(vec2(1.0, 1.0))))) * (injectionSwitch)).x))))))) | ((clamp(((((~ (~ (~ (((~ ((min(subgroup_size, subgroup_size)))) | (((~ ((min(subgroup_size, subgroup_size))))) | uint((injectionSwitch.x))))))))) ^ 0u)), ((((~ (~ (~ (((~ ((min(subgroup_size, subgroup_size)))) | (((~ ((min(subgroup_size, subgroup_size))))) | uint((injectionSwitch.x))))))))) ^ 0u)), ((((~ (~ (~ (((~ ((min(subgroup_size, subgroup_size)))) | (((~ ((min(subgroup_size, subgroup_size))))) | uint((injectionSwitch.x))))))))) ^ 0u)))))))) + (((min((uint(uvec4(((false ? (workgroup_id) : uint(((((uvec3(((((0u | (subgroup_local_id + ((1) | (1))))) | ((0u | (subgroup_local_id + ((1) | (1))))))) % subgroup_size, 0u, 1u))) + uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))), (1u & 1u), 1u, ((max(uint(uvec4(0u, 0u, 0u, ((1u << (uint(3u))) >> (((uint(3u)) >> 0u))))), uint(uvec4(0u, 0u, 0u, ((1u << (uint(3u))) >> (((uint(3u)) >> 0u))))))))))), uint(((uvec3(((0u | (subgroup_local_id + ((1) | (1))))) % subgroup_size, 0u, 1u)) - (max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + ((1) | (((false ? (54323) : 1)))) < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
  }
}
