#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((((((! ((((injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > (clamp((mix((max(vec2(((min((mat2(1.0) * (((min(mix(vec2(((max(8427.0669, (max(8427.0669, 8427.0669))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))), ((min(mix(vec2(((max(8427.0669, (max(8427.0669, 8427.0669))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))))[0], (161.683)), vec2((((min(mix(vec2(((max(8427.0669, (max(8427.0669, 8427.0669))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[0], (161.683)))), (mat2(1.0) * (vec2((12.38), (((min(mix(vec2(((mix(float(8427.0669), ((float(((1.6 + - 1.9)))) / 1.0), (bool(bvec3(bool(((injectionSwitch.x > injectionSwitch.y))), false, false)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[1]))), bvec2(false, true))).y, (mix((max(vec2((((min(mix(vec2(((mix(float((- 1.1)), float((max(8427.0669, (max(8427.0669, 8427.0669))))), bool(true)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (false || ((false || ((true && ((! (false))))))))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[0], (161.683)), vec2((((min(mix(vec2((max(((max(8427.0669, (max(8427.0669, 8427.0669))))), ((max(8427.0669, (max(8427.0669, 8427.0669))))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[0], (161.683)))), (mat2(1.0) * (vec2((12.38), (((min(mix(vec2(((mix(float(8427.0669), float(((1.6 + - 1.9))), bool(((injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[1]))), bvec2(false, true))).y, (mix((max(vec2((((min(mix(vec2(((max(8427.0669, (max(8427.0669, 8427.0669))))), (injectionSwitch)[(min((clamp(1, ((false ? (- 72417) : 1)), 1)), 1))]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))[0], (161.683)), vec2(((((true ? (min(mix(vec2(((max(8427.0669, (max(8427.0669, 8427.0669))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, (! (! (false))))), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)))) : (vec2(62.71, 1.7))))))[0], (161.683)))), (mat2(1.0) * (vec2((12.38), ((((min(((min(mix(vec2(((mix(float(8427.0669), float(((1.6 + - 1.9))), bool(((injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)))) - vec2(0.0, 0.0)), min(mix(vec2(((mix(float(8427.0669), float(((1.6 + - 1.9))), bool(((injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false)), mix(vec2((8427.0669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 899.384)), bvec2(true, false))))))))[1]))), bvec2(false, true))).y))))))))) && true))))
  {
   if((false))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((! ((bool(bvec2(! (false), false)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false || ((false))))
  return;
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (~ ((clamp(~ (((((((min(((~ (~ (((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups))))) / uvec3((injectionSwitch.y), ((true ? (injectionSwitch.y) : (8.7))), (injectionSwitch.y))), (((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((((true ? injectionSwitch : (injectionSwitch))).y), (injectionSwitch.y), (injectionSwitch.y)))) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u))), ~ (((((min((((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) >> uvec3(0u, 0u, 0u))), (((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) | uvec3(0u, (clamp(((((injectionSwitch.x > injectionSwitch.y)) ? (19493u) : 0u)), 0u, 0u)), 0u)))))) / uvec3(1u, 1u, 1u))), ~ (((((((min((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), (((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) | uvec3(0u, 0u, 0u))))) | ((uvec3(0u, 0u, 0u) + ((min((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), (((((false ? ((uvec3(30872u, 77433u, 48073u))) : gl_NumWorkGroups)) / uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) | uvec3(0u, 0u, 0u)))))))))) / uvec3(1u, 1u, ((1u) * 1u)))))))).x;
 if((false))
  barrier();
 if(((bool(bvec3((! (! (false || ((false))))), false, false)))))
  {
   if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, (max(1.0, (max(1.0, (0.0 + (1.0)))))))).y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((((! (! (bool(bool(((((true && ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))
  barrier();
 uint workgroup_base = (min(((clamp(uint(uvec4(workgroup_size, 1u, (clamp(0u, ((0u) ^ 0u), (0u ^ (((0u)) >> 0u)))), 1u)), uint(uvec4(workgroup_size, 1u, 0u, 1u)), uint(uvec4(workgroup_size, 1u, 0u, 1u))))), workgroup_size)) * workgroup_id;
 if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 2.4)), bool(((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if((false))
  {
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((false))
      barrier();
     if((((bool(bvec2(! (! ((! (! ((((min(injectionSwitch.x, injectionSwitch.x)) > ((mix(float((- 383.318)), float(float(mat2x3((float(vec3(injectionSwitch.y, 1.0, (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), (injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))), bool(((injectionSwitch.x < injectionSwitch.y))))))))))))), false))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((false || ((true && ((bool((bvec3(bvec4(bvec3(false, false, false), true)))))))))))
    barrier();
   barrier();
   if(((true && (false))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 uint virtual_gid = ((((~ (~ ((((((workgroup_base) | (workgroup_base))) ^ 0u) * 1u))))) | 0u)) + subgroup_base + subgroup_local_id;
 if((false))
  barrier();
 atomicStore(write_val, (~ (~ (uint(virtual_gid)))), 4, 64, (min(4, ((4) / 1))));
 if((false))
  barrier();
 if((((false || (false || ((((((((mix((vec2(vec3(vec2((- 6722.3737), (injectionSwitch)[1]), 0.0))), vec2((injectionSwitch)[(clamp(0, 0, (((((clamp(false ? ((+ - 37473)) : 0, false ? ((+ - 37473)) : 0, false ? ((((+ - 37473) | (1 ^ 1)))) : 0))) >> 0)))))], (- 2822.4800)), bvec2(true, ((injectionSwitch.x > (clamp(injectionSwitch.y, (float(vec3(injectionSwitch.y, (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))), injectionSwitch.y))))))) - vec2((injectionSwitch.x), (injectionSwitch.x)))).x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (((float(mat4x3(((true ? injectionSwitch.y : (672.780))), 0.0, 0.0, 0.0, 0.0, 1.0, length(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0))) / 1.0))))))
    barrier();
   return;
  }
 uint read_val = atomicLoad(write_val, ((4) ^ ((0) >> ((((((0 ^ (1))) - 0)) | (1)) ^ 1))), 64, (max(2, 2)));
 buf[virtual_gid] = uint(subgroupAllEqual((((((max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? read_val : (subgroup_local_id)))));
 if((((injectionSwitch.x > (min((mix(float(injectionSwitch.y), ((float((1.4))) / 1.0), bool(false))), (mix(float(injectionSwitch.y), ((float((1.4))) / 1.0), bool(false)))))))))
  barrier();
}
