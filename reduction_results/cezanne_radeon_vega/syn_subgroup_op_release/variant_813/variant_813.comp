#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    return;
  }
 else
  {
   if((((false)) && true))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((bool(bvec2((((false) || false)), false))))
        {
         do
          {
           barrier();
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(((((false || (false))) && true)))
        barrier();
       if((((! (! (((bool(bvec4(false, false, false, true))) && true)))))))
        {
         if((false))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((false || (false))))
      barrier();
     do
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     while(false);
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((bool(bvec4(((((float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))), (((! (! (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = ((min(((0 ^ 0) ^ 0), 0 ^ 0))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if(((! (! (false)))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
  }
 else
  {
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
       if((((false) && true)))
        break;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((((bool(bvec4(((((bool(bvec2((! (! (injectionSwitch.x > injectionSwitch.y))), true)))))), false, false, true))) || false)))
  {
   if((false))
    {
     if(true)
      {
       return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
    }
   if(false)
    {
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(false)
      {
       if((false))
        barrier();
      }
     else
      {
       if((false))
        {
         if((((false) || false)))
          return;
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           barrier();
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(((! (! (false)))))
          barrier();
        }
       if(((! (! (false)))))
        barrier();
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((false || (false))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(((false || (false))))
    barrier();
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if((false))
  barrier();
 if(((((((! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! ((((bool(bvec4(! (((((injectionSwitch.x > injectionSwitch.y))) && true)), true, true, true))) || false))))))
  {
   if(true)
    {
     return;
     if((false))
      barrier();
    }
   else
    {
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     while(false);
     if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if(((((bool(bool(false)))) || false)))
      {
       if((false))
        continue;
       if(((bool(bvec4(false, false, false, false)))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((false) && true)))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((bool(bvec4(false, false, false, true)))))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! ((bool(bvec4(! (false), true, true, true)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false) && true)))
      barrier();
     if((! ((((injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((((false) && true))) && ((injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
     if(((bool((bvec3(bvec4(bvec3(false, false, true), ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(((injectionSwitch.x > (min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((false))
      barrier();
     if(((((clamp(((injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        barrier();
       if(false)
        {
         if(((false || (false))))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         barrier();
         if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
          return;
        }
      }
    }
   if((false))
    return;
   do
    {
     if((((((bool(bool((false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      barrier();
     return;
     if((false))
      {
       if((false))
        barrier();
       break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y) || false), false)))))))
  return;
 if((false))
  barrier();
 if((bool(bvec2((((! (! (bool(bvec3(false, false, false))))))), false))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((((((! ((((! (! (! ((false) || false))))) && true)))) && true))))
  {
   if(((((true && ((! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if((((false) || false)))
  barrier();
 if(((((! (! (false)))) || false)))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)), ((true) && true)))))
    {
     if((false))
      barrier();
     barrier();
    }
   do
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while((((bool(bvec2(false, false)))) || false));
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  return;
 if((((true && ((false)))) || false))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     return;
    }
   if(((false || (false))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((((injectionSwitch.x > injectionSwitch.y)) || (((false) || false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool(bvec4(false, false, true, true)))))
  {
   if((false))
    return;
   barrier();
   if((false))
    barrier();
  }
 do
  {
   if(((((clamp((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 5.1), (- 21.07)), bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))).x, (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 5.1), (- 21.07)), bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))).x, (((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 5.1), (- 21.07)), bvec2((((! (! (((((! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))))) || false), ((injectionSwitch.x > injectionSwitch.y))))).x) / 1.0))) > injectionSwitch.y))))
    {
     if(((((false || (false))) || ((injectionSwitch.x > injectionSwitch.y)))))
      {
       if((false))
        barrier();
       return;
      }
     if(((bool(bool(false)))))
      barrier();
     if((true && ((false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        break;
       if(((((true && (false))) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if((false))
        barrier();
       continue;
      }
     if(((bool(bvec4(((false) || false), ((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true)))))
      break;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false || ((((false)) && true))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      continue;
     barrier();
    }
  }
 while(false);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if((false))
      return;
    }
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       return;
      }
    }
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 if((false))
  return;
 if((false))
  {
   if((((false)) && true))
    barrier();
   return;
  }
 if((((true && ((false)))) || false))
  barrier();
 if(((! (! (bool((! ((! (! ((false || (((! (false || ((bool(true))))) || false))))))))))))))
  {
   if((false))
    barrier();
   if((((((((min((injectionSwitch.x) / (max((float(vec2(1.0, 1.0))), 1.0)), (injectionSwitch.x) / (max(1.0, 1.0))))) > injectionSwitch.y)) && true))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if((false))
        return;
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         return;
        }
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if((false))
      barrier();
     for(int _injected_loop_counter = (int(ivec2(1, 1))); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((false) && true)))
        break;
       return;
      }
     if((false || ((false))))
      {
       if((false))
        return;
       return;
       if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
        barrier();
      }
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    return;
  }
 else
  {
   if(((((max(((injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(true)
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     else
      {
       if((false))
        return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((((min(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sin(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, tan(0.0), 1.0)), float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, sin(0.0), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, tan(0.0), 1.0))))) > injectionSwitch.y))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      barrier();
     if((false))
      return;
    }
  }
 while(((false) || false));
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if((false))
        {
         if((false))
          break;
         barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while((! (! (false))));
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if(true)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if((! ((false || (! (((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((injectionSwitch.x > (float(mat3x4(((false ? (- 6254.2253) : injectionSwitch.y)), ((mix(vec2(((clamp(6082.2934, 6082.2934, 6082.2934))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], ((- - 2.0))), bvec2(true, false))).y), (clamp(1.0, (0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, (float(((false ? (mat4(8.0, 93.86, 24.07, 5303.9623, - 26.91, 430.371, - 1.7, - 9.4, 72.29, - 2.2, - 3.6, 71.89, 8.6, 7.5, 36.67, - 57.88)) : mat4(1.0, 0.0, log(1.0), 0.0, determinant(mat3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt((((mix(float((4.0)), float(1.0), bool(true)))) + 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, 1.0)))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((false || (false))))
      return;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if(((true && (false))))
        {
         if((((((false) || false)) && true)))
          {
           if((false))
            {
             if(((bool(bvec4(false, true, true, false)))))
              barrier();
             return;
            }
           return;
          }
         if(((false || (false))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         if(((true && ((false || (false))))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if(((((max((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(((! ((true && (! (((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((((! (! (injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
        }
       else
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             barrier();
             if(((! ((false || (! (false)))))))
              barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((! (! (false)))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               return;
              }
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if(false)
              {
               if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                {
                 if((false))
                  return;
                 barrier();
                }
              }
             else
              {
               if(false)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((false) || false)))
                  return;
                }
               if((false))
                return;
               if((false))
                barrier();
               return;
               if((false))
                barrier();
              }
             if(((true && ((false || (false))))))
              return;
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             return;
            }
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              return;
             if((false))
              return;
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              return;
             barrier();
            }
           return;
           if(((bool((bvec2(bvec4(bvec2(false, false), false, true)))))))
            barrier();
           if((false))
            return;
          }
         if(((((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && ((injectionSwitch.x < injectionSwitch.y))))
          return;
         if((false))
          barrier();
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > (51850 & 0); _injected_loop_counter --)
      {
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       if((true && (false)))
        {
         if((false))
          return;
        }
       else
        {
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((! (! ((false)))))
          {
           if((false))
            return;
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            barrier();
           if((false))
            return;
           barrier();
          }
         if(((false || (false))))
          return;
        }
      }
     if((false))
      return;
     if((false))
      {
       if(((true && (false))))
        return;
       if((false))
        barrier();
       if((false || ((false))))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          barrier();
         barrier();
        }
       else
        {
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((! (! (bool(bvec4((! (! (false))), false, false, true))))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   if((! (! ((((false)) || false)))))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((false))
      {
       if((false))
        {
         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       barrier();
       if((false))
        barrier();
      }
    }
  }
 if((((! (! (((false || ((bool(bvec4((bool(bvec3((bool(bool(((false) || false)))), false, true))), false, false, true))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((! (! (false)))))
      return;
     return;
    }
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = (((max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | 0u);
 do
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(((false) || false));
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     return;
    }
  }
 do
  {
   if(((((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))))))
    {
     if((false))
      continue;
     if((((((((clamp(min(injectionSwitch, ((injectionSwitch) * exp(vec2(0.0, 0.0)))), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     continue;
    }
   if((((((! (! ((false) && true))))) || false)))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((((false) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((bool(bvec4((! (! (false))), false, false, true)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = (max(((workgroup_size) | (workgroup_size)), workgroup_size));
 if(((((((mix(vec2((injectionSwitch)[0], (float(83643))), vec2((- 38.50), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x > (min((vec2(mat3x2(injectionSwitch, (dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))), (vec2((clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y))))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec2(((((((injectionSwitch.x > injectionSwitch.y))) || false)) || false), false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if(((bool(bvec4(((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y)), ((injectionSwitch.x < injectionSwitch.y)), false, true)))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        return;
       if(((true && (false))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         barrier();
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          break;
         if((((false)) || false))
          break;
         if(((((true && (false))) && ((injectionSwitch.x < injectionSwitch.y)))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        {
         for(int _injected_loop_counter = (((1 << (int(4))) >> (int(4))) | int((injectionSwitch.y))); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           do
            {
             if((false))
              {
               if((false))
                return;
               barrier();
              }
            }
           while(false);
           if((false))
            break;
           barrier();
           if((false))
            {
             if((false))
              barrier();
             break;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          break;
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > ((true ? (max(((injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)) : (vec2(- 3.8, 6.4)))).y))))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((((injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           barrier();
           if((false))
            return;
          }
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((false) || false)))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         continue;
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         return;
        }
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
  }
 if(((! (! (false)))))
  return;
 uint workgroup_id = (uvec3(1u, 1u, 1u) * ((min(gl_WorkGroupID, ((true ? gl_WorkGroupID : ((uvec3(196683u, 165324u, 111779u) | uvec3(42218u, 15437u, 72757u))))))))).x;
 if(((((max((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if(false)
      {
      }
     else
      {
       barrier();
       if((false))
        barrier();
       if((((false) && true)))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
    }
   if((((false)) && true))
    {
     if(((bool(bvec3(false, false, false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if(((bool(bvec3(false, true, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((false) && true)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if((((false)) || false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec2(false, true)))))
    return;
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((((float(mat4x3(injectionSwitch.x, 1.0, determinant(mat2(1.0, sqrt(1.0), 0.0, 1.0)), tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 0.0))) > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((((bool(bvec3(((! (! (((false) || false))))), ((injectionSwitch.x > injectionSwitch.y)), false))) || false)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((true && ((bool(bool(false)))))))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > (mix(vec2((518.946), (injectionSwitch)[1]), vec2((mix(float((injectionSwitch)[0]), float((- 3591.3448)), bool(false))), (23.48)), bvec2(true, false))).y))))
          barrier();
         if((false))
          return;
        }
       if((false))
        return;
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(true)
        {
         return;
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((bool(bool((((injectionSwitch.x > injectionSwitch.y))))))) || false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          return;
         if(false)
          {
           if(((false || (false))))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           if((false))
            barrier();
           return;
          }
         if((bool(bvec2((false || ((((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           barrier();
          }
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
          }
         if((false))
          return;
        }
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if((false))
        {
         if(true)
          {
           if((false))
            barrier();
           return;
           if((false))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         return;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((bool(bvec3(true, true, ((injectionSwitch.x > ((true ? injectionSwitch.y : (atan(436.627))))))))))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((injectionSwitch.x) * 1.0) > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            break;
           continue;
          }
         if((((((false ? (vec2(- 1.8, - 383.688)) : injectionSwitch)).x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     while(false);
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           if((false))
            barrier();
          }
         else
          {
          }
         return;
        }
       barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if((false))
            barrier();
          }
         if(((true && (false))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if((false))
      {
       if(((bool(bvec4((! (! (false))), false, true, true)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
        }
       else
        {
         return;
         if(((bool(bvec4(((injectionSwitch.x > ((false ? (injectionSwitch) : ((injectionSwitch) - vec2(0.0, 0.0)))).y)), false, false, false)))))
          barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(((bool((bvec2(bvec2(bvec2(false, false))))))))
          barrier();
         return;
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != (int((injectionSwitch.x)) << (int(6))); _injected_loop_counter --)
        {
         return;
         if((false))
          {
           if((false))
            barrier();
           break;
          }
         if(((((vec2(mat2x3((min(injectionSwitch, ((injectionSwitch) * mat2(1.0)))), 1.0, 1.0, log(1.0), 0.0))).x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
      }
     if(true)
      {
       if(true)
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         if(((((min((vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if((! (! ((((((false) || false)) || false))))))
        {
         do
          {
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         while(false);
         if(((bool(bool(false)))))
          barrier();
        }
       if((false))
        {
         if(((bool(bool(false)))))
          return;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(true)
        {
         return;
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if(false)
        {
        }
       else
        {
         if(((true && ((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if(((! (! (false)))))
            return;
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if(((((! (! (false)))) && true)))
                barrier();
               do
                {
                 return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                barrier();
               return;
               if((false))
                barrier();
              }
             if((false))
              barrier();
             if((false))
              {
               if(((bool(bvec2((! (! (false))), false)))))
                return;
               barrier();
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(false)
            {
             if((false))
              barrier();
            }
           else
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           barrier();
           if((false))
            return;
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       do
        {
         if((((((true && (! (! (false))))) && true))))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             return;
            }
           if((false))
            barrier();
           if((((false) || false)))
            barrier();
          }
        }
       while(false);
       if((false))
        {
         if(((bool(bvec4(false, true, true, true)))))
          return;
         return;
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   else
    {
     if((false))
      return;
     if(false)
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        return;
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           return;
          }
         barrier();
        }
      }
     if((bool(bvec2(((((! (! ((! ((true && (! (injectionSwitch.x > injectionSwitch.y))))))))))), ((injectionSwitch.x > (mix(vec2((float((- 9.9 == 170.608))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (vec3(61.67, - 0.7, 8.3).p)), bvec2((false || (true)), false))).y))))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if((false))
  barrier();
 if(((((((max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if(((bool((bvec2(bvec2(bvec2(bool(bvec4((false), true, true, true)), true))))))))
    barrier();
   barrier();
   if(((! ((bool(bvec2(! (false), true)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       return;
      }
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
         if((false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if(((false || (false))))
              {
               if((false))
                barrier();
               return;
              }
             if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  continue;
                }
              }
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((((false) && true)))
              {
               if((false))
                continue;
               if((false))
                barrier();
               barrier();
               if((false))
                barrier();
              }
             if((false))
              break;
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((false) || false)))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(((((! ((bool((bvec2(bvec2(bvec2(! ((true && (injectionSwitch.x > injectionSwitch.y))), false))))))))))))
        {
         if(((! (((! (false)) || false)))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          {
           if((false))
            barrier();
           continue;
          }
         if((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec4(true, false, true, ((injectionSwitch.x > injectionSwitch.y))))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || false)))
            barrier();
          }
         else
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       do
        {
         if(((! (! ((bool(bvec2(false, true))))))))
          return;
        }
       while(false);
       if((false))
        {
         if((false))
          break;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(((bool(bvec2(false, false)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           return;
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if(((! (! (false)))))
          barrier();
         do
          {
           return;
          }
         while(false);
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          break;
         barrier();
        }
       if((false))
        break;
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if((false))
          barrier();
        }
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           return;
           if((false))
            {
             if((false))
              barrier();
             return;
            }
          }
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     do
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
        {
         if((false))
          return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((false))
              {
               if(((true && (false))))
                barrier();
               break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
                  barrier();
                 break;
                }
               if((false))
                {
                 if((false))
                  barrier();
                 break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                return;
               barrier();
              }
            }
           else
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
              {
               if(((bool((bvec3(bvec4(bvec3(false, false, true), true)))))))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              {
               if((false))
                barrier();
               if(((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
                break;
               return;
              }
            }
           if((false))
            barrier();
           barrier();
           if((false))
            {
             if(((bool(bool(false)))))
              return;
             barrier();
            }
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               barrier();
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               break;
              }
            }
           if((false))
            barrier();
           if((((((false) || false)) || false)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              break;
             barrier();
            }
          }
        }
       if((false))
        continue;
       if((false))
        barrier();
       if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((59.05), (((- 0.5)) * 1.0)), bvec2(false, false))).x > injectionSwitch.y))))
        {
         if((false))
          continue;
         if((false))
          return;
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           return;
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             continue;
            }
           barrier();
          }
        }
      }
     while((((((! ((! (! (! ((bool(bvec2(false, true)))))))))) && true) || false)));
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if(((injectionSwitch.x < ((false ? (vec2(9073.5899, - 4823.1316)) : injectionSwitch)).y)))
  {
   if(((! ((bool(bvec2((bool(bool(! (false)))), false)))))))
    {
     if(((((bool((bvec2(bvec3(bvec2(false, true), true)))))) || false)))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y + ((true ? GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size : (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((false)) || false))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
    }
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 do
  {
   do
    {
     if((false))
      return;
     if((((((((injectionSwitch.x > injectionSwitch.y)) && true)))) && (bool(bool(true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((((injectionSwitch.x > (mix(vec2((- 0.7), (injectionSwitch)[1]), vec2((min((injectionSwitch)[0], (float(mat3x2((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))))), (- 29.12)), bvec2(((injectionSwitch.x < injectionSwitch.y)), false))).y))))
        {
         if((false))
          return;
         barrier();
         if((false))
          barrier();
        }
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   while(false);
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     return;
    }
   if((false))
    return;
   if(true)
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       if((false))
        barrier();
       if(((true && (bool(bvec4((true && (true)), true, false, false))))))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       else
        {
         if((false))
          continue;
        }
       if((false))
        continue;
       if((false))
        barrier();
      }
    }
   else
    {
     if((false))
      barrier();
    }
   if((true && (((! (! (false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    break;
  }
 while((((vec2(mat2x4(injectionSwitch, 1.0, 0.0, (max(0.0, 0.0)), 0.0, 1.0, 1.0))).x > injectionSwitch.y)));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((! (! ((((false)) && true)))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((((! (! (bool(bvec4(((false)) && (((! (! (true)))) && true), true, true, false)))))) || false))))
  {
   if((((injectionSwitch.x > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((1658.8859), (float((187360u ^ 117114u)))), bvec2(false, false))).y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + ((subgroup_id * ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) | ((((true ? (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size * uvec2(148800u, 28481u))))) | uvec2((1u * (0u)), 0u)))).y) | (min(((0u) | (0u)), (0u | (0u))))) + (((uvec2(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[0], (max(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1], GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size[1])))).x + 1) % (((uvec2(((uvec3(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 0u)) << uvec3(0u, 0u, 0u)))) | (uvec2((max(((uvec3(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 0u)) << uvec3((uint(uvec4(0u, 0u, uint((injectionSwitch.y)), 1u))), 0u, 0u)), (~ (((~ (((uvec3(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 0u)) << uvec3(0u, 0u, 0u))))) | ((~ (((uvec3(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, 0u)) << uvec3(0u, 0u, 0u))))))))))))).y);
 if((false))
  {
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false || (((((true && (bool(bvec4((((((injectionSwitch.x > injectionSwitch.y)) && true)) && ((injectionSwitch.x < injectionSwitch.y))), false, ((bool(bvec3((false) || false, true, true)))), ((injectionSwitch.x < (min(injectionSwitch.y, injectionSwitch.y))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(((((bool(bvec2(false, true)))) && true)))
      {
       for(int _injected_loop_counter = 0; (true && (_injected_loop_counter < 1)); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if((false))
          barrier();
        }
       if((((false)) || false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if(((! ((true && (! (false)))))))
          continue;
        }
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   do
    {
     if((false))
      continue;
     if((((true && ((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          break;
         break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(((bool(bvec4(false, true, false, true)))))
        barrier();
      }
     return;
     if((false))
      continue;
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   do
    {
     if(((! (! (false)))))
      return;
     if((false))
      continue;
    }
   while(false);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if((((((false) && true)) && true)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if((false))
    return;
   if((false))
    barrier();
   if(((false ? (workgroup_id) : (uint(uvec2((((min(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) ^ uvec2(0u, 0u)))) + uvec2(0u, 0u))).x + 1, 0u))))) < GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)
    {
     if((((! (! (false))) || (false))))
      {
       if(((false || (((bool(bvec4((false) && true, false, false, false))))))))
        barrier();
       if((((false) || false)))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        continue;
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if((((! (! (bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(((! (! ((bool(bool(false))))))))
      break;
     if((! (((bool(bvec2(bool(bvec4(! ((((injectionSwitch.x > injectionSwitch.y)))), true, true, false)), false)))))))
      barrier();
     if((false))
      break;
     if((false))
      {
       if((((true && (bool(bvec4(false, false, false, false)))))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       continue;
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((bool(bvec3((false), ((true) || false), ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          continue;
         if((false))
          return;
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       atomicStore(buf[next_virtual_gid], uint((((~ ((clamp(((~ (2)) ^ 0), ~ (2), (clamp(~ (2), ~ (2), ~ (2)))))))) >> (0 << (int(4))))), 4, 64, 4);
       if((((true && (! ((((bool(bool(! (false))))) && true)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           break;
          }
         if(((((((clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         if((false))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if((false))
              {
               if(((! (! (false)))))
                barrier();
               barrier();
              }
             break;
            }
           if((((! (! (((mix(float((584.307)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
            {
             if((false))
              return;
             if((false))
              barrier();
             barrier();
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if(((! (! (false)))))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((false) && true)))
          barrier();
         if((false))
          barrier();
         if(((bool(bvec4((! (! (false))), true, true, true)))))
          {
           if((false))
            break;
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          break;
         return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            break;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if((false))
          break;
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(((bool(bool(((bool(bool((false)))))))) || false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((false))
          {
           if((false))
            break;
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
           if((((! ((! (! (! (((false || (((injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
            {
             if((false))
              break;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(((((((false || (((injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               if((false))
                break;
               break;
              }
             if((((false) && (false || (true)))))
              {
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  continue;
                 do
                  {
                   barrier();
                  }
                 while((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x < injectionSwitch.y)), true, true))));
                 if((false))
                  barrier();
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  barrier();
                 break;
                }
               return;
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if(((((max((float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             if((false))
              break;
             if((((true && (bool(bool(false)))))))
              barrier();
             if((false))
              barrier();
             if((false))
              return;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if((false))
            barrier();
           if((false))
            continue;
          }
         if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             return;
            }
           return;
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if((false))
          barrier();
         return;
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        continue;
       for(int _injected_loop_counter = (0 << (int(6))); _injected_loop_counter != ((1 << ((min((int(ivec4(int(7), 1, 0, 0))), int(7))))) >> (int(7))); _injected_loop_counter ++)
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if(((bool(bvec4((((max(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))).x > ((((true) || ((injectionSwitch.x > injectionSwitch.y))) ? injectionSwitch : (vec2(- 3065.1191, - 5.3)))).y)), false, (true && (((false) && true))), false)))))
        barrier();
       if((false))
        continue;
       do
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          continue;
        }
       while(false);
       if((false))
        return;
       if(((true && ((bool(bvec3(false, true, false)))))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((true) || false))
          {
           if((((injectionSwitch.x > ((injectionSwitch.y) - (dot(vec4(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), vec4(0.0, 0.0, 0.0, 0.0))))))))
            barrier();
           if((false))
            {
             do
              {
               if((false))
                return;
               if((false))
                continue;
               if((false))
                barrier();
              }
             while(false);
             barrier();
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((! (! ((bool(bvec2(true, true)))))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             barrier();
             if((((true && (bool(bvec3(false, true, true)))))))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
            }
           else
            {
            }
          }
         if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
          return;
         if((false))
          {
           if((false))
            continue;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
             if((false))
              barrier();
            }
           if(true)
            {
             if((false))
              barrier();
             if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if(((bool(bvec3(false, false, false)))))
                barrier();
               continue;
              }
            }
           else
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 if((false))
                  break;
                 continue;
                 if((false))
                  barrier();
                }
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           if(((((injectionSwitch.x < injectionSwitch.y)) && (((false) && true)))))
            barrier();
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((true && (false))))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if(((bool((bvec3(bvec3(bvec3(false, ((injectionSwitch.x > injectionSwitch.y)), false))))))))
          barrier();
        }
       return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
      }
     if((false))
      continue;
     subgroupAll(false);
     if((false))
      continue;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           break;
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          break;
         break;
        }
       if((false))
        return;
       if((false))
        return;
       if((((false) || false)))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(((((vec2((transpose(transpose(mat2x4(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, ((false ? (234.975) : (min(1.0, 1.0)))), 0.0)))))).x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          {
           if(((false || (false))))
            {
             if((false))
              {
               if((false))
                barrier();
               break;
              }
             if((false))
              return;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 continue;
                }
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           break;
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       while(false);
       if((false))
        continue;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if((false))
      break;
     atomicStore(buf[next_virtual_gid], uint(2), ((4) ^ 0), 64, ((false ? (- 74264) : (0 | (4)))));
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(true);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (mix(vec2((3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (((min(((true ? float(mat3x4(- 386.236, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, (dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0)))))) : (- 1.9))), float(mat3x4(- 386.236, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, (dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0))))))))))), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))).y))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            continue;
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((((! ((false || (! ((false))))))) || false))
      break;
     if((false))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        break;
      }
     while(false);
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(((false || ((((((min((min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          break;
         barrier();
        }
      }
     if((false))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 | 1) << ((max(int(6), int(6))))) >> (int(6))); _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((false || ((false))))
        {
         if((((false) && true)))
          barrier();
         if(((false || (((false) || false)))))
          {
           if(((! (! (false)))))
            return;
           barrier();
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
          continue;
         barrier();
        }
       break;
      }
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
       if((false))
        continue;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((bool((bvec3(bvec3(bvec3(bool(bvec3(((((injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y)), true, true)), ((injectionSwitch.x > injectionSwitch.y)), true)))))))))
      return;
     if((false))
      continue;
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        break;
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          continue;
         continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((! ((true && (! (bool(bvec3((false || (((((false) && true))))), false, false))))))))
        {
         if((false))
          continue;
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              continue;
             if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           return;
           if((false))
            barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if(((! (! (false)))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       if((false))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y) || ((false) || (! (! (false)))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((bool(bvec4((((bool((bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x > injectionSwitch.y))), false, false))))))), false, true, false)))))
          return;
         if(((bool(bvec2(false, true)))))
          barrier();
         for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              continue;
             return;
            }
           if((false))
            barrier();
           if((false))
            {
             if(((true && (false))))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
           if((((((((bool(bvec3((((! (! ((((((false)) || false)) || false) && true)))) || false), ((injectionSwitch.x > injectionSwitch.y)), false))) || ((injectionSwitch.x > injectionSwitch.y))))) && true))))
            {
             if((false))
              barrier();
             break;
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if(((! (! ((bool(bvec2(false, true))))))))
              barrier();
             continue;
             if((false))
              barrier();
            }
          }
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if((false))
        barrier();
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         while(false);
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if((false))
        barrier();
      }
     if((bool(bool(false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((false))
    barrier();
  }
 while((! ((false || ((! (! (! ((false || (false)))))))))));
 if(((false || (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
}
