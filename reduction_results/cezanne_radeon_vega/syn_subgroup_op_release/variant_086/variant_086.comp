#version 460

struct _GLF_struct_10 {
 ivec3 _f0;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 float _f1;
 mat3 _f2;
 mat2 _f3;
 mat2x4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 bvec4 _f1;
 vec3 _f2;
 vec2 _f3;
 mat4x2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 uint next_virtual_gid;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 uint _f3;
 float _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat3 _f3;
 mat2 _f4;
 mat3x4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat2 _f3;
 uvec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_5 _f0;
 _GLF_struct_11 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((bool((bool(bvec3(bool(false), false, true))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             do
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
              }
            }
          }
        }
      }
     for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter > ((0) / 1); _injected_loop_counter --)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
       do
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if(((bool(bvec4(false, true, false, true)))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(true)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if((false))
            {
             if(true)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(false)
          {
          }
         else
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
            }
           else
            {
             if((false))
              barrier();
            }
          }
        }
       else
        {
        }
      }
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
            }
          }
         else
          {
          }
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   barrier();
  }
 if((false))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = (((1 & 1) << (int(6))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
       if((false))
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(true)
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(true)
          {
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(4))) >> (((int(4)) - 0))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
      }
     while(false);
     do
      {
       if((false))
        barrier();
      }
     while(false);
    }
   do
    {
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              {
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           do
            {
             if(((((injectionSwitch.x < injectionSwitch.y))) && true))
              {
               if((false))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(false);
          }
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
        {
         if(true)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(2))); _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > ((int((injectionSwitch.x))) | 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false || (((false) && true))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
            }
          }
         else
          {
          }
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if(true)
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
  {
   if(false)
    {
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if((false))
        {
         do
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         while(false);
        }
       if((false))
        barrier();
       do
        {
         if((false))
          barrier();
         barrier();
        }
       while((true && (((injectionSwitch.x > injectionSwitch.y)))));
      }
     for(int _injected_loop_counter = ((0 & int(99646u)) >> (int(6))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
    }
   else
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(true)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            {
             if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
              barrier();
             if(false)
              {
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
              }
             barrier();
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           if(false)
            {
            }
           else
            {
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                      }
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       do
                        {
                         if(((! (! (false)))))
                          barrier();
                        }
                       while(false);
                      }
                     if((false))
                      barrier();
                    }
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if((false))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(true)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     do
                      {
                       barrier();
                       for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     while(false);
                    }
                   else
                    {
                    }
                  }
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                 if(true)
                  {
                   do
                    {
                     if((false))
                      barrier();
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                  }
                 else
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((! (! (false))))
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             while(false);
            }
           if((false))
            {
             for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter > (- 74323 & int((injectionSwitch.x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (ivec2(43111, 58128).r & (- 83348 & 0)); _injected_loop_counter --)
              {
               if((true && ((bool(bvec2(false, true))))))
                {
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       barrier();
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
              }
            }
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 do
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if(true)
                        {
                         if((false))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (((1 << (int(0))) >> (int(0))) & 1); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                 while((! (! (false))));
                }
              }
             do
              {
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               if((false))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> (int(7))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(false);
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
               do
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   barrier();
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> ((0 + (int(7))))); _injected_loop_counter --)
                  {
                   if(true)
                    {
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           do
            {
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           for(int _injected_loop_counter = (0 | (0 | (0 | 0))); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
            }
           do
            {
             do
              {
               if((false))
                {
                 for(int _injected_loop_counter = (0 & 74489); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             while(false);
            }
           while(false);
          }
         if((false))
          barrier();
        }
       else
        {
        }
       if((false))
        barrier();
      }
     else
      {
      }
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     do
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     while(false);
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    {
     do
      {
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
     while(false);
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
          {
           if(false)
            {
            }
           else
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (((int(5)) / ((1 << (int(5))) >> (int(5)))))); _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                  }
                 barrier();
                }
               barrier();
              }
            }
           if(((false || (false))))
            barrier();
          }
        }
       if((false))
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       if((false))
        {
         do
          {
           if((bool((bvec2(bvec3(bvec2(false, false), true))))))
            {
            }
           else
            {
             barrier();
            }
          }
         while(false);
        }
      }
     while(false);
    }
   if(true)
    {
     do
      {
       if(true)
        {
         if(true)
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | (0 >> (int(5)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               do
                {
                 do
                  {
                   for(int _injected_loop_counter = ((1) + 0); _injected_loop_counter > ((0) * 1); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 while(false);
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
             barrier();
            }
           for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while(false);
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 if(true)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 81426); _injected_loop_counter --)
                          {
                           do
                            {
                             barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         if(((true && (false))))
                          barrier();
                        }
                       barrier();
                      }
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  barrier();
                }
              }
            }
           for(int _injected_loop_counter = (((1 << (int(2))) >> ((max(int(2), int(2))))) & 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if(true)
              {
               if((false))
                {
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 if(true)
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = ((0 ^ 0) ^ 0); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     for(int _injected_loop_counter = (50783 & 0); _injected_loop_counter < ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 barrier();
                 if(((((injectionSwitch.x < injectionSwitch.y))) || false))
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(false);
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(8))); _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               if((false))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               for(int _injected_loop_counter = ((1 | 1) ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                barrier();
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
             if((false))
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
              }
             do
              {
               do
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = ((1 ^ 1) ^ 0); _injected_loop_counter != (1 ^ int((injectionSwitch.x))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 while(false);
                }
               while(false);
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             while(false);
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
          }
        }
       else
        {
        }
      }
     while(false);
    }
   else
    {
    }
  }
 if(false)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   for(int _injected_loop_counter = (10492 & 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((false))
      barrier();
    }
   while(false);
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((! (! (true))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if((false))
  {
   do
    {
     if((false))
      barrier();
     if(((bool(bvec3(false, false, true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(false);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       if((false))
        barrier();
      }
     while((false || (false)));
     if(((true) || false))
      {
       barrier();
      }
     else
      {
      }
    }
   while(false);
  }
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     do
      {
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
          {
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if(true)
              {
               do
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             do
                              {
                               barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           while(false);
                          }
                        }
                       else
                        {
                        }
                      }
                     barrier();
                    }
                  }
                }
               while(false);
               barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 & - 61036); _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = ((1 << (int(7))) >> (((false ? (13018) : int(7))))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         if((false))
                          {
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           do
                            {
                             if(true)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                             barrier();
                             for(int _injected_loop_counter = ((1 << (int(7))) >> (int(7))); _injected_loop_counter > (0 << (int(8))); _injected_loop_counter --)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           while(false);
                           if(((bool(bvec4(false, true, false, false)))))
                            barrier();
                          }
                        }
                      }
                     barrier();
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       do
                        {
                         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > (0 & - 39634); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                  }
                }
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
               if((false))
                {
                 do
                  {
                   if(true)
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   else
                    {
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((! (! (((injectionSwitch.x > injectionSwitch.y))))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         barrier();
                         if(((bool(bvec3(false, false, true)))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                        }
                       if((false))
                        {
                         if(true)
                          {
                           do
                            {
                             barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     do
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     barrier();
                    }
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           else
            {
            }
           if((false))
            {
             if((false))
              barrier();
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter != ((1 << (int(6))) >> ((~ (~ ((0 | (int(6)))))))); _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(false);
              }
             barrier();
             if(((true && (((((injectionSwitch.x > injectionSwitch.y))) && true)))))
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
           if(false)
            {
             if(true)
              {
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((! (! (true))))
                    {
                     do
                      {
                       for(int _injected_loop_counter = (0 | (0)); _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                         if((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if(true)
                {
                 barrier();
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
              }
             do
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             if((false))
              barrier();
            }
           while(false);
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       if(((false || (false))))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != ((false ? (18293) : 1)); _injected_loop_counter ++)
            {
             do
              {
               barrier();
              }
             while((false || (false)));
            }
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     barrier();
     for(int _injected_loop_counter = (0 >> (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
  {
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(((true && (false))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = (((1 << ((~ (~ (int(5)))))) >> (int(5))) & 1); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         do
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       barrier();
       do
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       while(false);
      }
     else
      {
       if((false))
        {
         if((false))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(false);
   if((false))
    barrier();
  }
 for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if(true)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = ((- 64113) & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 do
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               else
                {
                }
              }
            }
           while(false);
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     barrier();
    }
   else
    {
    }
  }
 if(true)
  {
   if(true)
    {
     if(true)
      {
       if((bool(bool(true))))
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if((false))
      {
       for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != (0 & 66501); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((0 ^ 1) | 1); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       do
        {
         barrier();
        }
       while(false);
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           do
            {
             do
              {
               barrier();
              }
             while(false);
            }
           while(false);
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(true)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   if(false)
    {
    }
   else
    {
     barrier();
    }
   if(true)
    {
     if((false))
      barrier();
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(false);
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if((false))
              {
               do
                {
                 for(int _injected_loop_counter = (0 >> (((int(4)) << 0))); _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((false))
              barrier();
             barrier();
            }
           while(false);
          }
         barrier();
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
            }
           barrier();
          }
        }
       while(false);
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter != ((0 ^ 1) | 0); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             do
              {
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         do
          {
           if((false))
            {
             if((false))
              {
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if((false))
              barrier();
             barrier();
            }
           if(false)
            {
            }
           else
            {
             if(true)
              {
               do
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(((! (! (false)))))
                    barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                     if((false))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       barrier();
                      }
                    }
                  }
                 while(false);
                }
               if(false)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 22547); _injected_loop_counter --)
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       if(true)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if(true)
                            {
                             if((false))
                              {
                               for(int _injected_loop_counter = (((1 << (int(1))) >> (int(1))) | 1); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             while(false);
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                         if((false))
                          barrier();
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                          }
                        }
                       do
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = ((0) | (0)); _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((false))
                            barrier();
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   else
                    {
                    }
                  }
                }
               if(((! (! (false)))))
                barrier();
               for(int _injected_loop_counter = (clamp((0 | 0), (0 | 0), (0 | 0))); _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                }
               do
                {
                 if((false))
                  barrier();
                }
               while((false || (false)));
              }
            }
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if(((((injectionSwitch.x < injectionSwitch.y))) || false))
              {
               if((false))
                barrier();
              }
             else
              {
              }
             barrier();
             if((false))
              barrier();
            }
          }
        }
       while(false);
      }
    }
  }
 if((false))
  {
   if(((false) || false))
    {
    }
   else
    {
     do
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(false);
    }
   if(((bool(bvec4((bool(bool(false))), false, false, true)))))
    {
     if((false))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     barrier();
     if(true)
      {
       if((false))
        barrier();
      }
     else
      {
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     do
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      {
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         do
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              {
               do
                {
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = (0 ^ (0)); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                  }
                 barrier();
                }
               while(false);
              }
            }
           if((false))
            {
             if((bool(bool(false))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(false);
        }
       do
        {
         do
          {
           do
            {
             if((false))
              barrier();
            }
           while(false);
           if(((((injectionSwitch.x > injectionSwitch.y))) || false))
            {
            }
           else
            {
             do
              {
               if(true)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
                  {
                   if((bool(bvec2(false, true))))
                    {
                    }
                   else
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         do
                          {
                           for(int _injected_loop_counter = (57260 & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                  {
                                   do
                                    {
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         barrier();
                                        }
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                       do
                                        {
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       while(false);
                                      }
                                    }
                                   while(false);
                                  }
                                }
                               barrier();
                               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if((false))
                        barrier();
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         do
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           barrier();
                           if((false))
                            barrier();
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       else
                        {
                        }
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     if((((false) || false)))
                      {
                       do
                        {
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     if((false))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if((false || ((true && (true)))))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             do
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             while(false);
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                         barrier();
                        }
                       if((false))
                        barrier();
                       if(((bool(bvec3(false, false, false)))))
                        barrier();
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(((false) && true))
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           do
                            {
                             for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 do
                                  {
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if((false))
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(false);
                                      }
                                    }
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     if((((false) || false)))
                                      {
                                       for(int _injected_loop_counter = (int((injectionSwitch.x)) | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                           while(false);
                           barrier();
                           if((false))
                            {
                             if(true)
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             else
                              {
                              }
                             if((false))
                              barrier();
                            }
                          }
                         if((false))
                          barrier();
                         if(true)
                          {
                           if((false))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                               if((false))
                                barrier();
                              }
                             else
                              {
                               if((false))
                                barrier();
                               if(true)
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                 for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 & 1) ^ 0); _injected_loop_counter ++)
                                    {
                                     if((false))
                                      {
                                       for(int _injected_loop_counter = ((0 | 0) >> ((((min(int(0), int(0)))) << 0))); _injected_loop_counter != ((0 | 0) | int((injectionSwitch.y))); _injected_loop_counter ++)
                                        {
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                     if(true)
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         if(true)
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(false);
                                 if((false))
                                  barrier();
                                }
                              }
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                           if((false))
                            barrier();
                          }
                        }
                      }
                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if((((false) && true)))
                          {
                           if(((((bool(bool(false))) && true))))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                    }
                  }
                }
               else
                {
                }
              }
             while(false);
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                barrier();
              }
            }
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   else
    {
    }
  }
 while(false);
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (1 | 0); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
        }
      }
    }
  }
 while(false);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((false) && true)))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_5(uvec3(1u), _GLF_struct_0(vec3(1.0)), _GLF_struct_1(bvec3(true), mat4(1.0), ivec3(1)), _GLF_struct_2(uvec3(1u), ivec4(1)), _GLF_struct_3(mat4(1.0), mat2x3(1.0), mat4x3(1.0), mat2(1.0), uvec2(1u), ivec4(1)), _GLF_struct_4(ivec4(1), mat2x3(1.0), mat4x2(1.0), mat3(1.0), mat2(1.0), mat3x4(1.0), ivec4(1)), mat2x4(1.0)), _GLF_struct_11(_GLF_struct_6(mat4x3(1.0), mat2x3(1.0)), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_7(vec4(1.0), ivec2(1)), _GLF_struct_8(mat4x2(1.0), bvec4(true), vec3(1.0), vec2(1.0), mat4x2(1.0), vec4(1.0)), 1u, 1.0, _GLF_struct_9(ivec3(1), 1.0, mat3(1.0), mat2(1.0), mat2x4(1.0), uvec3(1u)), _GLF_struct_10(ivec3(1))));
 if(true)
  {
   if((false))
    barrier();
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(4))); _injected_loop_counter --)
        {
         if(((false) && true))
          {
           if((false))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(((false) || false));
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       do
        {
         if((false))
          barrier();
        }
       while(false);
       if(((bool(bvec2(false, false)))))
        barrier();
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if((((false) || false)))
    {
     do
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     while(false);
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 else
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1) + 0); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(true)
          {
           barrier();
          }
         else
          {
          }
         if((false))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 if((false))
  barrier();
 do
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(true)
      {
       do
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(false);
          }
         if((false))
          {
           if(((! (! (false)))))
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
              {
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               while(false);
              }
            }
           do
            {
             if(true)
              {
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(false);
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if(true)
            {
             if(true)
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 do
                  {
                   if((false))
                    {
                     do
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                     while(false);
                    }
                  }
                 while(false);
                }
               if((false))
                barrier();
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                     if(true)
                      {
                       if((false))
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = (int((injectionSwitch.x)) << ((max(int(6), int(6))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             if((false))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       while(((false) || false));
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(true)
                        {
                         if((false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         do
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           if((false))
                            {
                             if(true)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             barrier();
                            }
                          }
                         while(false);
                         if(true)
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                              }
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = (0 << ((((max(int(7), int(7)))) | 0))); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           do
                            {
                             if((false))
                              barrier();
                             do
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                      {
                                       if((false))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                                            {
                                             if(true)
                                              {
                                               barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         do
                                          {
                                           do
                                            {
                                             barrier();
                                             if((false))
                                              barrier();
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                            }
                                           while(false);
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if((false))
                                              barrier();
                                            }
                                           if((false))
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                              }
                                            }
                                          }
                                         while(false);
                                        }
                                       if(true)
                                        {
                                         if((false))
                                          barrier();
                                         if(false)
                                          {
                                          }
                                         else
                                          {
                                           if((false))
                                            {
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                                {
                                                 do
                                                  {
                                                   barrier();
                                                  }
                                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                                 if((false))
                                                  {
                                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                                    {
                                                     barrier();
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           if(false)
                                            {
                                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                              {
                                               if((false))
                                                barrier();
                                               do
                                                {
                                                 if(true)
                                                  {
                                                   if(true)
                                                    {
                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                      barrier();
                                                    }
                                                   else
                                                    {
                                                    }
                                                   do
                                                    {
                                                     if((false))
                                                      {
                                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         barrier();
                                                        }
                                                      }
                                                    }
                                                   while(false);
                                                  }
                                                 else
                                                  {
                                                  }
                                                 do
                                                  {
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    {
                                                     do
                                                      {
                                                       barrier();
                                                      }
                                                     while(false);
                                                    }
                                                  }
                                                 while(false);
                                                }
                                               while(false);
                                               if((false))
                                                {
                                                 for(int _injected_loop_counter = (min(1, 1)); _injected_loop_counter > 0; _injected_loop_counter --)
                                                  {
                                                   barrier();
                                                  }
                                                }
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                              }
                                             if(true)
                                              {
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                 if(true)
                                                  {
                                                   barrier();
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                           else
                                            {
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                                {
                                                 if((false))
                                                  barrier();
                                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(true)
                                                    {
                                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                                      {
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   do
                                                    {
                                                     barrier();
                                                     for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > (0 ^ (0)); _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        {
                                                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                                          {
                                                           for(int _injected_loop_counter = (0 & - 48386); _injected_loop_counter < (1 | (- 6937 & 0)); _injected_loop_counter ++)
                                                            {
                                                             barrier();
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                   while(false);
                                                  }
                                                 if(true)
                                                  {
                                                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                                    {
                                                     if((false))
                                                      {
                                                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                        {
                                                         barrier();
                                                        }
                                                      }
                                                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        {
                                                         do
                                                          {
                                                           barrier();
                                                          }
                                                         while(false);
                                                        }
                                                      }
                                                     if((false))
                                                      {
                                                       if(false)
                                                        {
                                                        }
                                                       else
                                                        {
                                                         barrier();
                                                        }
                                                      }
                                                     do
                                                      {
                                                       do
                                                        {
                                                         buf[virtual_gid] = 1;
                                                        }
                                                       while(false);
                                                       if(((true && (false))))
                                                        barrier();
                                                      }
                                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                                     do
                                                      {
                                                       if(true)
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          {
                                                           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                                            {
                                                             if((false))
                                                              {
                                                               if(((injectionSwitch.x < injectionSwitch.y)))
                                                                {
                                                                 barrier();
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                           if(true)
                                                            {
                                                             if(false)
                                                              {
                                                              }
                                                             else
                                                              {
                                                               do
                                                                {
                                                                 barrier();
                                                                 if((false))
                                                                  barrier();
                                                                }
                                                               while(false);
                                                              }
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                         if((false))
                                                          barrier();
                                                        }
                                                      }
                                                     while(false);
                                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                                      {
                                                       if((false))
                                                        {
                                                         if((false))
                                                          barrier();
                                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                                          {
                                                           barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                     if((false))
                                                      barrier();
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                  {
                                                   do
                                                    {
                                                     if((false))
                                                      barrier();
                                                    }
                                                   while(false);
                                                  }
                                                 do
                                                  {
                                                   if((false))
                                                    {
                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                      {
                                                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                                        {
                                                         barrier();
                                                         if((false))
                                                          barrier();
                                                        }
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                      }
                                                     if(true)
                                                      {
                                                       if((false))
                                                        {
                                                         if(true)
                                                          {
                                                           barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                     if((! ((! (! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(false)
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          {
                                                           if((false))
                                                            barrier();
                                                           for(int _injected_loop_counter = (0 >> (int(5))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                                            {
                                                             barrier();
                                                            }
                                                          }
                                                        }
                                                      }
                                                     if((false))
                                                      {
                                                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          barrier();
                                                        }
                                                       do
                                                        {
                                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                                          {
                                                           if((false))
                                                            barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       while(false);
                                                       barrier();
                                                      }
                                                     if(true)
                                                      {
                                                       for(int _injected_loop_counter = 0; _injected_loop_counter < ((int((injectionSwitch.y)) << ((0 | (int(2))))) >> (int(2))); _injected_loop_counter ++)
                                                        {
                                                         do
                                                          {
                                                           if((false))
                                                            barrier();
                                                           do
                                                            {
                                                             barrier();
                                                            }
                                                           while(false);
                                                           if((false))
                                                            barrier();
                                                           if((false))
                                                            barrier();
                                                          }
                                                         while(false);
                                                         if((false))
                                                          barrier();
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                  }
                                                 while(((false) && true));
                                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                                  {
                                                   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
                                                    barrier();
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             if(true)
                                              {
                                               if((false))
                                                barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   do
                                    {
                                     if((false))
                                      barrier();
                                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(false);
                                        }
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            barrier();
                                           if((false))
                                            {
                                             if(true)
                                              {
                                               barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                           barrier();
                                          }
                                        }
                                       else
                                        {
                                        }
                                       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 0); _injected_loop_counter ++)
                                        {
                                         if(((! (! (false)))))
                                          barrier();
                                        }
                                      }
                                     do
                                      {
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                              {
                                               barrier();
                                              }
                                            }
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                              {
                                               for(int _injected_loop_counter = (42028 & 0); _injected_loop_counter != ((1 << (((int(6)) - 0))) >> (int(6))); _injected_loop_counter ++)
                                                {
                                                 if((false))
                                                  barrier();
                                                 if((false))
                                                  {
                                                   do
                                                    {
                                                     if((false))
                                                      barrier();
                                                    }
                                                   while(((injectionSwitch.x > injectionSwitch.y)));
                                                   barrier();
                                                  }
                                                 if(true)
                                                  {
                                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if((false))
                                                      {
                                                       do
                                                        {
                                                         barrier();
                                                        }
                                                       while(false);
                                                      }
                                                     if(true)
                                                      {
                                                       do
                                                        {
                                                         barrier();
                                                        }
                                                       while(false);
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                  {
                                                   if(false)
                                                    {
                                                     for(int _injected_loop_counter = ((1 << (int(3))) >> ((clamp(int(3), int(3), int(3))))); _injected_loop_counter != (0 << (((false ? (_injected_loop_counter) : ((int(3)) * 1))))); _injected_loop_counter --)
                                                      {
                                                       if((false))
                                                        {
                                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                                          {
                                                           if((false))
                                                            barrier();
                                                           barrier();
                                                          }
                                                         if(false)
                                                          {
                                                           if((false))
                                                            barrier();
                                                          }
                                                         else
                                                          {
                                                           barrier();
                                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                                            {
                                                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 >> ((min(int(6), int(6))))); _injected_loop_counter --)
                                                              {
                                                               barrier();
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                   else
                                                    {
                                                     do
                                                      {
                                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                                        barrier();
                                                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (int(ivec3(((1) | 0), 0, 1))); _injected_loop_counter ++)
                                                        {
                                                         if((false))
                                                          {
                                                           do
                                                            {
                                                             if(true)
                                                              {
                                                               if((false))
                                                                {
                                                                 if(true)
                                                                  {
                                                                   do
                                                                    {
                                                                     barrier();
                                                                     if(((! (! (false)))))
                                                                      {
                                                                       if(false)
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         barrier();
                                                                        }
                                                                      }
                                                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                                                      barrier();
                                                                    }
                                                                   while(false);
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                              }
                                                             else
                                                              {
                                                              }
                                                            }
                                                           while(false);
                                                           do
                                                            {
                                                             barrier();
                                                            }
                                                           while(false);
                                                          }
                                                         if((false))
                                                          {
                                                           if(((! (((! (false)) || false)))))
                                                            barrier();
                                                           if((false))
                                                            {
                                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(true)
                                                                {
                                                                 barrier();
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                           for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                                                            {
                                                             barrier();
                                                            }
                                                          }
                                                        }
                                                      }
                                                     while(false);
                                                    }
                                                  }
                                                 do
                                                  {
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    barrier();
                                                  }
                                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  barrier();
                                                }
                                              }
                                             else
                                              {
                                              }
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               if(false)
                                                {
                                                 if((false))
                                                  barrier();
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                                      {
                                                       barrier();
                                                      }
                                                     if((false))
                                                      {
                                                       if(true)
                                                        {
                                                         barrier();
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                   if(false)
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if((false))
                                                      barrier();
                                                    }
                                                   barrier();
                                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                                    barrier();
                                                  }
                                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                                  barrier();
                                                 if(true)
                                                  {
                                                   for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                                    {
                                                     if((false))
                                                      {
                                                       if((false))
                                                        {
                                                         do
                                                          {
                                                           barrier();
                                                          }
                                                         while(false);
                                                        }
                                                       if(true)
                                                        {
                                                         if((false))
                                                          barrier();
                                                         barrier();
                                                         if((false))
                                                          {
                                                           for(int _injected_loop_counter = 0; _injected_loop_counter < ((((0 & 28349) | 1) << (int(1))) >> (int(1))); _injected_loop_counter ++)
                                                            {
                                                             barrier();
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                       do
                                        {
                                         if((false))
                                          barrier();
                                        }
                                       while(false);
                                      }
                                     while(false);
                                     if((false))
                                      barrier();
                                     if((false))
                                      {
                                       if(true)
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     if((false))
                                      barrier();
                                    }
                                   while((true && (false)));
                                   do
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         if((false))
                                          {
                                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                             if(true)
                                              {
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                              }
                                             else
                                              {
                                              }
                                             if((false))
                                              barrier();
                                            }
                                          }
                                        }
                                       do
                                        {
                                         if((false))
                                          {
                                           do
                                            {
                                             barrier();
                                            }
                                           while(false);
                                          }
                                        }
                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         if(((injectionSwitch.x > injectionSwitch.y)))
                                          {
                                          }
                                         else
                                          {
                                           if(true)
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                             if((false))
                                              {
                                               for(int _injected_loop_counter = (1 ^ 1); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                {
                                                 barrier();
                                                }
                                              }
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if((false))
                                                {
                                                 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
                                                  {
                                                   barrier();
                                                  }
                                                }
                                              }
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              {
                                               if(true)
                                                {
                                                 barrier();
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                        }
                                       if(true)
                                        {
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   while(false);
                                   do
                                    {
                                     if(false)
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if((false))
                                              barrier();
                                            }
                                           do
                                            {
                                             barrier();
                                            }
                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                          }
                                         if(true)
                                          {
                                           if((false))
                                            barrier();
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(true)
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       do
                                        {
                                         if((false))
                                          barrier();
                                        }
                                       while(false);
                                       do
                                        {
                                         if((false || (((injectionSwitch.x < injectionSwitch.y)))))
                                          {
                                           if((false))
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              {
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 barrier();
                                                }
                                              }
                                             if((false))
                                              barrier();
                                             if((false))
                                              barrier();
                                             barrier();
                                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                              {
                                               if(true)
                                                {
                                                 if((false))
                                                  barrier();
                                                }
                                               else
                                                {
                                                }
                                               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                {
                                                 if((false))
                                                  barrier();
                                                }
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if(true)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if(((injectionSwitch.x < injectionSwitch.y)))
                                              {
                                               if(true)
                                                {
                                                 if(true)
                                                  {
                                                   barrier();
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                             else
                                              {
                                              }
                                             do
                                              {
                                               if((false))
                                                {
                                                 if(false)
                                                  {
                                                  }
                                                 else
                                                  {
                                                   barrier();
                                                  }
                                                }
                                              }
                                             while(((injectionSwitch.x > injectionSwitch.y)));
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                       while(false);
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         if(true)
                                          {
                                           if((false))
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                                {
                                                 if((false))
                                                  barrier();
                                                }
                                              }
                                             if((false))
                                              barrier();
                                             if((false))
                                              barrier();
                                             if(false)
                                              {
                                               if((false))
                                                barrier();
                                              }
                                             else
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 if(false)
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(true)
                                                    {
                                                     barrier();
                                                     for(int _injected_loop_counter = (0 >> (int(6))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                                      {
                                                       if((false))
                                                        barrier();
                                                      }
                                                     if(true)
                                                      {
                                                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                                        {
                                                         if(true)
                                                          {
                                                           if((false))
                                                            barrier();
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   else
                                                    {
                                                     do
                                                      {
                                                       for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
                                                        {
                                                         if((false))
                                                          {
                                                           do
                                                            {
                                                             barrier();
                                                            }
                                                           while(false);
                                                          }
                                                        }
                                                      }
                                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                                    }
                                                  }
                                                }
                                              }
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if((false))
                                                barrier();
                                              }
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                       do
                                        {
                                         if((false))
                                          {
                                           if(((injectionSwitch.x < injectionSwitch.y)))
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                       while(false);
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                      }
                                    }
                                   while(false);
                                   if((false))
                                    barrier();
                                   for(int _injected_loop_counter = (- 34839 & 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(((injectionSwitch.x > injectionSwitch.y)));
                                        }
                                      }
                                     while(((injectionSwitch.x > injectionSwitch.y)));
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(false);
                                }
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                    {
                                     if((false))
                                      barrier();
                                     for(int _injected_loop_counter = 0; _injected_loop_counter != (((1 & 1) << (int(5))) >> (int(5))); _injected_loop_counter ++)
                                      {
                                       if((false))
                                        barrier();
                                      }
                                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       if((false))
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            barrier();
                                           if(((injectionSwitch.x > injectionSwitch.y)))
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         barrier();
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                    }
                                  }
                                 if(true)
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                      }
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               if((false))
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((false))
                                    {
                                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       barrier();
                                      }
                                    }
                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                    {
                                    }
                                   else
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       if(((! (! (false)))))
                                        barrier();
                                      }
                                     else
                                      {
                                      }
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(false);
                                      }
                                     if(((injectionSwitch.x > injectionSwitch.y)))
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                      }
                                    }
                                  }
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                 if((false))
                                  barrier();
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           while(false);
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                         if(false)
                          {
                          }
                         else
                          {
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                {
                                 do
                                  {
                                   if(((! (! (false)))))
                                    barrier();
                                  }
                                 while(false);
                                 do
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 while((false || (false)));
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = (1 | (1 & 1)); _injected_loop_counter > 0; _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                 if(true)
                                  {
                                   do
                                    {
                                     if(true)
                                      {
                                       if(true)
                                        {
                                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | (0)); _injected_loop_counter --)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              {
                                               if(false)
                                                {
                                                }
                                               else
                                                {
                                                 barrier();
                                                }
                                              }
                                             if(true)
                                              {
                                               barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                     for(int _injected_loop_counter = (0 << (((int(7)) ^ 0))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                      {
                                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                   while(false);
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                  }
                                }
                               if((false))
                                barrier();
                               if(true)
                                {
                                 do
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(((injectionSwitch.x < injectionSwitch.y)))
                                      {
                                       if((false))
                                        {
                                         if((false || (true)))
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if((((false) || false)))
                                      barrier();
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                     if((false))
                                      barrier();
                                    }
                                  }
                                 while((! (! (false))));
                                }
                               else
                                {
                                }
                               if((false))
                                barrier();
                               if(true)
                                {
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(true)
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                }
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           while(false);
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     while(false);
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                    }
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
               if((false))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
            }
           else
            {
            }
          }
        }
       do
        {
         if(false)
          {
          }
         else
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != ((75967 + - 64330) & 0); _injected_loop_counter --)
          {
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if(true)
              {
               if((! (! ((! (! (false)))))))
                {
                }
               else
                {
                 barrier();
                }
              }
             else
              {
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(false);
            }
           do
            {
             if((false))
              {
               do
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(false);
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
            }
           else
            {
             if((false))
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   while(false);
                  }
                }
               else
                {
                }
               barrier();
              }
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if(false)
              {
              }
             else
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               while(false);
              }
            }
           if((false))
            barrier();
           do
            {
             do
              {
               do
                {
                 do
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((true) || false))
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                            {
                             if((false))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           do
                            {
                             barrier();
                             if((false))
                              barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         else
                          {
                          }
                         if((false))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                        }
                       else
                        {
                        }
                       if(false)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             while(false);
            }
           while(false);
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((false))
          barrier();
        }
       if((true && (false)))
        {
        }
       else
        {
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(false)
        {
        }
       else
        {
         do
          {
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         while(false);
        }
       if((false))
        barrier();
      }
     else
      {
      }
    }
   while(false);
  }
 while(false);
 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if((false))
    {
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << ((min(int(8), int(8))))); _injected_loop_counter --)
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (((1 << (int(0))) >> (int(0))) | 1); _injected_loop_counter > (~ (~ (0))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   do
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if((! (! (false))))
          {
          }
         else
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
   while(false);
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
     if(true)
      {
       if(true)
        {
         if(false)
          {
          }
         else
          {
           if(subgroup_local_id + 1 < subgroup_size)
            {
             if((false))
              barrier();
             for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(((((injectionSwitch.x < injectionSwitch.y))) && true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 atomicStore(buf[_GLF_struct_replacement_12._f1.next_virtual_gid], uint(2), 4, 64, 4);
                 if((false))
                  barrier();
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               do
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(false);
                           if((false))
                            barrier();
                          }
                        }
                       barrier();
                       for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter < ((1 << (((int(7)) ^ int((injectionSwitch.x))))) >> (int(7))); _injected_loop_counter ++)
                        {
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 if((false))
                  {
                   if(((false) || false))
                    {
                    }
                   else
                    {
                     if((((! (! (false)))) && true))
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       if((false))
                        {
                         if((false))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           else
                            {
                            }
                          }
                         barrier();
                        }
                      }
                     else
                      {
                       if(true)
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                          }
                         else
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false || ((true && ((! (! (true))))))))
              {
               if(((false || (false))))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(false);
                    }
                   else
                    {
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != (0 >> (int(6))); _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if(true)
                  {
                   do
                    {
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(((true && (false))))
                          barrier();
                        }
                      }
                     if((false))
                      barrier();
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     barrier();
                     if((false))
                      {
                       for(int _injected_loop_counter = (0 << (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   while(false);
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             if((false))
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = ((0 << (int(0))) & 61549); _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
              {
               subgroupAll(false);
              }
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                    }
                  }
                 else
                  {
                   for(int _injected_loop_counter = ((0 >> (((int(1)) / 1))) | 1); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (~ (~ ((~ (~ (1)))))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                       while(false);
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                      {
                       do
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                         do
                          {
                           for(int _injected_loop_counter = ((0 | 0) | 1); _injected_loop_counter != (0 >> (int(7))); _injected_loop_counter --)
                            {
                             do
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > ((1 & 1) ^ int((injectionSwitch.y))); _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                          }
                         while(false);
                         if((false))
                          barrier();
                        }
                       while(false);
                      }
                    }
                  }
                }
               else
                {
                }
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter != (int((injectionSwitch.y)) & int((injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     while(false);
                    }
                  }
                 else
                  {
                  }
                 barrier();
                }
              }
             if(true)
              {
               if(false)
                {
                 if((false))
                  barrier();
                }
               else
                {
                 do
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           if((false))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       do
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            {
                             if((false))
                              barrier();
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         barrier();
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                         if(true)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                     barrier();
                     for(int _injected_loop_counter = (int((injectionSwitch.x)) >> (int(5))); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
                      {
                       if((false))
                        {
                         if(true)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                            }
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                 while(false);
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(false);
                    }
                   for(int _injected_loop_counter = (((0 ^ 1) << (int(3))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
               if((false || (false)))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if(true)
                    {
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               while(false);
              }
             do
              {
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           else
            {
             if((false))
              barrier();
             if((false))
              {
               if((! (! (false))))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   else
                    {
                    }
                  }
                }
               barrier();
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
             else
              {
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = (0 & 95100); _injected_loop_counter < (1 & ((1 << (int(6))) >> (int(6)))); _injected_loop_counter ++)
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                       if((false))
                        barrier();
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (0 | int((injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                }
               if((false))
                {
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(true)
                {
                 if((false))
                  {
                   if(true)
                    {
                     if((false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if((false))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(5))) >> (((int(5)) / 1))); _injected_loop_counter ++)
                      {
                       if(((bool(bvec2(false, true)))))
                        barrier();
                      }
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                        }
                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                       if((false))
                        {
                         do
                          {
                           if((false))
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                             else
                              {
                              }
                            }
                           if((false))
                            {
                             for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != (0 | (1 & 1)); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           barrier();
                          }
                         while(false);
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           barrier();
                          }
                        }
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                       if((false))
                        barrier();
                      }
                    }
                  }
                }
               else
                {
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if(true)
                  {
                   do
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           barrier();
                          }
                         if(true)
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         else
                          {
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(true)
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       else
                        {
                        }
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((((1 << (((false ? (53065) : int(6))))) >> (int(6))) << ((~ (~ (int(7)))))) >> (int(7))); _injected_loop_counter ++)
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   while((false || (false)));
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < (min((1 & 1), (1 & 1))); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if(false)
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       if(true)
                        {
                         if((false))
                          barrier();
                         barrier();
                         do
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = (0 ^ ((1 << ((int(int(int(2)))))) >> (int(2)))); _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if(true)
                                    {
                                     if(true)
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     for(int _injected_loop_counter = 1; _injected_loop_counter > ((((0) * 1)) - 0); _injected_loop_counter --)
                                      {
                                       if(((! (! (false)))))
                                        {
                                         do
                                          {
                                           if((false))
                                            barrier();
                                           barrier();
                                          }
                                         while(false);
                                        }
                                       if((false))
                                        barrier();
                                      }
                                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         if(((injectionSwitch.x < injectionSwitch.y)))
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if(true)
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if((false))
                                barrier();
                              }
                            }
                          }
                         while(false);
                        }
                       else
                        {
                        }
                      }
                    }
                   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ (0 & - 65030)); _injected_loop_counter ++)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(1))) >> ((0 | (int(1))))); _injected_loop_counter ++)
                {
                 barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                     if((false))
                      barrier();
                    }
                  }
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
             if(true)
              {
               do
                {
                 atomicStore(buf[_GLF_struct_replacement_12._f1.next_virtual_gid], uint(2), 4, 64, 4);
                }
               while((true && (false)));
               if((false))
                {
                 do
                  {
                   barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
              }
             do
              {
               if((false))
                barrier();
               if((false))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if((false))
                barrier();
              }
             while(false);
             do
              {
               if(true)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   subgroupAll(true);
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if((false))
    barrier();
  }
 while(false);
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((false))
      {
       if(true)
        {
         if(true)
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 else
  {
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   do
    {
     if((false))
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(false);
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       do
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           do
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if((false))
                barrier();
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
              }
             else
              {
              }
            }
           while(false);
          }
         else
          {
          }
        }
       while(((((injectionSwitch.x > injectionSwitch.y))) || false));
      }
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter < (min(int((injectionSwitch.y)), int((injectionSwitch.y)))); _injected_loop_counter ++)
  {
   do
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           do
            {
             if(false)
              {
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = (0 | (14548 & 0)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(false)
        {
        }
       else
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           do
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     do
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = (0 ^ (0 | 0)); _injected_loop_counter < ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << ((max(int(8), int(8))))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     while(false);
                    }
                   if(true)
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     if((false || (true)))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               while(false);
               do
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (20055 & 0); _injected_loop_counter --)
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if(false)
                      {
                       if((false))
                        barrier();
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                   if((false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((bool(bool(true))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = (clamp(0, 0, 0)); _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                             while(false);
                            }
                           do
                            {
                             if(true)
                              {
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           while(false);
                          }
                         while(false);
                        }
                      }
                     while(false);
                    }
                   else
                    {
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(((bool(bvec4(false, true, false, false)))))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 else
                  {
                  }
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                      {
                       if(true)
                        {
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                      }
                    }
                  }
                }
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(false)
                  {
                   do
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                       if(true)
                        {
                         for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter < ((false ? (- 56818) : 1)); _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               while(false);
                              }
                             barrier();
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(false);
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if(false)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                       else
                        {
                         do
                          {
                           if(((false || (false))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                             barrier();
                            }
                          }
                         while(false);
                        }
                      }
                     do
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                          {
                           do
                            {
                             for(int _injected_loop_counter = (int((injectionSwitch.x)) << ((max(int(1), (~ (~ (int(1)))))))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = (0 >> ((min((clamp(int(0), int(0), int(0))), (min(int(0), int(0))))))); _injected_loop_counter < ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                  }
                                }
                              }
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(false);
                         if((false))
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             do
                              {
                               barrier();
                               if((false))
                                barrier();
                              }
                             while(false);
                            }
                          }
                         do
                          {
                           if(((false || (false))))
                            barrier();
                          }
                         while(false);
                        }
                       else
                        {
                        }
                      }
                     while(false);
                     do
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     while((! (! ((bool(bvec3(false, true, true)))))));
                     if((false))
                      barrier();
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if((false))
                      barrier();
                     if((false))
                      {
                       if(true)
                        {
                         if(false)
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       else
                        {
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                    }
                   while(false);
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if(true)
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       if((false))
                        barrier();
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                  }
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         else
          {
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   while(false);
  }
}
