#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((! (true && ((((((! (((true && (false))) && true)) && (((((false || (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (((false) && true))))))
    return;
   return;
  }
 if((false))
  {
   if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   return;
  }
 uint num_workgroup = (((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[(((((clamp(((2) * 1), 2, 2))) + int((injectionSwitch.x)))) / 1)]))) / (((((clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u)) | (((clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, (0u | (1u)))))) / uvec3(1u, 1u, 1u))))).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, false))))
  return;
 if((false))
  return;
 if(((((mix(float(injectionSwitch.x), float((float(78273))), bool((bool(bvec4(false, true, ((injectionSwitch.x > injectionSwitch.y)), false)))))) > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if((((bool(bool((! ((true && (! ((! (! (! ((! (! (! (((false || (bool(bvec3((! ((bool(bvec4(! ((! (! ((bool(bvec4(((false) || false), ((injectionSwitch.x < (1.0 * (((false ? (- 25.53) : injectionSwitch.y)))))), false, true))))))), ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true, false))))))))))))))))))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if(((((! ((false || (((! (((injectionSwitch.x) - 0.0) > (max(((injectionSwitch) * mat2(1.0)), injectionSwitch)).y))) || false))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > ((max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, (injectionSwitch.x), 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 0.0, (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), exp(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0)), (min(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, (injectionSwitch.x), 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 0.0, (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), exp(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, (injectionSwitch.x), 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 0.0, (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), exp(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0)))))))))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((((false) && true)))
    {
     if(((((! (! ((! (! ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((((true && (bool(bvec3((false || ((((((((bool(bool(false)))) || false) && true)) || false)))), false, false)))))))
  {
   if((false))
    {
     if(((((max(injectionSwitch.x, ((injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
      return;
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if((false))
    {
     if((((! (! (((((vec2((((! (! (true))) ? mat3x4(injectionSwitch, abs(0.0), 0.0, (((min((dot(vec4(0.0, 0.0, 0.0, 1.0), vec4((injectionSwitch.x), 0.0, 0.0, 1.0))), ((true ? (min((dot(vec4(0.0, 0.0, 0.0, 1.0), vec4((injectionSwitch.x), 0.0, 0.0, 1.0))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(((max((max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), 0.0, 0.0, 1.0))))) : (faceforward(- 6.9, - 0.2, - 3563.0342)))))) * 1.0)), sin(0.0), 1.0, (max((injectionSwitch.x), (injectionSwitch.x))), 0.0, 1.0, 0.0, sqrt(1.0)) : (mat3x4(((false ? (- 75.28) : 0.2)), 2.8, - 3.6, 9.5, 3.3, 330.413, - 89.67, 7400.2615, 77.52, 9.0, 7.1, 6803.3426)))))).x > injectionSwitch.y))))))) && true))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    {
     if((((false) && true)))
      return;
     return;
    }
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((bool((bvec3(bvec3(bvec3(((((injectionSwitch.x > injectionSwitch.y))) || false), false, false))))))))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((! ((((true && (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 if(((false || ((! (! (false)))))))
  return;
 if((bool(bvec4(((((((clamp(injectionSwitch, injectionSwitch, (max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) && true), false, false, (! (! (false)))))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((true && ((((false || ((false)))) || false))))
    return;
   return;
   if((false))
    return;
   if((((bool((! (! (bool(bool(bvec3(false, true, true)))))))))))
    return;
  }
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((false))
  {
   if((((false || ((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y)))))) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      return;
     if(((! (! (false)))))
      return;
     if(((true && (false))))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if(((((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if((((false) || false)))
  return;
 if(((((((vec2((((vec2((transpose(transpose(mat2x4(vec2(((vec2(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), exp(0.0), 1.0, 1.0, 0.0))))), 1.0, exp((float(mat4((max((float(mat4(0.0, (((dot(vec3((min(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * ((clamp(float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(((mat3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, (clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(mat3(0.0, 0.0, 1.0, (mix(float(((- 1.2 / - 566.060))), float(0.0), bool(true))), 1.0, 1.0, (float((mix(vec4((- 81.44), (- 4902.4488), (clamp((((vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((false ? (ldexp(- 2.3, - 40726)) : ((clamp((clamp((0.0), (0.0), (0.0))), (float((clamp(float((0.0)), float((0.0)), float((0.0)))))), (max((mix(float((76.43)), float((0.0)), bool(true))), (0.0))))) * 1.0))), (injectionSwitch.x)))) * mat4(1.0)), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((false ? (ldexp(- 2.3, - 40726)) : ((clamp((clamp((0.0), (0.0), (0.0))), (float((clamp(float((0.0)), float((0.0)), float((0.0)))))), (max((mix(float((76.43)), float((0.0)), bool(true))), (0.0))))) * 1.0))), (injectionSwitch.x))), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((false ? (ldexp(- 2.3, - 40726)) : ((clamp((clamp((0.0), (0.0), (0.0))), (float((clamp(float((0.0)), float((0.0)), float((0.0)))))), (max((mix(float((76.43)), float((0.0)), bool(true))), (0.0))))) * 1.0))), (injectionSwitch.x)))))[2], (4221.5434)), (mix(vec4((63.91), (675.202), (68.66), (7.5)), vec4((vec4((vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((0.0) / 1.0), ((min(injectionSwitch, injectionSwitch)).x)))[0], (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), (clamp((clamp((max(1.0, 1.0)), 1.0, 1.0)), 1.0, ((1.0) / 1.0))), 0.0, (injectionSwitch.x)))[1], (- 860.473), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, 0.0, (float(mat4x3((injectionSwitch.x), 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, log(determinant(mat2(1.0, 1.0, 0.0, 1.0))), length(0.0), (injectionSwitch.x), 1.0, 0.0)))))[3]))[0], (vec4((vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((0.0) / 1.0), ((min(injectionSwitch, injectionSwitch)).x)))[0], (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), (clamp((clamp((max(1.0, 1.0)), 1.0, 1.0)), 1.0, ((1.0) / 1.0))), 0.0, (injectionSwitch.x)))[1], (- 860.473), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, 0.0, (float(mat4x3((injectionSwitch.x), 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, log(determinant(mat2(1.0, 1.0, 0.0, 1.0))), length(0.0), (injectionSwitch.x), 1.0, 0.0)))))[3]))[1], (vec4((vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((0.0) / 1.0), ((min(injectionSwitch, injectionSwitch)).x)))[0], (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), (clamp((clamp((max(1.0, 1.0)), 1.0, 1.0)), 1.0, ((1.0) / 1.0))), 0.0, (injectionSwitch.x)))[1], (- 860.473), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, 0.0, (float(mat4x3((injectionSwitch.x), 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, log(determinant(mat2(1.0, 1.0, 0.0, 1.0))), length(0.0), (injectionSwitch.x), 1.0, 0.0)))))[3]))[2], (vec4((vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, ((0.0) / 1.0), ((min(injectionSwitch, injectionSwitch)).x)))[0], (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), (clamp((clamp((max(1.0, 1.0)), 1.0, 1.0)), 1.0, ((1.0) / 1.0))), 0.0, (injectionSwitch.x)))[1], (- 860.473), (vec4((mix(float((- 9933.1867)), float(0.0), bool(true))), 1.0, 0.0, (float(mat4x3((injectionSwitch.x), 0.0, (injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, log(determinant(mat2(1.0, 1.0, 0.0, 1.0))), length(0.0), (injectionSwitch.x), 1.0, 0.0)))))[3]))[3]), bvec4(true, true, true, true))), bvec4(true, true, false, true))))), 0.0, 0.0))))))), 1.0, (((max(1.0, ((1.0) + 0.0)))) - 0.0), 1.0, ((true ? 1.0 : (18.55))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0), (mix(float(((((true) && true) ? 1.0 : (min(4488.4330, 1543.3964))))), float((- 90.98)), bool(false))), (mix(float((- 131.400)), float(0.0), bool(true))), 0.0))), (mix(float(0.0), float((float(false))), bool(false))))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4((injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))), 1.0)))), sin((((max(0.0, 0.0))) / 1.0)), ((max((min(((((float(vec3((clamp(0.0, 0.0, 0.0)), 0.0, 1.0))) / 1.0)) - 0.0), ((float(vec3((clamp(0.0, 0.0, 0.0)), 0.0, 1.0))) - 0.0))), ((float(vec3((clamp(0.0, 0.0, 0.0)), 0.0, (clamp((float(mat4x3(1.0, 0.0, cos(0.0), determinant(mat3(1.0, ((0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), 1.0, 1.0))))) - 0.0)))), 1.0, 0.0)))))) - (vec2((min(vec4(vec2(0.0, 0.0), sin(0.0), 1.0), vec4(vec2(0.0, 0.0), sin(0.0), 1.0))))))))).x > injectionSwitch.y)))) && true))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if(((((! ((false || (! (bool(bvec3((injectionSwitch.x > ((((((true ? true ? (vec2(injectionSwitch[0], injectionSwitch[(min(1, (0 ^ (((((1)) + (0 >> (int(4)))) ^ 0)))))])) : (vec2(579.197, - 5.2)) : (vec2(- 3.1, 3234.1449)))))).y) / 1.0)), false, true)))))))))))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          return;
         return;
        }
       return;
      }
    }
   return;
   if((false))
    return;
  }
 if((false || ((false))))
  return;
 if((false))
  return;
 if((false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((false))
  return;
 uint virtual_gid = workgroup_base + (min(subgroup_id * subgroup_size, (0u ^ (subgroup_id)) * subgroup_size)) + subgroup_local_id;
 if((((((! (! (((! (! (injectionSwitch.x > injectionSwitch.y)))))))) && ((injectionSwitch.x < (clamp(injectionSwitch, injectionSwitch, ((injectionSwitch) * mat2(1.0)))).y))))))
  {
   if(((! (! (false)))))
    {
     if((false))
      {
       if(((true && (false))))
        return;
       return;
      }
     if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
      return;
     if((false))
      {
       if((false))
        {
         if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
    {
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if(((((true && (false))) && ((injectionSwitch.x < ((true ? injectionSwitch : (vec2(407.143, 422.791)))).y)))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((~ (((~ (((((max(subgroup_local_id + 1, subgroup_local_id + 1))) % ((subgroup_size) ^ 0u)) << 0u))) | (~ ((((((true ? ((((injectionSwitch.x > injectionSwitch.y)) ? ((atomicMin(subgroup_id, workgroup_id) * clamp(virtual_gid, subgroup_id, workgroup_id))) : (max(((((subgroup_local_id + 1)) - 0u) % subgroup_size), ((((subgroup_local_id + 1)) - 0u) % subgroup_size))) << 0u)) : (bitfieldReverse(workgroup_base))))))) * 1u))))));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if((false))
  return;
 if((((true && ((false))) && true)))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((((((injectionSwitch.x) - 0.0) > ((((((((mix(vec2((1.3), ((true ? (float(false)) : (8.9)))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(true, true))))) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y))) && true)))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((false))
    return;
   if(((true && (false))))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if(((bool((bvec2(bvec2(bvec2(false, true))))))))
        return;
       return;
      }
     if(((! (! (false)))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if((((false) || (true && (false)))))
  {
   if((false))
    return;
   return;
  }
 if(((((subgroup_local_id) << 0u)) | 0u) + 1 < subgroup_size)
  {
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(((((2) | (2))) | (((2) >> 0)))), ((4) | ((max(22662 & 0, (((int(ivec3(((22662 & 0) ^ 0), (0 << (int(5))), 0)))) | ((~ (~ (22662 & 0))))))))), 64, 4);
   if((false))
    return;
   subgroupAll(((((((! (((! ((false))) || false))) || false)) && true)) && true));
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false || ((false))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > ((min((float(vec3(float((transpose(transpose(mat2x4((min((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, (injectionSwitch.x), 0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0))), float((transpose(transpose(mat2x4((min((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, (injectionSwitch.x), 0.0, 0.0, 1.0, 0.0))))))))))))
      return;
     if((((! (! (bool((bvec2(bvec3(bvec2(false, false), false))))))))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(((! (! (! ((((! (((false) && true))) && true))))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((((false || (((((bool(bvec3(true, true, true)))) || false) && (((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))) && true))))))))))
    return;
   subgroupAll(true);
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    {
     if(((true && (bool(bvec3((false), false, true))))))
      return;
     return;
    }
  }
 if((((false || ((bool(bvec3(bool(bool(false)), false, true))))))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
  }
}
