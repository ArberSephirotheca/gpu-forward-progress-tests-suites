#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((clamp((max(uint(uvec4(((((clamp((~ (~ ((min((gl_WorkGroupSize) ^ uvec3((((((0u) | (0u))) | ((min(0u, 0u)))) ^ (0u)), 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x) | ((((((min(((gl_WorkGroupSize) ^ uvec3(0u, 0u, ((0u) / 1u))).x, ((((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) << (uvec3(4u)))).x)))) | (((min(((gl_WorkGroupSize) ^ uvec3(0u, 0u, ((0u) / 1u))).x, ((((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) << (uvec3(4u)))).x)))))) ^ 0u)), 1u, 1u, 1u)), uint(uvec4(((((((true ? ((((clamp((gl_WorkGroupSize) ^ (clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, ((0u) | ((0u ^ (0u)))), 0u), (~ (~ ((uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))))))).x) << 0u) : (subgroup_size))) | 0u))) | (((gl_WorkGroupSize) ^ uvec3(0u, 0u, (0u | (0u)))).x)), 1u, 1u, 1u)))), uint(uvec4(((((clamp((uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (0u << (uint(1u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x) | (uint(uvec3((((((min((((max(((((max(gl_WorkGroupSize, gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x), (((max((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x))) >> 0u))) ^ uint((injectionSwitch.x))), 1u, 0u)))), (uint(uvec3(1u, 0u, 1u))), 1u, 1u)), uint(uvec4(((false ? (subgroup_id) : ((((clamp((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), ((((injectionSwitch.x < injectionSwitch.y)) ? ((uvec3(0u, 0u, 0u) >> (uvec3(5u))) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) : (uvec3(83684u, 193630u, 194064u)))), ((true ? (gl_WorkGroupSize) ^ uvec3((uint((injectionSwitch.x)) + ((((((uint(((uvec2(0u, 0u)) * uvec2(1u, 1u)))) / 1u)) ^ 0u)))), ((clamp((0u), (((0u)) | ((0u))), (0u))) | (((0u) ^ 0u))), 0u) : (uvec3(180543u, 105849u, 190786u))))))).x) | (((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)))), 1u, 1u, 1u)))));
 uint workgroup_id = (min(((gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (min(((((workgroup_base + subgroup_id * subgroup_size) / ((1u << (uint(4u))) >> (uint(4u))))) ^ uint((min(((max(((true ? (clamp((max((mix(float((float(false))), float(float(mat3((((clamp(false ? (2.7) : (injectionSwitch.x), false ? (2.7) : (injectionSwitch.x), (sqrt(0.0) + (false ? (2.7) : (injectionSwitch.x))))))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true))), (min(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), (max(((max(mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true)), (max((1.0 * (mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true)))), mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))))), (min(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), (max((mix(float((float(false))), float(float(mat3(((false ? (2.7) : ((min(injectionSwitch, injectionSwitch)).x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true))), (min((max(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (max(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, (1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0)))))))) : (- 631.811))), ((true ? (clamp((max((mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true))), (min(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), (max((mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, (mix(float(1.0), float((- 269.153)), bool(false)))))), bool(true))), (min(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), (max((mix(float((float(false))), float(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (true && (bool(true))))), (min(float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, ((false ? (67.09) : 0.0)), 0.0, 1.0, (mix(float(1.0), float((- 1.8)), bool(false))))), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))) : (- 631.811)))))), ((max((mix(float((float(false))), float(float(mat3(((false ? (((2.7) + (1.0 * (0.0)))) : ((mix(vec2((- 687.523), ((238.336 + - 0.9))), vec2((((injectionSwitch)[0]) - tan(0.0)), (injectionSwitch)[1]), bvec2(true, true))).x))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true))), (min(float(mat3(((min((false ? (min((float(mat3((2.7), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, cos(0.0), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), (clamp((2.7), (0.0 + ((2.7))), (2.7))))) : (injectionSwitch.x)), (max((((false ? (2.7) : (injectionSwitch.x))) - 0.0), (((false ? (2.7) : ((true ? (mix(float((injectionSwitch.x)), float((7.0)), bool(false))) : (atanh(float(false))))))) - 0.0)))))), (clamp(sin(0.0), sin(0.0), sin(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(((false ? (2.7) : (injectionSwitch.x))), sin(0.0), 1.0, (clamp((float(mat4x3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (mix(float((- 15.87)), float(0.0), bool(true))), ((false ? (160.001) : 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0))))))))))), workgroup_base + subgroup_id * ((subgroup_size) | ((0u | (subgroup_size)))))) + (min((max(subgroup_local_id, subgroup_local_id)), ((true ? subgroup_local_id : (workgroup_base)))));
 uint next_virtual_gid = (0u | (((workgroup_base + subgroup_id * subgroup_size + (((true ? (subgroup_local_id + 1) : (((~ (((~ ((((min((((((((virtual_gid) / uint((injectionSwitch.y))))) - (clamp(0u, 0u, 0u)))) * 1u) << (0u >> (uint(1u))), (((((((virtual_gid) / uint((injectionSwitch.y))))) - (clamp(0u, 0u, 0u)))) * 1u) << (0u >> (uint(1u)))))) ^ 0u))) << 0u))))))) % subgroup_size)) - (0u | 0u))));
 buf[virtual_gid] = 1;
 if((((false || (true)) ? subgroup_local_id + (min((clamp(((1) ^ 0), ((1) ^ 0), 1)), 1)) : (((clamp(((((0u) / 1u)) >> 0u), ((((((0u) / 1u)) >> 0u)) ^ 0u), ((((0u) / 1u)) >> 0u))) | (((clamp(uint(uint(virtual_gid)), (uint((min(uvec4(uint((clamp((uint(uint(((uint(virtual_gid)) / 1u)))), uint(virtual_gid), (0u | ((~ (~ (uint(virtual_gid))))))))), 0u, ((~ (~ ((max(1u ^ 1u, 1u ^ 1u)))))), 1u), uvec4(uint((0u ^ (uint(virtual_gid)))), 0u, (1u ^ 1u), 1u))))), (clamp(((((((uint(uvec4((0u + (0u)) + (uint(uint(virtual_gid))), 0u, 0u, 0u))) << 0u))) >> 0u)), uint(uint((clamp(((virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)))), (((~ (~ ((! (! ((! (! (true)))))) ? uint(uint(virtual_gid)) : (146749u)))))))))))))))) < subgroup_size)
  {
   atomicStore(buf[((next_virtual_gid) | (next_virtual_gid))], uint(((((0 | ((2) - 0))) / (1 & (1 & 1))))), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[(uint((uvec4(1u, 1u, 1u, 1u) * (((uvec4((uint(uvec4((0u ^ (((((false ? ((next_virtual_gid >> workgroup_size)) : ((((true ? next_virtual_gid : (virtual_gid)))) | (((true ? next_virtual_gid : (virtual_gid)))))))) / uint((injectionSwitch.y))))), 1u, 1u, 0u))), 0u, ((1u << (uint(2u))) >> (uint(2u))), 0u))) | uvec4(0u, 0u, 0u, 0u)))))], uint(2), (((1) | 0) * (((int(ivec3(true ? ((((max(4, 4)))) / 1) : (- 27113), 1, 1)))))), 64, 4);
   subgroupAll(true);
  }
}
