#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((true && ((((((injectionSwitch.x > (clamp(((false ? (((6.9)) - 0.0) : (max((min(injectionSwitch.y, injectionSwitch.y)), (float(mat3((min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), ((false ? (((6.9)) - 0.0) : (max((min(injectionSwitch.y, injectionSwitch.y)), (float(mat3((min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), ((true ? ((false ? (((6.9)) - 0.0) : (max((min(injectionSwitch.y, injectionSwitch.y)), (float(mat3((min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))) : (- 7.3))))))))) || (((! (! (((bool(bvec3(bool(bvec4((clamp((float((mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, (clamp(0.0, 0.0, (float(mat3x2((max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, (clamp(((0.0) * 1.0), ((((false ? (max((7.7), (7.7))) : 0.0)) / 1.0)), ((injectionSwitch.x) + (0.0))))) + (mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), 1.0))))), (float((mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (max(((0.0) * 1.0), 0.0))) + (mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, ((tan(0.0)) / 1.0), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), 1.0))))), (float((mat4x3(0.0, 0.0, (min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), 1.0))))))) > injectionSwitch.y, false, true, true)), false, true)))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && (false))))
    barrier();
   if(((bool(bvec4((! (! (false))), true, true, true)))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((false || (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((false) || false)))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((true && ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = (~ ((0u | (((~ (workgroup_base + ((subgroup_id) * uint((injectionSwitch.y))) * subgroup_size)) / 1u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((((max(injectionSwitch.x, (clamp(injectionSwitch.x, (min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((((false) && true)))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((false || ((true && ((bool(bvec3(false, (((true && (false || ((false))))) && true), (((max((vec2(injectionSwitch[0], (min(injectionSwitch, ((max(vec2(mat2(injectionSwitch, 0.0, ((false ? (- 354.208) : 1.0)))), vec2(mat2(injectionSwitch, 0.0, ((false ? (- 354.208) : 1.0)))))))))[1])), injectionSwitch)).x < injectionSwitch.y)))))))))))
  barrier();
 if(((false || (false))))
  barrier();
 if((((injectionSwitch.x > (float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((bool(bvec3((false), false, false))) && true)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((bool(bool((((injectionSwitch.x > injectionSwitch.y))))))) && true))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((bool((bvec2(bvec2(bvec2(((bool((bool(bvec2(bool(false), true))))) || false), ((((injectionSwitch) * mat2(1.0)).x < (max(injectionSwitch.y, injectionSwitch.y)))))))))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 ((true ? buf[virtual_gid] = 1 : (atomicMin(num_workgroup, workgroup_id))));
 if(((subgroup_local_id) / 1u) + 1 < subgroup_size)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((! (! ((false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec2(false, ((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((false || (((false) || false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = (min(0, (((~ (~ (0)))) | ((((~ (~ (0)))) | ((~ (~ (0)))))))));
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(((((((((1.0 * (((false ? (781.596) : injectionSwitch.x)))) > (max(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))) || false))))) || false))
    {
     if((false))
      barrier();
     if(((((((float(float(((true ? ((((false ? (inversesqrt(703.027)) : injectionSwitch.x)) - 0.0)) : (65.20)))))) > ((min(vec2(injectionSwitch[0], ((max(float(vec4((min(injectionSwitch[1], injectionSwitch[1])), 0.0, sqrt(0.0), 1.0)), float(vec4((min(injectionSwitch[1], injectionSwitch[1])), 0.0, sqrt(0.0), 1.0)))))), vec2(injectionSwitch[0], ((max(float(vec4((min(injectionSwitch[1], injectionSwitch[1])), 0.0, sqrt(0.0), 1.0)), float(vec4((min(injectionSwitch[1], injectionSwitch[1])), 0.0, sqrt(0.0), 1.0))))))))).y))) || false)))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((! ((true && (! (((((true) || false) && ((false || ((! (! (false))))))))))))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > ((true ? injectionSwitch : (vec2(3.6, 66.63).gg))).y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((bool((bvec3(bvec3(bvec3(((false || (bool(bool((false)))))) && true, false, true)))))) && true)))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if(((! (! ((! (! (false))))))))
  barrier();
}
