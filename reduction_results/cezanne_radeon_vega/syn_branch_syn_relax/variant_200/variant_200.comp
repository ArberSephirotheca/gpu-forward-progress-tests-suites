#version 430

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup;
 for(int _injected_loop_counter = (((1 << (int(2))) >> (int(2))) & 1); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false || (true)))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   while((! ((! (! (! (((false) && true))))))));
   if((! (! ((bool((bvec3(bvec4(bvec3((! ((! (! (! ((false))))))), false, true), ((true) && true))))))))))
    {
     for(int _injected_loop_counter = (0 >> ((~ ((clamp(~ (int(4)), ~ (int(4)), ~ (int(4)))))))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if(((! (! ((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
  }
 if((false))
  barrier();
 uvec4 GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 do
  {
   GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
  }
 while((((true && (false))) && true));
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 if(true)
  {
   if((false))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(((((injectionSwitch.x > injectionSwitch.y))) && true));
    }
  }
 else
  {
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   ((((true ? GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.xy = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size : (uvec2(35239u, 102739u))) | (uvec2(0u, 0u) | uvec2(0u, 0u)))));
   if((! (! ((bool(bvec4((false), true, false, true)))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > ((true ? (vec2(mat2(injectionSwitch, round(length(normalize(sqrt(1.0)))), cos(0.0)))).y : (2668.8883)))))))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (((int(1)) | 0))); _injected_loop_counter --)
          {
           if((false))
            barrier();
          }
         if((false))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter < (~ (~ (1))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > ((((min(int((injectionSwitch.x)) << (int(5)), int((injectionSwitch.x)) << (int(5)))))) * 1); ((_injected_loop_counter --) << (0 & 34432)))
  {
   if(((((! (! ((! (! ((false || ((bool(bool((((bool(bvec4(! (! (! ((((! ((false) || false)) && true))))), true, true, true)))) && true))))))))))))))))
    {
     if(((bool(bool(false))) || ((bool(bvec2(true, true))))))
      {
       do
        {
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       do
        {
         if((! (! (true))))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
           if(((true) && true))
            {
             if((false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     else
      {
       if(true)
        {
         do
          {
           if((false))
            barrier();
          }
         while(false);
        }
       else
        {
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if((false))
    {
     for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 while(false);
 GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.z = subgroup_id;
 for(int _injected_loop_counter = 1; ((false ? (atomicMin(_injected_loop_counter, 37940)) : (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) != int((((injectionSwitch.x) / 1.0))); _injected_loop_counter --)
  {
   GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.x = ((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)).z;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((((max((((min(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if((! ((! (! (! ((false))))))))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > (18674 & 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(false)
  {
   if((false))
    {
     if((false))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((int((injectionSwitch.x))) ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         do
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & 35720); _injected_loop_counter --)
            {
             GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y = subgroup_size;
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       else
        {
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
  {
   if((! (! (false))))
    {
     if((false))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
  }
 if(((false || ((injectionSwitch.x > (min(injectionSwitch.y, (min(((true ? injectionSwitch.y : (6.9))), injectionSwitch.y)))))))))
  {
  }
 else
  {
   if((! ((false || (! (true))))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
    }
  }
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1) / 1); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false || (((false) || false))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   do
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         do
          {
           GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       else
        {
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if(true)
      {
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 (~ (~ (GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.w = num_workgroup)));
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(((bool(bool((injectionSwitch.x < injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != (0 << ((((int(int(int(8))))) + int((injectionSwitch.x))))); ((((true ? _injected_loop_counter -- : (15724)))) ^ 0))
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(true)
    {
     do
      {
       GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.xy.y = workgroup_size;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(3))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter != ((1 << (((int(2)) << 0))) >> (int(2))); _injected_loop_counter ++)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
           if((false))
            barrier();
          }
         while(false);
         if((false))
          barrier();
        }
      }
     if((true && ((false))))
      barrier();
    }
   else
    {
    }
  }
 while(false);
 if(((false || (false))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         barrier();
        }
       while(false);
      }
     while((((vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)));
    }
  }
 uint workgroup_id = ((((clamp(~ ((uvec3(uvec4(((~ (gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))), 0u)))), ~ ((uvec3(uvec4(~ (uvec3(((uvec4((((((gl_WorkGroupID)) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), 0u)) + uvec4(0u, 0u, 0u, 0u)))), 0u)))), ~ ((((uvec3(uvec4(~ (gl_WorkGroupID), (uint(uvec4(((true ? 0u : (num_workgroup))), 0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u))).x;
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = (min(((((int(ivec3((0 ^ 0), 0, (min(1, 1)))))) | (0 << (int(7)))) << (int(4))), ((((int(ivec3((0 ^ 0), 0, (min(1, 1)))))) | (0 << (int(7)))) << (int(4))))); _injected_loop_counter != (((1) / 1) & (((((0) | 0) + (int(ivec3((1 << (int(7))), 1, (1 & 1)))))) >> (int(((((clamp((7), ((true ? (7) : (_injected_loop_counter))), (7))) - (0 << (int(5))))) << int((injectionSwitch.x))))))); _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(false);
          }
        }
       if(((false) || false))
        {
        }
       else
        {
         if(((! (! (false)))))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           barrier();
          }
        }
       GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
      }
    }
  }
 if((false))
  barrier();
 uint workgroup_base = (uvec4((((uint(uvec3(0u, 1u, 0u)))) << 0u), 0u, 0u, 0u) | (clamp((((uvec4(1u, 1u, 1u, 1u) * ((((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid)))))) | ((((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid))))), (((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid))), (clamp((((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid))), (((((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid)) ^ uvec4(0u, 0u, 0u, 0u)))), (((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid)))))))).xy.y * (((uint(((((uvec3(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, 0u, ((1u << ((((injectionSwitch.x < injectionSwitch.y)) ? (uint(3u)) : (111986u)))) >> (uint(3u))))) | uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))) ^ 0u));
 uint virtual_gid = workgroup_base + (clamp(GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.x * GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y, GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.x * GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y, ((GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.x * GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y) << (80311u & 0u)))) + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if((((! (! ((false) || false))))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = ((0 ^ (0 << ((((min(int(0), int(0)))) - 0))))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.w = virtual_gid;
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(false)
  {
  }
 else
  {
   if((((((! (! (bool(bool((((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))
    {
     do
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     while(false);
    }
  }
 if(true)
  {
   GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.z = (0u ^ (((GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.w) + (0u << (uint(3u))))));
  }
 else
  {
  }
 if((false || ((! (! ((! (! (((true && (((bool(bool(true)))) || false))))))))))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 | 0); _injected_loop_counter > int(((vec2(0.0, 0.0) + (injectionSwitch)).x)); _injected_loop_counter --)
      {
       if((! (((! ((bool(bvec2((((((injectionSwitch) - abs(vec2((injectionSwitch.x), (injectionSwitch.x)))).x > injectionSwitch.y))), false))))) && true))))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
          }
         if((false))
          {
           for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < (((int((injectionSwitch.y)) << (int(4))) >> (int(4))) | (1 ^ 0)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(false);
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 1; (~ (~ (_injected_loop_counter))) != 0; _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       barrier();
      }
     do
      {
       if((false))
        barrier();
      }
     while(false);
    }
  }
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.x * GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.y);
 for(int _injected_loop_counter = 1; (false || (_injected_loop_counter > 0)); _injected_loop_counter --)
  {
   GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.xy.x = ((next_virtual_gid) / 1u);
  }
 do
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << ((((0 + (int(3))))) | (((0 + (int(3))))))); (~ ((((~ (((((true ? ((~ (~ (_injected_loop_counter --))) | 0) : (_injected_loop_counter)))) << (max(0, (~ (~ (0)))))))))) << 0)))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ((((((injectionSwitch.x < injectionSwitch.y)) ? (0u ^ (((true ? buf[GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup.xyz.z] = 1 : (workgroup_base))))) : (num_workgroup)) << 0u)));
      }
    }
  }
 while(false);
 do
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if(true)
      {
       if((false))
        {
         for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       do
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(false);
       for(int _injected_loop_counter = (70458 & (0 | (clamp(((0) >> ((0) ^ 0)), 0, (min(0, 0)))))); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1 < (((clamp((max((max((uvec4((min(0u, 0u)), 0u, 0u, 0u) | (min((GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup), (GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup)))), (uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup)))), (uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup)))), GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup, GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gidnum_workgroup))) + uvec4(0u, 0u, 0u, 0u)).xyz.y)
          {
           if((false))
            {
             do
              {
               if(true)
                {
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while((((((max(injectionSwitch, ((false ? (injectionSwitch) : injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)));
                  }
                }
               else
                {
                }
              }
             while(false);
             if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if((((((injectionSwitch.x) / 1.0) > (float(float(((injectionSwitch.y) / 1.0))))))))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((false))
            barrier();
           int i = 0;
           if(true)
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((true && (true)))
                    {
                     for(int _injected_loop_counter = (((1 << (int(7))) >> (int(7))) & 1); _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           if(true)
            {
             if(false)
              {
              }
             else
              {
               do
                {
                 if((false))
                  barrier();
                }
               while((bool(bvec2((true && (false)), false))));
               if((false))
                barrier();
               do
                {
                 if(((((vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, (clamp(1.0, ((1.0) - 0.0), (min(1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))))
                  barrier();
                }
               while(false);
              }
            }
           else
            {
            }
           if(false)
            {
            }
           else
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 do
                  {
                   do
                    {
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if(((bool(bvec2(false, ((false) && true))))))
                    barrier();
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                   if((false))
                    barrier();
                  }
                 while(((false) && (((min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))));
                }
              }
            }
           do
            {
             for(int _injected_loop_counter = (0 ^ (1)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(true)
                  {
                   if((bool(bvec3(true, false, false))))
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     while((true && (false)));
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     do
                      {
                       barrier();
                      }
                     while((bool(bool(((injectionSwitch.x > injectionSwitch.y))))));
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > (determinant(mat4(1.0, ((true ? 1.0 : (8627.8212))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)) * (injectionSwitch.y)))) || ((false))))
                      barrier();
                    }
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(true)
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               atomicStore(buf[GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.xy.x], uint(2), 4, 64, 0);
               if((! (! ((((injectionSwitch.x > (clamp(injectionSwitch, (min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if((false))
              barrier();
             if(((bool(bvec2((! (! (false))), true)))))
              barrier();
            }
           while((false || ((bool(bvec2(false, true))))));
           do
            {
             if((false))
              {
               if(((((((bool(bvec3((! (! (! ((bool(bool(! (false)))))))), false, false))) || false)) && true))))
                {
                }
               else
                {
                 if(true)
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           while(false);
          }
         else
          {
           atomicStore(buf[GLF_merged3_0_2_55_2_1_11_3_1_11GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizesubgroup_idvirtual_gid.xy.x], uint((((min(((2) << 0), 2))) ^ 0)), 4, 64, 0);
           if((! (! ((bool(bvec4(true, true, true, true)))))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 << (int(1))); _injected_loop_counter --)
            {
             do
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != ((36621 & 0) >> (int(5))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           barrier();
          }
        }
       if((false))
        barrier();
      }
     else
      {
      }
     if((false))
      {
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(false);
 if((false))
  barrier();
}
