#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(((((bool(bool(((injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((! (! (false)))))
  barrier();
 if(((! (! (false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = (((0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | (~ (~ ((true ? (((max(((0u + (((((max(((uint(uvec4((0u | (((((max(workgroup_base + subgroup_id * subgroup_size + (uint(uint(subgroup_local_id))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) / 1u) / 1u)), 1u, 0u, 1u)))), (((((max((((1u * (((true ? uint(uint(0u)) : (subgroup_id)))))) + ((min(workgroup_base, workgroup_base)))), workgroup_base))) * 1u) ^ uint((injectionSwitch.x)))) + subgroup_id * subgroup_size + subgroup_local_id)))) + 0u)))), ((((0u + (((((max((((((max(workgroup_base + subgroup_id * subgroup_size + (uint(uint(subgroup_local_id))), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) / 1u) / 1u), (((max((((((1u * (((true ? uint(uint(0u)) : (subgroup_id)))))) ^ 0u)) + ((min((clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)))), workgroup_base))) * 1u) + subgroup_id * subgroup_size + subgroup_local_id)))) + 0u))))) / 1u)))) - 0u) : (50589u))))));
 if((false))
  barrier();
 atomicStore(write_val, uint(((false ? (subgroup_size) : virtual_gid))), (max(((0 << ((((max(true ? int(3) : (29245), true ? int(3) : (29245))))))) | (4)), (int(((false ? (- 29152) : int(((0 << (((true ? int(3) : (29245))))) | (4))))))))), ((64) | (64)), 0);
 if((((injectionSwitch.x > ((true ? injectionSwitch.y : (mod(- 16.73, - 47.83))))))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
}
