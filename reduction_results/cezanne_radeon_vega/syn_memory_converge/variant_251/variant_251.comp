#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
  }
 if((false))
  {
   if((true && ((false))))
    barrier();
   if((false))
    barrier();
   if(((((injectionSwitch.x < injectionSwitch.y)) && (((false) && true)))))
    barrier();
   if((! ((((! (! (! ((bool((bvec2(bvec4(bvec2((((injectionSwitch.x > injectionSwitch.y))), true), false, false)))))))))) || false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (((bool((bvec3((bvec3(bvec3(bvec3((bvec3(bvec3(bvec3((! ((((((! (! (! (! (((bool(bvec3(bool(bvec2(false, true)), true, false)))))))))) || (((injectionSwitch.x > injectionSwitch.y)))))) || false)) || false, false, false)))))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > (float(mat4x2(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false || ((false || (bool((((false || (bool(false)))) && true)))))))))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bool(((((((false) || false)) && true)) || false))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bool(false)))))
    {
     if((((false) && true)))
      barrier();
     if((! (! ((false)))))
      barrier();
     barrier();
    }
   if((((! (! (false || (false)))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if(((((bool(bvec4(false, true, false, false)))) && true)))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  barrier();
 if(((((! (! (bool(bvec2((false), true)))))) && true)))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    {
     if(((bool(bool((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((bool(bvec3(false, false, (false || (((injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if((true && ((! ((bool(bvec2(! ((((injectionSwitch.x > injectionSwitch.y)))), false))))))))
  {
   if((false))
    {
     if((((false || (bool((bvec2(bvec4(bvec2(false, true), false, false)))))))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((bool(bvec3(false, true, ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((false ? (- 5.4) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = ((gl_WorkGroupSize) >> uvec3(0u, 0u, ((((0u) - 0u)) >> ((0u >> (uint(0u))) << (uint(3u)))))).x;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if((bool(bool((! (! ((false))))))))
  barrier();
 if((false))
  {
   if(((true && (false))))
    barrier();
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((bool(bvec4((false), true, ((injectionSwitch.x > injectionSwitch.y)), true))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bvec4((! ((((((false || (! (false))))) || false)) && true)), false, true, false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if(((false || (false))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, ((injectionSwitch.x < injectionSwitch.y)))))) && ((injectionSwitch.x < (float(((vec3(((true ? (1.0 * (((injectionSwitch.y) * determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) : (4.2))), 0.0, 1.0)) * mat3(1.0))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((((! (((! ((true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))) && true))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((false || (false))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((((false)) || false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((((vec2(mat2x3((min((max(((injectionSwitch) - vec2(0.0, 0.0)), (mix(vec2((- 5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (vec2(- 8037.0946, - 3.0).y)), bvec2(((injectionSwitch.x < injectionSwitch.y)), false))))), injectionSwitch)), (clamp(1.0, (clamp(((1.0) / 1.0), (max(1.0, 1.0)), 1.0)), 1.0)), 1.0, 1.0, 0.0)))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((bool(bvec2(true, false))) && (((((false || ((((((false)) || false)) && true)))) || false) || false)))))
  {
   if((((((false) && true)) && ((injectionSwitch.x < injectionSwitch.y)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((((false) || false)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((! (! ((((bool(((bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true))))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(((! ((bool(bvec2(! (false), true)))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), (0 | (4)), 64, 0);
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((! (! ((false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if(((((min(((mix(float((- 914.922)), float((true ? injectionSwitch.x : (- 927.088))), bool(((injectionSwitch.x < injectionSwitch.y)))))), ((mix(float((1.0)), float(min((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), bool(true)))))) > (min(injectionSwitch.y, ((false ? (8.0) : injectionSwitch.y))))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((false) && true)))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(true)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false || ((false))))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if(((((1.0 * (((vec2(mat2x4(vec2(mat2(((injectionSwitch) * mat2(1.0)), (injectionSwitch.x), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, (dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0)))).x)) > injectionSwitch.y))))
          barrier();
         if((! (! ((false)))))
          {
           if((false))
            barrier();
           if(((bool(bvec4((false || (! (! ((! (! ((((false)) && true)))))))), true, true, false)))))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((((false) && true)))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if(((((! (! (false)))) || false)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if((false || ((false))))
            barrier();
          }
         if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((! (! ((bool(bvec4(((bool(bool(false)))), false, (((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if(((false || (false))))
          {
           if((((((injectionSwitch.x) / (dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(0.0), 1.0, 0.0)))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y) || (((bool(bvec2(false, false)))) || false))))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if(((true && (false || ((true && ((false))))))))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if(((! (! (bool(((! ((((! ((bool(bvec2(! (! (true)), false))))) || false)))) && (bool((false))))))))))
      {
       if((false || (((bool(bvec4((! ((! (! ((true && (((! ((bool(bvec3(! ((bool(bvec4(bool((bool(bvec3(bool(! (false)), ((true) && true), false)))), true, false, false)))), true, true))))))))))))), true, false, true)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((! (! (false)))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if(((((((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, ((injectionSwitch.x < injectionSwitch.y)))))))) && true)))
      {
       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if(((((false || (false))) || false)))
      {
       if((! (! (((((false || (((injectionSwitch.x > injectionSwitch.y))))))) || false))))
        barrier();
       if((((((bool(bvec3(((bool((bvec3(bvec3((bvec3(bvec4(bvec3((mix(float(injectionSwitch.x), float((7.4)), bool(false))) > injectionSwitch.y, false, false), (! (! ((false || (true))))))))))))) && true), true, false))))))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((false))
    barrier();
   buf[virtual_gid] = (uint((injectionSwitch.x)) | (uint(subgroupAllEqual(write_val))));
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((bool(bvec4((true && (injectionSwitch.x > injectionSwitch.y)), true, ((injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((false) || false)))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((! (! (((false) || false))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > ((injectionSwitch.y) / 1.0)))))
    barrier();
   if((false))
    barrier();
   if((! ((false || (! ((false)))))))
    barrier();
   if((false))
    barrier();
   if((bool(bool((false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((! (! ((((false) || ((false) && true)))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((((max((min(injectionSwitch.x, (min(injectionSwitch, injectionSwitch)).x)), (0.0 + ((min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        barrier();
       if(((((bool(bool((true && (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(((! (! (false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((false || (bool(bvec3(false, true, false)))))))
        {
         if((bool((false || (true && ((bool(bvec4((bool((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))), false, true, true)))))))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if(((((mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((! (! (false)))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((bool(bvec3(((! (((! ((((bool(bool(bool(bvec2((false), true)))))) || false))) || false)))), (((bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))
    {
     if((((injectionSwitch.x > ((max((injectionSwitch), ((clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))))) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((((false) && true)) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > ((((injectionSwitch.x > injectionSwitch.y)) ? (floor(smoothstep(vec2(- 2.6, 1.6), vec2(5.5, - 1.4), injectionSwitch))) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if((((false) || (((injectionSwitch.x < injectionSwitch.y)) && (false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((! (! (((false || (false)))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   if(((((true && (false || ((((injectionSwitch.x > injectionSwitch.y))))))) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
