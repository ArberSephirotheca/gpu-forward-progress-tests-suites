#version 460

struct _GLF_struct_0 {
 bvec4 _f0;
 uint workgroup_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(((bool(bool((! (! (false))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((((false || ((false)))) && true) || false)))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x > injectionSwitch.y)) && (! (! ((true && (((true) && true))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((bool(bvec2((bool((false || (bool(false))))), ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((! (! ((false)))))
      {
       if(((bool((bool(bvec2(bool((bool(bvec2(false, true)))), false)))))))
        barrier();
       if((bool(bvec3((false), false, false))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(((true && (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((! (! ((false || (((bool(bvec3(false, true, (false || (true))))) && true)))))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((! (! (((false) || false))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = ((min((((((false ? (uvec3((clamp(((((((((22018u)) << (0u << (uint(3u)))) + 0u)) | 0u)) | (((true ? uint(((uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)) | (uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)))) : (num_workgroup))))), ((((((((((22018u)) << (0u << (uint(3u)))) + 0u)) | 0u)) | (((true ? uint(((uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)) | (uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)))) : (num_workgroup)))))) - 0u), ((((((((22018u)) << (0u << (uint(3u)))) + 0u)) | 0u)) | (((true ? uint(((uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)) | (uvec4((((22018u)) | 0u), 1u, (0u | 1u), 1u)))) : (num_workgroup))))))), 25u, 48806u)) : gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), (false ? (uvec3(((uint(uint((((22018u)) << (0u << (min((uint(3u)), (uint(3u)))))) | (22018u))))), 25u, 48806u)) : gl_WorkGroupSize)))).x;
 if(((! (! ((((! (! ((bool(bool(false))))))) || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec4(true), gl_WorkGroupID.x);
 if(((((((false || ((! (((bool(((bvec3(bvec4(bvec3(bvec3(bvec3((! (! ((! ((bool((bvec2(bvec2((bvec2(bvec4(bvec2((bool((((((bool(bvec3(bool(((false) && true)), false, true))) || false))) || false))), false), false, false)))))))))) && true))), false, true))), false))))))))))))) || false)) || false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * ((~ (~ ((_GLF_struct_replacement_0.workgroup_id)))) * (min((0u | (~ (~ (~ (~ ((1u))))))), (0u | (~ (~ (~ (~ ((1u))))))))));
 if((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, true, true)))) && true))
  {
   if((((false) && true)))
    barrier();
   barrier();
  }
 uint virtual_gid = (max(((workgroup_base) ^ 0u), ((workgroup_base) | (workgroup_base)))) + (min((0u | (~ (~ ((subgroup_id * subgroup_size))))), (0u | (subgroup_id * subgroup_size)))) + (uint(uvec4(subgroup_local_id, 1u, uint((injectionSwitch.y)), 0u)));
 if(((true && (false || (((! (! (false)))))))))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > (mix((min(vec2(((mix(vec2(((7553.5598 * (- - 954.230))), (543.723)), vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[0], ((max(injectionSwitch, (mix(vec2((- 40.30), (- 64.65)), vec2(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))))))[1]), (max(vec2(((mix(vec2(((7553.5598 * (- - 954.230))), (543.723)), vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[0], ((max(injectionSwitch, (mix(vec2((- 40.30), (- 64.65)), vec2(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))))))[1]), vec2(((mix(vec2(((7553.5598 * (- - 954.230))), (543.723)), vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[0], ((max(injectionSwitch, (mix(vec2((- 40.30), (- 64.65)), vec2(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))))))[1]))))), vec2((687.154), ((1.0 * ((max(4.1, 4.1)))))), bvec2(false, false))).y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
    }
   if(((((bool(bool((true && ((bool(bool(false))))))))) && true)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((! ((((bool(bvec2(! ((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (mix(vec2(((float(mat4(float(- 22972), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, (max(0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 1.0, 0.0)))), (119.031)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)))), false)))) || false))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if(((! (! (false)))))
  barrier();
 if((((! (((! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(((((clamp((0.0 + (injectionSwitch.x)), ((((false ? (2.2) : injectionSwitch.x))) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
}
