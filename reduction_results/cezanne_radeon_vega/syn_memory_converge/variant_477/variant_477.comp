#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (uvec3((((~ (~ (((false) || false) ? (uvec4(73652u, 23376u, 9480u, 30676u)) : (~ (~ ((clamp(uvec4(gl_NumWorkGroups, uint((injectionSwitch.y))), uvec4((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), uint((injectionSwitch.y))), uvec4(gl_NumWorkGroups, uint((injectionSwitch.y))))))))))))))).x;
 uint workgroup_size = ((true ? gl_WorkGroupSize : (uvec3(189631u, 171743u, 104195u)))).x;
 uint workgroup_id = (~ ((min(uvec3(uvec4((~ (clamp((((((min((uvec3(0u, ((((injectionSwitch.x < injectionSwitch.y)) ? 0u : (193155u))), ((~ (~ ((0u) - 0u))))) + ((gl_WorkGroupID))), (gl_WorkGroupID))))) * uvec3((injectionSwitch.y), ((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (injectionSwitch.y))) / uvec3(1u, 1u, 1u)), (min((uvec3(0u, 0u, ((~ (~ ((~ (~ ((0u) - (0u ^ ((~ (~ (0u))))))))))))) + ((clamp((gl_WorkGroupID), (uvec3(uvec4((~ (~ ((((gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))), 1u))), (min((gl_WorkGroupID), (gl_WorkGroupID))))))), (min((gl_WorkGroupID), (gl_WorkGroupID))))), (min((uvec3(0u, 0u, ((((0u) - 0u) >> 0u))) + ((gl_WorkGroupID))), (gl_WorkGroupID)))))), 1u)), uvec3(uvec4(((max(~ (min((uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))), (clamp(((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))), ~ (min((uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))), (clamp(((clamp(gl_WorkGroupID, (uvec3(uvec3(gl_WorkGroupID))), gl_WorkGroupID))), ((((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) - uvec3(0u, 0u, ((0u) * 1u))), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))))), 1u)))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 atomicStore(write_val, (~ ((~ (~ (~ (uint(virtual_gid))))))), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(((uint((~ (min((uvec3(0u, 0u, 0u) ^ ((max((~ (uvec3((write_val), 0u, 1u))), (~ (uvec3((write_val), 0u, 1u))))))), (~ (uvec3((write_val), 0u, 1u)))))))) ^ 0u)));
}
