#version 460

struct _GLF_struct_1 {
 bvec4 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat3 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 mat4 _f4;
 mat3x2 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 _GLF_struct_0 _f1;
 bool _f2;
 ivec2 _f3;
 _GLF_struct_1 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 _GLF_struct_2 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((bool(bool(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(((((((vec2((transpose(((transpose(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    return;
   if((((false)) || false))
    barrier();
  }
 if(((! (! (false)))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(((bool(bool(false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec4(false, true, true, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
    {
     if((((false) && true)))
      return;
     barrier();
    }
   if(((! (! (false)))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((((false) || false)))
    {
     if((false))
      {
       if((bool(bvec3((false), true, false))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && ((false || (false))))))
  {
   if((false))
    {
     if(((((float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0)))) > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(((! (! ((! (! (false))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (((! (! (((bool(bool((bool(bvec2(false, true))))))))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if(((! (! (bool((bvec2(bvec2(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))))))))))))
      return;
     return;
    }
   if((((((! (! (((! (! (((((dot(vec3(0.0, 1.0, (max((clamp((min(0.0, 0.0)), 0.0, 0.0)), (0.0 + (0.0))))), ((min(clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (mix(vec3((clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))[0], (clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))[1], (4934.7215)), vec3((- 34.97), (181.776), (clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))[2]), bvec3(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), true)))))))) * (injectionSwitch.x)) > (clamp(injectionSwitch.y, (min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && true)))) && true))))
    {
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if(((! (! ((bool(bvec3(false, true, true))))))))
      barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
      barrier();
     if((((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(((true && ((false || (false))))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > ((true ? injectionSwitch : (vec2(- 8.7, 762.102)))).y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(((false || (((((injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if((((((injectionSwitch.x) / 1.0) > ((injectionSwitch.y) * sqrt((mix(float(1.0), float((94.05)), bool(false)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), (((true && (true))) || false))))))
  {
   if((false))
    {
     if(((((mix(float(injectionSwitch.x), float((3.1)), bool(false))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat4((((clamp(1.0, 1.0, (clamp(1.0, 1.0, (max((min(1.0, 1.0)), 1.0))))))) / 1.0)), _GLF_struct_2(uvec2(1u), _GLF_struct_0(mat4x3(1.0), (((! (! (((injectionSwitch.x < injectionSwitch.y)) && ((! (((! ((((bool(bool(! (! (((injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))))) ? ((((((false ? (mat3(- 1.5, 985.890, (mix(float((5.5)), float(936.106), bool(((injectionSwitch.x < injectionSwitch.y))))), 666.926, 4.6, - 14.42, - 18.85, - 79.74, ((38.15) - 0.0))) : false ? (mat3(- 9.3, - 9418.4810, - 9.1, - 6606.7129, 4.7, (mix(float((1734.8652)), float(- 392.968), bool(true))), - 4810.3019, - 2.9, 1.5)) : ((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? (mat3(- 892.375, 4806.5493, - 32.29, ((min((true ? - 6.6 : ((mix(float(90.74), float((- 3.7)), bool((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (true ? - 6.6 : (90.74))))), 5.2, 60.83, - 1.4, - 6439.0649, - 1023.5187)) : (mat3(mat3x4((mat3(mat4((mat3(mat4x3(mat3(- 828.186, ((((min(float(vec2(- 0.9, 1.0)), float(vec2(- 0.9, 1.0)))))) + sin(0.0)), 7067.0418, - 0.9, - 9661.6122, - 72.80, 4.6, - 6525.0792, - 17.94))))))))))))))))) : mat3(1.0))), ivec3(1), mat3x4(1.0), mat4(1.0), mat3x2(1.0), gl_SubgroupSize), true, ivec2(((1) | (((1) | int((injectionSwitch.x)))))), _GLF_struct_1(bvec4(true)), mat4x3(1.0)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec4(false, true, false, false)))))
    return;
   barrier();
  }
 if((false))
  return;
 if((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if((false))
    return;
   if(((! (! (false)))))
    {
     if(((! (! (false)))))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = (min(((gl_NumWorkGroups.x) << 0u), gl_NumWorkGroups.x));
 if((! (! ((false)))))
  {
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((((false || ((false))) && true)) && true)))
  return;
 if((((injectionSwitch.x > ((false ? (- 2.2) : injectionSwitch.y))))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if(((false || (false))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
  }
 if(((((false || (true && ((false) || false)))))))
  {
   if((((false) && true)))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    {
     if(((true && ((false || (false))))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((((false)) || false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((((injectionSwitch.x > (clamp((mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y))) || false)))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    return;
   if((true && ((false))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((false))
      return;
     return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(((((true && (injectionSwitch.x > (((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - log(1.0))))))))
      return;
     if((false))
      barrier();
     if(((true && (false))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((! (((! (false)) && true)))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
      }
     barrier();
     if((((false) && true)))
      return;
    }
   if((false))
    {
     if((((((false ? (6.3) : (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((false) && true)))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if(((true && (false))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(((((! (((! ((! (! ((bool((((bvec2(bvec4((bvec2(bvec3(bvec2(bvec3(bvec2((bvec3(bvec3(bvec3(bvec2(((! (! (! (! (false)))))), false), false))))), ((((injectionSwitch.y) * (injectionSwitch.x)) < injectionSwitch.y)))), true))), true, false))))))))))))) && true))) && true)))
  {
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      return;
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if(((bool(bvec4(false, ((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > ((false ? (6.0) : injectionSwitch.y)))))), false, false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > (clamp((max((((vec2(mat2(((((true) || false) ? (vec2(injectionSwitch[0], injectionSwitch[1])) : (injectionSwitch))), 0.0, 1.0))).y) - 0.0), (clamp((((vec2(((mat4x3((vec2(mat2(((((true) || false) ? (vec2(injectionSwitch[0], injectionSwitch[1])) : (injectionSwitch))), 0.0, 1.0))), abs(0.0), 0.0, abs(1.0), sqrt(1.0), 1.0, 1.0, 1.0, (injectionSwitch.x), (dot(vec2(1.0, 0.0), vec2(0.0, cos(0.0)))), 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y) - 0.0), (((vec2(mat2(((((true) || false) ? (vec2(injectionSwitch[0], injectionSwitch[1])) : (injectionSwitch))), 0.0, 1.0))).y) - 0.0), (((vec2(mat2(((((true) || false) ? (vec2(injectionSwitch[0], ((injectionSwitch) - vec2(0.0, 0.0))[1])) : (injectionSwitch))), 0.0, 1.0))).y) - 0.0))))), (mix(float((7.7)), float(((min((((true) || false) ? (((mat2(1.0) * ((vec2((0.0 + (injectionSwitch[0])), injectionSwitch[1])))) / vec2(1.0, 1.0))) : (injectionSwitch)), ((true && (((true) || false))) ? (((mat2(1.0) * ((vec2((0.0 + (injectionSwitch[0])), injectionSwitch[1])))) / vec2(1.0, 1.0))) : (injectionSwitch))))).y), bool(((injectionSwitch.x < injectionSwitch.y))))), ((true ? ((((((injectionSwitch.x > injectionSwitch.y)) || ((true))) || false) ? (max((vec2(0.0, 0.0) + ((vec2(injectionSwitch[(clamp(0, (0 | (0)), (max(0, 0))))], injectionSwitch[1])))), (vec2(injectionSwitch[0], injectionSwitch[1])))) : (injectionSwitch))).y : ((113.005 * - 3.0))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false || ((false))))
      {
       if((false))
        barrier();
       return;
       if((false))
        {
         if((false))
          barrier();
         return;
        }
      }
     if((false))
      return;
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      {
       if(((((! (! ((true && (false)))))) && true)))
        return;
       if(((bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((! (! ((false))))) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((false || (((false || (((((true && (injectionSwitch.x > injectionSwitch.y))) && ((injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if(((((! (! ((! (! ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     barrier();
     if((false))
      return;
     if(((false || (false))))
      return;
    }
   return;
  }
 if((((true && ((false)))) || false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((! (! (((bool(bool((((((false || ((((! (! (((injectionSwitch.x > injectionSwitch.y) || false))))) && true)))))))))) && true)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if((! (! ((false)))))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if(((((bool(bool(false)))) || false)))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((! ((! (! (! ((((! (! (bool((! (! (bool(false)))))))))))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((false) || false))
    {
     if((false))
      {
       if(((((1.0 * (max((injectionSwitch.x), (((injectionSwitch.x)) - 0.0)))) > (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 27.15), ((- - 81.84))), bvec2(false, false))).y))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! ((bool(bvec4(! ((false || (((injectionSwitch.x > injectionSwitch.y))))), true, false, false)))))))
          {
           if((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))
            barrier();
           return;
          }
         barrier();
        }
       if((false))
        return;
       if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((((true && (bool((bvec3(bvec3(bvec3(false, true, true))))))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          return;
         if((false))
          barrier();
         if((((false) && true)))
          {
           if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
            return;
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if(((((max((mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if(((false || (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        return;
       if((false))
        barrier();
       if(((! (! (bool(bvec2((! (! (! (! ((! (! (((false)))))))))), false)))))))
        return;
      }
     if((false))
      barrier();
    }
   else
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if(((true && (((false)))) || false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        return;
      }
     if((false))
      return;
     if(((((true && (bool(bool(bool(bvec3(false, false, false))))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bool(false)))))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((false || (false))))
          {
           if((false))
            barrier();
           if((((false)) || false))
            barrier();
           return;
           if((false))
            barrier();
          }
         if((((((bool(bvec4(false || (injectionSwitch.x > (mix(vec2((max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2((35.36), (7090.1333)), bvec2((((true && (false))) && true), false))).y), true, false, true))))))))
          {
           if(((true && (false))))
            barrier();
           barrier();
          }
         barrier();
         if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if((false))
          return;
        }
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(((! (! (bool(bvec4((! (! ((((injectionSwitch.x > injectionSwitch.y)))))), true, ((injectionSwitch.x < injectionSwitch.y)), true)))))))
        return;
      }
     if((false))
      return;
     if(((((bool((true && (bool((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, (bool(bvec2(true, true))))))))))) || false))))
      return;
     if(((bool(bool((! (! (((((injectionSwitch.x > injectionSwitch.y)))) || false))))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((((bool(bvec3(true, true, true))) ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec3(false, false, true)))))
    {
     if(((bool(bvec3(false, true, false)))))
      return;
     if(((false || (false))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y)) || (((true && ((false || (((bool(bool(bool(bool((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        return;
       return;
      }
     if(((bool(bool(false)))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(false, false)))))))
    barrier();
  }
 if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 86.51), ((- 7.3))), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 uint workgroup_id = (clamp(((((min(uint(uint(gl_WorkGroupID.x)), uint(uint(gl_WorkGroupID.x))))) ^ 0u)), gl_WorkGroupID.x, (uint(uvec2((max(((((gl_WorkGroupID) / ((((uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) << (((uvec3(7u)) << uvec3(0u, 0u, 0u))))) | ((uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) << (((uvec3(7u)) << uvec3(0u, 0u, 0u)))))) >> (((uvec3(7u))) * uvec3(1u, 1u, 1u)))).x) - 0u), (max(((gl_WorkGroupID) / (((uvec3(0u, 0u, 0u) + ((max(uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) << (((uvec3(7u)) << uvec3(0u, 0u, 0u))), uvec3((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)) << (((uvec3(7u)) << uvec3(0u, 0u, 0u)))))))) >> (uvec3(((true ? (max((max(7u, ((7u) | (7u)))), 7u)) : (usubBorrow(write_val, num_workgroup, write_val)))))))).x, ((gl_WorkGroupID) / ((uvec3((injectionSwitch.y), ((clamp((mix(float((- 127.946)), float(injectionSwitch.y), bool(true))), (float(float(injectionSwitch.y))), injectionSwitch.y))), (injectionSwitch.y)) << (((uvec3(7u)) << uvec3(0u, 0u, 0u)))) >> (uvec3(7u)))).x)))), 1u)))));
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    {
     if((false))
      {
       if((((false)) || false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if((false))
  {
   if(((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if((false))
  return;
 if(((false || ((((! (! ((mat2(1.0) * (injectionSwitch)).x > (vec2(injectionSwitch[0], (abs(0.0) + (injectionSwitch[1])))).y)))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if((false))
    barrier();
   return;
   if((false))
    barrier();
   if((((injectionSwitch.x > ((injectionSwitch) - vec2(((0.0) + 0.0), 0.0)).y))))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    return;
  }
 uint workgroup_base = (clamp(((((workgroup_size * (max(workgroup_id, (clamp(workgroup_id, workgroup_id, workgroup_id))))) + 0u) | ((~ (~ ((workgroup_size * (max(workgroup_id, (clamp(workgroup_id, workgroup_id, workgroup_id))))) + 0u)))))), ((((workgroup_size) >> 0u) * (max(workgroup_id, (clamp(workgroup_id, workgroup_id, workgroup_id))))) ^ 0u), (0u ^ (workgroup_size * (max(workgroup_id, (clamp(workgroup_id, workgroup_id, workgroup_id))))))));
 uint virtual_gid = (((false ? (((subgroup_id) | 0u)) : max((max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3._f1._f1.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f1.subgroup_size)))) + subgroup_local_id;
 if((((! (((! ((! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))
  barrier();
 if((false))
  barrier();
 if((false || ((false))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (((max(injectionSwitch.y, (float(vec3(injectionSwitch.y, 0.0, 1.0)))))) / (injectionSwitch.y))))))
  barrier();
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((false) && true)))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false || ((false))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        return;
       if(((false || (false))))
        barrier();
       return;
      }
     if(((! (! (false)))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
     if((false))
      barrier();
     if(((((injectionSwitch.x > injectionSwitch.y)) || ((false || (false))))))
      return;
     if((false || ((false))))
      return;
     if(((((mix(float((mix(float((- 2608.1223)), float(((mix(float(float(vec3((8446.1794), 0.0, 1.0))), float((2854.7073)), bool((! (! (false)))))))), bool(true)))), float((mix(float(((vec2(1.0, 1.0) * (mix(vec2((653.340), (9.5)), vec2((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))))).x), float((0.8)), bool(false)))), bool(((injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      {
       if(((((mix(float((946.425)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if(((bool(bvec3((bool(bvec3(false, true, true))), true, false)))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if(((bool(bvec2((bool(bvec2(false, true))), true)))))
  {
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((true && (bool((bvec2(bvec3((bvec2(bvec4(bvec2(false, false), true, true))), true)))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if((! (! ((bool((bvec2(bvec2(bvec2((false), false))))))))))
      barrier();
    }
   if((false))
    return;
   if((bool(bvec2((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > ((injectionSwitch.y) / determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))
            barrier();
           return;
          }
         return;
        }
       return;
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((! (! ((true && ((false)))))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
       if((false))
        {
         if((((false) && true)))
          {
           if(((! (! ((((! (! (false)))) && true))))))
            return;
           barrier();
           if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         barrier();
        }
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if(((bool(bvec2(((false) && true), false)))))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if(((((bool(bool(false)))) && true)))
      return;
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (max(injectionSwitch.y, ((false ? (- 4.3) : injectionSwitch.y))))))))
    return;
   if(((false || ((false || (((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(((false || (! (! ((false)))))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if(((! (! (false)))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if(((bool(bool(((false) && true))))))
        return;
       if(((((! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((bool(bvec3((bool(bool((false)))), true, (((mix(vec2((injectionSwitch)[((true ? 0 : (67556)))], (5.6)), vec2((3.3), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   return;
   if((false))
    return;
   if((false || ((bool(bvec2((((false))) && true, true))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((((((injectionSwitch) / ((((injectionSwitch.x > injectionSwitch.y)) ? (vec2(5.7, - 1242.2260)) : (vec2((mat4(1.0) * (mat4(cos(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, (dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), sqrt(0.0), 0.0, 1.0, 0.0)))))))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, (min(uint(virtual_gid), uint(virtual_gid))), 4, 64, 0);
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((false) || false)))
    return;
   if((false))
    barrier();
   return;
  }
 buf[virtual_gid] = ((((false ? (num_workgroup) : uint(subgroupAllEqual(((((write_val) | (write_val))) - uint((injectionSwitch.x)))))))) ^ 0u);
 if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, ((injectionSwitch.y) * 1.0)))))))
  return;
 if((false))
  return;
 if(((((mix(vec2((injectionSwitch)[0], ((- 0.4 - - 47.24))), vec2((vec2(- 5.5, - 3.4).y), (injectionSwitch)[((true ? 1 : (40521)))]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
  {
   if((bool(bvec2((false), true))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   if(((((true && ((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))))))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
