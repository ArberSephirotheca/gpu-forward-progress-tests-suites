#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(((true && (false))))
  return;
 if((((((false) && true))) && true))
  return;
 if((((injectionSwitch.x > (mix(float((4.9)), float(injectionSwitch.y), bool(true)))))))
  return;
 if((((((injectionSwitch.x < injectionSwitch.y)) && ((((((injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  {
   if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  return;
 if(((! (! (((((injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(((((bool(bvec2((! (! ((true && (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)))))))))
        return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if(((true && (false))))
      return;
     return;
    }
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((bool(bvec3((((((injectionSwitch.x > injectionSwitch.y) && true)))), true, (! (! (true)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((bool(bvec2((((false || ((false || (((bool((bvec3((bvec3(bvec3(bvec3((bvec3(bvec4((bvec3(bvec4(bvec3((((bool(((bool(bvec3(true, true, false))) && (bool((false || (bool(bvec2((! (((((! ((injectionSwitch.x > injectionSwitch.y))) || false)) && true))), false))))))))))), false, true), true))), false)))))))))))) && true)))))), false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if(((bool(bvec4(bool((bvec3(bvec3(bvec3((false), false, false))))), true, true, false)))))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             barrier();
            }
           return;
          }
         if((false))
          return;
         return;
         if((false))
          return;
        }
       return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
      }
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > (((max((vec2(1.0, 1.0) * (injectionSwitch)).y, (vec2(1.0, 1.0) * (injectionSwitch)).y))) - 0.0)))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((! ((bool(bool(! ((((injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
    }
   if(((((bool(bvec4(false, true, true, true)))) && true)))
    return;
   if((false))
    {
     if((((false || ((false)))) || false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > ((min(vec2(mat3x4((vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, ((false ? (3.7) : (mix(float(0.0), float((20.75)), bool((bool((bvec3(bvec3(((bvec3(bvec3((bvec3(bvec3((bvec3(bvec3(bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))))))))), (mix(float((1.0 * ((- 8466.7052)))), float(((true ? 1.0 : (6862.8766)))), bool(((injectionSwitch.x < injectionSwitch.y)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, (min(abs(0.0), abs(0.0))), 1.0, 0.0, 0.0)), ((false ? (vec2(- 3585.3146, (float(vec2(- 7.6, 0.0))))) : vec2(mat3x4((vec2(mat3x2(injectionSwitch, sqrt(0.0), 0.0, (mix(float(((false ? (3.7) : (mix(float(0.0), float(((float(mat3x2(20.75, 1.0, 1.0, 0.0, log(1.0), 1.0))))), bool(((injectionSwitch.x > injectionSwitch.y)))))))), float((- 1.0)), bool(false))), 1.0))), 0.0, 1.0, (min(1.0, 1.0)), 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0))))))).y))))
    {
     if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((! (! ((false)))))
      {
       if((false))
        return;
       return;
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (false)))))
      return;
     if((((injectionSwitch.x > (min(injectionSwitch.y, (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((true && ((bool((bool(bvec2(bool((false)), true))))))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(((false || (false))))
  return;
 if(((! (! (false)))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if(((bool(bvec2(false, true)))))
    return;
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 if((! (! ((false)))))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((((false)) && true))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > (min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      return;
     if(((false || (false))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
       if(((bool(bool(false)))))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((true && (false))))
          return;
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
     if((bool((false || (bool((false)))))))
      {
       if(((bool(bvec2(false, true)))))
        return;
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((((bool(bvec3((true && (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
        {
         if((false))
          return;
         barrier();
        }
       if(((((! (! (false)))) && true)))
        {
         if((false))
          barrier();
         return;
        }
       return;
      }
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((true && (false))))
              return;
             if((false))
              return;
             if((false))
              barrier();
             return;
            }
           barrier();
          }
         if((((injectionSwitch.x > (mix(vec2((clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2((9149.3467), (0.8)), bvec2(false, false))).y))))
          return;
         return;
         if((false))
          barrier();
        }
       barrier();
       if((false))
        return;
      }
     return;
     if(((true && (false))))
      {
       if((false))
        barrier();
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
      }
     if((false))
      return;
     if((! (! (((false || (((((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((false))
      barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if(((! (! (bool(bool((((false)) || ((injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    {
     if(((! (! (false)))))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (clamp((min(injectionSwitch, injectionSwitch)), (max(injectionSwitch, (min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))
      {
       if(((true && (false))))
        return;
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((! (! (false)))))
        {
         if((false))
          return;
         barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if((((true) || false) && ((false))))
      {
       if(((((mix(float(injectionSwitch.x), float((- 0.6)), bool(false))) > ((true ? injectionSwitch.y : (167.012)))))))
        return;
       return;
       if((false))
        barrier();
      }
     if((false))
      return;
     if(((true && (false))))
      {
       if((((! (! ((((injectionSwitch.x > injectionSwitch.y))))))) || false))
        return;
       barrier();
      }
     if(((! (! (false)))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (max((mix(vec2((- 377.219), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 336.404)), bvec2(((injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch)).y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       barrier();
       if((false))
        return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if(((bool(bool((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if((false))
        barrier();
       if((false))
        return;
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
       if((((false) || false)))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if((false))
    {
     if((((bool((bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
      barrier();
     return;
    }
  }
 if(((true && (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((! (! (false)))))
    return;
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((((bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(((bool(bvec3((! (! (((false) || false)))), false, true)))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
   if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bvec3(((false) || false), false, true)))))
    return;
  }
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  return;
 if((false))
  return;
 if(((! (! (false)))))
  barrier();
 if(((! (! ((! (! ((true && (false))))))))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(((false || ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if(((! (! (((false) || false))))))
    {
     if((false))
      return;
     if((((! (! ((bool(bvec4((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         return;
        }
       return;
       if((false))
        return;
      }
     if((false))
      barrier();
     return;
    }
   return;
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if(((true && ((((bool(bvec4(((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, false, ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((bool(bvec3(((vec2(injectionSwitch[0], injectionSwitch[1])).x > ((true ? injectionSwitch.y : ((((mix(float((max(vec4(- 5270.5527, - 261.238, - 4481.0415, 489.668).b, vec4(- 5270.5527, - 261.238, - 4481.0415, 489.668).b))), float((- 9.7)), bool(false)))) / abs(cos(0.0))))))), false, ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false || ((false))))
    {
     if((false))
      return;
     if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((false)) || false))
  return;
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((false)) || false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((bool(bool(((((! (! (false))))) || false)))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      return;
     if(((! (! ((false || (false)))))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((! (! (false)))))
        barrier();
       return;
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
    }
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((true && (((true && ((false || ((injectionSwitch.x > injectionSwitch.y) && true)))))))))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   if(((bool(bvec2(false, true)))))
    return;
   if((((bool(bvec4((! (! (bool(bool((bool(bvec3(! (! ((! (! ((true && ((false)))))))), true, true)))))))), false, true, true))))))
    {
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((true && (! (! (false)))))))
    {
     if(((((mix(float((980.796)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    return;
   if((false))
    {
     if((((false) && true)))
      return;
     if((false))
      {
       if(((false || ((! (! (false)))))))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     return;
     if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((bool(bvec4((false), true, false, true))))
    return;
   if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((- 649.248), (7912.2281)), bvec2(false, false))).x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((! (! (false)))))
  {
   if((false))
    return;
   return;
  }
 if((((false)) && ((true) || false)))
  {
   if((true && ((true && ((false))))))
    barrier();
   return;
  }
 uint virtual_gid = ((uint(uvec3(~ (~ (((workgroup_base + ((subgroup_id) / (1u ^ 0u)) * ((((false ? ((packUnorm4x8(vec4(9.3, - 43.53, 0.5, - 759.453)) >> 182497u)) : subgroup_size)) / 1u))) | (workgroup_base + subgroup_id * subgroup_size)))), 0u, 0u)))) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  return;
 if((true && (((! (((! (false)) || false)))))))
  {
   if((false))
    return;
   if((bool(bvec4((! (! ((false)))), true, true, true))))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((bool(bool((! (! ((! (! (((((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
    {
     if((false))
      {
       if(((false || ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   return;
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
         if((false))
          return;
        }
       return;
      }
     if((false))
      return;
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if((((false) && true)))
  return;
 atomicStore(write_val, uint(virtual_gid), (0 | (((clamp((4) - 0, (4) - 0, ((clamp(0 ^ ((4) - 0), 0 ^ ((4) - 0), 0 ^ ((4) - 0))))))))), ((((64) << 0)) / 1), 0);
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((((! (! (injectionSwitch.x > ((injectionSwitch) + vec2(0.0, 0.0)).y)))))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
 if((false))
  return;
 if((bool(bvec3((false), false, false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((! (! (false)))))
  return;
}
