#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((((false ? (float(- 16754)) : injectionSwitch.x)) > (clamp(injectionSwitch.y, (mix(float((- 3324.9824)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((mix(float((7.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((bool(bool((bool(bvec4(false, false, false, false))))))))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if(((bool(bvec3(false, true, true)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! ((bool(((bvec3(bvec3(bvec3(bvec3(bvec3(! (! (! ((bool(bvec3(false, false, false)))))), true, false))))))))))))))
    {
     if((false))
      return;
     if(((! (! (false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((bool(bool(false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        return;
       if(((bool(bvec3(false, false, false)))))
        return;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if((((injectionSwitch.x > ((((injectionSwitch.x < injectionSwitch.y)) ? (vec2(injectionSwitch[0], injectionSwitch[1])) : (injectionSwitch))).y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((((false) && true)))
          barrier();
        }
      }
     if(((false || (false))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((false) && true)))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     return;
     if(((bool(bvec3(false, false, false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false || ((bool(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if(((((! (! (bool(bvec3(((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)))))))))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((bool(bool((! (! ((false))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((false) && true)))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  barrier();
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((! (! ((false)))))
      {
       if((false))
        barrier();
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(((((! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((bool(bool(((false) || false))))))
  {
   if((false))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > ((true ? injectionSwitch : (vec2(- 1.1, - 7.4)))).y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
     if(((bool(bvec4(false, true, false, ((injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((false || (false))))
  {
   if(((! ((false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          return;
         return;
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           return;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((false))
      {
       if(((false || (false))))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(((((mix(float((79.55)), float((float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))), bool(true))) > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          return;
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((false))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > ((((injectionSwitch.x > injectionSwitch.y)) ? (- 9.7) : injectionSwitch.y))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        return;
       if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((false) || false)))
        return;
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(((bool(bool(false)))))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec2((((((injectionSwitch) * mat2((injectionSwitch.y))).x > (max(injectionSwitch, injectionSwitch)).y))), false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((false) && true)))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((bool((bvec2(bvec3(bvec2((((min((vec2(0.0, 0.0) + ((vec2(injectionSwitch[0], injectionSwitch[1])))).x, (float(mat4(injectionSwitch.x, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y)), true), true)))))))
      barrier();
     return;
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   if((((injectionSwitch.x > (((min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     return;
    }
   if((((injectionSwitch.x > ((false ? (828.684) : injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           return;
           if((false))
            barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((((clamp(float(mat3((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(((9488.7740 + - 696.613)), (- 525.949)), bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), (min(float(mat3((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(((9488.7740 + - 696.613)), (- 525.949)), bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(((9488.7740 + - 696.613)), (- 525.949)), bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(((9488.7740 + - 696.613)), (- 525.949)), bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)).x, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((((injectionSwitch.x > (vec2((transpose(transpose(mat3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))).y)))) && true))
      barrier();
     return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
  }
 if(((((max(((true ? injectionSwitch.x : (4.5))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   if((((false || (bool(bvec4(false, false, false, true)))))))
    return;
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((bool(bool(false)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > (vec2(injectionSwitch[0], ((injectionSwitch[1]) / (dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, ((0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, (mix(float(1.0), float((- 975.746)), bool(false))), 1.0, 0.0, 0.0, sqrt(1.0)))), 0.0)))))).y))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((true && ((bool(bool(false)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (! ((false)))))
    return;
   if(((bool(bvec4(false, true, false, false)))))
    barrier();
   if((false))
    return;
   if(((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((bool(bvec3((bool(bool((false)))), true, false))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > ((false ? (vec2(- 6.7, - 8.9)) : injectionSwitch)).y))))
      return;
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((((! (! (false)))) && true)))
          barrier();
         barrier();
        }
       barrier();
       if((((false) || false)))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (mat2((injectionSwitch.y)) * (injectionSwitch)).y))))
    return;
   if((((! ((bool(((bool(! (true))) && true))))) && (false))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     return;
     if(((! (((! (false)) && true)))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((bool(bvec4(((! (! (((injectionSwitch.x > injectionSwitch.y)))))), false, true, false))) && true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   return;
   if((false))
    {
     if((((! (! (bool((false || (bool(bvec3((((((bool(((injectionSwitch.x > injectionSwitch.y)))) && true))) && true), false, true)))))))))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y)) || ((((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((vec2(vec3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))).x > injectionSwitch.y))))
    return;
   if(((true && (true)) && ((false))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if((false))
        return;
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
         if((false))
          barrier();
        }
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if(((bool(bvec2(false, false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(((! (! (false)))))
        barrier();
      }
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       return;
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = (clamp(((min(uint(uvec3(gl_WorkGroupID.x, 1u, 0u)), uint(uvec3(gl_WorkGroupID.x, 1u, 0u))))), (max(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 if((true && ((! (! ((! ((bool(bvec4(! ((false)), false, true, true)))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > (min((clamp((vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, (vec2((transpose(transpose(mat4x2(injectionSwitch, (clamp(0.0, ((0.0) - 0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, (vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y)), ((float(vec4(max((vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, (clamp((vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, (vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, (vec2((transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y))), abs(1.0), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0))))))))))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y))) && true)) && ((injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if((((false) && true)))
      barrier();
     return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if(((false || (false))))
    {
     if(((true && (((false) || false)))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > (min((((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y))))
      {
       if((false))
        return;
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((((bool(bool(((! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, ((true) && true)))))))))))))
      {
       if(((bool(bvec4(false, false, true, ((injectionSwitch.x > (max(injectionSwitch.y, (float(mat4((mix(float(injectionSwitch.y), float((0.3)), bool(false))), 1.0, 1.0, 1.0, 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))))))
        {
         if(((bool(bvec4(false, true, true, true)))))
          barrier();
         return;
        }
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((! ((bool(bvec4(! (false), true, false, true)))))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((! (! ((false)))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((true && ((false))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec4(false, false, false, false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((false))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = (clamp(((workgroup_base) << (uint((injectionSwitch.x)) >> (uint((max((max(0u, 0u)), 0u)))))) + subgroup_id * subgroup_size, ((workgroup_base) << (uint((injectionSwitch.x)) >> (uint((max((max(0u, 0u)), 0u)))))) + subgroup_id * subgroup_size, ((workgroup_base) << (uint((injectionSwitch.x)) >> (uint((max((max(0u, 0u)), 0u)))))) + subgroup_id * subgroup_size)) + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if((false))
        barrier();
       barrier();
       if(((! (! (((false) && true))))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if(((bool(bool(false)))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((false || (((false) && true)))))
        barrier();
       if((((false || ((false || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
         if((false))
          return;
        }
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    {
     if(((true && ((false || (false))))))
      return;
     if((((false || ((false))) && true)))
      barrier();
     return;
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((! (! (((injectionSwitch.x > (((vec2(mat2(injectionSwitch, 0.0, 1.0)))) + vec2(0.0, 0.0)).y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     if((false))
      barrier();
     if((! (! ((((injectionSwitch.x > ((injectionSwitch.y) * 1.0))))))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         return;
        }
       barrier();
      }
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if((false))
        {
         if(((! (! (false)))))
          barrier();
         return;
        }
       return;
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if(((((min(((min(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, (((clamp(float(mat4x2(0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sin(0.0))), float(mat4x2(0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sin(0.0))), float(mat4x2(0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sin(0.0)))))) + ((clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))))), injectionSwitch)).x > (min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 ((((buf[virtual_gid] = uint(subgroupAllEqual((min(write_val, (min((~ (~ (write_val))), write_val))))))) - 0u)) - 0u);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((vec2((min(vec2(injectionSwitch), vec2(injectionSwitch))))).x > injectionSwitch.y))))
  barrier();
 if(((false || (false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
