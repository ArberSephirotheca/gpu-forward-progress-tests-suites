#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 & 1) & 1); _injected_loop_counter ++)
    {
     if(((! (! (false)))))
      return;
     if((false))
      {
       for(int _injected_loop_counter = (1 & ((1 << (int(5))) >> (int(5)))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         return;
        }
      }
     if(true)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y = subgroup_local_id;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (0 >> (int(6))); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    continue;
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.x = num_workgroup;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < (((max(1, 1)) << (int(1))) >> (int(1))); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 10531); _injected_loop_counter --)
      {
       if(false)
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 | 1); _injected_loop_counter != (0 >> (int(0))); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.y;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
}
