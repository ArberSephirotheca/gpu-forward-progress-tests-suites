#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((false) && (! (! (true))))))
  {
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 if((false))
  {
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((false || (false || (((! (! (((! (! ((bool(bvec2((injectionSwitch.x > ((false ? (injectionSwitch) : (min(injectionSwitch, (min(injectionSwitch, injectionSwitch)))))).y), true))))))))))))))))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((false || ((((false || (bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, true, ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec2(false, ((false) || (((mix(vec2((injectionSwitch)[0], (3.6)), vec2((8.1), (injectionSwitch)[1]), bvec2(((injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > (max(injectionSwitch.y, ((injectionSwitch) / vec2(1.0, 1.0)).y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > ((injectionSwitch) + vec2(0.0, 0.0)).y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((false)) || false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((bool(bvec3(false, true, true)))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   barrier();
   if(((((min(((injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 (~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = ((uint(((false ? (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) : (~ (~ (uvec4(uint((((uvec4(0u, (max(0u, 0u)), 0u, 0u) + ((uvec4(0u, 0u, 0u, 0u) | (uvec4(((min((((0u | ((98847u & 0u))) | (subgroup_local_id))), (((0u | ((98847u & 0u))) | (subgroup_local_id))))) / 1u), 1u, (0u ^ (1u)), 0u)))))) | (uvec4(((subgroup_local_id) / 1u), 1u, 1u, 0u)))), 0u, (0u | (0u)), 1u))))))))))));
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((false)) && true))
  barrier();
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((bool(bvec2((true && (! (! ((true && (((false)) || false)))))), (! (! (true)))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((! ((bool(bvec3(! ((((false)) || false)), false, true))))))
    barrier();
   barrier();
  }
 if(((((max((max((float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, (injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((! (! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((! (! ((! (((! ((((((((((injectionSwitch.x > (mix(float((34.82)), float((max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))) || false))) || false)) || false)) && (! (! (((true) || false)))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if(((! (! ((! ((true && ((bool(((((bool(! (((bool(bvec4(bool(bvec4((bool(bool((false || ((bool(bool(false)))))))), true, ((injectionSwitch.x < injectionSwitch.y)), false)), true, false, true))))))) && true) && ((injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  barrier();
 uint workgroup_id = (uvec3(uvec3(gl_WorkGroupID))).x;
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)))) || (! (! (false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((((((false || (true && (((false ? (vec2(2.4, 298.865)) : injectionSwitch)).x > injectionSwitch.y)))))))) && true))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((false)) && true))
      {
       if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((true && ((((true && (true && (bool((bvec3(bvec3(bvec3((((injectionSwitch.x > ((injectionSwitch.y) / cos(0.0))))), ((((true) && ((injectionSwitch.x < injectionSwitch.y)))) && true), false)))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = (uint(uint(workgroup_id)));
 if((false))
  barrier();
 uint workgroup_base = ((workgroup_size * GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y) ^ uint((injectionSwitch.x)));
 if((false))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 if((false))
  barrier();
 uint virtual_gid = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * (((min((~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((min(((max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w))))) >> 0u)))) | ((min((~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((min(((max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w))))) >> 0u))))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z;
 if((((! (! (bool(bvec4((bool((bool(bvec4(((bool(((false) && true))) && true), false, false, false))))), false, (bool(bvec3(false, true, true))), (! (! (true)))))))))))
  {
   if(((true && ((bool(bvec3((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, true)))))))
    barrier();
   if((((false) && true)))
    barrier();
   barrier();
  }
 if((bool(bvec4((((injectionSwitch.x > ((((false ? (86.01) : injectionSwitch.y) - 0.0)))))), true, ((((injectionSwitch.x) / 1.0) > injectionSwitch.y)), true))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((true && (bool(bvec3((((false)) && true), false, false))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((! (! ((false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 atomicStore(write_val, (~ (~ (uint(virtual_gid)))), 4, 64, 0);
 if((false))
  barrier();
 buf[virtual_gid] = (1u * ((~ (~ (uint(subgroupAllEqual(write_val)))))));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
}
