#version 460

struct _GLF_struct_21 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 mat4 _f1;
 uvec2 _f2;
 float _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 float _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 vec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 ivec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 uvec4 _f2;
 _GLF_struct_18 _f3;
 float _f4;
 mat3x4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 bool _f1;
 uint virtual_gid;
 mat2 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 mat3 _f1;
 mat3 _f2;
 bool _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 ivec2 _f2;
 _GLF_struct_12 _f3;
 float _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 uint subgroup_local_id;
 mat4x2 _f1;
 _GLF_struct_14 _f2;
 float _f3;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 float _f1;
 bvec3 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 int _injected_loop_counter;
 uvec4 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 vec2 _f1;
 mat4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat4 _f1;
 float _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 bvec3 _f2;
 mat3x2 _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 bvec2 _f2;
 uvec3 _f3;
 _GLF_struct_4 _f4;
 mat3x2 _f5;
 uint subgroup_size;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(1u, mat2x4(1.0), bvec3(true), mat3x2(1.0), _GLF_struct_0(vec2(1.0), mat4(1.0), 1.0, bvec2(true))), _GLF_struct_2(uvec2(1u)), bvec2(true), uvec3(1u), _GLF_struct_4(_GLF_struct_3(bvec3(true), vec2(1.0), mat4(1.0), ivec4(1)), mat2(1.0)), mat3x2(1.0), gl_SubgroupSize);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat3x2(1.0), gl_SubgroupInvocationID, mat4x2(1.0), _GLF_struct_14(_GLF_struct_10(ivec4(1), mat3(1.0), mat3(1.0), true), _GLF_struct_11(bvec3(true), mat2x4(1.0)), ivec2(1), _GLF_struct_12(mat3x2(1.0), mat3(1.0)), 1.0, _GLF_struct_13(mat2x4(1.0))), 1.0);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_19(_GLF_struct_16(mat2x4(1.0), ivec4(1), mat4x2(1.0)), _GLF_struct_17(bvec3(true), bvec4(true)), uvec4(1u), _GLF_struct_18(ivec2(1), uvec2(1u), mat4x2(1.0), vec4(1.0), 1u), 1.0, mat3x4(1.0), mat2x4(1.0)), true, workgroup_base + subgroup_id * _GLF_struct_replacement_5.subgroup_size + _GLF_struct_replacement_15.subgroup_local_id, mat2(1.0), _GLF_struct_22(_GLF_struct_20(mat2(1.0), mat4(1.0), uvec2(1u), 1.0), _GLF_struct_21(ivec4(1), 1), 1.0, mat2x3(1.0)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5.subgroup_size + ((_GLF_struct_replacement_15.subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size);
 buf[_GLF_struct_replacement_23.virtual_gid] = 1;
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if(_GLF_struct_replacement_15.subgroup_local_id + 1 < _GLF_struct_replacement_5.subgroup_size)
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
       for(_GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(ivec2(1), _GLF_struct_6(mat4x3(1.0), 1.0, bvec3(true), mat2x3(1.0), ivec2(1)), _GLF_struct_7(uvec4(1u), ivec4(1))), 0, uvec4(1u)); _GLF_struct_replacement_9._injected_loop_counter != 1; _GLF_struct_replacement_9._injected_loop_counter ++)
        {
         subgroupAll(false);
        }
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
        }
       while(false);
       if(false)
        {
        }
       else
        {
         subgroupAll(true);
        }
      }
    }
  }
 else
  {
  }
}
