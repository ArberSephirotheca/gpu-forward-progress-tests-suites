#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (max(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = ((((~ (~ (((((((clamp(workgroup_base + subgroup_id * subgroup_size, ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (((uint(((uvec2(workgroup_base + subgroup_id * subgroup_size, 1u)) | uvec2(0u, (min(0u, (((max(0u, 0u))) | (0u))))))))) << (((clamp(uint(uint(0u >> ((0u ^ (uint(((false ? (135386u) : 6u)))))))), uint(uint(0u >> (max((uint(6u)), (((uint(uvec4((uint(6u)), 1u, 1u, 0u)))) ^ 0u))))), ((uint(uint(0u >> (uint(6u))))) - 0u)))))))) / 1u)) + subgroup_local_id)) / 1u)))) ^ 0u) - 0u));
 uint next_virtual_gid = ((((clamp((((((false ? (105072u) : ((0u | (((~ (((false ? (workgroup_size) : ~ (((((workgroup_base) >> 0u)) >> 0u)))))) + subgroup_id * subgroup_size))) - 0u)) + 0u)))), ((true ? ((((((0u + (false ? (105072u) : ((workgroup_base + subgroup_id * subgroup_size) - 0u)))) + 0u)))) : (subgroup_id))), (((((false ? (105072u) : ((workgroup_base + (max((~ (~ (subgroup_id))), subgroup_id)) * subgroup_size) - 0u)) + 0u)))))) / ((1u) | (1u)))) ^ 0u) + (((1u * ((((((((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + ((1) | (1))) % subgroup_size) * 1u)) | (((((((! (! (((injectionSwitch.x < injectionSwitch.y))))) ? (((0u ^ (((false ? (workgroup_id) : ((((subgroup_local_id) ^ 0u)) << 0u)))))) << 0u) : (subgroup_local_id))) + ((1) >> 0)) % subgroup_size)) - 0u))))) * uint(((min(((true ? injectionSwitch.y : (36.73))), ((true ? (0.0 + (injectionSwitch.y)) : ((float(mat4x2(21.39, 1.0, (injectionSwitch.y), 1.0, tan((1.0 * (0.0))), 0.0, 0.0, 0.0))))))))))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < (max(subgroup_size, subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(((2) | (((true ? 2 : (- 40243)))))), 4, 64, 0);
   subgroupAll(true);
  }
}
