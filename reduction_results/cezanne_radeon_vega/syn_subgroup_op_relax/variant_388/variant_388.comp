#version 460

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 vec2 _f1;
 uint subgroup_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(uvec4(1u), _GLF_struct_0(mat2(1.0)), vec2(1.0)), vec2(1.0), gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = (0u + (0u ^ ((gl_WorkGroupID.x))));
 uint workgroup_base = ((((min((uint(uint((min((0u << (uint(5u))) | (workgroup_size), ((clamp((~ (~ (0u << ((0u ^ (0u | 0u)) + ((clamp((uint(5u)), (uint(5u)), (uint(5u))))))))), (~ (~ (0u << ((0u ^ (0u | 0u)) + ((clamp(((clamp(uint(5u), uint(5u), uint(5u)))), (uint(5u)), (uint(5u))))))))), (~ (~ (0u << ((((0u ^ (0u | 0u)) + ((clamp((uint(5u)), (uint(5u)), (uint(5u)))))) | uint((injectionSwitch.x)))))))))) | (workgroup_size)))))), (min((0u << (uint(5u))) | (workgroup_size), ((clamp((~ (~ (0u << ((0u ^ (0u | 0u)) + ((clamp((uint(5u)), (uint(5u)), (uint(5u))))))))), (~ (~ (0u << ((0u ^ (0u | 0u)) + ((clamp(((clamp(uint(5u), uint(5u), uint(5u)))), (uint(5u)), (uint(5u))))))))), (~ (~ (0u << ((((0u ^ (0u | 0u)) + ((clamp((uint(5u)), (uint(5u)), (uint(5u)))))) | uint((injectionSwitch.x)))))))))) | (workgroup_size)))))) * workgroup_id) - ((min((min(0u, 0u)), 0u)) | uint((injectionSwitch.x))));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = (min(workgroup_base + ((((_GLF_struct_replacement_2.subgroup_id) / 1u)) ^ 0u) * subgroup_size, workgroup_base + (((uint((injectionSwitch.x)) ^ ((uint(uvec3(_GLF_struct_replacement_2.subgroup_id, 0u, 1u))))) - 0u)) * subgroup_size)) + ((0u ^ ((((((((((subgroup_local_id + 1) % subgroup_size)) >> 0u)) + (0u ^ 0u))) * 1u) + 0u))));
 buf[virtual_gid] = 1;
 if(((subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)
  {
   atomicStore(buf[((next_virtual_gid) * 1u)], ((((injectionSwitch.x < injectionSwitch.y)) ? (((false ? (num_workgroup) : (uint(((2) | 0))) >> 0u))) : (next_virtual_gid))), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, ((0 >> (int((0 + ((max(5, 5))))))) | (0)));
   subgroupAll(true);
  }
}
