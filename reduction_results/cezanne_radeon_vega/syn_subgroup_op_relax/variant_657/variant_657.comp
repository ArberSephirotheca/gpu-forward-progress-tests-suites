#version 460

struct _GLF_struct_6 {
 uvec4 _f0;
 uvec2 _f1;
 vec2 _f2;
 ivec2 _f3;
 mat4 _f4;
 mat3x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 uint _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 uvec2 _f1;
 uint _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 ivec2 _f1;
 int _injected_loop_counter;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 vec3 _f4;
 mat4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec2 _f1;
 uint subgroup_local_id;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   do
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(true)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if(true)
      {
       do
        {
         if((false))
          barrier();
        }
       while(false);
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
   while(false);
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if((false))
  barrier();
 if(((false) && true))
  {
   if((((false) || false)))
    barrier();
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(true)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 << (int(3))); _injected_loop_counter --)
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
          }
        }
       if((bool(bvec4(false, false, false, true))))
        {
        }
       else
        {
         if((false))
          barrier();
        }
      }
     if(true)
      {
       if((false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(true)
    {
     if((false))
      {
       if(true)
        {
         if((false))
          barrier();
         if(false)
          {
           if((false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   do
    {
     do
      {
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(false);
              }
             barrier();
             if((false))
              {
               if((false))
                barrier();
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while(((false) && true));
        }
      }
     while(false);
    }
   while(false);
  }
 if((false))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     while(false);
    }
   if(((! (! (false)))))
    {
     for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(((((true) || false)) || false))
  {
   if(true)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 & - 49534); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if(((! (! (false)))))
            barrier();
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 | 0); _injected_loop_counter --)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if((false))
              barrier();
             if(false)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                     if(true)
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                    }
                  }
                 do
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       barrier();
                      }
                     if((false))
                      {
                       if(true)
                        {
                         if((false))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       else
                        {
                        }
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(true)
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     if(((bool(bvec3(false, true, false)))))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | 0); _injected_loop_counter --)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 while(false);
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(false);
           if((false))
            barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec4(1u), ivec2(1), gl_SubgroupInvocationID);
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   for(int _injected_loop_counter = (0 | (1)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       barrier();
      }
     while(false);
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > (int((injectionSwitch.x)) << (int(1))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   else
    {
    }
   if(true)
    {
     if((false))
      {
       do
        {
         do
          {
           if((false))
            barrier();
           barrier();
          }
         while(false);
         if((false))
          barrier();
        }
       while(false);
      }
     if(true)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if(true)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                barrier();
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                  }
                }
               do
                {
                 if(true)
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(false);
               if((false))
                {
                 if(true)
                  {
                   do
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(false);
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = (1 & int((injectionSwitch.y))); _injected_loop_counter != (0 >> (int(3))); _injected_loop_counter --)
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if(true)
                        {
                         if((false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(false);
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
        }
       if(((true && (false))))
        barrier();
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
    }
   else
    {
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
        {
         if((false))
          {
           if(((true) && true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if((false))
        barrier();
      }
     else
      {
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if((false))
      barrier();
    }
   while(false);
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(false)
  {
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if((false))
    barrier();
   if(true)
    {
     if(((bool(bvec3((bool(bvec4(false, false, true, true))), true, false)))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         barrier();
        }
       if(false)
        {
        }
       else
        {
         if(true)
          {
           do
            {
             if((false))
              barrier();
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   for(int _injected_loop_counter = ((0 & - 77814) | 0); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(false);
          }
         else
          {
          }
        }
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(false);
   if(false)
    {
    }
   else
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          {
           if(true)
            {
             barrier();
             if((false))
              barrier();
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         if((false))
          barrier();
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << ((0 ^ (int(2))))) >> (int(2))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
      }
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_0.subgroup_local_id;
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << ((clamp(int(0), int(0), int(0))))) >> (int(0))); _injected_loop_counter ++)
    {
     if((false))
      barrier();
     do
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
         if((false))
          barrier();
        }
      }
     while(false);
    }
  }
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(true)
        {
         if((false))
          barrier();
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             barrier();
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                barrier();
              }
             if(true)
              {
               if((false))
                barrier();
              }
             else
              {
              }
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       else
        {
         if((false))
          barrier();
        }
      }
     while(false);
     if((false))
      barrier();
     if((false))
      {
       do
        {
         barrier();
         if((false))
          barrier();
        }
       while(false);
      }
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((bool(bool(false)))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size);
 if(true)
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(_GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2(1.0), ivec2(1), 0, _GLF_struct_4(mat4(1.0), _GLF_struct_1(uvec3(1u), uvec3(1u)), _GLF_struct_2(1u, mat2x4(1.0)), _GLF_struct_3(mat4x2(1.0), uvec4(1u))), _GLF_struct_7(_GLF_struct_5(1u, mat3x2(1.0)), uvec2(1u), 1u, _GLF_struct_6(uvec4(1u), uvec2(1u), vec2(1.0), ivec2(1), mat4(1.0), mat3x4(1.0), vec3(1.0))), vec3(1.0), mat4(1.0), uvec3(1u)); _GLF_struct_replacement_8._injected_loop_counter != int((injectionSwitch.y)); _GLF_struct_replacement_8._injected_loop_counter ++)
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((! (! (false))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               if(((false || (false))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                 if(false)
                  {
                  }
                 else
                  {
                   if((((false) && true)))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
              }
            }
           while(false);
          }
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           barrier();
          }
         if(true)
          {
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          {
           do
            {
             if(true)
              {
               if((false))
                barrier();
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (((1 << (int(7))) >> (int(7))) & int((injectionSwitch.y))); _injected_loop_counter != (int((injectionSwitch.x)) & 35412); _injected_loop_counter --)
                {
                 do
                  {
                   if((false))
                    barrier();
                  }
                 while(false);
                }
               barrier();
              }
             if((false))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
         do
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               buf[virtual_gid] = 1;
              }
             while(false);
            }
           else
            {
            }
          }
         while(false);
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if((false))
              barrier();
            }
          }
         while(false);
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((bool(bvec3(false, false, false))))
        {
        }
       else
        {
         barrier();
        }
       if(((! (! (false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         do
          {
           do
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
               do
                {
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     if(true)
                      {
                       if(true)
                        {
                         if((false))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       if((false))
                        {
                         if((false))
                          barrier();
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(true)
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           barrier();
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      barrier();
                    }
                  }
                }
               while(false);
              }
             if((false))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 | 0) << (int(1))); _injected_loop_counter --)
          {
           if(((bool(bvec3((bool(bvec2(false, false))), true, false)))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(((((injectionSwitch.x > injectionSwitch.y))) && true));
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(false)
          {
          }
         else
          {
           if((false))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_struct_replacement_0.subgroup_local_id + 1 < subgroup_size)
            {
             if((false))
              barrier();
             if((false))
              barrier();
             for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = ((1 ^ 1) | 1); _injected_loop_counter != (0 << (int(0))); _injected_loop_counter --)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(false);
                           do
                            {
                             do
                              {
                               barrier();
                               if((false))
                                {
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             while(false);
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                          }
                        }
                      }
                    }
                   do
                    {
                     if(true)
                      {
                       if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(true)
                              {
                               if((true && ((bool(bvec2(true, true))))))
                                {
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if((((false) && true)))
                                    {
                                     if(true)
                                      {
                                       if(((injectionSwitch.x < injectionSwitch.y)))
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   barrier();
                                  }
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  barrier();
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if(true)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           if((false))
                            {
                             if((false))
                              barrier();
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                          }
                         do
                          {
                           barrier();
                          }
                         while(false);
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                barrier();
              }
             if((false))
              barrier();
             for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                    {
                     if(false)
                      {
                       if((false))
                        barrier();
                       if((((false) || false)))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       for(int _injected_loop_counter = (0 & - 66656); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if(true)
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               if(true)
                                {
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                              }
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = (0 & 56231); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                           do
                            {
                             if((false))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                            }
                           while(false);
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            {
                             if(true)
                              {
                               barrier();
                              }
                             else
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                 while(false);
                }
               else
                {
                }
               if((false))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   while(false);
                  }
                 do
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > ((- 34797 >> int(182662u)) & (0 & 94760)); _injected_loop_counter --)
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 while(false);
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if((false))
                barrier();
               do
                {
                 if(true)
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
               while(false);
              }
             for(int _injected_loop_counter = (0 << (int(1))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(true)
              {
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                   if(true)
                    {
                     do
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         do
                          {
                           if((false))
                            barrier();
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             if(((! (! (false)))))
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                {
                                 barrier();
                                }
                              }
                            }
                           if(true)
                            {
                             do
                              {
                               if((false))
                                barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           else
                            {
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(true)
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             barrier();
                            }
                           if((! (! (false))))
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                          }
                         while(false);
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   else
                    {
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter != ((((int((injectionSwitch.y))) / 1)) ^ 0); _injected_loop_counter ++)
              {
               if((false))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         while(false);
                        }
                       if(true)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                       if((false))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                 while(false);
                 if((true && (((injectionSwitch.x < injectionSwitch.y)))))
                  {
                   if(true)
                    {
                     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                     if((false))
                      {
                       if((false))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 else
                  {
                  }
                }
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(true)
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter != (0 >> ((min(int(5), int(5))))); _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((false))
                        {
                         if(true)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         for(int _injected_loop_counter = (clamp(1, 1, 1)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                          }
                         if((false))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         barrier();
                         if((false))
                          barrier();
                        }
                       barrier();
                      }
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               if((false))
                barrier();
              }
             do
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(true)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                      }
                     while(false);
                    }
                   else
                    {
                     do
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
                        }
                      }
                     while(false);
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                           if((false))
                            barrier();
                          }
                        }
                      }
                     if(((true && (false))))
                      barrier();
                    }
                   if((false))
                    barrier();
                   do
                    {
                     if((false))
                      barrier();
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                     while(false);
                    }
                   if((false))
                    barrier();
                  }
                }
               else
                {
                }
              }
             while(false);
             if(true)
              {
               if(false)
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((false) && true)))
                      barrier();
                     do
                      {
                       if((false))
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     while(false);
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
              }
             else
              {
              }
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
              }
             if((false))
              barrier();
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if(true)
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                     if((false))
                      {
                       if((false))
                        barrier();
                       if(true)
                        {
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != ((98177 / 68196) & 0); _injected_loop_counter --)
                            {
                             if((false))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               barrier();
                              }
                            }
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       else
                        {
                        }
                       if((false))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(true)
                      {
                       if(true)
                        {
                         if((false))
                          barrier();
                         if(false)
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = ((1 << (((int(6)) | 0))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if((false))
                              barrier();
                            }
                           do
                            {
                             if(true)
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 if(((! (! (bool((bvec3(bvec4(bvec3(false, true, false), true)))))))))
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                   if(true)
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           while(false);
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           do
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             do
                              {
                               for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    barrier();
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if(true)
                                      {
                                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                        {
                                         barrier();
                                        }
                                       if((false))
                                        {
                                         if(true)
                                          {
                                           do
                                            {
                                             if((false))
                                              barrier();
                                             barrier();
                                            }
                                           while(false);
                                          }
                                         else
                                          {
                                          }
                                        }
                                       if((false))
                                        barrier();
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                      }
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 do
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((false))
                                    {
                                     if((false))
                                      barrier();
                                     for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                      {
                                       do
                                        {
                                         if((false))
                                          barrier();
                                         barrier();
                                        }
                                       while(((injectionSwitch.x > injectionSwitch.y)));
                                      }
                                    }
                                  }
                                 while(false);
                                }
                              }
                             while(false);
                            }
                           while(false);
                           for(int _injected_loop_counter = (1 ^ (0 << (int(2)))); _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             do
                              {
                               if((false))
                                barrier();
                               if(false)
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(true)
                                    {
                                     if((false))
                                      barrier();
                                     if((false))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if((false))
                                      barrier();
                                    }
                                   if(true)
                                    {
                                     if((false))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                      }
                                     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       if(false)
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                            {
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if(true)
                                                {
                                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                                  {
                                                   if((false))
                                                    barrier();
                                                   if(((injectionSwitch.x > injectionSwitch.y)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     barrier();
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           if((false))
                                            {
                                             if(((injectionSwitch.x > injectionSwitch.y)))
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                         if((false))
                                          barrier();
                                         if((false))
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             barrier();
                                            }
                                          }
                                         if((false))
                                          {
                                           if(true)
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                            }
                                           if((false))
                                            barrier();
                                          }
                                         if((((false) && true)))
                                          barrier();
                                         do
                                          {
                                           if(true)
                                            {
                                             if((! (! ((bool(bvec3(false, false, false)))))))
                                              {
                                              }
                                             else
                                              {
                                               barrier();
                                               if((false))
                                                barrier();
                                              }
                                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                              {
                                               if(((((false || (false))) || false)))
                                                {
                                                 for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < 1; _injected_loop_counter ++)
                                                  {
                                                   if(true)
                                                    {
                                                     barrier();
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                           else
                                            {
                                             if((false))
                                              {
                                               if((false))
                                                barrier();
                                               barrier();
                                               if((((injectionSwitch.x > injectionSwitch.y))))
                                                barrier();
                                              }
                                             if(false)
                                              {
                                              }
                                             else
                                              {
                                               if(((injectionSwitch.x < injectionSwitch.y)))
                                                {
                                                 if((false))
                                                  barrier();
                                                }
                                               else
                                                {
                                                }
                                               if((((false) && true)))
                                                barrier();
                                              }
                                             if((false))
                                              {
                                               if(false)
                                                {
                                                 if((((false) && true)))
                                                  barrier();
                                                }
                                               else
                                                {
                                                 if((false))
                                                  barrier();
                                                 if((false))
                                                  barrier();
                                                }
                                               barrier();
                                              }
                                            }
                                          }
                                         while(false);
                                        }
                                      }
                                    }
                                   else
                                    {
                                     if((false))
                                      {
                                       if((false))
                                        barrier();
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if((false))
                                        {
                                         if((false))
                                          {
                                           if((false))
                                            barrier();
                                           barrier();
                                          }
                                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                          {
                                           if((false))
                                            barrier();
                                           barrier();
                                          }
                                        }
                                       for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           if(false)
                                            {
                                            }
                                           else
                                            {
                                             if((((injectionSwitch.x > injectionSwitch.y))))
                                              barrier();
                                             barrier();
                                            }
                                          }
                                         while(false);
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                      }
                                    }
                                   if((false))
                                    {
                                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                      {
                                       barrier();
                                       if((false))
                                        barrier();
                                      }
                                     if((false))
                                      barrier();
                                    }
                                   if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             while(false);
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             barrier();
                            }
                           do
                            {
                             if((false))
                              {
                               if((false))
                                barrier();
                               for(int _injected_loop_counter = ((1 << (int(3))) >> (int(3))); _injected_loop_counter != (0 << (int(6))); _injected_loop_counter --)
                                {
                                 if((true && ((! (! (false))))))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                           while(false);
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       else
                        {
                         if((bool(bvec3(false, false, false))))
                          {
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while(false);
                          }
                         while(false);
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 & - 37711); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << ((0 | (int(6))))) >> (int(6))); _injected_loop_counter ++)
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if(true)
                            {
                             if((false))
                              barrier();
                             if((false))
                              {
                               if((false))
                                barrier();
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                 if((false))
                                  {
                                   if(true)
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if((false))
                                  {
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                 barrier();
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                  }
                                 else
                                  {
                                   if((((false) || false)))
                                    {
                                     if((false))
                                      barrier();
                                     barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   do
                                    {
                                     if((false))
                                      {
                                       if(((! (! (false)))))
                                        barrier();
                                       for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         barrier();
                                        }
                                      }
                                     do
                                      {
                                       if((false))
                                        barrier();
                                       barrier();
                                       if((false))
                                        barrier();
                                      }
                                     while(false);
                                    }
                                   while(false);
                                  }
                                 if((false))
                                  barrier();
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
                              {
                               if(true)
                                {
                                 if(false)
                                  {
                                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               else
                                {
                                }
                              }
                             if((false))
                              barrier();
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = (1 | 0); _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             if((false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if(false)
                            {
                             if((false))
                              barrier();
                            }
                           else
                            {
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if(((bool(bvec2(false, true)))))
                                barrier();
                               barrier();
                               if((false))
                                {
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                   if((false))
                                    barrier();
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                             if((false))
                              barrier();
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                               while(((injectionSwitch.x > injectionSwitch.y)));
                              }
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           while(false);
                          }
                         do
                          {
                           if((false))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         while(false);
                        }
                      }
                    }
                   while(false);
                   if((false))
                    {
                     if((false))
                      barrier();
                     do
                      {
                       barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(false);
                    }
                  }
                }
              }
             if((false))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if((false))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if(true)
              {
               for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if(true)
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 ^ 0) >> (((false ? (_injected_loop_counter) : int(8))))); _injected_loop_counter --)
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                      }
                     if((false))
                      {
                       if((bool(bvec4(true, true, false, true))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             subgroupAll(false);
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((false))
                barrier();
               if(false)
                {
                 if((false))
                  barrier();
                }
               else
                {
                 do
                  {
                   if(true)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if((false))
                          barrier();
                        }
                       while(false);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(true)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if(true)
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                          {
                           if(true)
                            {
                             if(((true && (false))))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         if(false)
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if(false)
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                }
                              }
                             if((false))
                              barrier();
                            }
                          }
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if((false))
                                barrier();
                               do
                                {
                                 barrier();
                                }
                               while(false);
                              }
                            }
                           if((false))
                            barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(false);
                }
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             do
              {
               if(true)
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                }
               if(true)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((bool(bool(true))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                barrier();
               if(((((injectionSwitch.x < injectionSwitch.y))) && true))
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                  }
                 while(false);
                }
               else
                {
                }
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               for(int _injected_loop_counter = ((1 << (int(5))) >> (((int(5)) | 0))); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(false)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = (((1 & 1) << (int(1))) >> (int(1))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                  }
                }
              }
             if((false))
              barrier();
             if(true)
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 do
                  {
                   if(true)
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(false);
                     if((false))
                      barrier();
                     subgroupAll(true);
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if(true)
                            {
                             do
                              {
                               if(true)
                                {
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                              }
                             while(((injectionSwitch.x > injectionSwitch.y)));
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           barrier();
                          }
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   for(int _injected_loop_counter = (0 >> (int(6))); _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                    }
                  }
                 while(false);
                }
              }
             else
              {
              }
             if((false))
              {
               if((false))
                {
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   while(false);
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
               for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                 if((false))
                  barrier();
                }
              }
            }
          }
        }
      }
     while(false);
    }
  }
 if((((false) && true)))
  barrier();
 if(true)
  {
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       barrier();
      }
    }
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((((false || (false))) && true)))
    {
     if((false))
      barrier();
     do
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if((false))
          barrier();
         if(true)
          {
           do
            {
             if(false)
              {
              }
             else
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           while(false);
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           if((false))
            {
             if(true)
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if(true)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(true)
                  {
                   if(false)
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     do
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         if(true)
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     while(false);
                     if(true)
                      {
                       for(int _injected_loop_counter = (0 >> (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         if((false))
                          barrier();
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          barrier();
                         do
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
                            {
                             if(true)
                              {
                               if((false))
                                {
                                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((! (! (true))))
                              {
                               for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
                                {
                                 if((false))
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             barrier();
                             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                              {
                               if((false))
                                barrier();
                               if((false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         while(false);
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if((! (! (((injectionSwitch.x < injectionSwitch.y))))))
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       do
                        {
                         do
                          {
                           do
                            {
                             if(true)
                              {
                               do
                                {
                                 if((false))
                                  barrier();
                                 if((((false) && true)))
                                  barrier();
                                }
                               while(false);
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = (- 1429 & 0); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                              }
                             else
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                            }
                           while(false);
                          }
                         while(false);
                        }
                       while(false);
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       if(true)
                        {
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     while(false);
                    }
                  }
                }
              }
            }
           if((false))
            barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
 else
  {
  }
 if((false))
  barrier();
 if((false))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if(false)
  {
   if(true)
    {
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
   for(int _injected_loop_counter = (((0 >> (int(2)))) | ((0 >> (int(2))))); _injected_loop_counter != (int(ivec2(1, 0))); _injected_loop_counter ++)
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(true)
          {
           do
            {
             barrier();
            }
           while(false);
          }
         else
          {
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
  }
}
