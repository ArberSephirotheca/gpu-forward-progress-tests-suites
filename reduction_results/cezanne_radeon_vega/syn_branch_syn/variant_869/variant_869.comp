#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (max((((! (! (false))) ? (subgroup_size) : workgroup_size)) * workgroup_id, ((((false ? (workgroup_id) : ((0u ^ 1u) * (workgroup_size)))) * workgroup_id) | (((((false ? (workgroup_id) : ((0u ^ 1u) * (workgroup_size)))) * workgroup_id) >> uint((injectionSwitch.x)))))));
 uint virtual_gid = ((((((((workgroup_base + subgroup_id * subgroup_size + (uint(((uint(subgroup_local_id)) ^ 0u)))) | (((((workgroup_base + subgroup_id * subgroup_size) >> 0u)) + 0u) + subgroup_local_id)) / uint((injectionSwitch.y)))) / 1u) << 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((((max(((max((~ ((min(~ ((((~ ((min(~ ((subgroup_local_id + ((1) << int((injectionSwitch.x))))), ~ ((subgroup_local_id + 1)))))))) >> 0u), ~ ((((~ ((min(~ ((subgroup_local_id + ((1) << int((injectionSwitch.x))))), ~ ((subgroup_local_id + 1)))))))) >> 0u))))) % (((uint(uvec2(subgroup_size, 1u)))) ^ 0u), (~ (~ ((((~ ((min(~ ((subgroup_local_id + ((1) << int((injectionSwitch.x))))), ~ ((subgroup_local_id + 1)))))))) >> 0u))) % ((subgroup_size) ^ 0u)))), ((~ (~ ((~ ((((min(~ ((subgroup_local_id + 1)), ~ ((((((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) - 0u)))) / 1u))))))) % subgroup_size)))) - 0u) - (0u & 176454u)));
 buf[virtual_gid] = (min(((((max((((((min(0, 0))) | 0) ^ (false ? (73077) : 1)) * 1), 0 ^ (false ? (73077) : 1)))))), (clamp(1, 1, (((clamp(((1) | (0 | ((((1)) << 0)))), 1, (int(ivec3(1, 1, 1)))))) | (1))))));
 if(subgroup_local_id + 1 < ((min(uint((min(uvec4(subgroup_size, 0u, 1u, 0u), (min(uvec4(subgroup_size, (max(0u, 0u)), 1u, 0u), uvec4(subgroup_size, (max(0u, 0u)), 1u, 0u)))))), uint((~ ((min(~ ((min(uvec4(subgroup_size, 0u, 1u, 0u), uvec4(subgroup_size, ((0u) >> 0u), 1u, 0u)))), ~ (min(((min(uvec4(subgroup_size, 0u, 1u, 0u), uvec4(subgroup_size, 0u, 1u, (0u ^ (0u)))))), ((min(uvec4(subgroup_size, 0u, 1u, 0u), uvec4(subgroup_size, 0u, 1u, (0u ^ (0u)))))))))))))))))
  {
   int i = 0;
   ((false ? (bitfieldReverse(num_workgroup)) : ((true ? ((false ? (uint((~ ((((uvec4(1u, 1u, 1u, 1u) << (uvec4(4u))) >> (uvec4(4u))) * (~ (clamp(((((~ (~ (clamp((((uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)), (max((uvec4(((((~ (~ (subgroup_size)))) * 1u)), uint((injectionSwitch.y)), 0u, 0u)), (uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u)))), (uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u))))))) | (clamp((((uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)), (max((uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u)), (uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u)))), (uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u)))))), (~ (~ ((uvec4(0u, 0u, 0u, 0u) | ((uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u))))))), (uvec4((subgroup_size), uint((injectionSwitch.y)), 0u, 0u)))))))))) : ((buf[next_virtual_gid] = (0 + (2))) / 1u))) : ((subgroup_size | subgroup_id))))));
  }
 else
  {
   ((buf[next_virtual_gid] = 2) | ((0u & 66436u) | 0u));
  }
}
