#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if((false))
  return;
 uvec4 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id;
 if(true)
  {
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
  }
 if(true)
  {
   do
    {
     if((((! (! ((false || (injectionSwitch.x > injectionSwitch.y))))))))
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = ((1 << ((clamp((clamp(int(0), int(0), int(0))), int(0), int(0))))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(((injectionSwitch.x > (clamp((vec2(mat2x4(injectionSwitch, 1.0, (min(((true ? 0.0 : (7646.9835))), ((((true) || false) ? 0.0 : (7646.9835))))), 1.0, (((dot(vec2(1.0, 0.0), ((mix(vec2((4.8), (196.365)), vec2(((vec2(0.0, 1.0)) * mat2(1.0))[0], ((vec2(0.0, 1.0)) * mat2((max((mix(float(((1.0) / 1.0)), float(((- 3363.7620 / 23.43))), bool(false))), ((false ? (60.98) : 1.0))))))[1]), bvec2(true, true)))))) + 0.0)), 1.0, 1.0))), injectionSwitch, ((injectionSwitch) * mat2(1.0)))).y)))
            {
             if((false))
              return;
            }
           else
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                return;
              }
             if((false))
              continue;
             if((false))
              barrier();
            }
          }
         if((false))
          {
           for(int _injected_loop_counter = (1 * (0)); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              return;
            }
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         return;
        }
       if((false))
        return;
       if(((((! (((! (false)) || false)))) && true)))
        return;
      }
    }
   while((! (! (false))));
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 do
  {
   ((((((((injectionSwitch.x < injectionSwitch.y) && true))) && (false || (true)))) ? GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz : (uvec3(55135u, ((135711u) >> 0u), (~ (~ (((((true ? ((0u | ((((123621u)) | ((123621u)))))) | ((123621u)) : (89273u)))) / 1u))))))));
  }
 while(false);
 if(((! (! (false)))))
  {
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (((- 50285 - - 89387) & 0) >> (int(8))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(true)
  {
   if((false))
    {
     do
      {
       if((false))
        return;
      }
     while(false);
     do
      {
       if((false))
        continue;
       if(true)
        {
         return;
        }
       else
        {
        }
      }
     while(false);
     if(false)
      {
      }
     else
      {
       if((false))
        return;
      }
    }
   if(((bool(bvec4(false, false, true, (! ((bool(bvec2(! (((bool(bvec3(((false || (true))) || false, true, true))))), true))))))))))
    {
     if(((true) || false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(true)
      {
       if((false))
        {
         if(((((false ? (((asinh(vec2(3297.5226)))) * mat2(1.0)) : injectionSwitch)).x > injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
           barrier();
          }
         if((false))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(((bool(bvec2(false, false)))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                }
              }
             return;
            }
           else
            {
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           do
            {
             barrier();
            }
           while(false);
          }
        }
      }
     else
      {
      }
     if(true)
      {
       for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            continue;
           return;
           if(((! (! (((false) && (bool(bool(true)))))))))
            return;
          }
         else
          {
           if((((((false)) || false) && true)))
            return;
           if((false))
            continue;
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
       if(((((min(((injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if(((((! (! (false)))) || false)))
      barrier();
    }
  }
 else
  {
   if(true)
    {
     if((((((true && ((bool(bvec4((bool(bool((false)))), true, true, true))))) && true))) || false))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < (max(1, 1)); _injected_loop_counter ++)
  {
   if((false))
    return;
  }
 if((bool((bool(bvec3(((bool((false))) || false), true, false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.w = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > ((float(mat4x3(max((clamp((vec2(injectionSwitch[0], injectionSwitch[1])).y, (min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (clamp(injectionSwitch.y, (min(injectionSwitch.y, injectionSwitch.y)), (clamp(injectionSwitch, (max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, (dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, sin(0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0))))))))
  {
   for(int _injected_loop_counter = ((0) / 1); _injected_loop_counter < (1 & (1 | ((1) >> (0 ^ 0)))); _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = (((0) | (0)) << (int(1))); _injected_loop_counter < (((1 ^ 1) ^ ((1 << (int(6))) >> (int(6))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(((bool(bvec2((! (! (false))), true)))))
        return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      {
       if(((false || (false))))
        return;
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false || ((false))))
  return;
 do
  {
   do
    {
     if((((true && ((false)))) || false))
      break;
     if((false))
      continue;
     if(((! ((false || ((! (! (! (false))))))))))
      return;
    }
   while(false);
   if((false))
    barrier();
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(((bool((bool(((bool(bool(false))) || false)))))))
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
  }
 while(((((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y)));
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if((false))
  {
   do
    {
     return;
    }
   while(false);
  }
 if(((! (! (false)))))
  {
   if(true)
    {
     if(((((true ? injectionSwitch.x : (54.44))) < injectionSwitch.y)))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if((false))
    {
     do
      {
       return;
      }
     while(false);
    }
  }
 while(false);
 if((false))
  {
   if((((((clamp(float(mat3(injectionSwitch.x, ((1.0) / 1.0), 0.0, 0.0, (max(round(length(normalize(1.0))), (min(round(length(normalize(1.0))), round(length((clamp(normalize(1.0), normalize(1.0), normalize(1.0))))))))), 1.0, 1.0, 0.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0)), float(mat3(injectionSwitch.x, (max(1.0, 1.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0))))) > ((injectionSwitch.y) * (injectionSwitch.y))))))
    return;
   barrier();
   if((false))
    barrier();
  }
 do
  {
   if(((! (! ((true && (false)))))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(6))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(false);
 if(((! ((true && (! (false)))))))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
  }
 else
  {
  }
 if((false))
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(((((((mat2(1.0) * (injectionSwitch)) - ((true ? vec2(0.0, 0.0) : (injectionSwitch))))).x > ((true ? injectionSwitch.y : (340.141)))))))
      {
       if((false))
        break;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      continue;
     barrier();
     if((false))
      {
       if((false))
        continue;
       barrier();
      }
    }
   while(false);
  }
 do
  {
   for(int _injected_loop_counter = (int((min(ivec2(int(((((mix(vec2(((((vec2(((mat3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) / (transpose(transpose((mat3(mat4x3(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))) * mat2((injectionSwitch.y)))[0], ((((vec2(((mat3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) / (transpose(transpose((mat3(mat4x3(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))) * mat2((injectionSwitch.y)))[1]), vec2((- 4.4), (- 4650.6514)), bvec2(false, false)))) / vec2(1.0, 1.0)).y)), 0), ivec2(int(((((vec2(((mat3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2((max(1.0, 1.0)), 1.0, 0.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / (mix(vec2((1.2), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], ((- 4.3 * 4.7))), bvec2(true, false)))).y)), 0))))); (((((false || ((((false || ((! (! ((bool(bvec3(_injected_loop_counter != 0, false, true))))))))) && true)))) || false)) && (((clamp(((injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.y = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(true)
        {
         barrier();
        }
       else
        {
        }
      }
     if((false))
      break;
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
         if((false))
          return;
        }
      }
     if((false))
      {
       if((false))
        break;
       break;
      }
    }
  }
 while((((injectionSwitch.x < injectionSwitch.y)) && ((false || (false)))));
 if(true)
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
  }
 else
  {
  }
 if(true)
  {
   if((false))
    return;
  }
 else
  {
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(false);
  }
 if(((false || (false))))
  {
   if((! (! (false))))
    {
    }
   else
    {
     return;
    }
  }
 if((((bool(bool(bool(bvec3((false || ((! (! (false))))), true, true))))))))
  return;
 uint num_workgroup = ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x;
 if(((false || (((bool(bvec4(bool(bool(((injectionSwitch.x > (mix(float((20.47)), float(injectionSwitch.y), bool(true))))))), true, false, false))))))))
  {
   if((false))
    {
     do
      {
       barrier();
       if((false))
        return;
      }
     while(false);
    }
   if((false))
    return;
   return;
   if(((false || ((bool(bvec4(false, false, ((injectionSwitch.x < injectionSwitch.y)), false)))))))
    barrier();
  }
 if((false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((false || ((((bool(bvec4((injectionSwitch.x > (max(((injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)).y), true, (bool((false || (bool(false))))), true))) && true)))))))
  {
   if(((((false || (bool((bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), true, false, false))))))))))
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if((false))
            return;
           return;
          }
         while(false);
        }
      }
     while(false);
    }
   else
    {
     for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter < ((((1) | (1))) | (1)); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
     if(false)
      {
      }
     else
      {
       if((false))
        return;
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
   if((((false) && true)))
    {
     for(int _injected_loop_counter = (1 ^ int((injectionSwitch.x))); _injected_loop_counter != (min(0, 0)); _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
      }
     if((false))
      return;
     return;
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     if((((false)) && true))
      {
       if((false))
        {
         if(((false) || false))
          {
          }
         else
          {
           return;
          }
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           return;
          }
        }
       for(int _injected_loop_counter = ((97281 & 0) ^ 1); (bool(bvec2(_injected_loop_counter > 0, false))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      continue;
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if((false))
      {
       if((false))
        continue;
       if((false))
        {
         if((false))
          barrier();
         continue;
        }
       barrier();
      }
     if((false))
      break;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       return;
       if((false))
        break;
      }
    }
  }
 GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.z = workgroup_size;
 uint workgroup_id = (uvec3(0u, (clamp(0u, (clamp(0u, 0u, (min(((0u) * 1u), 0u)))), 0u)), 0u) ^ (gl_WorkGroupID)).x;
 if((false))
  barrier();
 ((false ? (workgroup_id) : GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id));
 if((false || ((false))))
  return;
 uint workgroup_base = (clamp(((false ? (bitfieldReverse(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid)) : GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id)).xyz.z * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, ((false ? (bitfieldReverse(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid)) : GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id)).xyz.z * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, ((false ? (bitfieldReverse(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid)) : GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id)).xyz.z * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y));
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = (((0u | (workgroup_base))) ^ 0u);
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > ((((clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).y))))
  {
   if((! (! (false))))
    {
     if((false))
      return;
    }
   else
    {
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(false);
          }
         do
          {
           if((false))
            return;
          }
         while((bool(bvec4(false, false, true, true))));
         do
          {
           barrier();
          }
         while(false);
         if((false))
          return;
        }
      }
     else
      {
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(true)
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != (- 9689 & 0); _injected_loop_counter --)
      {
       if((bool(bvec3(((injectionSwitch.x < injectionSwitch.y)), false, true))))
        {
         if((false))
          return;
         for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 ^ (0 | 0)) | (((~ (~ (~ ((clamp(~ ((max((max(int(ivec3(0, 0, ((0) | (0)))), int(ivec3((((((false ? (_injected_loop_counter) : (((0) - 0)) << (0 << (int(6)))))) ^ ((0 << (int(2))) | 0))), 0, 0)))), int(ivec3(((0) - 0), 0, 0))))), ~ ((max((max(int(ivec3(0, 0, ((0) | (0)))), int(ivec3((((((false ? (_injected_loop_counter) : (((0) - 0)) << (0 << (int(6)))))) ^ ((0 << (int(2))) | 0))), 0, 0)))), int(ivec3(((0) - 0), 0, 0))))), ~ ((max((max(int(ivec3(0, 0, ((0) | (0)))), int(ivec3((((((false ? (_injected_loop_counter) : (((0) - 0)) << (0 << (int(6)))))) ^ ((0 << (int(2))) | 0))), 0, 0)))), int(ivec3(((0) - 0), 0, 0)))))))))))))); _injected_loop_counter --)
          {
           return;
          }
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
          }
        }
       else
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         if((false))
          return;
         if((false))
          return;
         if(((((! (((! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
          return;
        }
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if((false))
          return;
        }
       if((false))
        return;
      }
    }
   else
    {
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((bool(bvec2((bool((bvec2(bvec3(bvec2((((injectionSwitch.x < injectionSwitch.y)) && (false)), true), false))))), true))))
    {
    }
   else
    {
     if((false))
      {
       if((bool(bvec2((false), false))))
        return;
       if((false))
        {
         if((false))
          return;
         if(((((false) || false) || (((injectionSwitch.x > injectionSwitch.y))))))
          {
           if((false))
            return;
           return;
          }
         do
          {
           barrier();
          }
         while(false);
        }
       return;
      }
    }
  }
 if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if((false))
    {
     for(int _injected_loop_counter = 0; (~ (~ (_injected_loop_counter))) < 1; _injected_loop_counter ++)
      {
       return;
      }
    }
   if((false))
    return;
   if((false))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.w * (((((true) || false) ? (min((((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) * uvec2(1u, 1u))), (((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) * uvec2(1u, 1u))))) : (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))) ^ uvec2(0u, 0u)).x + GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.y;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(0))); ((_injected_loop_counter --) | 0))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       do
        {
         if((((injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); (! ((bool(bvec3(! (_injected_loop_counter != 0), false, true))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         do
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              return;
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          {
           if((false))
            return;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
     do
      {
       barrier();
       if((false))
        break;
      }
     while(false);
    }
  }
 uint next_virtual_gid = ((((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y) ^ 0u)) / 1u) + GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.w * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + (((false ? (subgroup_id) : ((1u * ((uint((min(uvec4(GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.y, 1u, 1u, 0u), uvec4(GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.y, 1u, 1u, 0u))))) + ((true ? (min(1, 1)) : (findMSB(40584))))))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if((false))
  {
   if((false))
    return;
   if((((((((false ? (pow(injectionSwitch, injectionSwitch)) : injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y)) || (false)))
    {
     if(true)
      {
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = (0 | (- 32124 & 0)); ((_injected_loop_counter < 1) && ((injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
      }
     if((false))
      return;
    }
   else
    {
     do
      {
       return;
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
             if((true && ((false))))
              break;
            }
          }
         return;
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((! (! (bool(((bvec3(bvec3(bvec3(bvec4(bvec3((false), false, true), false))))))))))))
    {
     if(false)
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    {
     if(true)
      {
       return;
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(false);
        }
      }
    }
  }
 do
  {
   if(false)
    {
    }
   else
    {
     GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.x = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w;
     if((false))
      return;
    }
  }
 while(false);
 if((((false) || false)))
  {
   if(true)
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int((injectionSwitch.y)); ((_injected_loop_counter) << 0) != int((((clamp(((min(injectionSwitch.x, injectionSwitch.x)) - 0.0), min(injectionSwitch.x, injectionSwitch.x), (float(mat2x3((min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, 0.0, abs(1.0), 0.0)))))))); _injected_loop_counter --)
  {
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     buf[virtual_gid] = 1;
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 do
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      break;
     if((false))
      return;
     if(GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.y + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)
      {
       if((false))
        barrier();
       int i = 0;
       if((false))
        break;
       if(((((! (! (injectionSwitch.x > ((true ? injectionSwitch : ((vec2(injectionSwitch[0], injectionSwitch[1]))))).y)))))))
        {
         if((false))
          return;
         if((false))
          {
           if((false))
            return;
           continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((((false)) || false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false || (((injectionSwitch.x < injectionSwitch.y)))))
                {
                 return;
                }
               else
                {
                }
              }
             return;
            }
          }
         else
          {
          }
         if((((false)) || false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if((false))
          {
           if((((false)) || false))
            return;
           break;
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((bool(bvec2(false, false)))))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; ((_injected_loop_counter) ^ 0) != (int(int((~ (~ ((((((min(1, ((1) | (1))))) | ((min(1, ((1) | (1))))))) >> 0))))))); _injected_loop_counter ++)
            {
             do
              {
               if((((! (! ((injectionSwitch.x > (0.0 + (injectionSwitch.y)))))))))
                {
                 do
                  {
                   barrier();
                   if((((injectionSwitch.x > (vec2(0.0, 0.0) + (((injectionSwitch) * vec2(1.0, 1.0)))).y))))
                    return;
                  }
                 while(false);
                }
               if((false))
                continue;
              }
             while(((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))));
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              return;
            }
          }
        }
       do
        {
         if((false))
          barrier();
        }
       while(false);
       if(true)
        {
         if((false))
          break;
         if((true && ((((false) || false)))))
          {
           if((false))
            return;
           for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ int((injectionSwitch.y))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = (((max((((clamp(max(int(((1.0 * ((min(injectionSwitch.x, injectionSwitch.x)))))) << ((0 | (int(8)))), int((injectionSwitch.x)) << (int(8))), ((max(int(int(max(int((injectionSwitch.x)) << (int(8)), int((max((injectionSwitch.x), (injectionSwitch.x)))) << (int(8))))), int(int(max(int(((max(injectionSwitch, injectionSwitch)).x)) << (int(8)), ((int((injectionSwitch.x)) << ((0 ^ (int(8))))) + 0))))))), max(int((injectionSwitch.x)) << (int(8)), int((injectionSwitch.x)) << (int(8)))))) | 0), max((~ ((clamp(~ (~ (~ ((int(((vec2(vec4(injectionSwitch, 1.0, 1.0))).x)))))), ~ (int(((vec2(injectionSwitch[0], injectionSwitch[1])).x))), ~ (int((injectionSwitch.x))))))) << (int(8)), int((injectionSwitch.x)) << (int(8))))))); ((false || (((bool(bool(_injected_loop_counter != 1))) && (bool(bool(((injectionSwitch.x < injectionSwitch.y))))))))); _injected_loop_counter ++)
        {
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = 0; (bool(bvec3(_injected_loop_counter < 1, false, ((injectionSwitch.x > injectionSwitch.y))))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             (((~ (~ (buf[GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.x] = 2)))) - 0u);
            }
           if((false))
            break;
          }
         if((((((true ? injectionSwitch : (vec2(vec3(92.22, 1.6, (clamp(- 644.414, (min(((- 644.414) / 1.0), - 644.414)), - 644.414))))))).x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           do
            {
             if(true)
              {
               if((((! (! ((((injectionSwitch.x > injectionSwitch.y) && true))))))))
                {
                 if((false))
                  return;
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
              }
             if((false))
              break;
            }
           while(false);
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          {
           if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
           if((false))
            barrier();
          }
        }
      }
     else
      {
       do
        {
         buf[GLF_merged2_0_3_79_3_1_11GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizesubgroup_id.xyz.x] = 2;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      {
       for(int _injected_loop_counter = (- 10006 & 0); _injected_loop_counter < ((min((int((ivec4(0, 0, 0, 0) ^ (ivec4((~ (~ (1 & 1))), 0, 1, 1))))), 1 & 1))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while((((bool(bool(((false) && (((! ((! ((! (! (! (! ((((false ? (6435.7014) : max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))))))))))))) || false)));
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
}
