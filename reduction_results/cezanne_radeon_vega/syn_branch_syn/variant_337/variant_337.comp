#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((min(uvec3(uvec4((((((((gl_WorkGroupID) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u)))) + uvec3(0u, 0u, 0u)), (0u | 0u))), uvec3(uvec4((((((gl_WorkGroupID) * uvec3(1u, 1u, 1u)))) + uvec3(0u, 0u, 0u)), (0u | 0u)))))) | (((((gl_WorkGroupID) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))).x;
 uint workgroup_base = (clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + (min(subgroup_id * subgroup_size, subgroup_id * (clamp(subgroup_size, subgroup_size, subgroup_size)))) + (0u | (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (max(((((subgroup_local_id + 1)) * 1u) % subgroup_size), (((0u ^ ((((uint(uint(((subgroup_local_id + 1))))))) | (((uint(uint(((subgroup_local_id + 1))))))))) * 1u) % subgroup_size)));
 if((false || (false)))
  {
  }
 else
  {
   buf[virtual_gid] = 1;
  }
 if((((0u + (subgroup_local_id + 1)) < (((uint(uvec4(((((subgroup_size) | 0u)) << 0u), 0u, 0u, 0u)))) | 0u)) && true))
  {
   int i = (~ ((0 ^ (((~ (0)) | (~ (0)))))));
   buf[next_virtual_gid] = 2;
  }
 else
  {
   for(int _injected_loop_counter = (((~ (~ ((1 | 1) << ((((int(ivec3(int(6), 0, ((0) | (0)))))) | ((int(ivec3(int(6), 0, 0)))))))))) >> (int(6))); (! ((bool((bvec3(bvec3(((bvec3(bvec4(bvec3(bvec3(((bvec3(bvec4((bvec3(bvec3(((bvec3(bvec3(bvec3((bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(((bool((bvec3(bvec3(bvec3((! (! (! ((((! (! (! ((bool((bvec3(bvec3(bvec3(! (_injected_loop_counter > 0), true, ((true) && true)))))))))))) || false))))), false, true))))))), false, (true && (true))), false))), true))))))))))), false)))))), true))))))))))); _injected_loop_counter --)
    {
     ((~ (((~ (((true ? ~ (0u ^ ((((false ? (atomicCompSwap(workgroup_base, workgroup_id, packUnorm2x16(injectionSwitch))) : ~ (buf[next_virtual_gid] = 2)))))) : (num_workgroup))))) + 0u))));
    }
  }
}
