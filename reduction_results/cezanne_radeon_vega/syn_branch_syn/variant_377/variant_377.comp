#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (((((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || (true)) ? (((max((((((clamp(((false ? (uvec3(130249u, 32390u, 16001u)) : gl_WorkGroupID)).x, ((((false ? (((false ? (uvec3(118108u, 124511u, 129078u)) : ((((((uvec3(uvec4((uvec3(130249u, 32390u, 16001u)), 1u))) >> uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))) : gl_WorkGroupID)).x) << 0u), ((((false ? (uvec3(130249u, 32390u, 16001u)) : gl_WorkGroupID)).x) - 0u))))) ^ 0u)) | 0u, (((((clamp(((false ? (uvec3(130249u, 32390u, 16001u)) : gl_WorkGroupID)).x, ((((false ? (((false ? (uvec3(118108u, 124511u, 129078u)) : ((((((uvec3(uvec4((uvec3(130249u, 32390u, 16001u)), 1u))) >> uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))) : gl_WorkGroupID)).x) << 0u), ((((false ? (uvec3(130249u, 32390u, 16001u)) : gl_WorkGroupID)).x) - 0u))))) ^ 0u)) | 0u))) ^ 0u) : (workgroup_size)))) | 0u);
 uint workgroup_base = (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = (max((((max((0u ^ ((((((~ (~ (workgroup_base))) ^ (1u ^ 1u))) >> (0u >> (uint(8u))))))), (min(workgroup_base, workgroup_base)))) + subgroup_id * (((clamp((((min(((true ? ((min((((false ? (0u | ((num_workgroup))) : subgroup_size))) - 0u, (((false ? (0u | ((num_workgroup))) : subgroup_size))) - 0u))) : (((workgroup_id) - 0u)))), ((((false ? (clamp((num_workgroup), (num_workgroup), (num_workgroup))) : subgroup_size))) - 0u)))) << ((((0u) >> (0u << (uint(7u))))) << 0u)), (0u ^ (((true ? subgroup_size : (~ (~ (((((((~ (~ (workgroup_size))))) * 1u)) * (min(1u, 1u)))))))))), subgroup_size)) - 0u))) << 0u), ((true ? (max(workgroup_base, (min(workgroup_base, workgroup_base)))) + subgroup_id * (clamp(((((((! (! (bool((! (! (bool(false))))))))) ? (num_workgroup) : subgroup_size))) - 0u), (0u ^ (((true ? ((false ? (max(atomicMax(workgroup_id, ((((injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : (subgroup_id)))), workgroup_id)) : subgroup_size)) : (workgroup_size))))), subgroup_size)) : (clamp((workgroup_id), (workgroup_id), (workgroup_id))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + (((uint(uvec2((((0u | (((max(uint(uint(subgroup_id)), (((0u ^ (min((uint(uint((uint(uvec4(subgroup_id, 1u, (0u & 119907u), 0u)))))), (uint(uint((uint(uvec4(subgroup_id, 1u, (0u & 119907u), 0u)))))))))) | 0u))) << 0u)))) - 0u), 1u))))) * subgroup_size + ((((subgroup_local_id + 1) % subgroup_size) | ((max((max((((((((subgroup_local_id)) | ((subgroup_local_id))) >> ((0u) - 0u)) + 1)) | 0u), (((((clamp((subgroup_local_id), (((subgroup_local_id) | ((max(subgroup_local_id, subgroup_local_id))))), (subgroup_local_id))) >> (((~ (((~ (0u)) + 0u)))) - 0u)) + 1)) | 0u))), (((((((((subgroup_local_id) >> ((0u) - (max(0u, (uint((uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))))))))) + 1)) | 0u) - 0u)) * 1u)))) % subgroup_size)));
 buf[virtual_gid] = 1;
 if((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)
  {
   int i = ((((((((false ? (22925) : (((mix(vec2((injectionSwitch)[0], (170.949)), vec2((97.34), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) ? 0 : (- 75827))))) << int((injectionSwitch.x))))) >> int(((max(injectionSwitch.x, injectionSwitch.x)))));
   buf[next_virtual_gid] = ((max(int(ivec4(2, 0, 0, (1 & 1))), int(ivec4(2, 0, 0, (1 & (min(1, 1))))))));
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
