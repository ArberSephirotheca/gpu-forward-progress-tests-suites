#version 460

struct _GLF_struct_2 {
 float _f0;
 mat4x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat2x4 _f1;
 vec3 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_4 {
 uint workgroup_base;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  return;
 if(((((((! ((false || (! ((! (! ((true && (((((false ? (- 53.46) : injectionSwitch.x)) > injectionSwitch.y) && true)))))))))))) || false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 uint num_workgroup = ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = (uvec3(uvec4(gl_WorkGroupSize, 0u))).x;
 if(((false || (! ((((((bool((bvec2(bvec4(((bvec2(bvec2(bvec2(bvec2(bvec2(! ((false)), false))))))), false, false))))) && true)) || (((bool(bvec3(false, true, true)))) && true))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(((bool(((bvec3(bvec3(bvec3(bvec3((bvec3(bvec4(bvec3((false || ((true && (((injectionSwitch.x > injectionSwitch.y)))))), true, (! (! (true)))), true)))))))))))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4((min(workgroup_size * workgroup_id, (((uint(uvec4((max(workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u))) - 0u)))), _GLF_struct_1(mat2x3(1.0), _GLF_struct_0((clamp(ivec4(1), ivec4(1), ivec4(1))), vec4(((false ? (- 32.04) : (mix(float(((max(float(vec2((- 1481.4987), 0.0)), float(vec2((- 1481.4987), 0.0)))))), float(1.0), bool(((! (! (bool(bool(true)))))))))))), bvec3(true)), ivec3(1)), _GLF_struct_3(mat3(1.0), mat2x4(1.0), vec3(1.0), _GLF_struct_2(1.0, mat4x3(1.0), bvec4(true))));
 if((bool(bvec4((((false)) || false), true, true, true))))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if(((bool((bvec3(bvec4(bvec3(false, false, ((injectionSwitch.x > injectionSwitch.y))), false)))))))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((! (! (bool(bvec4(false, true, false, true))))))))
  return;
 uint virtual_gid = _GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = ((((0u >> (((clamp((((uint(7u))) + (0u ^ 0u)), (uint(7u)), (uint(7u))))) << (clamp(((((0u | (uint(((uint(0u)) * 1u))))) | 0u) & ((true ? (0u + (57277u)) : (subgroup_size)))), (uint(uvec3(((((0u | (uint(((uint(0u)) * 1u))))) | 0u) & ((true ? (0u + (57277u)) : (subgroup_size)))), 0u, 0u))), ((((0u | (uint(((uint(0u)) * 1u))))) | 0u) & ((true ? (0u + (57277u)) : (subgroup_size)))))))) ^ (_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size))) - 0u) + (min((0u ^ (((((((uint(uvec3((max(((uint((injectionSwitch.x)) + (subgroup_local_id)) + 1), ((uint((injectionSwitch.x)) + (subgroup_local_id)) + 1))), 1u, 0u))) << 0u))) ^ 0u) % subgroup_size))), ((((max(((uint((injectionSwitch.x)) + (subgroup_local_id)) + 1), ((uint((injectionSwitch.x)) + (subgroup_local_id)) + 1)))) ^ 0u) % ((subgroup_size) | (subgroup_size)))));
 if((false))
  return;
 buf[virtual_gid] = (((((injectionSwitch.x > injectionSwitch.y)) ? (- 53280) : (1) - 0)));
 if(subgroup_local_id + 1 < (((0u | (subgroup_size))) >> (clamp(0u, 0u, 0u))))
  {
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   int i = 0;
   if((false))
    barrier();
   ((((! (! (((bool((bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), true)))))))))) ? buf[next_virtual_gid] = 2 : (0u + ((min((uint(float(- 6019))), (uint(float(- 6019)))))))));
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((! (bool(bool((! ((bool(bvec2((false), true))))))))))
    {
     if(((false || (bool(bvec4((false), true, true, true))))))
      {
       if(((((bool(bool((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((bool(bvec3((! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
      {
       if(((! (! (! (((bool(bvec3(! ((true && (((injectionSwitch.x > injectionSwitch.y))))), false, false))))))))))
        {
         if((false))
          return;
         return;
        }
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if((false))
      return;
    }
   if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(((((mix(float((max(injectionSwitch.x, injectionSwitch.x))), float((- 333.506)), bool(false))) > (clamp((float((transpose(transpose(mat3((float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((((bool(bvec2(injectionSwitch.x > injectionSwitch.y, ((injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(((((((((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < (max((mix(float((- 1852.7711)), float(((false ? (13.81) : injectionSwitch.y))), bool(true))), (float(((true ? float((mix(float(injectionSwitch.y), float((5.4)), bool(false)))) : (- 3358.5309))))))))) && (((! ((! (! ((bool(bvec2((! (! (! (injectionSwitch.x > injectionSwitch.y)))), false))))))))))) || ((((injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))) && true))))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
     if((false))
      return;
    }
   if((false))
    return;
   (0u | (((buf[next_virtual_gid] = 2)) + 0u));
   if((((bool(bvec4((false), true, false, ((((injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))))) && true)))
    return;
   if((false))
    return;
  }
}
