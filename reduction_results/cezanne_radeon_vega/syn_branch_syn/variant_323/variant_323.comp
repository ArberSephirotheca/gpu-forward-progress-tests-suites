#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = (((uint(((min((clamp(injectionSwitch, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (mix(((float((- 2.8))) - tan(0.0)), float(injectionSwitch.y), bool(true))))))) * (gl_WorkGroupSize.x))) << 0u);
 uint workgroup_id = (((min((uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, (max(gl_WorkGroupID.x, gl_WorkGroupID.x)))) | (min(gl_WorkGroupID.x, (max(gl_WorkGroupID.x, gl_WorkGroupID.x))))));
 uint workgroup_base = ((uint(uvec2(max(workgroup_size * workgroup_id, (((max(workgroup_size, ((workgroup_size) | (workgroup_size))))) | (workgroup_size)) * workgroup_id), 0u))));
 uint virtual_gid = (~ (((~ (((false ? (atomicAdd(workgroup_id, subgroup_local_id)) : ((min((workgroup_base) >> (144907u & 0u), (workgroup_base) >> (144907u & 0u)))))) + (~ (~ (subgroup_id * subgroup_size))))) << (0u << (uint(8u)))))) + subgroup_local_id;
 uint next_virtual_gid = (0u | (workgroup_base)) + ((((subgroup_id) << 0u)) ^ 0u) * subgroup_size + (((((((true && (bool(bool(((bool((bvec3(bvec3((bvec3(bvec4((bvec3(bvec4((bvec3(bvec3((bvec3(bvec3(bvec3((false || (((injectionSwitch.x > injectionSwitch.y)))), false, true))))))), false))), true)))))))) || ((((injectionSwitch.x < (clamp(injectionSwitch.y, injectionSwitch.y, (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false))))))))) ? ((((subgroup_local_id + 1) ^ uint((((clamp(((max((max(max((((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch)), max((((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch)))), max((((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x)))) % (clamp(((subgroup_size) * 1u), subgroup_size, (min(subgroup_size, subgroup_size))))) : (subgroup_id))) | (clamp((0u | 0u), (min((0u | 0u), (0u | 0u))), (clamp((0u | 0u), (((clamp((0u | 0u), (0u | 0u), (0u | 0u)))) | 0u), (0u | 0u)))))));
 ((((false ? (((((((workgroup_base)) >> 0u)) | ((((workgroup_base)) * 1u)))) << 0u) : ((((~ (~ ((((buf[virtual_gid] = 1) * 1u)) / 1u))))) + (0u << (uint(6u))))))) >> 0u);
 if((((injectionSwitch.x < injectionSwitch.y)) && ((clamp((uint(uvec2((max(subgroup_local_id, subgroup_local_id)) + ((max((1), (1))) - 0), 1u))), subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)))
  {
   int i = 0;
   (~ (~ (buf[next_virtual_gid] = 2)));
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
