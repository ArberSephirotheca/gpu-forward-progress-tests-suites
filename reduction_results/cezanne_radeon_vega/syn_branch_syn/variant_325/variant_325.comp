#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = ((clamp(((min((min(1u, ((true ? 1u : (72057u))))), (max(((false ? (subgroup_local_id) : 1u)), 1u)))) & 1u), ((((min((min(1u, ((true ? 1u : (72057u))))), (max(((false ? (subgroup_local_id) : 1u)), 1u)))) & 1u)) ^ uint((injectionSwitch.x))), ((min((min(1u, ((true ? 1u : (72057u))))), (max(((false ? (subgroup_local_id) : 1u)), 1u)))) & 1u))) * (gl_WorkGroupID.x));
 uint workgroup_base = ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id));
 uint virtual_gid = (((0u ^ ((uint(uvec4(((workgroup_base + subgroup_id * subgroup_size) ^ 0u), 0u, 1u, 1u)))))) | (((workgroup_base + subgroup_id * subgroup_size) ^ 0u))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * (~ ((max(~ (subgroup_size), (1u * ((0u | (~ (subgroup_size))))))))) + (max(((((true ? (max((1u * (clamp(((clamp(min((subgroup_local_id + 1), (((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))), min((subgroup_local_id + 1), (((((((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))) | ((((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))))) | uint((injectionSwitch.x)))), ((false ? (packHalf2x16(injectionSwitch)) : min((subgroup_local_id + 1), (((0u ^ ((subgroup_local_id + ((false ? (45126) : 1)))))) << uint((injectionSwitch.x))))))))) % subgroup_size, (clamp((min((subgroup_local_id + ((1) / 1)), (subgroup_local_id + 1))) % subgroup_size, (min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (min((~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1))) % subgroup_size)), (1u * ((min((subgroup_local_id + 1), (((((subgroup_local_id) | 0u)) ^ 0u) + 1))) % subgroup_size))))), (1u * (clamp(((clamp(min((subgroup_local_id + 1), (((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))), min((subgroup_local_id + 1), (((((((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))) | ((((0u ^ ((subgroup_local_id + 1)))) << uint((injectionSwitch.x)))))) | uint((injectionSwitch.x)))), ((false ? (packHalf2x16(injectionSwitch)) : min((subgroup_local_id + 1), (((0u ^ ((subgroup_local_id + ((false ? (45126) : 1)))))) << uint((injectionSwitch.x))))))))) % subgroup_size, (clamp((min((subgroup_local_id + ((1) / 1)), (subgroup_local_id + 1))) % subgroup_size, (min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (min((~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1))) % subgroup_size)), (1u * ((min((subgroup_local_id + 1), (((((subgroup_local_id) | 0u)) ^ 0u) + 1))) % subgroup_size))))))) : (atomicExchange(virtual_gid, workgroup_id)))))), ((1u * ((uint(uint((min((((subgroup_local_id) << 0u) + 1), (clamp(((((1u << (uint(3u))) >> (((true ? uint(3u) : (workgroup_id))))) * (subgroup_local_id)) + 1), ((max(subgroup_local_id, subgroup_local_id)) + 1), ((((0u + (subgroup_local_id + 1))) | (subgroup_local_id + 1)))))))))))) % subgroup_size)));
 (((false ? (169255u) : (0u | ((~ ((~ (~ (~ ((buf[virtual_gid] = 1))))))))) << 0u)));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = ((false ? (- 54177) : (min(0, 0))));
   ((buf[next_virtual_gid] = 2) | 0u);
  }
 else
  {
   buf[next_virtual_gid] = (((((((((int(((ivec4((0 | (((0) << 0))), 0, 0, ((0) - 0)) ^ ((max((((false ? (ivec4(- 25905, 9599, 31796, - 99390)) : (((((ivec4(0, 0, 0, 0) | (((((ivec4((min(2, 2)), 0, 1, 0)))) - ivec4(0, 0, 0, 0)) << ivec4(0, 0, ((0) >> 0), 0)))) ^ ivec4(0, 0, 0, 0))) | (((((ivec4((min(2, 2)), 0, 1, 0)))) - ivec4(0, 0, 0, 0)) << (((clamp(ivec4(0, 0, ((0) >> 0), 0), ((true ? ivec4(0, 0, ((0) >> 0), 0) : (ivec4(- 28841, - 54615, 83806, - 1164)))), ivec4(0, 0, ((0) >> 0), 0)))) / ivec4(1, 1, 1, 1))))))), (ivec4(((false ? (67729) : 2)), 0, (clamp((min(1, 1)), (min(1, 1)), (min(1, 1)))), ((false ? (((26175) | int((injectionSwitch.x)))) : 0)))))))) / ivec4(1, 1, 1, ((1) | ((max(int((injectionSwitch.x)) ^ ((1)), ((int((injectionSwitch.x))) ^ 0) ^ ((1)))))))))) - ((((0) | (0))) - 0))) ^ 0)) << 0))) ^ 0);
  }
}
