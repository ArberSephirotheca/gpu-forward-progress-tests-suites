#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if(true)
    {
     for(int _injected_loop_counter = 1; (max(((_injected_loop_counter) + (((min(0, 0))) + 0)), (0 ^ (((_injected_loop_counter) ^ 0))))) > 0; _injected_loop_counter --)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > (((max(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0))).y))))
  return;
 uint num_workgroup = (0u + ((max(gl_NumWorkGroups, gl_NumWorkGroups)).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = (uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if((bool(bool((false)))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((false))
  return;
 uint next_virtual_gid = (min((((clamp(workgroup_base + subgroup_id * ((((subgroup_size)) * 1u) << (0u + (0u))), workgroup_base + subgroup_id * ((((subgroup_size)) * 1u) << (0u + (0u))), workgroup_base + subgroup_id * ((((subgroup_size)) * 1u) << (0u + (0u)))))) ^ 0u), workgroup_base + subgroup_id * ((((subgroup_size)) * 1u) << (0u + (0u))))) + (((((((injectionSwitch.x > injectionSwitch.y)) ? (subgroup_size) : (max(false ? ((0u << (uint(1u))) ^ ((workgroup_base))) : (min((subgroup_local_id + (max((min(1, 1)), ((1) - 0)))), (subgroup_local_id + (max(1, ((clamp((((1)) ^ 0), (1), (((1)) << 0))) - (0 | ((((0 | 0) << (int(3))) ^ (0)))))))))) % subgroup_size, (clamp(false ? (workgroup_base) : (min((subgroup_local_id + (max((min(1, 1)), ((1) - 0)))), (uint(uint((subgroup_local_id + (((max(1, ((1) - (0 | (((((injectionSwitch.x > injectionSwitch.y)) ? (99336) : 0))))))) / 1)))))))) % subgroup_size, (max(((1u * (~ ((uint((uint(uvec2(uint(~ (false ? (workgroup_base) : (min((subgroup_local_id + (max((min(1, 1)), (((true ? (1) - 0 : ((mat4x3(- 85.25, - 425.909, - 79.49, 27.61, - 63.84, 6.1, 67.33, 3.0, - 560.362, 3.0, 6558.5455, - 808.073) , 14614)))))))), (subgroup_local_id + (max(1, ((1) - (0 | (0)))))))) % (~ (~ ((max(subgroup_size, subgroup_size))))))), 1u))))))))), false ? (workgroup_base) : (min((subgroup_local_id + (max((min(1, 1)), ((1) - ((((0) | 0)) >> 0))))), (subgroup_local_id + (max(1, ((1) - (0 | (0)))))))) % (((~ (~ ((max(subgroup_size, subgroup_size))))) | (((~ (~ ((max(subgroup_size, subgroup_size))))) | (((~ (~ ((max(subgroup_size, subgroup_size))))) | (~ (~ ((max(subgroup_size, subgroup_size))))))))))))), false ? (workgroup_base) : (((min((subgroup_local_id + (max((min(1, 1)), ((1) - 0)))), (subgroup_local_id + (max(1, ((1) - (0 | (0))))))))) >> ((0u >> (uint(3u))) << (uint(7u)))) % subgroup_size)))))))));
 ((((((buf[virtual_gid] = (~ ((0 ^ (~ (1)))))) / 1u) | 0u))) / 1u);
 if((min(((true ? (clamp((max(((subgroup_local_id) ^ 0u), subgroup_local_id)), subgroup_local_id, ((false ? (subgroup_id) : subgroup_local_id)))) : (atomicMin(subgroup_local_id, workgroup_id)))), subgroup_local_id)) + 1 < ((subgroup_size) << 0u))
  {
   buf[next_virtual_gid] = 2;
   if((! (! ((((false)) && true)))))
    return;
   subgroupAll(((false) || (false || ((false || (((injectionSwitch.x > injectionSwitch.y))))))));
   if((((injectionSwitch.x > injectionSwitch.y)) || (((! (((false || ((! (false)) || false)))))))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 else
  {
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if((false))
    return;
   (((((((((((0u ^ 0u) + (0u ^ (((((injectionSwitch.x > injectionSwitch.y)) ? ((workgroup_id ++)) : buf[next_virtual_gid] = 2))))))) * 1u)) >> 0u)) ^ 0u)) >> 0u);
   if((false))
    return;
   subgroupAll((((! (((bool(bool((! (! (((true && (bool(bvec3(bool(bvec3(((! (true)) || false), false, true)), true, true))))))))))))))) && ((injectionSwitch.x < injectionSwitch.y))));
  }
 if((false))
  return;
 if(((true && ((bool(bool(bool(bvec2(((((bool((bool(bvec2(bool((false || (injectionSwitch.x > injectionSwitch.y))), true)))))))), true)))))))))
  barrier();
 if((false))
  return;
}
