#version 460

struct _GLF_struct_21 {
 vec3 _f0;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 bvec3 _f1;
 float _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_22 {
 uint num_workgroup;
 _GLF_struct_18 _f0;
 vec2 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 ivec3 _f3;
 uint _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 int _f1;
 _GLF_struct_15 _f2;
 vec2 _f3;
 mat4x2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 uvec2 _f1;
 uint virtual_gid;
 mat2x3 _f2;
 _GLF_struct_16 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 mat4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 vec3 _f1;
 mat4x2 _f2;
 uint next_virtual_gid;
 vec4 _f3;
 uvec4 _f4;
 vec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 ivec4 _f3;
 uvec2 _f4;
 mat3x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 bvec2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 uvec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 vec4 _f1;
 vec2 _f2;
 _GLF_struct_5 _f3;
 vec2 _f4;
 mat2x4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uint workgroup_id;
 mat3 _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 bvec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((false || (false))) && true)))
    {
     if(((true) && true))
      {
       barrier();
      }
     else
      {
      }
    }
   if((false))
    barrier();
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(true)
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_22(gl_NumWorkGroups.x, _GLF_struct_18(ivec2(1), mat4x3(1.0), vec4(1.0), mat3x2(1.0)), vec2(1.0), _GLF_struct_19(uvec4(1u), ivec2(1), mat2x4(1.0), uvec4(1u), vec3(1.0)), _GLF_struct_20(mat4x2(1.0), bvec3(true), 1.0, mat2x4(1.0)), _GLF_struct_21(vec3(1.0))), ivec3(1));
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((((false) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if((bool((bvec3(bvec4(bvec3(false, true, false), true))))))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(false)
        {
         if(((((! (! (false)))) && true)))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       else
        {
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
           if((false))
            barrier();
          }
         while(false);
         if((false))
          barrier();
        }
      }
    }
   if((false))
    barrier();
   if(((! ((bool(bvec2(! ((bool(bvec2(false, true)))), false)))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false) && true))
      {
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
       do
        {
         barrier();
         if((false))
          barrier();
        }
       while(false);
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 if((false))
  barrier();
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(false)
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if(((! ((! (! (! (false))))))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if(((false || (false))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec3(false, false, false)))))
  barrier();
 for(int _injected_loop_counter = ((((1 << (int(7))) >> (int(7))) << (int(4))) >> (int(4))); _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_struct_0(mat4x3(1.0), mat3x4(1.0), mat4x2(1.0), mat4x3(1.0), bvec4(true), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_1(mat2(1.0), mat3x2(1.0), vec3(1.0), gl_WorkGroupID.x, mat3(1.0)), _GLF_struct_2(mat4x3(1.0), bvec4(true))), _GLF_struct_7(_GLF_struct_4(mat2x4(1.0), uvec2(1u), mat3x2(1.0)), vec4(1.0), vec2(1.0), _GLF_struct_5(vec3(1.0), bvec2(true), bvec4(true), mat4x2(1.0), uvec2(1u), vec4(1.0)), vec2(1.0), mat2x4(1.0), _GLF_struct_6(ivec4(1), 1)));
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if((false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_8._f0._f2.workgroup_id;
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != (int((injectionSwitch.x)) >> (int(4))); _injected_loop_counter --)
      {
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     do
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(7))) >> (int(7))); _injected_loop_counter ++)
          {
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              barrier();
            }
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
     while(false);
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1 << (((int(0)) | (int(0))))) >> (int(0))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if(((false || (false))))
            barrier();
           barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(false)
            {
             if(((false || (false))))
              barrier();
            }
           else
            {
             if((false))
              {
               do
                {
                 do
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                 while(false);
                }
               while((true && (false)));
              }
             if((false))
              barrier();
            }
           barrier();
          }
         if((false))
          {
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((bool(bool(false)))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if((false))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               barrier();
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(false);
           if((false))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 barrier();
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       do
        {
         if((false))
          barrier();
         if((false))
          {
           if(((((true && (false))) || false)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(false)
                {
                }
               else
                {
                 barrier();
                }
               if((false))
                barrier();
              }
             barrier();
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(((bool(bool((false || (false)))))))
            barrier();
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       while(false);
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if(true)
        {
         if(((! (! (false)))))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((true && (false))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((! (! (false)))))
            barrier();
           if(((true && (false))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while((true && (false)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool((bvec3(bvec3(bvec3((bool(bool(false))), false, false))))))))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = (1 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       do
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      barrier();
     if(false)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(false);
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat2x4(1.0), uvec2(1u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat2x3(1.0), _GLF_struct_16(_GLF_struct_14(ivec2(1), mat2x3(1.0)), 1, _GLF_struct_15(vec4(1.0), mat4x2(1.0), uvec3(1u), ivec3(1), 1u, uvec2(1u)), vec2(1.0), mat4x2(1.0), ivec4(1)), uvec3(1u));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(ivec4(1), _GLF_struct_12(_GLF_struct_9(bvec2(true), vec3(1.0), mat4x2(1.0), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), vec4(1.0), uvec4(1u), vec3(1.0), mat2x4(1.0)), _GLF_struct_10(uvec3(1u)), _GLF_struct_11(ivec4(1), mat4(1.0), mat4(1.0)), ivec4(1), uvec2(1u), mat3x2(1.0), mat2(1.0)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if((false))
    {
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
        {
         barrier();
         if((false))
          barrier();
        }
      }
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if(true)
    {
     barrier();
    }
   else
    {
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(false)
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     buf[_GLF_struct_replacement_17.virtual_gid] = 1;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   while(false);
  }
 else
  {
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(2))) >> (int(2))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((! ((bool(bvec2(! (true), false))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if(((! (! (((false) || false))))))
          barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((((false) && true)) && true)))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((! (! (false)))))
          barrier();
         if(true)
          {
           if((false))
            barrier();
           barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             barrier();
             if(((! (! (false)))))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if(((bool((bvec2(bvec3(bvec2(false, true), true)))))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), false)))))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     if((((false) || false)))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(true)
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if(true)
        {
         barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(true)
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((bool(bvec2(false, true)))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if(((! (! (false)))))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            {
             if((false))
              {
               if((((true && (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))))
                barrier();
               barrier();
              }
             barrier();
             if((false))
              barrier();
            }
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(((false || (false))))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   buf[_GLF_struct_replacement_13._f1._f0.next_virtual_gid] = 2;
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if((false))
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       while(false);
       if((false))
        barrier();
       if((false))
        barrier();
       for(int _injected_loop_counter = ((0 << (int(4))) >> (int(1))); _injected_loop_counter != (1 | 1); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if(((! (! ((false || (false)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
           if(((true && (false))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        barrier();
      }
     if(((true && (false))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(((true && (false))))
        barrier();
       barrier();
      }
     while(false);
    }
   subgroupAll(false);
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     for(int _injected_loop_counter = (max(1, 1)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       for(int _injected_loop_counter = (0 & int((35113u * 193279u))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             barrier();
             if(((bool(bvec2(false, ((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if(((bool(bvec2(false, false)))))
            {
             do
              {
               if((false))
                barrier();
               barrier();
              }
             while(false);
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((((! (! (false)))) || false)))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((false))
            {
             if(true)
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                    {
                     barrier();
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                    }
                  }
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                }
              }
             else
              {
               if((false))
                barrier();
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           buf[_GLF_struct_replacement_13._f1._f0.next_virtual_gid] = 2;
           if((false))
            barrier();
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if(((true && (false))))
              barrier();
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
             if(((false || (false))))
              barrier();
            }
           if((false))
            {
             if(((false || (false))))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = ((0) >> 0); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if(true)
                {
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             if((false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               barrier();
              }
             if(((true && (false))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           else
            {
             if((false))
              barrier();
            }
           if(true)
            {
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 while((true && (false)));
                 if((false))
                  barrier();
                }
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                  }
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               barrier();
               if(((! (! (false)))))
                {
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 barrier();
                }
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              barrier();
            }
           else
            {
            }
          }
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > ((0) + 0); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
      }
     while(false);
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   subgroupAll(true);
   if((false))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if(true)
          {
           if((false))
            barrier();
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 if(false)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
             if(true)
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if((false))
              barrier();
             if((false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(4))); _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
      }
    }
   if((false))
    barrier();
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if(((true && (false))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
       if((false))
        barrier();
      }
     else
      {
      }
     if(((false || (false))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
}
