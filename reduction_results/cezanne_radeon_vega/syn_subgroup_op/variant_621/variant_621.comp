#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size;
 if((false))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
        }
       if((false))
        {
         if(((bool(bvec4(false, true, true, false)))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   if(true)
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     do
      {
       barrier();
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if(true)
        {
         if(false)
          {
          }
         else
          {
           if((false))
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
             if((false))
              barrier();
            }
          }
        }
       else
        {
        }
       if((false))
        barrier();
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   do
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   while(false);
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
   if((false))
    barrier();
  }
 while(false);
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (max(0, 0)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   do
    {
     do
      {
       barrier();
       if((false))
        barrier();
      }
     while(false);
     if((false))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   while(false);
  }
 if((false))
  barrier();
 do
  {
   if((false))
    {
     if((false))
      barrier();
     do
      {
       barrier();
      }
     while(false);
    }
  }
 while(false);
 if((false))
  {
   if(((bool(bvec3(false, true, ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false || (true)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         do
          {
           if((false))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x < injectionSwitch.y)) && ((! (! (false))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((! (! (true))))
    {
     barrier();
    }
   else
    {
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (73504 & (0 | 0)); _injected_loop_counter --)
      {
       if(((bool(bvec2(false, false)))))
        barrier();
       if((false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if(false)
        {
         if((false))
          barrier();
         if((((bool(bvec4(bool(bvec3(false, false, false)), false, false, false))))))
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   do
    {
     if(true)
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if((false))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          {
           if(((false) || false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         barrier();
        }
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if(true)
      {
       do
        {
         if(true)
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             barrier();
             if(false)
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
               if((false))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   if(true)
                    {
                     barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
              }
             if((false))
              barrier();
            }
          }
         else
          {
          }
         if((false))
          barrier();
        }
       while(false);
       if((false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if(((false || (false))))
    barrier();
  }
 if((false))
  barrier();
 do
  {
   if((false))
    barrier();
   GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x = subgroup_local_id;
  }
 while(false);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (((false) && true)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (((1 & 1) << ((min(int(6), int(6))))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    {
     do
      {
       barrier();
      }
     while((true && ((bool(bool(false))))));
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter < ((((1 << (int(1))) >> (int(1))) << ((max(int(3), int(3))))) >> (int(3))); _injected_loop_counter ++)
        {
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((true && (false)))
              {
              }
             else
              {
               do
                {
                 if((false))
                  barrier();
                }
               while(false);
               barrier();
              }
            }
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           do
            {
             if((false))
              barrier();
            }
           while(false);
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
          }
         if((false))
          {
           do
            {
             barrier();
            }
           while(false);
          }
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
             if((false))
              barrier();
            }
          }
         if((false))
          barrier();
        }
      }
    }
   if(true)
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if((false))
      barrier();
    }
   else
    {
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     if(true)
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           do
            {
             if((false))
              barrier();
             barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
   if(false)
    {
    }
   else
    {
     if(true)
      {
       if((false))
        barrier();
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(((false || (false))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     do
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
      }
     while(false);
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if(((! (! (false)))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     barrier();
    }
   else
    {
    }
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if(false)
        {
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
        }
       do
        {
         barrier();
         if((false))
          barrier();
         if(false)
          {
           if((false))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = ((0 & 69129) >> ((((int(int(int(7)))) | (int(int(int(7)))))))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           if(((! (! (false)))))
            barrier();
          }
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               if(true)
                {
                 if((false))
                  barrier();
                 barrier();
                }
               else
                {
                 if((false))
                  barrier();
                }
              }
            }
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(false);
       if((false))
        barrier();
      }
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
      }
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((! (! (((false) && true)))))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         barrier();
         if((false))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
    }
   if((false))
    barrier();
   if(((bool(bvec2(false, true)))))
    {
     if(true)
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((false))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(true)
      {
       barrier();
      }
     else
      {
       if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
      }
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_size;
 if((false))
  {
   if(((! (((! (((((injectionSwitch.x > injectionSwitch.y))) && true))) || false)))))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (((int(2)) - 0))) >> (int(2))); _injected_loop_counter ++)
    {
     if((false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = (0 ^ ((1 << (int(6))) >> (int(6)))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(true)
        {
         if((((false) || false)))
          barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = (0 << ((int(ivec4(int(4), 0, 0, 1))))); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if(true)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != (int((injectionSwitch.y)) ^ 0); _injected_loop_counter ++)
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       if((false))
        barrier();
       if(true)
        {
         if(((true && (false))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         if((false || (true)))
          {
           if((false))
            barrier();
          }
         else
          {
          }
         if((false))
          barrier();
         if((false))
          barrier();
        }
       else
        {
         if((false))
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               do
                {
                 barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             while(false);
            }
           else
            {
            }
          }
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              {
               do
                {
                 barrier();
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if(((! (! (false)))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
          {
           do
            {
             barrier();
             if((false))
              barrier();
            }
           while(false);
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((bool(bvec2(false, false)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((! (! (false)))))
              {
               if((((! (! (bool(bvec4((false || (false)), true, false, false))))))))
                barrier();
               if((false))
                barrier();
               barrier();
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
             if((false))
              barrier();
             if((false))
              barrier();
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             if((false))
              barrier();
            }
           else
            {
             if((false))
              barrier();
            }
           barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(false);
        }
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
         if((false))
          {
           do
            {
             barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       do
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (false)))))
        barrier();
      }
     if((false))
      barrier();
    }
   else
    {
     if((false))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if((false))
      barrier();
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(true)
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if(true)
        {
         if((false))
          barrier();
         barrier();
        }
       else
        {
         if((false))
          {
           do
            {
             barrier();
            }
           while(false);
          }
        }
      }
     if((false))
      barrier();
     if(false)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
    }
  }
 else
  {
  }
 if((false))
  {
   if(false)
    {
    }
   else
    {
     barrier();
    }
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if((false))
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       if((((false) && true)))
        barrier();
       barrier();
      }
     while(false);
     if((false))
      barrier();
     for(int _injected_loop_counter = ((0 << (int(1))) | 0); _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
      {
       if((false))
        barrier();
      }
    }
  }
 do
  {
   if((false))
    barrier();
   if((((false) || false)))
    barrier();
   if((false))
    {
     do
      {
       for(int _injected_loop_counter = (0 | (1)); _injected_loop_counter != (- 22900 & 0); _injected_loop_counter --)
        {
         if((false))
          {
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             barrier();
             if((false))
              barrier();
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       if((false))
        barrier();
      }
     while(false);
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 while(false);
 if((false))
  barrier();
 if(false)
  {
   if((false))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(true)
      {
       if((false))
        barrier();
       do
        {
         if(true)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       while(false);
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         barrier();
        }
      }
     if(true)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if((false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * workgroup_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if((((false) || false)))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = (1 | 0); _injected_loop_counter != (0 & 90594); _injected_loop_counter --)
        {
         barrier();
        }
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
    }
   if(false)
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter != (0 | (1 ^ 0)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 if(true)
  {
   if((false))
    barrier();
  }
 else
  {
  }
 if((false))
  barrier();
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != ((int((injectionSwitch.y)) << (int(2))) >> ((clamp(int(2), int(2), int(2))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if((false))
            barrier();
           if((false))
            {
             if((false))
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if((false))
                barrier();
               barrier();
              }
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((((! (! (bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), true, true))))))))
                barrier();
               if((false))
                barrier();
              }
             else
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((false || (false))))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   if(((false || (false))))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter > ((0 >> (int(4))) >> (int(5))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              {
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               else
                {
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if((false))
              barrier();
             if(true)
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 << (int(5))); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if(((! (! (((false) && true))))))
                  barrier();
                 barrier();
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((((false) || false)))
            {
             do
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             while(false);
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | 1); _injected_loop_counter ++)
              {
               if((false))
                {
                 if((((false) || false)))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if(((! (! (false)))))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             barrier();
            }
          }
         if(((bool(bvec2(false, true)))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           barrier();
          }
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if((false))
      barrier();
     do
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != ((0) / 1); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          barrier();
        }
      }
     while(false);
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         do
          {
           if((false))
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           if((false))
            barrier();
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             if((false || (true)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if((false))
            barrier();
          }
        }
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(false)
        {
        }
       else
        {
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (int(189250u) & 0); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
    }
   if((false))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((1 << (((((int(7)) >> 0)) - 0))) >> (int(7))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if((false))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(false);
           do
            {
             barrier();
            }
           while(false);
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
        }
       while(false);
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 while(false);
 if((false))
  {
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
     barrier();
    }
   while(false);
  }
 if(false)
  {
   if((false))
    barrier();
   do
    {
     if((false))
      barrier();
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if((false))
    barrier();
  }
 else
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
    {
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1) + 0); _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if(((bool(bvec3(false, true, ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > (int((injectionSwitch.x)) | 0); _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       do
        {
         if((false))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if(false)
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            barrier();
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             else
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       else
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if(((true && (false))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
            {
             do
              {
               barrier();
              }
             while(false);
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             if((false))
              barrier();
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             if(true)
              {
               if((false))
                barrier();
              }
             else
              {
               if((false))
                barrier();
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
              }
             barrier();
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             barrier();
             if(((bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), false)))))
              barrier();
            }
           while(false);
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             barrier();
             if((false))
              barrier();
            }
          }
         else
          {
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
            {
             barrier();
            }
           if((false))
            barrier();
          }
        }
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
  }
 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + 1) % subgroup_size);
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 do
  {
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   do
    {
     do
      {
       do
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (0 ^ (1 ^ 0)); _injected_loop_counter ++)
              {
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             for(int _injected_loop_counter = ((1 << (int(4))) >> (int(4))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = ((((1 << (int(0))) >> (int(0))) << (int(2))) >> (int(2))); _injected_loop_counter != ((0 | 0) << ((max(int(6), int(6))))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
             if((false))
              barrier();
             if(((false || (false))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             if(((! (! ((false || (false)))))))
              barrier();
             if((false))
              barrier();
             if(true)
              {
               do
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                  }
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if(true)
                    {
                     barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       barrier();
                      }
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(false);
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   do
                    {
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                      }
                     while(false);
                     GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x = next_virtual_gid;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(true)
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if((false))
                  barrier();
                 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                  }
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               while(false);
              }
             else
              {
               if(((! (! (false)))))
                barrier();
              }
             if((false))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             do
              {
               do
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(3))); _injected_loop_counter --)
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   barrier();
                  }
                }
               while(false);
              }
             while(false);
             if(true)
              {
               if(false)
                {
                 if((false))
                  barrier();
                }
               else
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(false);
                    }
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         if((false))
                          {
                           do
                            {
                             if((false))
                              barrier();
                            }
                           while((! (! (false))));
                           barrier();
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                   barrier();
                  }
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                         if((((false) || false)))
                          barrier();
                        }
                       barrier();
                      }
                     if(((! (! (false)))))
                      barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if(((true && (false))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     for(int _injected_loop_counter = (1 | (1 | 1)); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((false))
                        barrier();
                       if((false))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if((false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 if(true)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((false))
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (((int(7)) | (int(7))))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       do
                        {
                         if((false))
                          {
                           do
                            {
                             do
                              {
                               barrier();
                              }
                             while(false);
                            }
                           while(false);
                          }
                         if((false))
                          barrier();
                        }
                       while(false);
                      }
                    }
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if((false))
                barrier();
              }
             else
              {
              }
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               while(false);
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((false))
              barrier();
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 while(false);
                 for(int _injected_loop_counter = 1; _injected_loop_counter != ((0) / 1); _injected_loop_counter --)
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = (0 ^ (0 ^ 0)); _injected_loop_counter != 1; _injected_loop_counter ++)
                        {
                         barrier();
                        }
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((false))
                      barrier();
                     if(((true && (false))))
                      barrier();
                     barrier();
                    }
                  }
                 if(true)
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if((false))
                barrier();
               do
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                }
               while((false || (((injectionSwitch.x > injectionSwitch.y)))));
              }
             if(((bool(bool(false)))))
              barrier();
            }
           else
            {
             if((false))
              barrier();
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                      barrier();
                    }
                   if((false))
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if((false))
                    {
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         if((false))
                          barrier();
                        }
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                     if((false))
                      {
                       if(true)
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if((false))
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     barrier();
                    }
                   if((false))
                    barrier();
                   if(false)
                    {
                    }
                   else
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << ((int(ivec4(int(1), 0, 1, 0))))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                         do
                          {
                           barrier();
                          }
                         while(false);
                        }
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(false)
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if((false))
                      barrier();
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(((false || (false))))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
              }
             else
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((true) && true))
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             else
              {
              }
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                 do
                  {
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                  }
                 while(false);
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if((false))
                    barrier();
                   barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((false))
                      barrier();
                     if(true)
                      {
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(false);
                       if(false)
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                          {
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        {
                         if((false))
                          {
                           if(true)
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         if(false)
                          {
                           if(((false || (false))))
                            barrier();
                          }
                         else
                          {
                           if(true)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((false))
                              barrier();
                            }
                          }
                        }
                       barrier();
                      }
                     if(true)
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                        {
                         if((false))
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if(true)
                  {
                   if((((false) && true)))
                    {
                     if(true)
                      {
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((((false) || false)))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
              }
             while(false);
             if((false))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
          }
         else
          {
           if((false))
            {
             if(false)
              {
               if((false))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if((false))
              barrier();
            }
           if((false))
            barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((false) && true)))
                  {
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     barrier();
                    }
                   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                    {
                     if((false))
                      barrier();
                    }
                   barrier();
                  }
                }
               while(false);
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               do
                {
                 barrier();
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               while(false);
              }
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(false);
               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (int(3))); _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
              }
             if((false))
              {
               if(true)
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << (int(8))); _injected_loop_counter --)
                  {
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   for(int _injected_loop_counter = (0 << (int(2))); _injected_loop_counter < 1; _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if((false))
                    barrier();
                  }
                }
               else
                {
                }
               if((false))
                barrier();
              }
             if((false))
              {
               if((false))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if(true)
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 barrier();
                }
               if(true)
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               else
                {
                 do
                  {
                   if((false))
                    barrier();
                  }
                 while(false);
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 barrier();
                }
               do
                {
                 barrier();
                 if((false))
                  barrier();
                }
               while(false);
              }
             barrier();
             for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((false))
            {
             if((false))
              barrier();
             if(false)
              {
               if((false))
                {
                 if((false))
                  {
                   do
                    {
                     if((false || (((injectionSwitch.x < injectionSwitch.y)))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   while(false);
                  }
                 do
                  {
                   barrier();
                  }
                 while(false);
                }
              }
             else
              {
               barrier();
              }
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         while(false);
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
       while(false);
      }
     while(false);
     if((false))
      barrier();
    }
   while(false);
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(false)
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     else
      {
       do
        {
         barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
    {
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y] = 1;
 if((((((false) && true)) && true)))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(4))); _injected_loop_counter --)
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if(((((false || (false))) || false)))
          barrier();
         barrier();
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
          }
         if(((false) && ((injectionSwitch.x < injectionSwitch.y))))
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter > (clamp(0, 0, 0)); _injected_loop_counter --)
              {
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if((false))
          barrier();
        }
       while(false);
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   do
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = (0 | (0 & - 82530)); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(true)
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   while(((! (! (bool(bvec3(false, false, false)))))));
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(false)
      {
      }
     else
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     do
      {
       if(((true && (false))))
        barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(4))); _injected_loop_counter --)
      {
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(((false || (false))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((false) || false)))
        barrier();
       if((false))
        barrier();
       if(true)
        {
         if((false))
          barrier();
         if(true)
          {
           if(false)
            {
             if((false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter != (min(1, 1)); _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if((false))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(true)
                    {
                     if((false))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((((false) && true)))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((false))
                      {
                       do
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((false))
                barrier();
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if((false))
        barrier();
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if((false))
          {
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              {
               if(true)
                {
                 barrier();
                }
               else
                {
                }
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               barrier();
              }
            }
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if(false)
            {
             if((false))
              {
               if(((bool(bool((true && (false)))))))
                barrier();
               barrier();
              }
             if((false))
              {
               if((false))
                barrier();
               if(true)
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if((false))
                barrier();
               for(int _injected_loop_counter = ((1 << (int(5))) >> (int(5))); _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
            }
           else
            {
             if((false))
              barrier();
             if((false))
              barrier();
             if((bool(bvec4(true, false, false, false))))
              {
               barrier();
              }
             else
              {
               if((false))
                barrier();
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter < ((((1) + 0) << (int(3))) >> (int(3))); _injected_loop_counter ++)
              {
               if((false))
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           if(((bool(bvec2(false, false)))))
            barrier();
          }
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     if(true)
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         if(false)
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if((false))
          barrier();
        }
       if((false))
        {
         do
          {
           barrier();
          }
         while(false);
        }
      }
     else
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
      }
     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (int(5))); _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = ((1 << (int(0))) >> (int(0))); _injected_loop_counter > 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(true)
        {
         if((false))
          {
           do
            {
             do
              {
               barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(false);
           if((false))
            {
             for(int _injected_loop_counter = (0 ^ 0); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(true)
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(((bool((bvec2(bvec2(bvec2((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false))), false))))))))
              barrier();
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
       else
        {
         if((false))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((! (! (false)))))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         if((false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((bool(bool(false)))))
    {
     if((false))
      {
       if(((bool((bvec2(bvec4(bvec2(false, true), true, true)))))))
        barrier();
       barrier();
      }
     if(((false || (false))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + 1 < subgroup_size)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if(false)
                {
                }
               else
                {
                 if(((false || (false))))
                  barrier();
                }
               barrier();
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          barrier();
        }
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x] = 2;
        }
      }
     else
      {
      }
     if((false))
      barrier();
     if(true)
      {
       for(int _injected_loop_counter = (0 >> (int(2))); _injected_loop_counter < ((1) | (1)); _injected_loop_counter ++)
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if(((! ((bool(bvec4(! (false), false, false, true)))))))
            barrier();
           if((false))
            {
             if(((bool((bvec3(bvec4(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y))), true)))))))
              {
               if((false))
                barrier();
               barrier();
               if((false))
                barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter != (((1 << (int(1))) >> (int(1))) ^ ((1 << (int(2))) >> (int(2)))); _injected_loop_counter --)
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
           if((false))
            {
             if(true)
              {
               if(((true && (false))))
                barrier();
              }
             else
              {
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if((false))
                barrier();
              }
             else
              {
              }
            }
           if(true)
            {
             if((false))
              barrier();
            }
           else
            {
            }
           if(((bool(bvec2(false, false)))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((true && (true)))
            {
             if((false))
              barrier();
             subgroupAll(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if(((! (! (false)))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    barrier();
                   if((false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   barrier();
                  }
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     do
                      {
                       if((false))
                        barrier();
                       barrier();
                       if((false))
                        {
                         if((false))
                          barrier();
                         barrier();
                        }
                       if((false))
                        barrier();
                      }
                     while(false);
                    }
                   else
                    {
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((false) && true)))
                  barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((false))
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       barrier();
                      }
                     if((false))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     for(int _injected_loop_counter = ((int((injectionSwitch.y)) << (int(2))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if(((bool(bvec3((! (! (((injectionSwitch.x > injectionSwitch.y))))), false, true)))))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if((false))
                        barrier();
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(4))); _injected_loop_counter --)
                      {
                       if((false))
                        {
                         for(int _injected_loop_counter = ((false ? (atomicXor(_injected_loop_counter, 15916)) : 1)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                          {
                           if((false))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                     for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if((false))
                      {
                       if((false))
                        {
                         if(((bool(bool(false)))))
                          barrier();
                         barrier();
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(true)
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                   if((false))
                    barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 barrier();
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(false)
              {
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                }
              }
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     if(false)
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   for(int _injected_loop_counter = ((1 << (int(1))) >> (int(1))); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((false))
                      barrier();
                     if(((bool(bvec4((false || (false)), false, true, false)))))
                      barrier();
                    }
                   barrier();
                  }
                 if((false))
                  {
                   if((false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                {
                 if(((! (! (false)))))
                  {
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 if((! (! (true))))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(((false) || false))
            {
            }
           else
            {
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((! ((bool(bvec4(! (false), false, true, true))))))
                  {
                  }
                 else
                  {
                   if(((true && (false))))
                    barrier();
                   if((((false) || false)))
                    barrier();
                   barrier();
                  }
                }
               if(true)
                {
                 barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                     barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                  }
                }
              }
             if((false))
              barrier();
            }
           if(false)
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           else
            {
             if((false))
              {
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                 if((false))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((false))
            {
             if((false))
              barrier();
             if(((! (! (false)))))
              barrier();
             if((false))
              barrier();
             for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (((false ? (_injected_loop_counter) : int(0))))) >> (int(0))); _injected_loop_counter ++)
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             if((false))
              barrier();
            }
          }
        }
      }
     else
      {
       if((false))
        barrier();
      }
     do
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
          }
         else
          {
          }
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(((bool(bvec4(false, false, false, false)))))
          barrier();
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
          {
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              barrier();
            }
           barrier();
          }
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(false);
    }
   else
    {
     if(true)
      {
       buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x] = 2;
      }
     else
      {
      }
     if((false))
      barrier();
     subgroupAll(true);
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if(false)
              {
              }
             else
              {
               barrier();
              }
            }
          }
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
              }
            }
           if((false))
            {
             if(true)
              {
               if((false))
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
             barrier();
            }
           if((false))
            barrier();
           if(true)
            {
             if((false))
              barrier();
             barrier();
             if((false))
              barrier();
             if((false))
              barrier();
            }
           else
            {
             do
              {
               if((false))
                barrier();
              }
             while(false);
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
              }
             else
              {
               do
                {
                 do
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   do
                    {
                     do
                      {
                       if((false))
                        barrier();
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                    }
                   while(false);
                  }
                 while(false);
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
          {
           if(((bool(bvec4(false, true, false, false)))))
            barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if(false)
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((false) || false)))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((true && (false))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       do
        {
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           do
            {
             do
              {
               if((false))
                barrier();
               if((false))
                barrier();
              }
             while(false);
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > (0 >> (((int(8)) ^ 0))); _injected_loop_counter --)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   barrier();
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if((false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if((true && (((injectionSwitch.x < injectionSwitch.y)))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           while(false);
          }
        }
       while(false);
      }
     do
      {
       do
        {
         if((false))
          barrier();
         do
          {
           if((false))
            barrier();
           if((false))
            barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               barrier();
              }
            }
           while(false);
           if((false))
            barrier();
          }
         while(false);
         if((false))
          barrier();
         if((false))
          barrier();
        }
       while(false);
      }
     while(false);
     do
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
      }
     while(((false) || false));
    }
   if(true)
    {
     if((false))
      {
       if(((injectionSwitch.x < injectionSwitch.y)))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((((bool(bvec4(false, false, false, false)))) && true)))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(4))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(true)
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   else
    {
    }
   if(((((injectionSwitch.x < injectionSwitch.y))) || false))
    {
     if((false))
      {
       do
        {
         barrier();
        }
       while(((false) && true));
      }
    }
   else
    {
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    barrier();
   if(((bool(bvec4(((false) && true), true, false, false)))))
    barrier();
  }
 else
  {
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         else
          {
          }
         if((false))
          barrier();
         barrier();
         do
          {
           if((true && (true)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               do
                {
                 barrier();
                }
               while(false);
              }
            }
           else
            {
            }
          }
         while(false);
        }
       else
        {
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if((false))
        {
         do
          {
           barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if((false))
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(false)
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     else
      {
       if((false))
        barrier();
      }
    }
  }
}
