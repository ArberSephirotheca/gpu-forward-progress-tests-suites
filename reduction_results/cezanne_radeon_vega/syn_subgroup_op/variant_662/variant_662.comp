#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((true && ((true && ((false))))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (false)))))
    barrier();
   if(((! (! (((false || ((false) && true))))))))
    {
     if((false))
      barrier();
     if((((false) && true)))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(((((false || (false))) || false)))
    {
     if((((true && ((injectionSwitch.x > ((false ? (- 0.0) : (float(mat3x4(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec3((((true && ((injectionSwitch.x > injectionSwitch.y))))), true, ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     if(((bool(bvec3(false, false, ((injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((((false || ((false || ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if(((true && (false))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((! (! ((! (((! ((((injectionSwitch.x > injectionSwitch.y))))) && true)))))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((((((injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
  barrier();
 if((((false) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = ((((clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)).x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > (mix(vec2((mix(float((injectionSwitch)[0]), float((- 98.57)), bool(false))), (7002.0748)), vec2((3.2), (injectionSwitch)[1]), bvec2(false, true))).y))))
  barrier();
 uint workgroup_id = (~ (~ (gl_WorkGroupID.x)));
 if((false))
  {
   if((((false) || false)))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((false) && true)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 uint workgroup_base = workgroup_size * ((((((0u ^ ((((workgroup_id)) ^ 0u))) | 0u)) * (uint((~ (((~ (uvec3((0u | uint((injectionSwitch.y))), 0u, 0u))) ^ uvec3(0u, 0u, 0u)))))))) | ((uint(uvec3(workgroup_id, 1u, (max((((0u ^ (0u))) | (0u)), (~ (~ (0u))))))))));
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if(((! ((true && (! (((((injectionSwitch.x > injectionSwitch.y))) && true))))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((false || (false))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      {
       if((((injectionSwitch.x > (clamp(injectionSwitch, injectionSwitch, (min(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((! (! ((bool(bvec2((false), true))))))) && true))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint virtual_gid = (uint(uvec3((~ (~ ((((uint((uvec2(0u, 0u) ^ (uvec2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u))))) | 0u))))), (1u ^ (max(1u, ((((injectionSwitch.x < injectionSwitch.y)) ? 1u : (atomicAnd(workgroup_id, workgroup_id))))))), 0u)));
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((bool(bool((true && (false)))))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if(((bool(bvec4(false, false, ((injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if(((bool(bvec2(false, true)))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((((false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if(((false || (((false) || false)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((bool(bvec3(false, true, false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((false) || false)))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((((injectionSwitch.x > (min(injectionSwitch.y, (min(injectionSwitch.y, injectionSwitch.y))))))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
    {
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((! (! ((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (false)))))
    barrier();
   barrier();
   if(((bool((bvec2(bvec4(bvec2(false, true), false, true)))))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = (0u ^ ((uint((uvec4(1u, 1u, 1u, 1u) * ((min(uvec4(workgroup_base, 1u, 0u, 1u), uvec4(workgroup_base, 1u, 0u, 1u))))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + (min((min((clamp(1, 1, 1)), 1)), (min(1, 1))))) % subgroup_size);
 if(((((bool(bvec2(((false) && true), true))) && true))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > ((((min((injectionSwitch.y) - 0.0, (float(mat2x4((injectionSwitch.y) - 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, (clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))))) * 1.0)))))
  {
   if((((false)) || false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((false)) || false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((bool(bool((false) && true))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > ((true ? injectionSwitch.y : (- 352.585)))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (min(injectionSwitch, (min((min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if(((bool(bvec2(false, false)))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((! (! ((false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 (0u ^ (buf[virtual_gid] = 1));
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(((bool(bvec3(false, ((injectionSwitch.x < injectionSwitch.y)), false)))))
  barrier();
 if((((injectionSwitch.x > ((mix(vec2((min((clamp(((injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, ((true ? injectionSwitch : ((vec4(7737.6358, 1.6, 483.155, - 0.3) * mat2x4(- 318.175, - 3.8, - 7.0, - 561.572, 63.52, - 4.1, 3420.1031, - 17.06)))))))[0], (clamp(((injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, ((true ? injectionSwitch : ((vec4((min((clamp(((7737.6358) / 1.0), 7737.6358, 7737.6358)), 7737.6358)), 1.6, 483.155, - 0.3) * mat2x4(- 318.175, - 3.8, (mix(((true ? float(((- 1.8))) : (70.59))), float(((true ? (min(- 7.0, - 7.0)) : (((true ? (((false ? (87.60) : float(mat4x2(- 4.2, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))))) : (reflect(9.6, 1.8)))))))), bool(true))), - 561.572, 63.52, - 4.1, 3420.1031, - 17.06)))))))[0])), ((true ? (6743.3058) : (43.98)))), vec2((- 1.3), (clamp(((injectionSwitch) - vec2(0.0, 0.0)), (vec2(0.0, 0.0) + (injectionSwitch)), ((true ? injectionSwitch : ((vec4(7737.6358, 1.6, 483.155, - 0.3) * mat2x4(- 318.175, - 3.8, - 7.0, - 561.572, 63.52, - 4.1, 3420.1031, - 17.06)))))))[1]), bvec2(false, true)))).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((((((injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((true && ((! (! (false)))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((true && ((bool(bvec2((false), true))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((true && (((((bool(bool((! (! (false)))))))) && true))) && (! (! ((((vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
    barrier();
   if((((false || (((bool(bvec4(false, true, true, false)))))) || false)))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((! (! ((false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool((bool(bvec3(((false || ((false || ((bool((false))) && true))))), false, true))))))
    {
     if((((injectionSwitch.x < injectionSwitch.y)) && (((! (! ((((bool(bvec4((((injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)))))))) && true))))
      {
       if((false))
        {
         if((false))
          barrier();
         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (mix((mix(vec2((vec2((- 15.35), (max((float(vec3((- 412.787), 0.0, 0.0))), (- 412.787)))))[0], (vec2((- 15.35), (max((float(vec3((- 412.787), 0.0, 0.0))), (- 412.787)))))[1]), vec2((9.9), (- 82.89)), bvec2(((injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((((vec2(injectionSwitch[0], ((injectionSwitch[1]) * 1.0))).x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if((false))
    {
     if((false))
      barrier();
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((! ((true && (! ((((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((false || (false))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   buf[next_virtual_gid] = ((2) | (2));
   if((false))
    barrier();
   if((false))
    barrier();
   if((((! (! (false || (false)))))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll((false || (true)));
   if((false))
    barrier();
   if(((((injectionSwitch.x > injectionSwitch.y)) || ((! (! (((injectionSwitch.x > ((true ? injectionSwitch : (atanh(vec2(8.9, - 13.39))))).y)))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((! ((true && (! ((false)))))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) || (((injectionSwitch.x > injectionSwitch.y)) || (false)))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if((((! ((true && (! (true && (false)))))))))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 936.159)), bool(false)))))))
    {
     if(((((((bool(bvec4((bool(bvec4(bool((! (! (bool((! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true, true, true))), true, false, true))))) && true))))
      {
       if(((((bool(bvec2(false, true)))) || false)))
        barrier();
       barrier();
      }
     if((! (! (((true && ((false || (false)))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((false) || (((max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
       barrier();
       if((((false) || false)))
        {
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
