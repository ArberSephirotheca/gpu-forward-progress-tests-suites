#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((((clamp(((((~ (~ (gl_NumWorkGroups)))) + uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), ((~ (~ (gl_NumWorkGroups)))) + uvec3(0u, 0u, 0u), ((~ (~ (gl_NumWorkGroups)))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))).x;
 uint workgroup_size = (clamp((uvec3(((gl_WorkGroupSize[((0) | (max((0), (0))))]) / 1u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (((((min(min(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize)), min(min(gl_WorkGroupSize, gl_WorkGroupSize), min(gl_WorkGroupSize, gl_WorkGroupSize))))) / uvec3(1u, 1u, 1u)))), (uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x;
 uint workgroup_id = ((gl_WorkGroupID.x) ^ (1u ^ 1u));
 uint workgroup_base = (clamp(((((injectionSwitch.x < injectionSwitch.y)) ? (((0u + (workgroup_size))) | (workgroup_size)) : (121798u))) * workgroup_id, ((((((((((injectionSwitch.x < injectionSwitch.y)) ? ((workgroup_size) | ((max((uint(((uvec3(workgroup_size, 0u, (0u << (uint(6u))))) << uvec3(0u, 0u, 0u)))), workgroup_size)))) : (121798u))) * workgroup_id) - 0u) >> 0u)) | ((((((injectionSwitch.x < injectionSwitch.y)) ? ((max((workgroup_size), (workgroup_size))) | ((max((uint(((uvec3(workgroup_size, 0u, ((uint((uint(uint(uint((uint(uvec4(((0u) >> 0u), 0u, 0u, 0u))))))))) << (uint(6u))))) << uvec3(0u, 0u, 0u)))), workgroup_size)))) : (121798u))) * workgroup_id) - 0u))), ((((injectionSwitch.x < (max((vec2(0.0, 0.0) + ((min(((injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)))), (min(((injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)))).y)) ? (((uint(((uint(workgroup_size)) / ((1u << (uint(3u))) >> (uint(3u))))))) | (workgroup_size)) : (121798u))) * workgroup_id));
 uint virtual_gid = (0u | ((uint(uvec4(workgroup_base, 0u, 1u, 0u))))) + (uint(uint(((((true ? ((false ? (workgroup_base) : (uint(uvec3(((subgroup_id) | (subgroup_id)), 0u, 0u))))) : (max((workgroup_base), (workgroup_base))))) * subgroup_size) | (((0u ^ 1u) ^ 1u) | ((subgroup_id * (clamp(subgroup_size, (((clamp(subgroup_size, subgroup_size, ((((subgroup_size) / 1u)) | (subgroup_size))))) >> 0u), ((subgroup_size) >> 0u)))))))))) + subgroup_local_id;
 uint next_virtual_gid = (~ (~ (workgroup_base + ((143432u & 0u) ^ (subgroup_id)) * ((subgroup_size) - 0u)))) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = ((true ? 1 : (8004)));
 if(subgroup_local_id + ((max((1) ^ 0, (1) ^ 0))) < (max(subgroup_size, subgroup_size)))
  {
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
  }
 else
  {
   buf[next_virtual_gid] = 2;
   subgroupAll((bool((bvec2(bvec2(bvec2(true, (bool(bvec2((bool(bvec3((! (((! (! ((true && ((! (false)))))))) || false)), ((injectionSwitch.x < injectionSwitch.y)), true))), true))))))))));
  }
}
