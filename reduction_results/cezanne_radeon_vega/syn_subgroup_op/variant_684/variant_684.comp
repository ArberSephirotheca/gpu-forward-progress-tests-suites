#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > (0 << (int(1))); _injected_loop_counter --)
    {
     if(((((bool(bvec4((bool(bvec2(false, false))), false, true, false))) || false))))
      {
       if((false))
        barrier();
       return;
       if((false))
        break;
      }
    }
   if((false))
    return;
   if(true)
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
    }
   else
    {
    }
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        {
         if((false))
          barrier();
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                continue;
               if((false))
                barrier();
               if((false))
                barrier();
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               return;
              }
            }
           if(((((bool(bvec2(false, false)))) || false)))
            barrier();
           if((false))
            continue;
          }
         else
          {
           if((false))
            break;
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
    }
   while(false);
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if(true)
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
      }
     return;
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((false) && true)))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    barrier();
   if((false))
    {
     do
      {
       barrier();
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (1 | 1); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if((false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if(false)
    {
    }
   else
    {
     return;
     if((false))
      return;
     if((false))
      return;
    }
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   barrier();
   if((false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((! ((! (! (! (true)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if((false))
        return;
      }
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        return;
       return;
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((false))
        barrier();
       if((false))
        {
         if(((false || (false))))
          return;
         return;
        }
      }
     else
      {
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
      {
       if(true)
        {
         if((false))
          barrier();
         barrier();
        }
       else
        {
         if((false))
          barrier();
        }
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if((false))
          barrier();
         do
          {
           return;
          }
         while(false);
        }
       barrier();
       if((false))
        barrier();
      }
    }
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        continue;
       barrier();
      }
     if(false)
      {
      }
     else
      {
       do
        {
         do
          {
           if((false))
            {
             if((false))
              continue;
             if((false))
              barrier();
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              barrier();
             break;
             if((false))
              return;
            }
           if((false))
            barrier();
           if((false))
            continue;
           return;
           if((false))
            barrier();
           if((false))
            break;
          }
         while(false);
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        break;
       for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(false);
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if((false))
  return;
 if(((bool(bvec2(false, false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   do
    {
     return;
    }
   while(false);
  }
 if((false))
  {
   if((false))
    return;
   barrier();
   if((false))
    return;
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << ((~ (~ (int(3)))))); _injected_loop_counter --)
      {
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if((false))
    {
     if(true)
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       return;
      }
     else
      {
      }
    }
   if((false))
    {
     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   do
    {
     if((false))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          break;
        }
       else
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
           for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               return;
               if((false))
                return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
        }
       if(((false || (false))))
        {
         if((false))
          continue;
         barrier();
        }
       if((false))
        barrier();
      }
    }
   while(false);
   if((((false) || false)))
    return;
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       while(false);
      }
     return;
    }
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
      {
       return;
      }
     if((false))
      return;
    }
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        barrier();
       if(true)
        {
         barrier();
         if((false))
          barrier();
        }
       else
        {
        }
      }
     if((false))
      {
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             return;
            }
          }
         return;
        }
       if((false))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if(((true) && true))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if((false))
          return;
        }
       if((false))
        return;
      }
     if((false))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if(((((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))) && true))))
      return;
    }
   if((false))
    {
     if(((bool(bvec2((true && (false)), false)))))
      return;
     return;
    }
   for(int _injected_loop_counter = (1 ^ 0); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (((0 << (int(7))) << (int(3))) >> (int(1))); _injected_loop_counter != (1 | 0); _injected_loop_counter ++)
          {
           if((false))
            {
             if((false))
              barrier();
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
               if((false))
                return;
              }
             if((false))
              return;
             barrier();
             if((false))
              barrier();
            }
          }
        }
       while(false);
       if(false)
        {
        }
       else
        {
         if(true)
          {
           return;
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter > (int(ivec4(0, 1, 0, 1))); _injected_loop_counter --)
            {
             if((false))
              return;
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               continue;
              }
            }
           if((false))
            {
             if(false)
              {
              }
             else
              {
               if((false))
                {
                 if((! (! (true))))
                  {
                   if((false))
                    break;
                   return;
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
              }
             barrier();
            }
           for(int _injected_loop_counter = 1; _injected_loop_counter != (0 | int((injectionSwitch.x))); _injected_loop_counter --)
            {
             if((false))
              {
               if(((! (! (false)))))
                barrier();
               if((false))
                continue;
               return;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             return;
            }
           if((false))
            barrier();
           if((false))
            break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     if((false))
      break;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   buf[virtual_gid] = 1;
  }
 else
  {
   if(((! (! (false)))))
    barrier();
  }
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    return;
   if((false))
    barrier();
  }
 else
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     if((false))
      {
       if((false))
        barrier();
       return;
      }
    }
   else
    {
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   return;
  }
 if((false))
  barrier();
 if(false)
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(false)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(true)
        {
         if((false))
          barrier();
         return;
        }
       else
        {
        }
      }
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(true)
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (((max(1, 1))) ^ 0); _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   do
    {
     return;
    }
   while(false);
   if((false))
    barrier();
  }
 if(((bool(bool(false)))))
  {
   if(((! (! (false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 for(int _injected_loop_counter = 0; _injected_loop_counter != (0 ^ int((injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if((false))
        barrier();
       if((false))
        barrier();
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
         buf[next_virtual_gid] = 2;
        }
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          barrier();
         if((false))
          barrier();
         continue;
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         continue;
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              barrier();
             if((false))
              barrier();
             if((false))
              break;
            }
           if((false))
            barrier();
           return;
          }
        }
       while(false);
       if((false))
        {
         if((false))
          continue;
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(true)
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               return;
              }
            }
           else
            {
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              break;
             if((false))
              barrier();
             if((false))
              {
               if((false))
                break;
               if(true)
                {
                 if((false))
                  barrier();
                 if((false))
                  continue;
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               return;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
             if((false))
              barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
            }
           else
            {
             barrier();
            }
           if((false))
            continue;
          }
         if((false))
          {
           if((false))
            break;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
              continue;
             if((false))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                barrier();
               return;
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > ((0) * 1); _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if((false))
          barrier();
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(false)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       do
        {
         if((false))
          barrier();
        }
       while(false);
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
         if((false))
          break;
        }
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((((false) || false)))
          continue;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            continue;
           if((false))
            {
             if((false))
              barrier();
             continue;
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           continue;
           if((false))
            break;
          }
         do
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < (1 | (((1 | 1) << (int(2))) >> (int(2)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(false);
         do
          {
           if((false))
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               barrier();
              }
             barrier();
            }
           if((false))
            barrier();
          }
         while(false);
         if(((! (! (false)))))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if(true)
              {
               return;
              }
             else
              {
               if((false))
                continue;
              }
            }
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       if((false))
        {
         if((false))
          continue;
         barrier();
        }
       if((false))
        break;
       if((false))
        break;
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             if((false))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             barrier();
             if((false))
              barrier();
            }
          }
         subgroupAll(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
           if((false))
            continue;
           if((false))
            {
             if((false))
              break;
             barrier();
            }
           if((false))
            {
             if(((! (! ((bool(bool(false))))))))
              barrier();
             return;
            }
           if((false))
            barrier();
          }
         if((false))
          continue;
         if((false))
          barrier();
        }
       do
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if((false))
        break;
       if((false))
        {
         if((false))
          continue;
         barrier();
        }
       if((false))
        {
         if(((! (! (false)))))
          barrier();
         break;
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          continue;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = ((0 | 0) >> (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               barrier();
               if((false))
                break;
              }
            }
           for(int _injected_loop_counter = (0 << ((clamp(int(8), int(8), int(8))))); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             barrier();
            }
           if((false))
            barrier();
          }
         if(true)
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               if((false))
                break;
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  return;
                 return;
                }
               else
                {
                }
               if((false))
                barrier();
              }
            }
           while(false);
           if((false))
            {
             if((false))
              barrier();
             barrier();
             if((false))
              {
               if((false))
                break;
               barrier();
              }
            }
           do
            {
             if((false))
              barrier();
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               if(((! (! (false)))))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                     if((false))
                      continue;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    return;
                  }
                 else
                  {
                  }
                }
               if(false)
                {
                }
               else
                {
                 if((false))
                  barrier();
                }
               if((false))
                return;
               break;
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 if((false))
                  barrier();
                 if((false))
                  return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 barrier();
                }
               if((false))
                barrier();
               if((false))
                break;
              }
             if(((! (! (false)))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             if((false))
              {
               if((false))
                break;
               barrier();
              }
             if((false))
              {
               if((false))
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 break;
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     continue;
                    }
                   break;
                  }
                 if((false))
                  barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(((! (! ((bool(bvec2(false, false))))))))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                 if((false))
                  break;
                }
               else
                {
                 if(((true && (false))))
                  barrier();
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(false);
           return;
           if((false))
            return;
           if(((false || (false))))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               barrier();
              }
             else
              {
               if((false))
                return;
              }
            }
           if((false))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               if((false))
                barrier();
               return;
               if((false))
                return;
              }
             if((false))
              continue;
             if((false))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 barrier();
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              {
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 if((false))
                  continue;
                 barrier();
                 if((false))
                  break;
                }
               if((false))
                {
                 if((false))
                  barrier();
                 continue;
                 if((false))
                  break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(((bool(bvec4(((false) || false), true, false, true)))))
            {
             if((false))
              continue;
             return;
            }
           if(((bool((bvec2(bvec4(bvec2((! (! (false))), false), false, true)))))))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            {
             do
              {
               if((false))
                return;
               barrier();
              }
             while(false);
            }
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               break;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if((false))
            break;
           if((false))
            break;
           if((false))
            return;
           if((false))
            {
             do
              {
               if((false))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(false);
             do
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    {
                     if((false))
                      return;
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                }
               if((false))
                barrier();
               if((false))
                continue;
              }
             while((! ((false || (! (false))))));
             barrier();
            }
          }
         else
          {
           if((false))
            barrier();
          }
         if(((true && (false))))
          return;
         if((false))
          {
           if((false))
            continue;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((! ((! (! (! (false))))))))
                continue;
               if(true)
                {
                 if((false))
                  barrier();
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((! (! (false)))))
                  barrier();
                 if((false))
                  barrier();
                 break;
                }
               if((false))
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if((false))
                barrier();
               if((false))
                return;
               barrier();
               if((false))
                return;
              }
             do
              {
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    {
                     if((false))
                      barrier();
                     continue;
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    break;
                   do
                    {
                     barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    barrier();
                   if((false))
                    {
                     if((false))
                      break;
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
               else
                {
                 if((false))
                  return;
                }
               for(int _injected_loop_counter = (min(((1) << 0), 1)); _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > ((0 >> (int(6))) >> (int(1))); _injected_loop_counter --)
                  {
                   if((false))
                    {
                     if((false))
                      break;
                     barrier();
                    }
                   barrier();
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(false)
            {
             if((false))
              {
               if((false))
                continue;
               barrier();
              }
            }
           else
            {
             if((false))
              break;
             return;
            }
           if((false))
            barrier();
           if((false))
            {
             if(((true && (false))))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               barrier();
              }
             break;
            }
           if((false))
            {
             do
              {
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while((false || ((true && (false)))));
            }
          }
         if((false))
          {
           if((false))
            continue;
           break;
          }
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if((false))
            barrier();
          }
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(((((! (! (false)))) && true)))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                continue;
               return;
              }
            }
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if((false))
                  barrier();
                 return;
                }
               while((false || (false)));
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if((false))
              {
               if((false))
                continue;
               barrier();
              }
             if((false))
              continue;
            }
           barrier();
           if((false))
            {
             if((false))
              barrier();
             break;
            }
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                barrier();
               return;
              }
             if(((false || (false))))
              continue;
             if((false))
              barrier();
            }
          }
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          break;
         barrier();
         if((false))
          barrier();
         if((false))
          barrier();
        }
      }
     else
      {
       if((false))
        {
         if(true)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         else
          {
          }
         if((false))
          continue;
        }
       if((((false) && true)))
        continue;
       if((false))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           barrier();
          }
         else
          {
          }
        }
       if((false))
        {
         if((false))
          {
           if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
            {
             if((false))
              return;
             barrier();
            }
           if((((false) && true)))
            return;
           barrier();
           if((false))
            barrier();
          }
         if((((false) || false)))
          continue;
         if((false))
          barrier();
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              break;
             barrier();
            }
           if((false))
            continue;
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                 if((false))
                  {
                   if((false))
                    continue;
                   barrier();
                  }
                }
              }
            }
          }
         continue;
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          barrier();
         if((false))
          barrier();
        }
       if(((bool(bvec3(false, true, true)))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          continue;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = ((true ? ((0) >> 0) : (95959))); _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(false)
        {
        }
       else
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if((false))
            return;
           if((! ((! (! (! (true)))))))
            {
             return;
             if((false))
              barrier();
            }
           else
            {
            }
           if((false))
            barrier();
          }
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if((false))
          break;
         if((false))
          barrier();
         if((false))
          {
           if(((! (! (false)))))
            barrier();
           if(true)
            {
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             else
              {
               if((false))
                barrier();
              }
            }
           else
            {
            }
          }
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              continue;
             barrier();
            }
           if((false))
            continue;
           break;
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if(false)
          {
           if((false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       if((false))
        {
         if((false))
          continue;
         if((false))
          barrier();
         do
          {
           if(((! (! (false)))))
            {
             if((false))
              continue;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(false);
             if((false))
              continue;
            }
           if((false))
            break;
           if((false))
            barrier();
          }
         while((true && (false)));
         for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            barrier();
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            barrier();
           break;
          }
         barrier();
         if((((false) && true)))
          barrier();
        }
       if((false))
        continue;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       if(true)
        {
         buf[next_virtual_gid] = 2;
        }
       else
        {
        }
       if(false)
        {
        }
       else
        {
         do
          {
           subgroupAll(true);
          }
         while(false);
         if((false))
          break;
         if((false))
          continue;
         if((false))
          barrier();
         if((false))
          barrier();
         if(((! (! (false)))))
          barrier();
        }
       if((false))
        continue;
       if((false))
        {
         if((false))
          break;
         if(true)
          {
           return;
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
          }
         else
          {
          }
         if((false))
          {
           if((false))
            return;
           break;
          }
         if((false))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        {
         do
          {
           if((false))
            return;
           if((false))
            {
             if(false)
              {
              }
             else
              {
               barrier();
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if((false))
            barrier();
           barrier();
           if((false))
            break;
           if(((! (! (false)))))
            {
             if((false))
              barrier();
             if(true)
              {
               barrier();
              }
             else
              {
               if((false))
                barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          break;
         barrier();
        }
       if(((! ((false || (! (false)))))))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          break;
         do
          {
           if((false))
            {
             if((false))
              continue;
             barrier();
            }
           if((false))
            {
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(false)
            {
            }
           else
            {
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               if((false))
                break;
               break;
               if((false))
                barrier();
              }
             if((false))
              {
               if((false))
                {
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
               if((false))
                continue;
               barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if((false))
                break;
               if((false))
                barrier();
               if((false))
                break;
              }
             if((false))
              barrier();
             if((false))
              continue;
             if((false))
              break;
             return;
             if((false))
              {
               if((false))
                barrier();
               if((false))
                return;
               if((false))
                barrier();
               continue;
               if((false))
                continue;
              }
            }
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(((! (! ((bool(bvec2(false, true))))))))
              continue;
             if((false))
              {
               if((false))
                break;
               barrier();
              }
             break;
             for(int _injected_loop_counter = 0; _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
              {
               if((false))
                {
                 for(int _injected_loop_counter = ((0 | (0 >> (int(8)))) | 0); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
                barrier();
              }
            }
           if((false))
            continue;
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              break;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(false);
         if((false))
          continue;
         if((false))
          barrier();
         if((false))
          continue;
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             break;
             if((false))
              continue;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            break;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
             if(((! (! (((false) && true))))))
              barrier();
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if(((true && ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               barrier();
              }
            }
          }
         if((false))
          {
           if((false))
            barrier();
           barrier();
           if((false))
            continue;
          }
        }
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            continue;
           barrier();
          }
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(((! (! (false)))))
            barrier();
           if(true)
            {
             barrier();
             if(((bool(bool(false)))))
              barrier();
             if((((false) || false)))
              {
               if(((! (! (false)))))
                barrier();
               break;
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             do
              {
               if((false))
                barrier();
               barrier();
              }
             while(false);
             if(((bool(bool(false)))))
              break;
            }
           if((((false) || false)))
            {
             if((false))
              barrier();
             if((false))
              return;
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             continue;
            }
           if((((false) && true)))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            break;
           if((false))
            {
             if((false))
              break;
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                 if((false))
                  return;
                }
               continue;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              continue;
             if((false))
              {
               if((false))
                barrier();
               continue;
              }
             break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if((false))
            break;
           if((false))
            barrier();
           if((false))
            continue;
           if((false))
            {
             if((false))
              {
               if((false))
                break;
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               barrier();
              }
             if((false))
              barrier();
             return;
            }
          }
         if((false))
          barrier();
         if((false))
          {
           if(((true && (false))))
            return;
           if((false))
            break;
           if((false))
            barrier();
           return;
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            {
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                barrier();
               continue;
              }
             if((true && (true)))
              {
               barrier();
              }
             else
              {
               if((false))
                break;
              }
            }
           continue;
           if((false))
            {
             if((false))
              barrier();
             continue;
            }
          }
         if(((true && (false))))
          barrier();
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         while(false);
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              continue;
             barrier();
            }
           if((false))
            continue;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             do
              {
               barrier();
               if((false))
                barrier();
              }
             while(((false) && true));
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                return;
               barrier();
              }
            }
           while(false);
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     if((((((false) || false)) && true)))
      break;
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     if((false))
      return;
     if((false))
      break;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        continue;
       continue;
      }
     if((false))
      break;
     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
      {
       if((false))
        break;
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           continue;
          }
         barrier();
         if((false))
          barrier();
         if(((false || (false))))
          {
           if((false))
            {
             if(((true) || false))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
            }
           if(((! (! (false)))))
            barrier();
          }
         if((false))
          continue;
        }
      }
     if((false))
      {
       if((false))
        continue;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       continue;
      }
     if((false))
      break;
    }
   while(false);
  }
 if((false))
  {
   if((false))
    barrier();
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      barrier();
    }
   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     barrier();
    }
  }
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if(false)
    {
     if((false))
      {
       if(((false || (false))))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        {
         if(((false || (((false) || false)))))
          return;
         if((false))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if(false)
            {
            }
           else
            {
             if((false))
              break;
             barrier();
             if((false))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 barrier();
                }
              }
             if((false))
              barrier();
            }
          }
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            barrier();
           if((false))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
          }
         if((false))
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         if((false))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((false))
            barrier();
           if((((false) && true)))
            barrier();
           if((false))
            barrier();
           if((false))
            continue;
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  return;
                 barrier();
                }
              }
             if((false))
              barrier();
             if((false))
              {
               if((bool(bool(true))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  return;
                 barrier();
                }
               else
                {
                 if((false))
                  return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             if((false))
              break;
             if(((bool(bvec4(false, true, ((injectionSwitch.x < injectionSwitch.y)), false)))))
              {
               if((false))
                continue;
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             return;
             if((false))
              return;
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(((true && ((! (! (false)))))))
                    return;
                   barrier();
                  }
                 barrier();
                 if((false))
                  barrier();
                 if((false))
                  break;
                 if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
                  break;
                }
               else
                {
                 if((false))
                  barrier();
                }
              }
            }
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        break;
       if((false))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          continue;
         if((false))
          {
           if((false))
            {
             if(((! (! (false)))))
              continue;
             barrier();
            }
           barrier();
           if((false))
            return;
          }
         if((false))
          continue;
         return;
         if((false))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
            {
             if((false))
              return;
             if((false))
              return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           return;
           if((false))
            barrier();
          }
        }
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
           if((false))
            barrier();
           if((false))
            return;
          }
         if((false))
          barrier();
         barrier();
         if((false))
          {
           if(true)
            {
             barrier();
            }
           else
            {
            }
          }
         if((false))
          barrier();
        }
       if((false))
        continue;
       if((((true && (bool(bvec3(false, false, false)))))))
        break;
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
           if((false))
            continue;
           if((false))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            {
             if((false))
              return;
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            break;
           if((false))
            continue;
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
            }
           if((false))
            barrier();
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
         break;
         if((false))
          barrier();
        }
      }
     do
      {
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if((false))
          break;
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             barrier();
            }
           if((false))
            return;
          }
         if((false))
          barrier();
         if((false))
          break;
         if((false))
          {
           do
            {
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((false))
            barrier();
           do
            {
             if(false)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(false)
                {
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 if((false))
                  barrier();
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               else
                {
                 barrier();
                 if((false))
                  barrier();
                }
              }
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(false);
     return;
     if((false))
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if(((true && (false))))
          barrier();
         if((false))
          continue;
         if((false))
          barrier();
        }
       if((false))
        {
         if(false)
          {
           if((false))
            barrier();
          }
         else
          {
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               return;
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(true)
              {
               do
                {
                 barrier();
                }
               while(false);
              }
             else
              {
               if((false))
                return;
               if((false))
                {
                 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
                  barrier();
                 return;
                }
              }
             if((false))
              barrier();
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1) >> 0); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if((false))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               if((false))
                return;
               if((false))
                return;
               if((false))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if((false))
                  return;
                }
              }
            }
           if((false))
            barrier();
          }
         return;
         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             if(((true && (false))))
              return;
             return;
             if((false))
              barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       for(int _injected_loop_counter = ((1 << ((0 ^ (int(2))))) >> (int(2))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        barrier();
       if(false)
        {
         if((false))
          return;
         if((false))
          barrier();
         if((false))
          return;
        }
       else
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       do
        {
         if((((false) && true)))
          break;
         for(int _injected_loop_counter = (0 << (int(3))); _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
             if((false))
              return;
            }
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              {
               if((false))
                barrier();
               continue;
              }
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((false) || false)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(false);
                  }
                 barrier();
                 if(((bool(bool(false)))))
                  return;
                 if((false))
                  {
                   if((false))
                    barrier();
                   return;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                return;
              }
             else
              {
              }
             if((false))
              barrier();
             continue;
            }
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
           if((((false) || false)))
            barrier();
           if(((false || (false))))
            barrier();
           if((false))
            {
             if((false))
              break;
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       while((true && ((! (! (((injectionSwitch.x > injectionSwitch.y))))))));
       if(true)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(((! (! (false)))))
          return;
        }
       else
        {
        }
      }
     if((false))
      barrier();
     if(((! (! (false)))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((((false) && true)) && true)))
            barrier();
           barrier();
          }
         if((false))
          return;
         if((false))
          {
           if((bool(bvec4(false, true, true, true))))
            {
             if((false))
              return;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((false))
          return;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((false))
            return;
          }
         else
          {
           return;
           if((false))
            return;
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if((false))
          {
           for(int _injected_loop_counter = (0 >> ((1 * (((int(7)) ^ 0))))); _injected_loop_counter != (1 & 1); _injected_loop_counter ++)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              barrier();
             barrier();
            }
           if((false))
            return;
           if(((! (! (false)))))
            barrier();
           if((false))
            return;
          }
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((false))
              {
               if((false))
                return;
               return;
              }
             barrier();
            }
          }
         else
          {
          }
        }
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if(((true && (false))))
          barrier();
         if(false)
          {
          }
         else
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if(((bool(bool(false)))))
          barrier();
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if(((true && (false))))
            barrier();
           for(int _injected_loop_counter = ((1) * 1); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
            {
             return;
            }
          }
         if(false)
          {
           if((false))
            barrier();
          }
         else
          {
           if(((bool(bvec4(false, true, true, true)))))
            {
             if((false))
              barrier();
             barrier();
            }
           return;
           do
            {
             if((false))
              return;
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
        }
      }
     if(((true && (false))))
      return;
     if((false))
      barrier();
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
      }
     while(false);
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((! (! (false)))))
      return;
     barrier();
    }
   do
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          break;
         barrier();
        }
      }
    }
   while(false);
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     return;
    }
   barrier();
   if((false))
    return;
   if(true)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
  {
   if((false))
    {
     if((false))
      break;
     barrier();
    }
   if((false))
    {
     if(true)
      {
       if((false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(false)
    {
     if((false))
      continue;
    }
   else
    {
     if(((bool((true && (bool(false)))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          continue;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if(((true) || false))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
}
