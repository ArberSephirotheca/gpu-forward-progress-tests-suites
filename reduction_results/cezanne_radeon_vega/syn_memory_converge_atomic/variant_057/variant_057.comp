#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((false || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     return;
    }
   barrier();
   if(((false || ((! (! (false)))))))
    return;
  }
 if((false))
  barrier();
 if((((false)) || false))
  {
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(((bool(bvec4(((((injectionSwitch.x < injectionSwitch.y)) && (! (! (bool(bvec2((false), true))))))), true, true, false)))))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      return;
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    {
     if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    {
     if(((bool(bvec4(false, false, true, false)))))
      return;
     return;
    }
   barrier();
   if((false))
    return;
  }
 if(((((bool(bvec4(false, true, false, false)))) || false)))
  {
   if(((true && (false))))
    return;
   barrier();
  }
 if((((! (! (! (! (false))))))))
  {
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((((! (! ((! (! ((((injectionSwitch.x > ((true ? (max((mix(float((95.06)), float(injectionSwitch.y), bool(true))), (min(injectionSwitch.y, injectionSwitch.y)))) : (((dot(vec3(- 6.6, - 664.848, - 9.7), vec3((1.0 * ((max(562.592, 562.592)))), 2413.9094, 4.5))) * exp(0.0)))))) || false)))))))))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    barrier();
   if(((! (! ((! (! (false))))))))
    barrier();
   if((((injectionSwitch.x > (exp(0.0) * (injectionSwitch.y))))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if((false))
      return;
     return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
    }
  }
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((true && (bool(bvec2(false, false)))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((false) || false)))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  {
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
    }
   if((false))
    return;
   barrier();
  }
 uint workgroup_size = ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((! (! ((false)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((((bool(bvec3(((! (! (false))) && true), ((bool(bvec4((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)), false, true)))), false))))))
  {
   if((false))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        return;
       return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if((false))
        barrier();
       if((false))
        return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         return;
         if((false))
          return;
        }
       return;
      }
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(((! ((! ((bool(bvec4(! (! (((injectionSwitch.x > (vec2((max(vec4(injectionSwitch, 1.0, sqrt(1.0)), vec4(injectionSwitch, 1.0, sqrt(1.0)))))).y)))), false, false, true)))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         return;
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((((bool(bvec2((((injectionSwitch.x > injectionSwitch.y)) && true), ((injectionSwitch.x > injectionSwitch.y)))))) || false))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        return;
       return;
       if((false))
        return;
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
       if((false))
        return;
      }
     if((false))
      {
       if((false))
        return;
       return;
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(((((bool(bvec3((true && (false)), false, false)))) || false)))
    {
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          return;
         return;
        }
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           barrier();
          }
         return;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if((false))
            barrier();
          }
         if((false))
          {
           if((false))
            return;
           return;
          }
         barrier();
        }
       return;
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((! ((true && (! (false)))))))
      barrier();
     if((false))
      return;
     barrier();
     if((false))
      barrier();
    }
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, (false || (((injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if((((! (! ((((((bool(bvec2(bool(bool(false)), false)))) && true))) && ((injectionSwitch.x < injectionSwitch.y))))))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((false))
        return;
       if((((true && (bool(bvec4(false, false, true, ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if(((((! (! (injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
  }
 if((((false)) && true))
  return;
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 if(((((((! (((! (injectionSwitch.x > injectionSwitch.y)) && true)))) || false)))))
  {
   if((false))
    {
     if(((bool(bvec4(false, true, true, false)))))
      return;
     barrier();
    }
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = (((~ (((~ ((~ (~ (((1u * (0u | (uint(uvec4((min((workgroup_size), (workgroup_size))), 1u, (0u >> (uint(6u))), 0u))))))))))) - 0u)))) - 0u) * (0u ^ (workgroup_id));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((false) || false) || (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((bool(bvec4(((bool((true && (bool(((false || (bool(bool(false))))))))))), false, false, false))))
  return;
 uint virtual_gid = ((0u | (((((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + ((subgroup_id) + 0u) * subgroup_size)) * 1u)) * 1u)))) + subgroup_local_id;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((false || (false))))
    return;
   return;
  }
 if((((((clamp(((((vec2(((mat4x3(injectionSwitch, (mix(float(((- (- 22.69 - - 43.09)))), float(1.0), (! (! (bool(true)))))), 0.0, (clamp((max(1.0, 1.0)), 1.0, 1.0)), ((false ? (distance(vec2(- 895.136, 1.8), normalize(injectionSwitch))) : 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, (clamp((((min((float(mat4(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))) + ((clamp((float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))), (clamp((float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), (((clamp((float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0))) * 1.0))), (mix(float(0.0), float((2.7)), bool(false))), 0.0, (clamp(0.0, 0.0, (min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, ((0.0) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) - vec2(0.0, 0.0)), vec2(((mat4x3(injectionSwitch, 1.0, ((((injectionSwitch.x < injectionSwitch.y)) ? ((true ? 0.0 : (max((max((955.113), (955.113))), ((((false ? (- 9226.3334) : (955.113))) / 1.0)))))) : (- 6.3))), 1.0, 1.0, 0.0, (1.0 * ((mix(float(1.0), float((- 219.209)), bool(false))))), 1.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (float((((false || (! (((! (((! ((! (! (! (false))))))))) || ((injectionSwitch.x > injectionSwitch.y)))))) ? (mat4x3(- 6.6, - 75.84, 93.66, 5.9, - 1.6, 1.2, 8.6, 780.979, - 755.114, - 6.1, - 6.5, 5.7)) : mat4x3(0.0, 0.0, 0.0, exp(0.0), (dot(vec3(1.0, sqrt(((false ? (- 69.53) : (min(((true ? 0.0 : (- 2.0))), 0.0))))), 0.0), vec3(1.0, 0.0, 0.0))), (dot(vec3(0.0, 0.0, round(length(normalize(1.0)))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, (injectionSwitch.x), 0.0, tan(0.0))))))))), vec2(((mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, ((clamp(float(((mat3(1.0, 1.0, 0.0, sin(0.0), tan(0.0), abs((dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float((((true ? (mat3(1.0, 1.0, 0.0, sin(0.0), tan(0.0), abs((dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0, 1.0)) : (mat3(- 9242.3266, - 2898.2620, 305.432, 36.13, 6.9, - 0.0, 78.65, - 1994.6508, - 9.8)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(((mat3(1.0, 1.0, 0.0, sin(0.0), tan(0.0), abs((dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0)) - mat4x3((float(mat3x4((max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, (min(1.0, 1.0)))))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, (injectionSwitch.y))), 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(((bool(bvec3(false, false, true)))))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
    }
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
  }
 atomicStore(write_val, uint((uint((((uvec3(uvec3(uvec3((clamp(virtual_gid, ((true ? virtual_gid : (virtual_gid))), virtual_gid)), 0u, 0u))))) << uvec3(0u, 0u, 0u))))), 4, 64, 0);
 if(((((true && ((true && (((true) && true))))) && ((((injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if((((false) || false)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((((injectionSwitch.x < ((false ? (- 5447.1620) : injectionSwitch.y)))) && ((bool(bvec3((false), false, false))))) || false)))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((false || (false))) || false)))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     return;
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(((bool(bvec3((! (! (false))), true, ((injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
  }
 if((false))
  {
   if(((((! (! ((bool(((bvec2(bvec4(bvec2(bvec4(bvec2(false, true), true, false)), false, true)))))))))) || false)))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((bool(bvec4((bool(bvec3(false, true, true))), false, true, false)))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  {
   if((false))
    {
     if((((false) || false)))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((! (! ((((((((injectionSwitch.x > injectionSwitch.y))) && true)) || (bool(bvec3(false, false, true)))))))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y)) || (((bool(bvec2(((false)), false)))) && true)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            return;
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        return;
       barrier();
      }
     return;
    }
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if(((bool(bvec4(false, ((injectionSwitch.x < injectionSwitch.y)), true, true)))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((((((injectionSwitch.x < injectionSwitch.y)) && (((bool(bvec3(false, true, (true && (true)))))) && true)))))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   barrier();
  }
 if((((false || (((true && (bool(bool((false)))))) && true)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if((false))
    {
     if(((false || ((! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      {
       if((false))
        return;
       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
        {
         if((false))
          barrier();
         return;
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        return;
       barrier();
      }
     return;
     if((false))
      {
       if(((false || (false))))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      return;
    }
   if(((bool(bvec2((! (! (false))), true)))))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  return;
 if(((bool(bvec2(((((((((injectionSwitch.x > injectionSwitch.y) && true)))) || ((injectionSwitch.x > injectionSwitch.y)))) || false), true)))))
  {
   if(((((mix(float(injectionSwitch.x), float((260.626)), bool(false))) > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     if((((((injectionSwitch.x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if((false))
  return;
 if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false)) || false))
      {
       if((false))
        return;
       barrier();
      }
     if(((((false || (((! (((! (! (! (false)))) && true))))))) && true)))
      barrier();
     if((false))
      return;
     if((false))
      return;
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         return;
         if((false))
          {
           if((false))
            barrier();
           return;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            return;
           barrier();
          }
         if((false))
          return;
        }
       return;
       if((false))
        barrier();
      }
     return;
     if(((! ((((bool(bvec3(! ((((true && (((false) || false)))) && (false || (true)))), false, true))) || false))))))
      {
       if((false))
        return;
       if((false))
        return;
       return;
      }
     if(((((clamp((mix(float((99.57)), float(injectionSwitch.x), bool(true))), (max(injectionSwitch.x, injectionSwitch.x)), (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          return;
         if((false))
          barrier();
        }
       barrier();
      }
     if((bool((bvec3(bvec3(bvec3((false), false, false)))))))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
         barrier();
         if((false))
          return;
        }
       return;
      }
     if((false))
      barrier();
     return;
    }
   if((false))
    {
     if((false))
      {
       if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
        return;
       return;
      }
     if(((false || (false))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    barrier();
   if(((bool(bvec4(false, true, true, (! (! (false))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     return;
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  return;
 if((((false) && true)))
  barrier();
 if((((true && (bool(bvec4(false, false, true, false)))))))
  {
   if(((false || (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if(((! (! (false)))))
    barrier();
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (vec2(injectionSwitch[0], (min(injectionSwitch[1], injectionSwitch[1])))).y))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if((false))
      return;
    }
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if(((false || (false))))
    return;
   return;
  }
 if((false))
  return;
 if(((true && ((! (! (false)))))))
  {
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
