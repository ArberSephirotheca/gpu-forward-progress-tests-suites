#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > ((mix(vec2((clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), (- 735.218)), vec2((10.21), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((bool(bvec3(false, true, false)))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec3(false, false, false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     if((! (! ((false)))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if(((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(((bool(bvec3(false, false, true)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if(((bool(bvec2(false, true)))))
    {
     if(((true && ((! (! ((true && (false)))))))))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if(((bool(bvec2(false, true)))))
        barrier();
       if(((((bool(bvec4(false, false, true, (! ((bool(bvec3(! (false), false, true)))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(((! (! ((true && (false)))))))
    barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((! (! (bool((! (! (bool(((injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((false) && true)))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false || ((((((injectionSwitch.x > injectionSwitch.y)))) && true))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 5.3)), bool(false))))))) && true))
      {
       if((false))
        barrier();
       if(((((true && (((injectionSwitch.x > injectionSwitch.y))))) && true)))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if(((true && (false))))
        barrier();
       if(((((! (! (false))))) && true))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((((((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
      }
     if((((false) || false)))
      barrier();
     if((false))
      {
       if((((((injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
    }
   if(((((! ((((bool(bvec4((((((bool(bvec4(! ((! (((! (true && ((injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true, true)))) && true)) || false), false, true, true)))) || false)))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((false))
      barrier();
    }
   barrier();
   if(((bool((((injectionSwitch.x > (clamp(injectionSwitch.y, (float((mat3(mat4(mat3(injectionSwitch.y, 1.0, cos(0.0), (injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0)))))), injectionSwitch.y)))) || (((bool((true && (((injectionSwitch.x > injectionSwitch.y)))))) || false)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((((((false || (bool(bvec4((! (! ((bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))) && true))))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((((! (((injectionSwitch.x < injectionSwitch.y)) && (bool((bvec3(bvec4((bvec3(bvec4(bvec3(((! (bool(bvec4((((((clamp((min(((mix((vec2(vec2(vec2((float(mat2x3((mix(vec2(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (5.9)), vec2((- 293.052), ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)))[0], 1.0, 1.0, 0.0, 0.0, 0.0))), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])))), vec2((2.6), (vec3(- 8.8, - 0.9, 90.38).z)), bvec2(false, false)))), (vec2(injectionSwitch[((0) | (0))], (min(injectionSwitch[1], injectionSwitch[1])))))), (min(((mix(vec2((float(mat2x3((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 1.0, 1.0, 0.0, 0.0, 0.0))), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((2.6), (vec3(- 8.8, - 0.9, 90.38).z)), bvec2(false, false)))), (vec2(injectionSwitch[0], injectionSwitch[1])))), (min(((mix(vec2((float(mat2x3((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], 1.0, 1.0, 0.0, 0.0, 0.0))), (((clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))[(max(1, 1))]), vec2((2.6), (vec3(- 8.8, - 0.9, 90.38).z)), bvec2(false, false)))), (vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)))) && true, false, false, true))))), false, true), false))), true))))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) && true)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if(((((((max(((injectionSwitch.x) + 0.0), injectionSwitch.x)) > (max(injectionSwitch.y, injectionSwitch.y)))) || false))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((false) || false)))
    barrier();
   barrier();
   if((! (! ((((injectionSwitch.x > injectionSwitch.y)) || ((bool((! (! (bool(bool(bvec4(((((false))) || false), true, true, true))))))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       if(((((false || (((false) || false)))) && ((injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((true && (false))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((((injectionSwitch.x > (mix(float((- 98.60)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((bool(bvec4(false, (! (! (false))), true, false)))) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if(((bool((bvec3(bvec3(bvec3(((((false ? (- 6.2) : ((injectionSwitch.x) + 0.0))) > injectionSwitch.y)), ((injectionSwitch.x > injectionSwitch.y)), false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > (float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), (dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))))))))
    barrier();
   barrier();
  }
 if(((true && (false))))
  barrier();
 if((false))
  barrier();
 if(((! ((bool(bvec3(! ((! (! (false)))), true, true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if(((! (! (false || ((false)))))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((bool(bvec4(((bool(bvec2(! (! (((((true && ((! (! (((injectionSwitch.x > injectionSwitch.y) && true))))))))))), true)))), false, true, ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)), true, true))))
    barrier();
   if((bool(((bvec2((bvec2((bvec2(bvec4(bvec2((bvec2(bvec4((bvec2(bvec4(bvec2(bvec2(bvec3((bvec2((bvec2(bvec3(bvec2(bvec2((false), false)), true))))), false))), false, false))), true, ((injectionSwitch.x < injectionSwitch.y)))))), false, true)))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((true && ((false)))) || false))
    barrier();
   barrier();
   if((bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    {
     if(((((false || ((true && (false))))) || ((injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false || ((false))))
  {
   if((((false) && true)))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((true && (((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(((bool(bvec3(false, true, false)))))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if(((true && ((! (! (bool(bvec2((false), true)))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((false) || ((injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((((bool(bvec4(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, false)), true, false, true))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 uint workgroup_id = ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 if((false))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((((false) || ((false) || false)) || false))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > (min((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((5.5), (vec4(871.918, 545.494, - 90.99, - 9.7).w)), bvec2(false, false))), injectionSwitch)).y))))
      {
       if((false))
        {
         if(((false || (false))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = (((((~ (~ ((((((uint(uvec2((~ (~ (workgroup_size))), 0u))) * ((0u ^ (uint(uvec2(workgroup_id, 1u)))))) - 0u)) >> (~ (~ (0u)))))))) / ((((((1u << (uint(6u)))) - 0u) >> (uint(6u))) << 0u)))) * 1u);
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2(false, true)))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((false)) || false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((bool(bvec4(false, true, false, false)))))
    barrier();
   barrier();
  }
 if((! (! (((! (! (false))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((((((injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
   if(((! (! (false)))))
    barrier();
  }
 uint virtual_gid = ((((true ? workgroup_base : (198407u)))) | 0u) + subgroup_id * ((subgroup_size) - 0u) + subgroup_local_id;
 if((false))
  barrier();
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
   if((((((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 if(((((mix(vec2((- 7.6), (- 6.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 if(((((clamp(((injectionSwitch.x) * 1.0), (mix(float(injectionSwitch.x), float((2.4)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch.y) / determinant(mat4(1.0, abs(1.0), 0.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), 0.0, 0.0, (dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false || ((((false) || false)))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if(((bool(bvec3(false, true, true)))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((- 3.6)), bool(false)))))))
      barrier();
     if((! ((! (! ((true && (! ((((injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((true && ((((mix(float(injectionSwitch.x), float((4.3)), bool(false))) > injectionSwitch.y))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! (((false || (bool(bool((true && (false))))))))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if((((false) && true)))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((! ((! (! (! ((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((((false) || (bool(bvec2(false, true))))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((false || (! (! (((false) || false))))))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if(((! (! (false)))))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((((false) || false)))
      barrier();
    }
   if((false))
    barrier();
  }
 if(((bool(bvec2(false, true)))))
  {
   if(((bool(bvec4((true && (false)), ((injectionSwitch.x < injectionSwitch.y)), true, false)))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if(((! (! (((false))))) && ((injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((false) || false)))
  barrier();
 if(((! (! (false)))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((! (! ((false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(((bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((false || ((false)))) || false))
    {
     if((false))
      barrier();
     if(((bool(bvec2(false, true)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if(((! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((! ((! (! (! ((((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(((bool(bool((false || ((! (! (false))))))))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((false || (false))))
      barrier();
     if((false || (((false || (false))))))
      barrier();
     if((false))
      barrier();
     if(((bool(bool(false)))))
      barrier();
     if(((false || ((((bool(bvec3(true, false, false)))) && true))) && ((false))))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > ((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (injectionSwitch))).y))))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if((false))
  {
   if(((bool(bool(false)))))
    barrier();
   barrier();
  }
 if(((((vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > (((min(injectionSwitch.y, (max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > (((float(float(injectionSwitch.y)))) + 0.0)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(((((! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if(((bool(bvec2(((bool((bvec3((bvec3(bvec3((bvec3(bvec3(bvec3(bvec3((((injectionSwitch.x > injectionSwitch.y)) || false), true, ((injectionSwitch.x < injectionSwitch.y))))))))))))))), false)))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 if(((bool(bvec4((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))), false, false, true)))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if(((bool(bool(false)))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 ((((buf[virtual_gid] = uint(subgroupAllEqual((0u | (read_val))))) >> 0u) << (3898u & 0u)));
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
