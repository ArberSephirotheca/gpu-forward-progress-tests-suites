#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((! (! (! (! ((! ((false || (! (((! ((bool(bvec3(((! ((bool(bool(((! (! ((! (! (bool((bool(bvec4(((bool((((mix(float((- 2522.1551)), float((clamp((vec2(injectionSwitch[0], injectionSwitch[1])).x, (vec2(injectionSwitch[0], injectionSwitch[1])).x, (clamp((vec2(injectionSwitch[0], injectionSwitch[1])).x, (vec2(injectionSwitch[0], injectionSwitch[1])).x, (vec2(injectionSwitch[0], injectionSwitch[1])).x))))), bool(true))) > injectionSwitch.y)))) || false), true, true, ((((injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))))))))))) || false), true, false))))))))))))))))))
  barrier();
 if(((false || (((false || ((! (! ((((bool(bvec2(bool(bvec2((! (! (false))), (((! (! (true)))) || false))), ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((bool((((bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(((bvec2(bvec4(((((bvec2(bvec2(bvec2(bvec4((bvec2(bvec2(bvec2(bvec3((bvec2(bvec4(bvec2(bvec3(bvec2(bvec3(bvec2((true && ((false))), false), false)), false)), false, true))), true))))), false, true)))))))), true, false)))), true))))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if((false))
  barrier();
 if(((((true && ((false || ((bool(bool(((injectionSwitch.x > injectionSwitch.y)) || false)))))))))))
  barrier();
 if(((! (! ((bool(bool((! (((bool(bvec2((bool(bvec3(false, true, ((injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y))))) || (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  barrier();
 if((false))
  return;
 if((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 uint num_workgroup = (max((uint(uint(gl_NumWorkGroups.x))), gl_NumWorkGroups.x));
 if((false))
  {
   if(((((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((53.47), (- 9915.3011)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   if(((((bool((! ((! (! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if(((((false || ((! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(((((max(injectionSwitch.x, injectionSwitch.x)) > ((((clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))))) / 1.0)))))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if(((bool((true && (bool(false)))))))
    barrier();
  }
 if((false))
  return;
 if((false))
  return;
 uint workgroup_size = ((((injectionSwitch.x > (clamp(injectionSwitch.y, ((false ? (- 94.19) : injectionSwitch.y)), injectionSwitch.y)))) ? ((max(write_val, write_val))) : ((uint(uint((((true ? ((true ? (uvec3(0u, 0u, 0u) ^ ((clamp(((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)))).x : (((write_val) - 0u)))) | 0u : (packSnorm4x8(vec4(- 4.1, - 49.32, 1.3, - 9423.9059))))))))))));
 if((false))
  barrier();
 uint workgroup_id = (uvec3(gl_WorkGroupID[((~ (~ (((~ (~ (0))) * 1)))))], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if((((false || ((false)))) || false))
  barrier();
 uint workgroup_base = ((workgroup_size) >> 0u) * workgroup_id;
 if(((! (! (false)))))
  barrier();
 if((! (((((! (! ((! (! ((! ((((bool(bool(((injectionSwitch.x < injectionSwitch.y)) && (false)))))))) && true))))))) || ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + (~ (((~ (subgroup_id)) + (0u ^ (0u))))) * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(((((virtual_gid)) | 0u) | (virtual_gid))), 4, 64, 0);
 uint read_val = atomicLoad(((write_val) + 0u), 4, (0 ^ (64)), ((((false) && true) ? ((- 73848 >> 92778)) : ((((0 ^ (0 + (0))))) | (0)))));
 if(((((bool(bvec4((bool(bvec4((false || ((bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false, ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if(((bool(bvec2((((bool(bvec4(false, false, false, true)))) || false), ((injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual((((((min(((clamp((uint(uint((min((((((read_val) | (read_val)) | (~ (~ ((0u & 11767u))))))), (((((read_val) | (read_val)) | (0u & 11767u))))))))) - 0u, (uint(uint((min((((((read_val) | (read_val)) | (~ (~ ((0u & 11767u))))))), (((((read_val) | (read_val)) | (0u & 11767u))))))))) - 0u, (uint(uint((min((((((read_val) | (read_val)) | (~ (~ ((0u & 11767u))))))), (((((read_val) | (read_val)) | (0u & 11767u))))))))) - 0u))), ((uint(uint((min((((((read_val) | (read_val)) | (0u & 11767u)))), (((((read_val) | (read_val)) | (((0u) + 0u) & 11767u))))))))) - 0u)))) | (((uint(uint((((((clamp((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? (0u ^ ((min((((((read_val) | (read_val)) | (0u & 11767u)))), (((((read_val) | (read_val)) | (0u & 11767u)))))))) : (workgroup_base)))))) - 0u))) + (0u | 0u)))));
 if(((bool(bvec2(false, false)))))
  return;
 if(((! (((! (false)) && true)))))
  return;
 if((false))
  barrier();
 if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    barrier();
  }
 if((bool(bvec4((false), false, false, true))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((true && (false))) && true)))
  {
   if((((((injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((bool(bool((true && ((false)))))))
  {
   if(((! (! ((! (! ((bool(bool((! (! ((false || (false))))))))))))))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
   if((false))
    barrier();
  }
}
