#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   if(((! (! ((true && (false)))))))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(((((! (! (injectionSwitch.x > (clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    {
     if(((bool(bvec4(false, true, false, true)))))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if((false))
    barrier();
   if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    {
     if((! ((bool(bvec2(! ((false)), false))))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      barrier();
     return;
     if(((! (! (bool(bvec4((((injectionSwitch.x > (mix(float(injectionSwitch.y), float((912.644)), bool(false)))))), true, false, false)))))))
      return;
    }
   if((false))
    {
     if(((((mix(vec2((injectionSwitch)[0], (- 200.886)), vec2((7217.2795), (injectionSwitch)[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((((false)) || false)) && true))
      return;
    }
   if((((injectionSwitch.x > (((false ? (injectionSwitch) : vec2((clamp(injectionSwitch[0], injectionSwitch[(clamp(0, (0 ^ (0)), 0))], injectionSwitch[0])), injectionSwitch[1])))).y))))
    {
     if((false))
      {
       if((false))
        return;
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if(((((((clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    return;
   barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((false || ((((injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if((false))
      return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(((bool(bvec2((bool((bvec2(bvec4(bvec2((false || (false)), false), true, false))))), false)))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    return;
   return;
  }
 if(((bool(bvec3((! (! ((! ((((injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), false, false)))))
  barrier();
 if((((injectionSwitch.x > (vec2(0.0, 0.0) + (injectionSwitch)).y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((false))
    return;
   if((false))
    barrier();
   return;
  }
 if(((bool(bool(false)))))
  {
   if((((((true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > (clamp(injectionSwitch, ((false ? (vec2(((- 14.88) / 1.0), 9.3)) : injectionSwitch)), injectionSwitch)).y))))
      return;
     return;
     if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     return;
    }
   if(((! (! ((bool((bool(bvec2(bool((true && (false))), false))))))))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if((false))
        barrier();
       if(((((1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((false))
    barrier();
   if((bool(bvec2((bool(bvec2((false), false))), true))))
    barrier();
   if((false))
    return;
   barrier();
   if((bool((true && (bool((((false || ((true && ((((injectionSwitch.x > injectionSwitch.y)))))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    {
     if((! ((((true && (! ((((true && ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false))))
      return;
     return;
     if((false))
      barrier();
    }
   if((false))
    return;
   barrier();
  }
 if((bool(bvec2((((false)) && true), false))))
  {
   if((false))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if((bool(bool((((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(((! (! (false)))))
    barrier();
   return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if(((((clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    barrier();
   barrier();
  }
 if((! (! (((! (! (false))))))))
  return;
 if((false))
  return;
 if((false))
  {
   if(((false || (false))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((((injectionSwitch.x > ((((mix(vec2(((injectionSwitch) * mat2(1.0))[0], (572.366)), vec2((- 8456.0453), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y) / 1.0)))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y)) || (((((max((mix(float(injectionSwitch.x), float((6.7)), bool(((injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(((((false || ((false || ((float(((vec4(injectionSwitch.x, 0.0, 1.0, exp((injectionSwitch.x)))) * mat4((injectionSwitch.y))))) > injectionSwitch.y))))))))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     if((false))
      barrier();
     return;
    }
   return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if((false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   return;
   if((false))
    return;
   if((false))
    return;
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((false || (false))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((false))
      return;
     if((((false)) || false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((injectionSwitch.x > ((injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if(((true && (false))))
      barrier();
     if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      barrier();
     return;
    }
   if((bool(bvec3((false), false, false))))
    {
     if(((! (! (false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(((((mix(vec2((- 6.4), (949.017)), vec2((((injectionSwitch) - vec2(0.0, 0.0)))[0], (((injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(((injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > ((true ? ((true ? injectionSwitch.y : (500.664))) : (9.1)))))))
        return;
       return;
      }
     if((false))
      {
       if((((bool(bvec2((! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))
        {
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          barrier();
         return;
        }
       barrier();
       if(((((bool(bvec2((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)))))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         if((false))
          return;
         barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          {
           if(((! (! (((false || (! (! (false))))))))))
            barrier();
           barrier();
          }
        }
      }
     barrier();
     if((false))
      {
       if((false))
        return;
       barrier();
      }
    }
   if(((! (! ((! (! (false))))))))
    barrier();
   if(((! (! (false)))))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  return;
 if(((true && (bool(bvec3((false), true, true))))))
  {
   if((((((vec2(vec4(((vec2(injectionSwitch[0], injectionSwitch[1]))), (dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, cos(0.0)))), 1.0))) + (max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false) && true)))
    barrier();
   return;
   if((false))
    return;
  }
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  return;
 if(((bool(bvec4(false, false, false, false)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > (clamp((max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((((injectionSwitch.x > ((injectionSwitch) / exp(abs(vec2(0.0, 0.0)))).y))))
      barrier();
     return;
    }
   barrier();
  }
 if((((false || (((bool((bvec3(bvec4(bvec3(true && ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))), false, true), false))))) && true))))))
  return;
 if((false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  barrier();
 if((false))
  {
   if((false))
    {
     if((((! (! ((! (((true && ((! ((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))) || false)))))))))))
      {
       if((false))
        return;
       return;
      }
     if((false))
      return;
     barrier();
    }
   if(((true && ((! (! ((false || ((((((bool(bvec3(bool(bvec4((false), true, ((false || (bool(bvec2(true, false))))), false)), true, true))) || false))) || false))))))))))
    barrier();
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > (max(((false ? (38.59) : (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y)), (max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((((((injectionSwitch.x > injectionSwitch.y)))) && true))
        return;
       if((false))
        barrier();
       if((false))
        barrier();
       return;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if(((bool(bvec4(false, true, false, false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     return;
     if((((false || ((false)))) || false))
      return;
     if(((((clamp(injectionSwitch, (vec2(mat2x3(injectionSwitch, 1.0, determinant(((false ? (mat3(225.927, - 2.6, 0.7, - 245.910, 76.81, - 5.8, 6578.8147, 200.608, 3639.7166)) : mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), (1.0 * (sqrt(1.0))), length(vec2(0.0, 0.0))))), ((((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))))).x > injectionSwitch.y))))
      return;
    }
   if(((bool((bvec2(bvec3((bvec2(bvec4(bvec2(((injectionSwitch.x > (min(injectionSwitch.y, ((injectionSwitch.y) + 0.0))))), true), false, true))), false)))))))
    {
     if((false))
      barrier();
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          {
           if((false))
            return;
           return;
          }
         return;
         if(((bool((bvec2(bvec2((bvec2(bvec4(bvec2((! (! (false))), false), ((injectionSwitch.x < injectionSwitch.y)), true))))))))))
          return;
        }
       if((false))
        barrier();
       return;
      }
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > (min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > (float((max(float(injectionSwitch.y), float(injectionSwitch.y)))))))))
        return;
      }
     return;
     if((false || ((false))))
      barrier();
     if((false))
      return;
     if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if((false))
      return;
    }
   if((false))
    return;
   if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if((false))
    barrier();
   if(((true && (((((injectionSwitch.x > (max(injectionSwitch, injectionSwitch)).y)))) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(((true && (false))))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      return;
     if((false))
      barrier();
    }
   if(((! (! (((! (((! (false || (((((bool(bvec2((false), true)))) && true)) && true))) || false)))))))))
    {
     if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if((false))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if(((bool(bvec4((bool(bvec2((false || (false)), false))), false, true, false)))))
        return;
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if((false))
      barrier();
     if(((bool(bool((((true && (false))) || false))))))
      return;
    }
   if((false))
    barrier();
   if((false))
    {
     if(((((true && ((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      return;
     return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((false))
  return;
 if((false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(((! (! (bool(bvec3((bool(bvec4((false), true, (false || (true)), false))), true, true)))))))
  {
   if((false))
    barrier();
   if((false))
    {
     if(((true && (((false) && true)))))
      barrier();
     return;
    }
   if((false))
    barrier();
   if(((((bool((false || ((bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
    }
   if(((((((bool(bvec2((((! (! (((max(vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, length(0.0))))), vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), log(1.0), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, length(0.0)))))))).x > (clamp((min(injectionSwitch, injectionSwitch)).y, (min(injectionSwitch, injectionSwitch)).y, (min(injectionSwitch, injectionSwitch)).y)))))) && true), false))) && true))))))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y)) || (((false || (! ((! (! (! ((false))))))))))) && true) || false))))
      {
       if((false))
        {
         if((! (! ((((false)) || false)))))
          return;
         barrier();
        }
       return;
      }
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      {
       if((false))
        {
         if(((! (! ((true && ((((((mix(vec2((3256.7928), (749.409)), vec2((injectionSwitch)[0], (mix(float((injectionSwitch)[1]), float((- 7.8)), bool(false)))), bvec2(((injectionSwitch.x < injectionSwitch.y)), true)))) + vec2((injectionSwitch.x), (injectionSwitch.x))).x > injectionSwitch.y)))))))))
          barrier();
         return;
        }
       barrier();
      }
     if((((false)) || false))
      return;
     return;
    }
   if((((! (! (bool((((injectionSwitch.x > injectionSwitch.y)) || (bool(((! (((! (((false || (bool(bvec3((false), false, true)))) && true)))) && true)))))))))))))
    {
     if((false))
      return;
     if(((! (! ((bool(bvec4(false, false, true, (((! (! ((((mat2(1.0) * (injectionSwitch)).x) / 1.0) < injectionSwitch.y)))))))))))))
      barrier();
     if((false))
      barrier();
     return;
    }
   if((false))
    return;
   if((((false)) || ((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         barrier();
        }
       barrier();
      }
     if((((bool(bvec3((((injectionSwitch.x > injectionSwitch.y)) || false), true, false))))))
      return;
     barrier();
     if((false))
      return;
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if(((true && ((! (! (((true && ((((injectionSwitch.x > injectionSwitch.y))))) || false))))))))
    return;
   if(((false || ((false || (((false) && true)))))))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     if((((injectionSwitch.x > ((injectionSwitch) * mat2(1.0)).y))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((! (! (false)))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((false || (false))))
        {
         if((false))
          return;
         barrier();
        }
       if((bool(bvec2((false), ((injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       return;
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     if((false))
      barrier();
     if((false))
      return;
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if((false))
          barrier();
         if((((false) && true)))
          barrier();
         if((false))
          return;
        }
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if(((((bool(bool((false || (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
   if((((false) && true)))
    return;
   if((((false) && true)))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! ((! (((! (false)) || false))))))))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    return;
   if(((((bool(bvec2((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), (! (! (false))), true, true))), false))) && true))))
    barrier();
   if((false))
    {
     if(((! ((true && (! (false)))))))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((((bool((bvec2(bvec2(bvec2((((false)) && true), false))))))) && true))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(((! ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        {
         if((((false) && true)))
          barrier();
         if((false))
          {
           if((false))
            return;
           return;
          }
         return;
         if((false))
          barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((false)) || false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if((false))
          barrier();
        }
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       if((false))
        {
         if(((bool((bvec3(bvec3(bvec3(false, true, true))))))))
          return;
         if((false))
          return;
         if(((! (! (! ((true && (! (((bool(bvec3((((injectionSwitch.x < ((((max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)).y)) && (bool(bvec3((((((injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))), true, true)))))))))))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if((false))
          return;
         if((false))
          barrier();
        }
       return;
       if((((((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       if((false))
        barrier();
       if((false))
        return;
      }
     if((((false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > ((false ? (303.784) : injectionSwitch.y))))))
  return;
 if((false))
  {
   if(((((vec2(0.0, 0.0) + (((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    {
     if((((true && (((! ((((bool(bool(! ((false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(((bool(bvec2(false, false)))))
    barrier();
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(((bool(bool(((false) || false))))))
  {
   if(((! (((! (false)) || false)))))
    barrier();
   if((false))
    return;
   if((false))
    return;
   if((false))
    barrier();
   if((false))
    return;
   barrier();
   if((false))
    return;
   if((((((injectionSwitch.x > injectionSwitch.y) || ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        return;
       return;
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       if((false))
        return;
       barrier();
      }
     return;
    }
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > (max(injectionSwitch, (vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))).y))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if(((((((min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
    return;
  }
 if(((bool((((bvec2(bvec2(bvec2(bvec3(bvec2(bvec4((bvec2(bvec2((bvec2(bvec4(bvec2(((((false ? (7366.5311) : ((((clamp(max(injectionSwitch, (vec2(0.0, 0.0) + (injectionSwitch))), max(injectionSwitch, (vec2(0.0, 0.0) + (injectionSwitch))), max(injectionSwitch, (vec2(0.0, 0.0) + (injectionSwitch)))))).x) + 0.0))) > ((injectionSwitch.y) / 1.0))), false), false, (bool(bvec4(false, false, ((injectionSwitch.x < injectionSwitch.y)), false))))))))), false, false)), false)))))))))))
  {
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint virtual_gid = (min(workgroup_base, (min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 atomicStore(write_val, ((((uint(virtual_gid)) / 1u) * 1u)), 4, 64, (max(0, (((int(int((((((((((((min(((0) | 0), ((0) | 0)))) | (((0) | 0)))) ^ 0) | ((0) | 0))) - ((0) ^ 0)))) | ((((((((((min(((0) | 0), ((0) | 0)))) | (((0) | 0)))) ^ 0) | ((0) | 0))) - 0))))))) * ((1 << (int(4))) >> (int(4))))))));
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((bool(bvec2(false, false)))))
  {
   if((true && ((false || ((false))))))
    return;
   barrier();
  }
 if((((((true ? ((true ? (mix(vec2((3.5), (544.990)), vec2((injectionSwitch)[0], (max((min((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1], (injectionSwitch)[1]))), bvec2(true, true))) : (vec2(- 7610.4831, 9613.2263)))) : (((vec2(- 7.2, 7.0)) * mat2(1.0))))).x > injectionSwitch.y))))
  barrier();
 if((! ((bool(bvec4(! ((((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)), false, false))))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((vec2(0.0, ((0.0) - 0.0)) + (injectionSwitch)).x > ((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : (vec2(- 710.760, 829.245)))).y))))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   return;
  }
 if((false))
  barrier();
 if((false || ((bool(bvec3((! (! ((((((bool(bvec3(false || (false), false, false)))) || false)))))), false, false))))))
  barrier();
 if((((((bool(bool((((((true ? ((injectionSwitch) / (max(vec2(1.0, 1.0), vec2(1.0, 1.0)))) : (((((injectionSwitch)) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))) && true)))))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y)) || ((false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(((false || (false))))
      return;
     barrier();
    }
   return;
  }
 if((! (! (((bool((! (! ((! (((! (bool(false))) && true)))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  barrier();
 if(((false || (false))))
  {
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(((((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    return;
   if((false))
    {
     if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((((true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       return;
       if(((((bool((bool(bvec3(bool(false), false, false)))))) && true)))
        barrier();
       if((false))
        return;
      }
     barrier();
    }
   barrier();
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, ((((((4) ^ 0)) / ((1 << (int(5))) >> (int(5))))) - (0 | (0))), 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if((false))
  return;
}
