#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((bool(bvec3((true && ((((((injectionSwitch.x > (min((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))) && true))), true, true))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((float(mat4x3(((false ? (- 4.6) : (min(injectionSwitch, injectionSwitch)).x)), (mix(float((injectionSwitch.x)), float((0.4)), bool(false))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, (dot(vec2(0.0, 0.0), vec2(1.0, ((mix(vec2((injectionSwitch)[0], (8.4)), vec2((- 1.6), (injectionSwitch)[1]), bvec2(false, ((injectionSwitch.x < injectionSwitch.y))))).y)))), 1.0, determinant(mat3(determinant(mat2(1.0, (max(0.0, (1.0 * ((((max(0.0, 0.0)) - length(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0)), 1.0))) > injectionSwitch.y))))
  return;
 if((false))
  return;
 if(((! (! ((bool(bvec4(false, false, true, true))))))))
  {
   if((((! (false || (((true && (! ((false))))))))) && true))
    return;
   if(((((min(injectionSwitch.x, ((injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   return;
  }
 if(((false || (bool((bvec3(bvec4(bvec3((((((injectionSwitch.x > injectionSwitch.y) && true)))), false, false), true))))))))
  return;
 if((! (! ((false)))))
  return;
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       return;
      }
     return;
     if((false))
      return;
    }
   if((false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if((false))
    return;
   if((((bool(bvec2(((vec2((float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[1])).x > (min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), false))))))
    {
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((false))
      return;
     return;
    }
   return;
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if(((! (! ((bool((bvec2(bvec2(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))))))))
  return;
 if((false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = ((((clamp(((min((((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) << 0u) - (((0u & 15118u)) | 0u)), (~ (~ ((((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) << 0u) - (((0u & 15118u)) | 0u)))))))) + 0u, ((((clamp(gl_NumWorkGroups.x, (uvec3(0u, 0u, 0u) + ((~ (((~ ((((~ (~ ((clamp(gl_NumWorkGroups, (((uvec3((0u ^ (gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))))) + uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))).x, gl_NumWorkGroups.x))) - (0u & 15118u))) + 0u, ((((clamp((clamp(gl_NumWorkGroups.x, ((((injectionSwitch.x < injectionSwitch.y)) ? (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : (uvec3(26189u, 1390u, ((((83635u) - 0u)) | 0u))))).x, gl_NumWorkGroups.x)), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (((((max((uint(uvec3((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u, 1u))) | 0u, (uint(uvec3((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u, 1u))) | 0u))) | ((uint(uvec3((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u, 1u))) | 0u))))))) - (0u & 15118u))) + (clamp(0u, (0u | (0u)), (((max(0u, 0u))) | 0u))))) | (clamp(((min((((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) << 0u) - (((0u & 15118u)) | 0u)), (~ (~ (((((min(((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), ((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) - (0u & 34091u))))) << 0u) - (((0u & 15118u)) | 0u)))))))) + 0u, (((clamp(((clamp(gl_NumWorkGroups.x, (uvec3(0u, 0u, 0u) + (uvec3(uvec4(((~ ((min((min(((~ ((((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)), ((~ ((((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))), ((((~ ((((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))))))), 0u)))).x, gl_NumWorkGroups.x))), ((clamp(gl_NumWorkGroups.x, (((((uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))) + ((uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) + ((~ (((~ ((((clamp(gl_NumWorkGroups, gl_NumWorkGroups, ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))).x, gl_NumWorkGroups.x))), ((clamp(gl_NumWorkGroups.x, (uvec3(0u, 0u, 0u) + ((~ ((((((injectionSwitch.x > injectionSwitch.y)) ? (uvec3(28203u, 198191u, 152043u)) : (~ ((((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, (uint(((uint(1u)) - 0u))))))))).x, gl_NumWorkGroups.x))))) - (0u & 15118u))) + 0u, ((((clamp((clamp(gl_NumWorkGroups.x, ((((injectionSwitch.x < injectionSwitch.y)) ? (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : (uvec3(26189u, 1390u, 83635u)))).x, gl_NumWorkGroups.x)), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (((uint(uvec3((((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u, 1u))) | 0u))))) - (0u & 15118u))) + (clamp(((~ (~ (clamp(0u, (0u ^ ((0u | (0u)))), (((max(0u, 0u))) | 0u)))))), (max((clamp(0u, (0u | (0u)), (((max(0u, 0u))) | 0u))), (clamp(0u, (0u | (0u)), (((max(0u, 0u))) | 0u))))), (clamp(0u, (0u | (0u)), (((max(0u, 0u))) | 0u))))))))));
 if((false))
  return;
 if(((! (! (false)))))
  {
   if((false))
    return;
   if((false))
    return;
   if(((! (! ((true && (((injectionSwitch.x > ((max((false ? (vec2(- 3.6, 93.18)) : injectionSwitch), (false ? (vec2(- 3.6, 93.18)) : injectionSwitch)))).y)))))))))
    {
     if((false))
      return;
     if((false))
      return;
     if((false))
      return;
     return;
    }
   if((((injectionSwitch.x > (((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if((((bool(bvec3(bool(bvec4(false, (! (! (false))), false, false)), false, true))))))
    return;
   if((false))
    return;
   if((! (! (((((bool((((true && ((! (! (! (! (bool((bvec2(bvec4(bvec2((false || (! (! ((bool(((((0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > (((false ? ((mat2(- 0.9, (clamp(- 5899.1707, - 5899.1707, ((- 5899.1707) + (injectionSwitch.x)))), - 5465.0019, 1942.7915) - - 63.81)) : mat2(1.0))) * (injectionSwitch)).y) && (bool((bvec3(bvec3((bvec3(bvec4(bvec3(true, true, false), true))))))))))))))), true), true, true))))))))))))))))))))))
    return;
   if((false))
    return;
   return;
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec3(((((injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))), true, false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = ((~ (~ (uvec3(0u, 0u, ((0u) / 1u))))) + (gl_WorkGroupID)).x;
 if(((((mix(float(injectionSwitch.x), float((53.47)), bool(false))) > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  {
   if((false))
    return;
   return;
  }
 if(((bool(bvec2((bool(bvec4(false, false, false, false))), false)))))
  return;
 uint workgroup_base = ((workgroup_size) | (0u << (uint(4u)))) * workgroup_id;
 if((false))
  return;
 if((((false)) && true))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + ((true ? (~ (~ (subgroup_id))) : (subgroup_size))) * subgroup_size + subgroup_local_id;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 if((false))
  return;
 atomicStore(write_val, uint(((((virtual_gid) / 1u)) + 0u)), 4, 64, 0);
 if(((bool(bool(false)))))
  return;
 if((((! (! ((false) && true))))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, ((0) - 0));
 buf[virtual_gid] = (0u + ((((false ? (packUnorm2x16(vec2(- 7.7, 0.2))) : (((((((0u | ((uint(subgroupAllEqual(read_val))) ^ 0u)))) << (187146u & 0u))) * (1u * (1u)))) / 1u)))));
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
