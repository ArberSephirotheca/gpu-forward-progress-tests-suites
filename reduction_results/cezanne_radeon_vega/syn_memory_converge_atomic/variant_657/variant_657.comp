#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (((uvec3(uvec3((uvec3(gl_NumWorkGroups[0], (clamp((min(((((gl_NumWorkGroups[1]) | ((((true ? uint(uvec3(gl_NumWorkGroups[1], uint((injectionSwitch.x)), 0u)) : (subgroup_id))))))) | 0u), gl_NumWorkGroups[1])), gl_NumWorkGroups[1], ((gl_NumWorkGroups[(((clamp(((((1) >> 0)) >> 0), ((1) >> 0), ((1) >> 0)))) | (0 << (int(6))))]) | (gl_NumWorkGroups[1])))), ((gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)))[2]))))).x) >> 0u);
 uint workgroup_size = ((gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if((((((((((((false ? (vec2(87.09, - 350.789)) : injectionSwitch)).x > injectionSwitch.y))) || false)))) || ((injectionSwitch.x > injectionSwitch.y))) || false))
  barrier();
 if((! (! ((false)))))
  barrier();
 uint workgroup_base = ((workgroup_size) ^ 0u) * workgroup_id;
 if((false))
  barrier();
 uint virtual_gid = ((((((((max(max((0u + (workgroup_base + (~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id)), workgroup_base + ((subgroup_id * subgroup_size) >> uint(((clamp(injectionSwitch, injectionSwitch, ((true ? ((injectionSwitch) - vec2(0.0, 0.0)) : (vec2(- 5080.8579, - 9.5)))))).x))) + subgroup_local_id), max((0u + (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), workgroup_base + (clamp(subgroup_id * (((0u | 0u) + ((((subgroup_size) >> 0u)))) | (((clamp((0u >> (uint(((((((3u) | (3u)))) | ((((3u) | (3u))))) ^ 0u)))), (uint(uvec2((0u >> (uint(((((3u) | (3u))) ^ 0u)))), 1u))), (((0u >> (uint(((((3u) | (3u))) ^ 0u))))) - 0u))) >> 0u))), subgroup_id * (((0u | 0u) + ((((subgroup_size) >> 0u)))) | (((clamp((0u >> (uint(((((3u) | (3u))) ^ 0u)))), (uint(uvec2((((0u >> (uint(((((3u) | (3u))) ^ 0u)))) | (0u >> (uint(((((3u) | (3u))) ^ 0u)))))), 1u))), (0u >> (uint(((((3u) | (3u))) ^ 0u)))))) >> 0u))), subgroup_id * (((0u | 0u) + ((((subgroup_size) >> 0u)))) | (((clamp((0u >> (uint(((((3u) | (0u ^ ((3u))))) ^ 0u)))), (uint(uvec2((0u >> (uint(((((3u) | (3u))) ^ 0u)))), 1u))), (0u >> (uint(((((3u) | (3u))) ^ 0u)))))) >> 0u))))) + subgroup_local_id))) ^ (0u >> (uint(6u))))) + 0u) << 0u))));
 atomicStore(write_val, (0u ^ (uint(virtual_gid))), 4, ((((min(int(ivec3((~ (~ ((((int(int(((int((~ (((~ ((ivec4(0, 0, 0, 0) | (((ivec4(clamp(64, 64, 64), 1, 0, 1)) | (ivec4(clamp(64, 64, 64), 1, 0, 1))))))) ^ ivec4(0, 0, 0, 0)))))))))))) >> (((clamp(0, 0, 0))) - 0)))), 0, 1)), int(ivec3((~ (~ ((((int(int(((int((~ (((~ ((ivec4(0, 0, 0, 0) | (((ivec4(clamp(64, 64, 64), 1, 0, 1)) | (ivec4(clamp(64, 64, 64), 1, 0, 1))))))) ^ ivec4(0, 0, 0, 0)))))))))))) >> (((clamp(0, 0, 0))) - 0)))), 0, 1)))))) | (((max((~ (~ ((((((~ (~ ((64))))) | ((~ (~ ((64))))))) - 0)))), (64)))) | ((max((~ (~ ((((((~ (~ ((64))))) | ((~ (~ ((64))))))) - 0)))), (64)))))), 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = (0u + (((uint(subgroupAllEqual(read_val))) >> 0u)));
}
