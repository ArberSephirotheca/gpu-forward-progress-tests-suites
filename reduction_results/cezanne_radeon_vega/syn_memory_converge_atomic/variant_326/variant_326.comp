#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if((((((! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if((((clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))
  {
   if((false))
    barrier();
   if(((false) && true))
    {
     if((bool(bvec2(false, false))))
      {
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      barrier();
    }
   else
    {
     if(true)
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if((false || (true)))
      {
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((false))
            barrier();
           if((true && ((((((((bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false)) && true)))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _injected_loop_counter != (max(1, ((false ? (_injected_loop_counter) : 1)))); _injected_loop_counter ++)
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                }
               if((bool((bvec3(bvec3((bvec3(bvec3(bvec3(((false) && true), true, true))))))))))
                {
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                }
               else
                {
                 if((false))
                  {
                   if(((((false ? (- 3.8) : ((((injectionSwitch.x) / 1.0)) + 0.0))) < injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if((false))
                      barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if((false))
                    barrier();
                  }
                 if((((injectionSwitch.x > ((min(vec2((mat2x4(mat3x4(mat2x4(injectionSwitch, 0.0, 1.0, (dot(vec3(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0))))), vec2((mat2x4(mat3x4(mat2x4(injectionSwitch, 0.0, 1.0, (dot(vec3(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0)))))))).y))))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                  }
                 for(int _injected_loop_counter = (0 | 0); (false || ((false || ((min(((_injected_loop_counter) / 1), _injected_loop_counter)) != 1)))); _injected_loop_counter ++)
                  {
                   if(((! (! (false)))))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = (0 >> (int((0 ^ (6))))); (! (! (_injected_loop_counter != 1))); _injected_loop_counter ++)
                  {
                   if(true)
                    {
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                      {
                       if((((((bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                             if((false))
                              barrier();
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               if((false))
                                barrier();
                               do
                                {
                                 if(((((max(float(mat3x4(((min(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0))))), tan(0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0))), (injectionSwitch.y), 1.0, 1.0)), float(mat3x4(((min(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0))))), tan(0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0))), (injectionSwitch.y), 1.0, 1.0))))) > injectionSwitch.y)))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((((((((min(((((clamp(injectionSwitch.x, injectionSwitch.x, (float(vec3((min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0))))) < injectionSwitch.y)) ? injectionSwitch.x : (595.657)), ((((clamp(injectionSwitch.x, injectionSwitch.x, (float(vec3((min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0))))) < injectionSwitch.y)) ? injectionSwitch.x : (595.657)))))) - 0.0) > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
                                    barrier();
                                   barrier();
                                   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != (0 >> (int(4))); _injected_loop_counter --)
                                    {
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        barrier();
                                       if((false))
                                        barrier();
                                       if((false))
                                        {
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         barrier();
                                        }
                                       if((false))
                                        barrier();
                                      }
                                     if((false))
                                      barrier();
                                    }
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 ^ 0); _injected_loop_counter --)
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                  }
                                 if((false))
                                  barrier();
                                }
                               while(false);
                              }
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   else
                    {
                     if((((! (! (bool((bvec2(bvec2(bvec2(false, true)))))))))))
                      {
                       if((false))
                        barrier();
                       barrier();
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if((false))
                  barrier();
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                 do
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((((! (! ((bool(bvec4(false, false, true, false))))))) || false)))
                      barrier();
                     if((bool(bvec2((false), true))))
                      barrier();
                     barrier();
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     for(int _injected_loop_counter = (0 << (((int(4)) | (int(4))))); _injected_loop_counter < ((1 << (((((int(2))) | ((int(2))))) | 0)) >> (int(2))); ((true ? _injected_loop_counter ++ : (_injected_loop_counter))))
                      {
                       barrier();
                      }
                    }
                   do
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(true)
                      {
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   while(false);
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((((false) && true)))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((false))
                            barrier();
                           barrier();
                          }
                         barrier();
                         if((false))
                          {
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         do
                          {
                           if((((false) || false)))
                            {
                             if((false))
                              barrier();
                             barrier();
                            }
                           if((((true && ((((bool(bvec4(bool(bvec4((! (! (false))), false, (bool(bvec4((false || (true)), ((injectionSwitch.x > injectionSwitch.y)), true, true))), false)), false, true, true))))) && (! (! (true))))))))
                            barrier();
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                       while(false);
                       if((false))
                        barrier();
                      }
                     barrier();
                     if((false))
                      barrier();
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                 if((false))
                  barrier();
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     do
                      {
                       if((true && (true)))
                        {
                         barrier();
                         if((false))
                          barrier();
                         if(((((true && (injectionSwitch.x > injectionSwitch.y))))))
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              barrier();
                             for(int _injected_loop_counter = 1; ((_injected_loop_counter) / 1) != 0; _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           if((false))
                            barrier();
                          }
                        }
                       else
                        {
                         do
                          {
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            {
                             if((false))
                              barrier();
                             if(false)
                              {
                              }
                             else
                              {
                               barrier();
                               if((false))
                                barrier();
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 for(int _injected_loop_counter = (0 >> (((int(0)) | (int(0))))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((false))
                      barrier();
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((false))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if((false))
                barrier();
               do
                {
                 if((false))
                  barrier();
                 if((((((bool(bvec2((((bool(bvec4(((vec2(injectionSwitch[0], (max(((true ? injectionSwitch[1] : (946.333))), (clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y) || false, true, true, ((injectionSwitch.x > injectionSwitch.y))))))) || false, (((clamp((min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))))
                  {
                   do
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = ((1 << ((~ (~ ((0 | (int(6)))))))) >> (((false ? (- 96853) : int(6))))); _injected_loop_counter > 0; _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if((false))
                      barrier();
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    {
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       if((false))
                        barrier();
                      }
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if(((! (! (false)))))
                              barrier();
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                            }
                           while(false);
                           if(((! (! ((! (! (false))))))))
                            barrier();
                           for(int _injected_loop_counter = (0 >> ((false ? (_injected_loop_counter) : (int(6))))); _injected_loop_counter != ((1 << (int(5))) >> (int(5))); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        barrier();
                      }
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                     if(((! (! (false)))))
                      barrier();
                     barrier();
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if((false))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(false);
                      }
                     while(false);
                     if((false))
                      barrier();
                    }
                   if((false))
                    {
                     for(int _injected_loop_counter = (0 >> (int(4))); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       if(true)
                        {
                         do
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = (1 ^ 1); ((((((bool(bvec2(true, true))) ? 0 | (_injected_loop_counter) : (89904))))) >> 0) < (((clamp((min((((((1 ^ 0) - 0)) << (int(4))) / (0 ^ 1)), (((((1 ^ 0) - 0)) << (int(4))) / (0 ^ 1)))), (((((1 ^ 0) - 0)) << (int(4))) / (0 ^ 1)), (((((1 ^ 0) - 0)) << (int(4))) / (0 ^ 1))))) >> (min((int(4)), (int((int((ivec4(0, 0, 0, 0) ^ (ivec4(4, 1, 0, 1)))))))))); ((((_injected_loop_counter ++) >> 0)) ^ int(((clamp((min(injectionSwitch.x, ((false ? (- 279.763) : ((injectionSwitch.x) * 1.0))))), ((false ? (asinh(- 82.63)) : (min(injectionSwitch.x, injectionSwitch.x)))), (min((clamp((vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, ((injectionSwitch) - vec2(0.0, 0.0)))).x, injectionSwitch.x))))))))
                            {
                             if(((((injectionSwitch.x < injectionSwitch.y))) && true))
                              {
                               if((false))
                                barrier();
                               barrier();
                               if((! (! (false))))
                                {
                                }
                               else
                                {
                                 if(((injectionSwitch.x > injectionSwitch.y)))
                                  {
                                   if((false))
                                    barrier();
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                }
                              }
                             else
                              {
                               if((((false) || false)))
                                barrier();
                              }
                            }
                          }
                         while(false);
                        }
                       else
                        {
                        }
                      }
                    }
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > (mix(float((vec3(582.093, ((8.3) * 1.0), 1.9).p)), float(injectionSwitch.y), ((true && (bool(bvec4(bool(((injectionSwitch.x < injectionSwitch.y))), false, true, true)))))))))))
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       barrier();
                       if((false))
                        barrier();
                      }
                    }
                   if(true)
                    {
                     if((false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(false);
                    }
                   else
                    {
                    }
                   do
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < (int(ivec4(((1) | 0), 0, 0, 0))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   while(false);
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((((! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
                      barrier();
                     if(((true && (false))))
                      barrier();
                     if(((! (! (false)))))
                      barrier();
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if((false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     if((false))
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     do
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while((((vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)));
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(false);
                      }
                    }
                  }
                }
               while(false);
               if((false))
                barrier();
               if((false))
                barrier();
              }
             if((false))
              barrier();
             if((((false || (bool(bvec2(false, false)))))))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((! (! (true))))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
            }
           else
            {
             if((false))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                barrier();
               for(int _injected_loop_counter = (int((injectionSwitch.x)) | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 barrier();
                 if((false))
                  barrier();
                }
               if((false))
                barrier();
              }
             if((false))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if((false))
        barrier();
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if(((! (! (false)))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(((((mix(float(injectionSwitch.x), float(((996.824 + - 77.81))), bool(false))) > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((! (! (((((injectionSwitch.x > injectionSwitch.y))) || false)))))
              {
               if((false))
                barrier();
               if((false))
                {
                 if((false))
                  barrier();
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               do
                {
                 if((false))
                  barrier();
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((false))
                  barrier();
                 do
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 while(false);
                }
              }
            }
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
              barrier();
            }
           barrier();
           if((false))
            barrier();
           if((false))
            barrier();
          }
        }
      }
     else
      {
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
    }
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      barrier();
    }
   if((false))
    barrier();
  }
 else
  {
   if((false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(false)
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if(true)
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(true)
          {
           for(int _injected_loop_counter = (0 | (0)); _injected_loop_counter != (clamp(int((((injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))))), int((((injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))))), int((((injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         else
          {
          }
         if(((true && (false))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((false) || false)))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 do
  {
   if(((true && (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(false);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 uint workgroup_size = (0u | (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  {
   do
    {
     barrier();
    }
   while(false);
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     barrier();
    }
   if((false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 | 1); _injected_loop_counter != 0; _injected_loop_counter --)
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
  }
 do
  {
   atomicStore(write_val, uint(((((virtual_gid) | (virtual_gid))) - 0u)), 4, 64, 0);
   if((false))
    barrier();
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && ((! (! (false)))))))
  barrier();
 if((false))
  barrier();
 uint read_val = atomicLoad(write_val, (((int(ivec3(4, 0, 0))) - 0)), 64, 0);
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(false);
    }
   barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
  {
   if((((((((injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
    {
     do
      {
       barrier();
      }
     while(false);
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(true)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         do
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
       if((false))
        barrier();
       do
        {
         for(int _injected_loop_counter = ((false ? (_injected_loop_counter) : 0)); _injected_loop_counter != 1; _injected_loop_counter ++)
          {
           if((false))
            {
             do
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(((true && (((false) || false)))))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                     if((false))
                      barrier();
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if((false))
                    barrier();
                  }
                }
               else
                {
                 if((false))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = ((1) | (1)); (0 ^ (_injected_loop_counter)) != 0; _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if((((((false) || false)) || false)))
                    barrier();
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((false))
                barrier();
              }
             while(false);
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       while(false);
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      barrier();
    }
   else
    {
     if((false))
      barrier();
    }
   do
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((false))
        {
         if((false))
          barrier();
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(((! (! (false)))))
            barrier();
          }
         if((false))
          barrier();
        }
      }
    }
   while(false);
  }
 for(int _injected_loop_counter = (0 << (((true ? int(1) : (- 48437))))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   do
    {
     if((false))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > (vec2(vec3((max(injectionSwitch, injectionSwitch)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).y))))
        barrier();
       barrier();
      }
    }
   while((true && (false)));
  }
 if((true && (false || ((true)))))
  {
   if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if((false))
    barrier();
   if((! ((true && (! (((! (! (((((((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))))))))))
    barrier();
   do
    {
     do
      {
       if((false))
        barrier();
      }
     while(false);
     if(true)
      {
       if((false))
        {
         if((((bool(bvec2((false || (false)), false))) || false)))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(((false || (false))))
              barrier();
             barrier();
            }
          }
         else
          {
           if((((((injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if((false))
              {
               for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if((false))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _injected_loop_counter != ((1 << (int(3))) >> (int(3))); _injected_loop_counter ++)
                {
                 if(((injectionSwitch.x < (vec2(mat2x4((vec2(vec3((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))), 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0))).y)))
                  {
                   if((false))
                    barrier();
                  }
                 else
                  {
                   if((false))
                    barrier();
                  }
                }
              }
            }
           while(((injectionSwitch.x > ((((injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : (degrees(763.165)))))));
           if((false))
            barrier();
           if((false))
            barrier();
          }
         if((((false)) || false))
          {
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
        }
      }
     else
      {
      }
     if((false))
      {
       do
        {
         barrier();
        }
       while(false);
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((((bool(bool(false)))) && true))
      {
       if((((injectionSwitch.x > (min(injectionSwitch, injectionSwitch)).y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 | (0 >> (int(0)))); _injected_loop_counter != ((1 << (int(0))) >> (int(0))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(((true && (false))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if(false)
        {
         if((false))
          barrier();
        }
       else
        {
         if(true)
          {
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(((bool(bvec2(((((false ? ((vec2(mat2(injectionSwitch, (injectionSwitch.x), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))) : ((((vec2(vec3((injectionSwitch) * mat2(1.0), 1.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), false)))))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if(false)
        {
        }
       else
        {
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
      }
     if((false))
      barrier();
    }
   while((! (! (false))));
   if((false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != (1 ^ 0); _injected_loop_counter ++)
  {
   if(false)
    {
    }
   else
    {
     if(false)
      {
       if((false))
        barrier();
       if((false))
        barrier();
      }
     else
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
           if((false))
            barrier();
          }
         while(false);
         for(int _injected_loop_counter = ((max(((true ? ((1 & 1) | (1 & 1)) : (- 55612))), 1 & 1))); _injected_loop_counter != 0; (0 ^ (_injected_loop_counter --)))
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if((false))
        barrier();
       for(int _injected_loop_counter = ((1 << ((int(int((clamp(int(3), int(3), int(3)))))))) >> (int(3))); _injected_loop_counter != 0; _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            barrier();
           barrier();
          }
        }
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(((true && (false))))
            barrier();
           barrier();
          }
        }
       if((((((max((min((clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), ((0.0 + (float(mat3((injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, (injectionSwitch.x)))))))) / 1.0, (mix(float((1825.6298)), float((injectionSwitch.x)), bool(true))) / 1.0))) > ((clamp((injectionSwitch) * mat2((injectionSwitch.y)), (injectionSwitch) * mat2((injectionSwitch.y)), (injectionSwitch) * mat2((injectionSwitch.y))))).y))))
        {
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           if((false))
            {
             if((((! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                 barrier();
                }
              }
             if((false))
              {
               if((false))
                barrier();
               if((false))
                barrier();
               for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                {
                 if((false))
                  {
                   if(true)
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((false))
                  barrier();
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if((false))
                  barrier();
                }
              }
             if((false))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(false)
          {
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           do
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((false))
              barrier();
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if((false))
                barrier();
              }
             else
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           while(false);
           if(((! (! (false)))))
            {
             if(((! (! (false)))))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(((injectionSwitch.x > injectionSwitch.y)))
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if((false))
                  barrier();
                 for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               barrier();
              }
            }
           if((false))
            barrier();
           if((bool(bvec4((false), true, ((bool(bool(bool(bool(((((injectionSwitch.x < injectionSwitch.y)) || false)))))))), ((injectionSwitch.x < injectionSwitch.y))))))
            barrier();
           if((false))
            barrier();
           if((false))
            {
             if(((! (((! (((false) || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))
              barrier();
             if((false))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if((((false) || false)))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(true)
              {
               if(((! (((! (true && (true))) || false)))))
                {
                 for(int _injected_loop_counter = ((1 << ((min((0 ^ (int(7))), int(7))))) >> (int(7))); _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   barrier();
                   if((false))
                    barrier();
                  }
                 if((false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
            }
           if((false))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
           do
            {
             if((false))
              barrier();
             do
              {
               if((false))
                barrier();
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if(true)
                  {
                   for(int _injected_loop_counter = (0 | 0); ((_injected_loop_counter < (1 & 1)) && true); _injected_loop_counter ++)
                    {
                     if((false))
                      {
                       if((false))
                        barrier();
                       if((false))
                        barrier();
                       do
                        {
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                         barrier();
                        }
                       while(false);
                       if((false))
                        {
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           barrier();
                           if((false))
                            barrier();
                          }
                         if((false))
                          barrier();
                         if((false))
                          barrier();
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if((false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(false);
             if(false)
              {
              }
             else
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((false))
                {
                 for(int _injected_loop_counter = ((0 & - 32209) ^ int((injectionSwitch.y))); _injected_loop_counter > 0; _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while((true && ((false || ((bool(bool(false))))))));
           if((false))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               do
                {
                 barrier();
                }
               while(false);
              }
             barrier();
            }
          }
         if(((bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))
          {
           if(((false || (false))))
            barrier();
           barrier();
          }
         if(false)
          {
          }
         else
          {
           if(((((injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; (bool(bvec4(_injected_loop_counter > (1 ^ 1), true, true, true))); _injected_loop_counter --)
                  {
                   if(((bool(bvec4((true), false, true, false))) && true))
                    {
                     if((false))
                      barrier();
                     do
                      {
                       if(((! ((bool(bvec2(! ((! (((! (! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))), true)))))))
                        {
                         if((false))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         if((false))
                          {
                           if((false))
                            barrier();
                           if((false))
                            barrier();
                           barrier();
                           if((false))
                            barrier();
                          }
                         if((bool(bool(((false || (false)))))))
                          {
                           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = (int(ivec4((int(int(1))), 0, ((1) | (1)), 0))); ((_injected_loop_counter) | (_injected_loop_counter)) > 0; _injected_loop_counter --)
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(6))); _injected_loop_counter --)
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                }
                               if((bool(((bvec3(bvec3(bvec3(bvec4((bvec3(bvec3(bvec3((((injectionSwitch.x > injectionSwitch.y))), false, false)))), true)))))))))
                                {
                                 if((false))
                                  barrier();
                                 if(false)
                                  {
                                  }
                                 else
                                  {
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  barrier();
                                 do
                                  {
                                   if((false || (false)))
                                    {
                                     do
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           barrier();
                                          }
                                         if((false))
                                          barrier();
                                        }
                                      }
                                     while(false);
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 while(false);
                                 if((false))
                                  barrier();
                                 if((false))
                                  barrier();
                                }
                              }
                             if((false))
                              barrier();
                            }
                           if(((injectionSwitch.x > injectionSwitch.y)))
                            {
                             if(false)
                              {
                              }
                             else
                              {
                               if((false))
                                barrier();
                              }
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(((bool(bvec3(false, ((((false) && true)) || ((injectionSwitch.x > injectionSwitch.y))), false)))))
                                barrier();
                               if((false))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               if((false))
                                barrier();
                               if((false))
                                barrier();
                               barrier();
                              }
                             if(((injectionSwitch.x < injectionSwitch.y)))
                              {
                               if(false)
                                {
                                 if((false))
                                  barrier();
                                }
                               else
                                {
                                 for(int _injected_loop_counter = ((1 << (((~ (~ (((clamp(int(5), int(5), int(5))) / 1))))))) >> (int(5))); _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
                                  {
                                   if(((((((((false || (((injectionSwitch.x) + 0.0) > injectionSwitch.y))) && true))) || false))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       barrier();
                                      }
                                     for(int _injected_loop_counter = ((1 << (int(6))) >> (int(6))); _injected_loop_counter > 0; _injected_loop_counter --)
                                      {
                                       if((false))
                                        barrier();
                                       do
                                        {
                                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                          {
                                           if((false))
                                            barrier();
                                           if((false))
                                            barrier();
                                          }
                                         if((false))
                                          {
                                           do
                                            {
                                             barrier();
                                            }
                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                          }
                                        }
                                       while((bool(((bvec2(bvec2(bvec2(bvec4((((bvec2((((bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), true, true)), false))), false)), true))))))))), false, false)))))))));
                                       barrier();
                                       if((false))
                                        barrier();
                                      }
                                    }
                                   if((false))
                                    barrier();
                                  }
                                 if((false))
                                  barrier();
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if((false))
                                    barrier();
                                   barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             if((false))
                              barrier();
                             if((false))
                              barrier();
                             for(int _injected_loop_counter = ((0) - 0); _injected_loop_counter != ((1 << (int(6))) >> (((true ? int(6) : (- 44264))))); _injected_loop_counter ++)
                              {
                               if((false))
                                {
                                 if(true)
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                   if(((false || (false))))
                                    barrier();
                                  }
                                }
                               if((false))
                                barrier();
                              }
                             if((false))
                              {
                               if((false))
                                barrier();
                               barrier();
                              }
                             if((((false) && true)))
                              {
                               if((false))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(false);
                                }
                               if(true)
                                {
                                 if(((((((((injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))) || ((injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                               if((false))
                                barrier();
                              }
                             if((false))
                              {
                               if((false))
                                barrier();
                               if(((false || (false))))
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                               barrier();
                               if((false))
                                barrier();
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(true)
                            {
                             if((false))
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  barrier();
                                 barrier();
                                }
                              }
                             if((false))
                              barrier();
                            }
                           else
                            {
                            }
                           barrier();
                           if((false))
                            barrier();
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     while((! (! (false))));
                    }
                   else
                    {
                     if((false))
                      barrier();
                     if((false))
                      barrier();
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while((((injectionSwitch.x > injectionSwitch.y)) || ((((min((max(injectionSwitch, injectionSwitch)).x, (((max(injectionSwitch, injectionSwitch)).x) - 0.0))) > injectionSwitch.y)))));
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if(false)
          {
           if((((false) || false)))
            barrier();
           do
            {
             if((false))
              barrier();
             if((false))
              {
               if((false))
                barrier();
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  barrier();
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while((true && (((false)) || false)));
          }
         else
          {
           if((false))
            barrier();
           if((false))
            barrier();
           barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(((bool((bvec2(bvec3((bvec2(bvec2((bvec2(bvec2((bvec2(bvec2(bvec2((((injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))))))), false)))))))
          {
           if((false))
            barrier();
           if(false)
            {
            }
           else
            {
             if((false))
              barrier();
             barrier();
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if((false))
        barrier();
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (((0 << (int(3)))) << 0); _injected_loop_counter --)
        {
         if((false))
          barrier();
        }
      }
     while(false);
     if((false))
      barrier();
     buf[virtual_gid] = uint(subgroupAllEqual(read_val));
     if(false)
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       do
        {
         if((false))
          barrier();
         do
          {
           if(((((max(injectionSwitch, (max(((injectionSwitch) - vec2(0.0, ((0.0) / sqrt(exp(0.0))))), injectionSwitch)))).x > injectionSwitch.y))))
            barrier();
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if((((((injectionSwitch.x) + 0.0) > injectionSwitch.y))))
            barrier();
           if((true && (true)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if((false))
              {
               if((! (! (false))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
             do
              {
               if((false))
                barrier();
              }
             while((! (! (false))));
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         while((((min(injectionSwitch.x, (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > (clamp((clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, ((true ? injectionSwitch.y : (9.7))))))));
         if((false))
          barrier();
         if((false))
          {
           do
            {
             if((false))
              barrier();
             barrier();
            }
           while(false);
          }
        }
       while((bool(bvec2(false, ((false || ((injectionSwitch.x > injectionSwitch.y))))))));
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
      }
     if(((bool(bool(false)))))
      barrier();
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       barrier();
       if((false))
        barrier();
       if(((! (! (false)))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(((injectionSwitch.x < ((((false) && true) ? (vec2(- 1221.6220, - 1.5)) : (vec2(injectionSwitch[0], injectionSwitch[1])))).y)))
  {
   if((false))
    barrier();
   if((false))
    barrier();
  }
 else
  {
  }
 if((((injectionSwitch.x < injectionSwitch.y)) && ((false))))
  barrier();
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
   if((false))
    barrier();
  }
 else
  {
   do
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
        {
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           barrier();
           if((false))
            barrier();
          }
        }
      }
     if(((! (! (false)))))
      {
       if(true)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       barrier();
       if((false))
        barrier();
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 do
  {
   if((((clamp((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))
    {
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
      {
       if((((false || ((((((((min(injectionSwitch, (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, (exp(0.0) * (0.0)), 1.0))))).x < ((true ? injectionSwitch.y : (43.21))))) && true))) && true)))) || false))
        {
         if((false))
          barrier();
         if(true)
          {
           if((false))
            {
             if((false))
              {
               if((false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
          }
         if((((bool(bvec2(((false) && true), true))) && true)))
          {
          }
         else
          {
           if((false))
            barrier();
           do
            {
             if(true)
              {
               if((false))
                barrier();
               if((false))
                barrier();
               if((false || ((false))))
                {
                 if((false || (true)))
                  {
                   if(((! (! ((! ((! (! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))))))
                    {
                     if(true)
                      {
                       barrier();
                       if((false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                   if((false))
                    {
                     if((false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if((false))
                  barrier();
                 if(((((! (! ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
                  barrier();
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((false))
                  barrier();
                }
              }
             else
              {
               if((false))
                {
                 if((false))
                  barrier();
                 barrier();
                }
               if((((((false) || false)) || false)))
                {
                 do
                  {
                   if(((bool(bvec4(false, true, false, false)))))
                    barrier();
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(false);
                 barrier();
                }
              }
            }
           while(((injectionSwitch.x > (clamp(((true ? injectionSwitch.y : (determinant(mat3(854.126, 6558.1724, 6.8, - 7.8, - 6.4, - 9.2, - 9528.2817, 4.8, 9.8))))), injectionSwitch.y, injectionSwitch.y)))));
           if((false))
            barrier();
          }
         if((false))
          barrier();
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            barrier();
           if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
            {
             if((false))
              barrier();
             barrier();
            }
           if((false))
            barrier();
          }
        }
       else
        {
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((false))
        barrier();
      }
    }
   else
    {
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
}
