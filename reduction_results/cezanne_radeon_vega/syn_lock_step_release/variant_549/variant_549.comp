#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  barrier();
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((((true && (((injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
  barrier();
 if((true && ((false))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((! (! ((true && ((bool(bvec3((((injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((injectionSwitch.x > (mix(float(((injectionSwitch.y) / 1.0)), float((989.088)), bool(false)))))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((((false)) && true))
    barrier();
  }
 if(((bool((! (! (bool((! (! ((! ((true && (! (false)))))))) || ((true && (((((min(injectionSwitch, injectionSwitch)).x > ((min((min(mix(float((2726.1492)), (mix((clamp(float((round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))))), float((round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))))), float((round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (min((float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))), (clamp((0.0 + ((float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))))), (float(mat2((float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))), 0.0, 1.0, 1.0))), (float((min(injectionSwitch.y, (((vec2((clamp((max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y) / cos(0.0)))))))))))))), float((4.2)), bool(false))), (! (! ((! (! (bool(true)))))))), mix(float(((mix(float(2726.1492), float((3.4)), bool(false))))), float((min(injectionSwitch.y, injectionSwitch.y))), bool(true)))), mix(float((2726.1492)), float((min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))))))))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if((false))
  barrier();
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((false))
  {
   if((((((true && ((! (! (bool(bvec3((true && ((((((false || (injectionSwitch.x > injectionSwitch.y))) && true)) || false))), ((injectionSwitch.x > injectionSwitch.y)), true))))))))))))
    {
     if((false))
      {
       if(((bool(bvec2((((injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(false, true, false))))), true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if(((bool(bvec4((true && (! ((false || (true && ((! (((((! ((! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false, true, false)))))
    {
     if(((((injectionSwitch.x > injectionSwitch.y)) || (((false) && true)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if(((bool(bvec4(((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false, true, true)))))
    barrier();
  }
 if((false))
  barrier();
 uint num_workgroup = (uint((injectionSwitch.x)) ^ (gl_NumWorkGroups.x));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((((injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((bool(bvec3((false), true, false))))
  barrier();
 if((((injectionSwitch.x > (min((vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((((! (! ((((injectionSwitch.x > (mat2(1.0) * (injectionSwitch)).y))))))) && true))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = ((workgroup_size) >> 0u) * ((workgroup_id) ^ 0u);
 if((false))
  {
   if(((false || (((false) || false)))))
    barrier();
   if(((((vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(((! (! (false)))))
    {
     if((((injectionSwitch.x > (max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if((false))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x < injectionSwitch.y)) && (((bool(bvec2((! (! (false))), true)))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if(((((((mix(float(injectionSwitch.x), float((- 8183.1297)), bool((true && (false))))) > injectionSwitch.y))) && true)))
  {
   if((((injectionSwitch.x < injectionSwitch.y)) && (! (! (((false)))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if(((((false || (((injectionSwitch.x > (1.0 * (injectionSwitch.y)))))))) || false))
  {
   if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if((false))
      barrier();
     if((((false || ((false)))) || false))
      barrier();
     barrier();
     if((((injectionSwitch.x > (vec2((min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
      barrier();
    }
   if((! (! (((! (! (false))))))))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((! (! ((false)))))
      barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 uint virtual_gid = ((((((workgroup_base + ((subgroup_id * subgroup_size) >> 0u))) ^ 0u)) << 0u) << (max((~ ((((((clamp((min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? ~ (0u) : (subgroup_size))))), (~ (((((injectionSwitch.x < injectionSwitch.y)) ? ~ (0u) : (subgroup_size)))))))) + subgroup_local_id;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  barrier();
 if((false))
  barrier();
 uint next_virtual_gid = ((((((~ (~ (((true ? ((((min(workgroup_base, workgroup_base))) / 1u)) / 1u : (workgroup_base))))))) | 0u)) | 0u)) + ((min(uint(uint((max(((~ (~ ((subgroup_id)))) ^ 0u), (~ (~ (subgroup_id))))))), uint(uint(subgroup_id))))) * subgroup_size + (((((min(((clamp(((0u ^ ((~ (~ (((subgroup_local_id + 1) % subgroup_size)))))) * 1u), (min(0u ^ (((subgroup_local_id + 1) % subgroup_size)), 0u ^ (((((subgroup_local_id + 1) % subgroup_size))) ^ (0u << (uint(3u)))))), (clamp(0u ^ (((subgroup_local_id + 1) % subgroup_size)), 0u ^ (((subgroup_local_id + 1) % subgroup_size)), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))))), (((max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) | ((min(((clamp(((clamp((0u ^ (((subgroup_local_id + 1) % subgroup_size))), (0u ^ (((subgroup_local_id + 1) % (max(subgroup_size, subgroup_size))))), (0u ^ (((subgroup_local_id + 1) % subgroup_size))))) * 1u), (min(0u ^ (((subgroup_local_id + 1) % subgroup_size)), 0u ^ (clamp((((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)), (((((subgroup_local_id + 1) % subgroup_size))) >> 0u))))), 0u ^ (0u | ((((subgroup_local_id + 1) % subgroup_size))))))), (((max(subgroup_local_id + 1, (max(subgroup_local_id + 1, (clamp(subgroup_local_id + 1, ((subgroup_local_id + 1) << 0u), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))) % (((0u ^ (((subgroup_size) - 0u)))) | (subgroup_size)))))))) | 0u);
 if((false))
  {
   if((false))
    barrier();
   if((((true && ((true && ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((((injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((! (! ((false)))))
    {
     if((false))
      barrier();
     barrier();
    }
   if(((! (! (((((false) && (((! (! (true)))) || (true && (false)))) && true)))))))
    barrier();
   if((((! (! (((! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false || ((false))))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(((bool(bvec4(false, true, false, false)))))
          barrier();
         barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((((injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if((false))
          barrier();
         if(((((max((clamp(injectionSwitch, (((vec2(mat2(injectionSwitch, 0.0, 1.0)))) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if((bool((bvec2(bvec4(bvec2((false), true), false, false))))))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
         if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         if((false))
          barrier();
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          barrier();
        }
       barrier();
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(((((((mix(vec2((- 257.287), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (- 85.02)), bvec2(true, ((injectionSwitch.x > injectionSwitch.y))))).x) * 1.0) > (max(injectionSwitch, injectionSwitch)).y))))
          barrier();
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((false))
        barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((false))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((false))
      barrier();
     if(((! (! (false)))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    {
     if((! (! ((((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((((((bool((bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))) && ((injectionSwitch.x < injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        barrier();
       if(((! (! ((bool(bool(false))))))))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((((injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(((((false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((bool(bool(false)))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((! ((bool(bvec2(! ((! (! (false)))), true)))))) || false)))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((((((false ? ((- 96.94)) : (1.0 * ((min(injectionSwitch.x, injectionSwitch.x))))))) / exp(0.0)) > injectionSwitch.y))))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(((false || (false))))
        barrier();
      }
     barrier();
    }
   if((false))
    barrier();
   if((false || ((false || ((((injectionSwitch.x < injectionSwitch.y)) && ((true && ((false))))))))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if(((((bool(bvec4((! (! (((injectionSwitch.x > injectionSwitch.y))))), true, true, (! (! (true))))))) || false)))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((false) && true)))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((((((injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if((false))
    barrier();
   if(((bool(bvec3(false, true, false)))))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (false)))))
  {
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    {
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if((false))
    barrier();
   if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(((true && (false))))
    barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if(((((mix(float(injectionSwitch.x), float((6.3)), bool(false))) > injectionSwitch.y))))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((((injectionSwitch.x > (min(((true ? injectionSwitch.y : (914.321))), injectionSwitch.y))))))
      barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  {
   if((((false) || false)))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((! (! ((((false)) || false)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((false)) || false))
      barrier();
     barrier();
    }
   if((false))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((bool(bvec3((false), true, false))))
    barrier();
   if(((false || (false))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if((false))
      {
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
    }
   if(((false || (((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   if((((false || (((true && (! (! (bool(bvec4(((injectionSwitch.x > ((mix(float((- 3.6)), float(float(mat2((float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, (dot(vec4(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0), vec4(((true ? (clamp(0.0, 0.0, 0.0)) : ((clamp(- 540.636, (clamp(- 540.636, - 540.636, - 540.636)), - 540.636))))), 1.0, (clamp(0.0, 0.0, 0.0)), 0.0)))))), bool(true)))))), false, false, false))))))))))))
    barrier();
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if((false))
  barrier();
 if(((! (! (false)))))
  barrier();
 if(((((float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, (max(1.0, (float(((mat2((float(float(1.0))), 1.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, (min(1.0, 1.0)), abs(0.0))), 0.0))) > injectionSwitch.y))))
  barrier();
 if(((true && (true && (((! (! (false)))))))))
  {
   if((false))
    barrier();
   if((! (! ((false)))))
    barrier();
   barrier();
  }
 if((((true && (bool(((bool((! ((((! (! (! (false)))))) || false)))) && (false || (true)))))))))
  {
   if((false))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((bool(bvec2(false, true)))))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > (clamp(injectionSwitch.y, (((mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y, injectionSwitch.y))))))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((false))
  barrier();
 if((false || (((((bool(bool((false || (false))))) || false))))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      {
       if((false))
        {
         if((false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
    }
   if((bool(bvec2((bool(bvec3((false), true, true))), false))))
    {
     if((false))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((((((true ? ((((injectionSwitch.x) * 1.0) * (dot(vec3(0.0, (((max(1.0, 1.0))) / 1.0), 0.0), vec3(0.0, 1.0, 0.0))))) : (8.9))) > ((false ? (6616.3156) : (max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if((((false)) && true))
      barrier();
     if((false))
      barrier();
     if(((((clamp(injectionSwitch, (min(injectionSwitch, injectionSwitch)), (clamp(((injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if((false))
        barrier();
       barrier();
      }
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((bool(bvec3((false || (((((min(((true ? injectionSwitch.x : ((false ? 2.2 : - 8.4)))), injectionSwitch.x)) > injectionSwitch.y))))), true, true))))
    {
     if((! (! ((bool(bvec4((false), true, true, false)))))))
      {
       if((false))
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if((false))
          barrier();
        }
       if((false))
        {
         if((false))
          barrier();
         if((false))
          barrier();
         if((false))
          barrier();
         barrier();
         if((false))
          barrier();
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((((((true ? injectionSwitch : (injectionSwitch))).x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if((false))
        barrier();
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if((false))
      {
       if((false))
        barrier();
       barrier();
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(((((min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if((false))
          barrier();
         barrier();
        }
       if(((! (! (false)))))
        barrier();
       if((false))
        barrier();
       barrier();
      }
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      {
       if((false))
        barrier();
       if((false))
        barrier();
       barrier();
      }
    }
   if(((! (! (false)))))
    {
     if((false))
      barrier();
     if((false))
      barrier();
     barrier();
     if((false))
      barrier();
     if(((((((! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
    }
   if((((injectionSwitch.x > ((injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if((false))
      barrier();
     barrier();
    }
   barrier();
   if((((((bool(bvec2(bool(bool(false)), true))))) || false)))
    {
     if(((((((bool(bvec3(bool(bvec2(true, true)), true, false)))) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((false))
        {
         if((false))
          {
           if((false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 atomicStore(buf[(min((uint(uvec2(next_virtual_gid, 1u))), (max(next_virtual_gid, (~ (~ (next_virtual_gid)))))))], ((true ? uint(2) : (workgroup_size))), 4, ((64) / 1), (0 ^ (4)));
 if(((true && (false))))
  barrier();
 if((((bool(bvec4((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)), false, false))))))
  barrier();
 if((false))
  barrier();
}
