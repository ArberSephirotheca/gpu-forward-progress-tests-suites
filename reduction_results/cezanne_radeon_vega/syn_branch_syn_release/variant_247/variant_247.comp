#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (((max(gl_NumWorkGroups, gl_NumWorkGroups)).x) << 0u);
 uint workgroup_size = ((gl_WorkGroupSize.x) << 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (0u ^ ((max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = (clamp((clamp(((((((clamp(((false ? (virtual_gid) : clamp(workgroup_base, (0u | (workgroup_base)), workgroup_base))), clamp(workgroup_base, (0u | (workgroup_base)), workgroup_base), clamp(workgroup_base, (((0u | (workgroup_base)) / 1u)), workgroup_base))) | 0u)))) | ((clamp(workgroup_base, ((workgroup_base) | (0u & 146485u)), workgroup_base)))), ((1u * (clamp(workgroup_base, workgroup_base, (((max(workgroup_base, ((workgroup_base) | ((~ (~ (((((0u ^ 0u) - 0u)) * 1u))))))))) | ((max(workgroup_base, (((((max(workgroup_base, workgroup_base))) | (workgroup_base))) | (((0u ^ 0u) - 0u))))))))))), (clamp(workgroup_base, workgroup_base, workgroup_base)))), (((clamp(workgroup_base, ((workgroup_base) | ((clamp(workgroup_base, workgroup_base, workgroup_base)))), workgroup_base)) - 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)))) + (((((clamp((uint(uvec2((clamp((max(subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), 0u))), (((uint(uvec2((clamp((max(subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), 0u)))) + 0u), (uint(uvec2((clamp((max(subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), subgroup_id * (max(subgroup_size, subgroup_size)), subgroup_id * (max(subgroup_size, subgroup_size)))), 0u))))) - 0u))) - 0u) + ((min(((min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) >> 0u), (~ (~ ((max((subgroup_local_id + 1), (subgroup_local_id + 1)))))))) % (clamp((uint((~ (~ (uvec3((((max(((clamp((min((false ? ((0u ^ (num_workgroup))) : ((true ? ((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) : (workgroup_base)))) >> uint((injectionSwitch.x)), (false ? ((0u ^ (num_workgroup))) : ((true ? ((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) : (workgroup_base)))) >> uint((injectionSwitch.x)))), (false ? ((0u ^ (num_workgroup))) : ((true ? ((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) : (workgroup_base)))) >> uint((injectionSwitch.x)), (false ? ((0u ^ (num_workgroup))) : ((true ? ((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) : (workgroup_base)))) >> uint((injectionSwitch.x))))), (((((clamp(((false ? ((0u ^ (num_workgroup))) : ((((((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) | 0u)) / 1u))) * 1u), false ? ((0u ^ (num_workgroup))) : ((((((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) | 0u)) / 1u)), false ? ((0u ^ (num_workgroup))) : ((((((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) | 0u)) / 1u))))) | (false ? ((0u ^ (num_workgroup))) : ((((((max(((0u ^ ((max(subgroup_size, subgroup_size)))) ^ 0u), 0u ^ ((max(subgroup_size, subgroup_size)))))) | 0u)) / 1u))))) + 0u))))), uint((injectionSwitch.y)), 1u)))))), subgroup_size, subgroup_size)));
 buf[virtual_gid] = 1;
 if((! (! ((min(subgroup_local_id + (((clamp(1, ((((1) << ((((true ? 0 : (86500)))) | 0))) | 0), 1))) >> 0), subgroup_local_id + (((clamp(1, ((~ (~ ((((((1) << (max(0, 0))))) | ((1 * ((((1) << (max(0, 0))))))))))) | 0), 1))) >> (min(0, ((0) | (0))))))) < subgroup_size))))
  {
   int i = (((false ? (((- 38740)) >> 0) : ((int(ivec2(0, 0))) >> 0))));
   atomicStore(buf[((next_virtual_gid) >> 0u)], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[(((~ (~ ((((true ? ((((~ (((~ (((min((next_virtual_gid), (1u * ((next_virtual_gid))))) + (((uint((uvec4(0u, 0u, 0u, 0u) ^ (uvec4((0u | ((0u << (uint(7u))))), uint((injectionSwitch.y)), 1u, 1u))))) / uint((injectionSwitch.y))))))) - 0u)))) | ((~ (((~ (((min((next_virtual_gid), (1u * ((next_virtual_gid))))) + (((uint((uvec4(0u, 0u, 0u, 0u) ^ (uvec4((0u | ((0u << (uint(7u))))), uint((injectionSwitch.y)), 1u, 1u))))) / uint((injectionSwitch.y))))))) - 0u)))))) : (workgroup_id)))) | (((((~ (((~ (((min((next_virtual_gid), (1u * ((next_virtual_gid))))) + (((uint((uvec4(0u, 0u, 0u, 0u) ^ (uvec4((0u | ((0u << (uint(7u))))), uint((injectionSwitch.y)), 1u, 1u))))) / uint((injectionSwitch.y))))))) - 0u)))) | ((~ (((~ (((min((next_virtual_gid), (1u * ((next_virtual_gid))))) + (((uint((uvec4(0u, 0u, 0u, 0u) ^ (uvec4((0u | ((0u << (uint(7u))))), uint((injectionSwitch.y)), 1u, 1u))))) / uint((injectionSwitch.y))))))) - 0u))))))))))) << 0u)], uint(2), 4, (int((max(int(((64) ^ 0)), int(((((64) ^ 0)) | (((64) ^ 0)))))))), ((4) / 1));
  }
}
