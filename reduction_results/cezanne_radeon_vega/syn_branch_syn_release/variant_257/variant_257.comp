#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    continue;
  }
 uint subgroup_id = gl_SubgroupID;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      return;
    }
   else
    {
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
         if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
          break;
        }
       while(false);
      }
    }
   return;
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
  {
   do
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((bool(bvec4(false, false, false, true)))))
        continue;
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
         if((false))
          break;
        }
       else
        {
         if((false))
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              break;
             if((false))
              break;
             break;
            }
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(false);
           if(((! (! (false)))))
            break;
           if((false))
            break;
           if(true)
            {
             if((false))
              break;
             if(true)
              {
               return;
              }
             else
              {
              }
            }
           else
            {
             if((false))
              break;
             if((false))
              continue;
            }
           if((false))
            break;
          }
        }
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         if((false))
          continue;
         return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(false);
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
  }
 if(true)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(false)
  {
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     if(false)
      {
      }
     else
      {
       return;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(false);
    }
   if(false)
    {
     if(false)
      {
      }
     else
      {
       if((false))
        {
         if((false))
          return;
         if(((injectionSwitch.x < injectionSwitch.y)))
          {
           return;
          }
         else
          {
          }
        }
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
         if((false))
          return;
        }
       while(false);
       if(true)
        {
         if((false))
          return;
        }
       else
        {
        }
       if((false))
        return;
      }
     if((false))
      return;
    }
   else
    {
     if((false))
      return;
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(false)
      {
      }
     else
      {
       if((false))
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((false))
              return;
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         if((false))
          {
           if((false))
            {
             if((false))
              return;
             return;
            }
           return;
          }
        }
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
        {
         do
          {
           if((false))
            {
             if((bool((bool(bvec2(bool(true), true))))))
              {
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   continue;
                  }
                 continue;
                 if((false))
                  break;
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   break;
                  }
                 break;
                }
               do
                {
                 for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << ((0 + (int(2))))); _injected_loop_counter --)
                  {
                   do
                    {
                     if((false))
                      break;
                     if((false))
                      return;
                     if((false))
                      return;
                     if(true)
                      {
                       if((false))
                        continue;
                       if(true)
                        {
                         return;
                         if((false))
                          {
                           if((false))
                            return;
                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             return;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         if((false))
                          break;
                         if(((injectionSwitch.x < injectionSwitch.y)))
                          {
                           if((false))
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               return;
                              }
                             if((false))
                              continue;
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      {
                       if(true)
                        {
                         if(true)
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             else
              {
               if(((bool(bool(false)))))
                {
                 if((false))
                  return;
                 break;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((false))
                {
                 if((false))
                  break;
                 break;
                }
              }
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           if((false))
            continue;
           if((false))
            continue;
           if((false))
            {
             if((false))
              break;
             if((false))
              {
               if((false))
                continue;
               continue;
              }
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
              {
               return;
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              break;
             break;
            }
           if((false))
            break;
           continue;
          }
        }
       if((false))
        {
         if((false))
          return;
         return;
        }
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
    }
   if(true)
    {
     if((false))
      {
       if(((! ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)))))))
        return;
       if(true)
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  {
   if((false))
    return;
   return;
  }
 if((false))
  {
   if((false))
    return;
   if(true)
    {
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if(((! (! (false)))))
        return;
       if(((injectionSwitch.x > injectionSwitch.y)))
        {
        }
       else
        {
         return;
        }
      }
     if((false))
      return;
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(((false) && true))
      {
      }
     else
      {
       return;
      }
    }
   while(false);
  }
 if((false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(true)
  {
   do
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _injected_loop_counter < ((1) | (1)); _injected_loop_counter ++)
        {
         if((false))
          continue;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(false);
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if((false))
        break;
       for(int _injected_loop_counter = ((((1 << (int(7))) >> (int(7))) << (int(1))) >> (int(1))); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           if((false))
            {
             if((false))
              return;
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
             else
              {
              }
            }
           if((false))
            break;
          }
        }
       if((false))
        break;
       if((false))
        return;
       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 | 0); _injected_loop_counter --)
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                     if((false))
                      return;
                    }
                  }
                 if((false))
                  {
                   if((false))
                    continue;
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((false))
                            break;
                           return;
                          }
                         if((false))
                          break;
                        }
                       else
                        {
                        }
                      }
                    }
                   break;
                  }
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (0 << (int(8))); _injected_loop_counter != 1; _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != (0 << (int(6))); _injected_loop_counter --)
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter != (0 << (((int(5)) | (int(5))))); _injected_loop_counter --)
                                {
                                 if((false))
                                  break;
                                 for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > 0; _injected_loop_counter --)
                                  {
                                   if((false))
                                    {
                                     if((false))
                                      return;
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       return;
                                      }
                                    }
                                   return;
                                   if((false))
                                    break;
                                  }
                                }
                               if((false))
                                return;
                              }
                             if(((bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))
                              continue;
                            }
                           if((false))
                            break;
                          }
                        }
                      }
                    }
                   if((false))
                    break;
                  }
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if((false))
                    continue;
                   break;
                   if((false))
                    continue;
                  }
                 if(false)
                  {
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if((bool(bvec2(false, false))))
                  {
                  }
                 else
                  {
                   if((false))
                    break;
                   if((false))
                    return;
                   if((false))
                    {
                     if(((injectionSwitch.x > injectionSwitch.y)))
                      {
                      }
                     else
                      {
                       if((false))
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                      }
                     for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(2))); _injected_loop_counter --)
                      {
                       if((false))
                        continue;
                       if((false))
                        return;
                       if(false)
                        {
                        }
                       else
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(true)
                          {
                           if((false))
                            {
                             if((false))
                              return;
                             return;
                             if((false))
                              break;
                            }
                          }
                         else
                          {
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                      }
                     if((false))
                      break;
                     continue;
                    }
                   if(((bool(bool(false)))))
                    break;
                   if(false)
                    {
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((false))
                        return;
                       if(false)
                        {
                         if((false))
                          break;
                         if((false))
                          return;
                         if((false))
                          {
                           if((((false) && true)))
                            break;
                           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if(false)
                              {
                              }
                             else
                              {
                               if((false))
                                continue;
                               if(true)
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          break;
                        }
                       else
                        {
                         if((false))
                          break;
                         do
                          {
                           if(true)
                            {
                             return;
                            }
                           else
                            {
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         while(((injectionSwitch.x > injectionSwitch.y)));
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if((false))
                          continue;
                        }
                       if((false))
                        continue;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(((true && (((injectionSwitch.x > injectionSwitch.y))))))
                        continue;
                       if((false))
                        continue;
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         break;
                        }
                       if((false))
                        continue;
                       if(((injectionSwitch.x < injectionSwitch.y)))
                        {
                         if((false))
                          {
                           if((false))
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if((false))
                              return;
                             continue;
                            }
                           if((false))
                            {
                             if((false))
                              break;
                             continue;
                            }
                           do
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                              {
                               return;
                               if((false))
                                return;
                              }
                             if((false))
                              continue;
                             if(((! (! (false)))))
                              continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                           while(((injectionSwitch.x > injectionSwitch.y)));
                           if((false))
                            {
                             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                              {
                               do
                                {
                                 return;
                                }
                               while(false);
                               if((false))
                                break;
                              }
                            }
                          }
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       else
                        {
                        }
                       return;
                       if((false))
                        continue;
                      }
                     if((false))
                      {
                       if((false))
                        break;
                       continue;
                      }
                    }
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     do
                      {
                       if((false))
                        {
                         if((false))
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              continue;
                             return;
                             if((false))
                              return;
                             do
                              {
                               if(((injectionSwitch.x > injectionSwitch.y)))
                                {
                                }
                               else
                                {
                                 if(((! (! (false)))))
                                  return;
                                }
                              }
                             while(false);
                            }
                           if((false))
                            continue;
                          }
                         for(int _injected_loop_counter = (0 >> (int(0))); _injected_loop_counter != (1 ^ (0 << (int(1)))); _injected_loop_counter ++)
                          {
                           return;
                          }
                         if((false))
                          break;
                        }
                       if((false))
                        return;
                       for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (((int(8)) ^ 0))); _injected_loop_counter --)
                        {
                         if((false))
                          continue;
                         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                          {
                           return;
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         break;
                        }
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   while(false);
                   if((false))
                    {
                     if((false))
                      return;
                     break;
                    }
                  }
                 if((false))
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if(false)
                        {
                        }
                       else
                        {
                         do
                          {
                           if((false))
                            {
                             if(((injectionSwitch.x > injectionSwitch.y)))
                              {
                              }
                             else
                              {
                               if(false)
                                {
                                }
                               else
                                {
                                 if((false))
                                  return;
                                 return;
                                }
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 continue;
                                }
                              }
                            }
                           if((false))
                            return;
                          }
                         while(false);
                        }
                       if(((injectionSwitch.x > injectionSwitch.y)))
                        {
                        }
                       else
                        {
                         if((false))
                          {
                           for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < (int(ivec3(1, 0, 0))); _injected_loop_counter ++)
                            {
                             return;
                             if(((((injectionSwitch.x < injectionSwitch.y)) && (false))))
                              return;
                            }
                          }
                        }
                      }
                    }
                   if((false))
                    continue;
                   continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((false))
                      {
                       if(true)
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     continue;
                    }
                  }
                 if((false))
                  return;
                 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     return;
                    }
                   continue;
                  }
                }
               if((false))
                {
                 if(((false || (false))))
                  break;
                 for(int _injected_loop_counter = (0 ^ (0 << (int(2)))); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   do
                    {
                     if((false))
                      {
                       if((false))
                        break;
                       do
                        {
                         if((false))
                          return;
                         return;
                         if((false))
                          {
                           if((false))
                            continue;
                           break;
                          }
                        }
                       while(((injectionSwitch.x > injectionSwitch.y)));
                      }
                    }
                   while(false);
                  }
                 continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if((false))
                break;
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((false))
                break;
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((false))
                  continue;
                 if((false))
                  continue;
                 continue;
                 if((false))
                  break;
                }
              }
            }
          }
        }
       if((false))
        break;
      }
     if((false))
      continue;
    }
   while(false);
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if((false))
      return;
    }
   while(false);
   if(false)
    {
    }
   else
    {
     if((false))
      {
       do
        {
         return;
        }
       while(false);
      }
    }
   if((false))
    return;
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if((! (! (true))))
  {
   do
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
       if((false))
        {
         do
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         while(false);
         if((false))
          {
           if((false))
            return;
           if((false))
            {
             if((false))
              break;
             return;
            }
           if(false)
            {
            }
           else
            {
             return;
            }
          }
         if((false))
          break;
        }
      }
     else
      {
       if((false))
        continue;
      }
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         do
          {
           if((false))
            break;
           if(true)
            {
             return;
            }
           else
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         while(false);
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(((injectionSwitch.x > injectionSwitch.y)));
      }
     if(((bool(bvec3(false, true, false)))))
      break;
     if((false))
      return;
    }
   while(false);
   if((false))
    {
     do
      {
       return;
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(((bool(bvec3(false, false, true)))))
  return;
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if((false))
    {
     if((false))
      return;
     return;
    }
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if((false))
  {
   do
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _injected_loop_counter != (1 ^ 1); _injected_loop_counter --)
        {
         if((false))
          break;
         if((false))
          {
           if((false))
            return;
           if((false))
            continue;
           if((false))
            {
             if((false))
              break;
             if(false)
              {
               if((((false) && true)))
                continue;
              }
             else
              {
               if(true)
                {
                 if((false))
                  break;
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((false))
                      continue;
                     return;
                    }
                  }
                }
               else
                {
                }
              }
             do
              {
               if((false))
                break;
               return;
              }
             while(false);
            }
           if((false))
            {
             if((false))
              return;
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
             if((false))
              continue;
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                {
                 if(true)
                  {
                   if((((false) && true)))
                    return;
                   return;
                  }
                 else
                  {
                   if((false))
                    return;
                  }
                }
               if((false))
                continue;
              }
             do
              {
               do
                {
                 return;
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           do
            {
             if((bool((bvec3(bvec4(bvec3(false, false, false), false))))))
              {
              }
             else
              {
               if((((true && (true))) && true))
                {
                 if((false))
                  return;
                }
               else
                {
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(false);
           return;
           if((false))
            continue;
          }
        }
      }
     if((false))
      return;
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   do
    {
     if(false)
      {
      }
     else
      {
       if((false))
        break;
       if((false))
        return;
       if(true)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if((false))
            {
             if((bool(bvec4(((false) || false), true, false, true))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       else
        {
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if((false))
        {
         do
          {
           if(true)
            {
             return;
            }
           else
            {
             if(false)
              {
              }
             else
              {
               if((((false) && true)))
                return;
              }
            }
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
        }
       if(true)
        {
         if((false))
          {
           if(((true && ((bool(bvec2(false, true)))))))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if(false)
            {
            }
           else
            {
             if((false))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              {
               if(true)
                {
                 do
                  {
                   if(true)
                    {
                     if((false))
                      break;
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(false);
                }
               else
                {
                }
               if((false))
                continue;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            continue;
           if((false))
            {
             if(true)
              {
               return;
               if((false))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
               if(((bool(bvec3(false, false, false)))))
                break;
              }
             for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
            }
           if((false))
            continue;
           return;
          }
         if((false))
          return;
        }
       else
        {
        }
       if((false))
        continue;
      }
     if((false))
      {
       for(int _injected_loop_counter = (0 << (int(7))); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         if((false))
          return;
        }
       continue;
      }
    }
   while(((injectionSwitch.x > injectionSwitch.y)));
   if(((injectionSwitch.x > injectionSwitch.y)))
    {
    }
   else
    {
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if(true)
        {
         return;
        }
       else
        {
        }
       if((false))
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
          {
           return;
          }
         if((false))
          continue;
         if((false))
          break;
        }
      }
     while(false);
     if((false))
      {
       if((false))
        return;
       return;
      }
    }
  }
 if((false))
  return;
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << (int(2))) >> (int(2))); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(false)
      {
      }
     else
      {
       if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     if((false))
      continue;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     else
      {
       if((false))
        break;
       buf[virtual_gid] = 1;
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
      }
     if((false))
      {
       if(false)
        {
        }
       else
        {
         return;
        }
      }
     if(((injectionSwitch.x < injectionSwitch.y)))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       if((false))
        return;
       if((false))
        {
         if((bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), false, false, true))))
          {
           if((false))
            return;
           if((false))
            break;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             do
              {
               do
                {
                 return;
                }
               while(false);
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if((false))
      continue;
     if((false))
      {
       if((false))
        {
         if((false))
          {
           if((false))
            return;
           for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
            {
             return;
            }
          }
         if(true)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         break;
        }
       if(false)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         for(int _injected_loop_counter = 0; _injected_loop_counter < (1 ^ 0); _injected_loop_counter ++)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 << ((int(ivec2(int(5), 0))))); _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if((false))
              return;
            }
          }
         if(true)
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 if((false))
  {
   if((false))
    return;
   if(((injectionSwitch.x < injectionSwitch.y)))
    {
     if((false))
      return;
     do
      {
       return;
      }
     while(false);
    }
   else
    {
    }
  }
 if(false)
  {
   if((false))
    return;
  }
 else
  {
   if(false)
    {
     if((false))
      return;
     if((false))
      return;
    }
   else
    {
     if((false))
      {
       if((false))
        {
         if((false))
          return;
         if(true)
          {
           if((false))
            return;
           if((((injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         else
          {
          }
        }
       if(false)
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((true && (false))))
    {
     if((false))
      return;
     for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((- 41682 & 0) ^ 1); _injected_loop_counter ++)
      {
       return;
       if((false))
        return;
      }
    }
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(1))) >> (int(1))); _injected_loop_counter ++)
    {
     if((false))
      {
       if((false))
        {
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if(true)
              {
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                 if((false))
                  continue;
                }
               if((false))
                {
                 if((false))
                  return;
                 break;
                }
              }
             else
              {
              }
            }
          }
         if((false))
          continue;
         break;
        }
       if((false))
        return;
       for(int _injected_loop_counter = (0 | ((1 ^ 1) >> (int(4)))); _injected_loop_counter != ((1 << (int(6))) >> (int(6))); _injected_loop_counter ++)
        {
         if((false))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           if((false))
            break;
           if((false))
            {
             if((false))
              return;
             break;
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               return;
              }
             while(false);
             do
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((false))
                  {
                   if((bool(bool(true))))
                    {
                     if((false))
                      return;
                    }
                   else
                    {
                    }
                   if((false))
                    continue;
                   return;
                  }
                }
               else
                {
                }
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           else
            {
             for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
              {
               if(((! (((! ((bool(bvec4(false, false, false, false))))) || false)))))
                return;
              }
             if((false))
              return;
            }
          }
         if((false))
          break;
         if((false))
          continue;
         if((false))
          continue;
        }
       if(false)
        {
        }
       else
        {
         if((false))
          break;
         if(((injectionSwitch.x > injectionSwitch.y)))
          {
          }
         else
          {
           if(true)
            {
             if((false))
              {
               if((false))
                break;
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 return;
                }
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
           else
            {
            }
          }
         if((false))
          {
           if(false)
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > (max(0, 0)); _injected_loop_counter --)
              {
               if((((! (! (bool(bvec3(false, true, true))))))))
                {
                 if((false))
                  continue;
                 break;
                }
               do
                {
                 return;
                }
               while(false);
              }
             if((false))
              {
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 return;
                }
               else
                {
                }
              }
             if((false))
              continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
           if(((injectionSwitch.x < injectionSwitch.y)))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((false))
              {
               if((false))
                break;
               continue;
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                continue;
               if((false))
                break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                break;
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                {
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
            }
           else
            {
            }
           if((false))
            return;
           if((false))
            continue;
           if((false))
            {
             if((false))
              break;
             continue;
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(false)
        {
        }
       else
        {
         if((false))
          continue;
         for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter < ((1) >> 0); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
              {
               if((false))
                break;
               if((false))
                {
                 if((false))
                  break;
                 break;
                }
               if((false))
                break;
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if(false)
                  {
                  }
                 else
                  {
                   do
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if((false))
                      break;
                    }
                   while(false);
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                   do
                    {
                     return;
                     if((false))
                      break;
                    }
                   while(false);
                  }
                 if((((false) && true)))
                  break;
                 if(true)
                  {
                   if(true)
                    {
                     if((false))
                      break;
                     if(((false || (false))))
                      break;
                     if((false))
                      {
                       if((false))
                        {
                         if((false))
                          break;
                         break;
                        }
                       if((false))
                        continue;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       break;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(false)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       else
                        {
                         if((false))
                          return;
                         return;
                        }
                       if((false))
                        return;
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(false)
                        {
                         if((false))
                          return;
                        }
                       else
                        {
                         if((bool(bvec3(true, false, false))))
                          {
                           if(true)
                            {
                             return;
                            }
                           else
                            {
                             if((false))
                              continue;
                             do
                              {
                               if((false))
                                {
                                 do
                                  {
                                   return;
                                  }
                                 while(((injectionSwitch.x > injectionSwitch.y)));
                                }
                              }
                             while(false);
                             if((false))
                              continue;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                           if((false))
                            break;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if((false))
                      continue;
                    }
                   if((false))
                    {
                     if((false))
                      {
                       if(((! (! ((! (! (false))))))))
                        break;
                       continue;
                      }
                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                      {
                       if((false))
                        continue;
                       return;
                       if((false))
                        break;
                       if((false))
                        break;
                      }
                    }
                   if((false))
                    continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(false)
                    {
                     if((false))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if((false))
                        break;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if((false))
                        break;
                       break;
                      }
                     if((false))
                      return;
                    }
                   else
                    {
                     if((false))
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                     do
                      {
                       if(false)
                        {
                         if((false))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       else
                        {
                         if((false))
                          break;
                         if((false))
                          {
                           if((false))
                            return;
                           break;
                          }
                         if(true)
                          {
                           if(true)
                            {
                             if((false))
                              {
                               for(int _injected_loop_counter = ((((injectionSwitch.x > injectionSwitch.y)) ? (_injected_loop_counter) : 1)); _injected_loop_counter > 0; _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = (0 | (int(ivec4(0, 1, 0, 1)))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                  {
                                   if((false))
                                    return;
                                  }
                                }
                               do
                                {
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   if(true)
                                    {
                                     if((false))
                                      break;
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((false))
                                        break;
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((false))
                                          continue;
                                         return;
                                        }
                                       do
                                        {
                                         if((false))
                                          {
                                           do
                                            {
                                             return;
                                            }
                                           while(((injectionSwitch.x > injectionSwitch.y)));
                                          }
                                         if((((injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                         if((false))
                                          continue;
                                        }
                                       while(false);
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                   if((false))
                                    continue;
                                  }
                                 if((false))
                                  {
                                   if((false))
                                    continue;
                                   continue;
                                  }
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                               while(false);
                               do
                                {
                                 if((false))
                                  break;
                                 if((false))
                                  break;
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                    {
                                     if(true)
                                      {
                                       for(int _injected_loop_counter = (0 >> (int(3))); _injected_loop_counter != (~ (~ (((1) << 0)))); _injected_loop_counter ++)
                                        {
                                         if(true)
                                          {
                                           if((((injectionSwitch.x > injectionSwitch.y))))
                                            return;
                                           return;
                                           if((false))
                                            break;
                                           if((false))
                                            break;
                                          }
                                         else
                                          {
                                          }
                                         if((false))
                                          break;
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               while(false);
                               if((! (! (((injectionSwitch.x < injectionSwitch.y))))))
                                {
                                 if((false))
                                  {
                                   for(int _injected_loop_counter = (int(((ivec3(1, 1, 0)) - ivec3(0, 0, 0)))); _injected_loop_counter != (0 << (int(5))); _injected_loop_counter --)
                                    {
                                     if(true)
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 return;
                                }
                               else
                                {
                                 if((false))
                                  break;
                                }
                               if((false))
                                break;
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     while(false);
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     continue;
                    }
                   if((false))
                    {
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if((false))
                    continue;
                  }
                 else
                  {
                  }
                 if((false))
                  break;
                 if((false))
                  return;
                }
               if((false))
                {
                 if(((! (! (false)))))
                  return;
                 continue;
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                break;
              }
            }
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           break;
          }
         if(false)
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 | 0); _injected_loop_counter --)
            {
             if((false))
              {
               if(false)
                {
                }
               else
                {
                 return;
                }
              }
             if((false))
              break;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((false))
          continue;
         if((false))
          break;
         if((false))
          continue;
         if((false))
          break;
         if(false)
          {
          }
         else
          {
           do
            {
             if((false))
              continue;
             if((false))
              {
               if((false))
                {
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                   if((false))
                    break;
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               return;
              }
             if((false))
              continue;
             if((false))
              continue;
             if((false || (false)))
              {
               if((false))
                continue;
               if((false))
                break;
              }
             else
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                {
                 if(true)
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  return;
                 if((false))
                  {
                   if((false))
                    break;
                   continue;
                  }
                }
               if((false))
                break;
              }
            }
           while(false);
           if((false))
            continue;
          }
         if((false))
          break;
         do
          {
           if((false))
            continue;
           for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(1))); _injected_loop_counter --)
            {
             if((false))
              {
               if((false))
                return;
               break;
              }
             return;
            }
           if((false))
            break;
          }
         while(false);
        }
       if((false))
        {
         if((false))
          break;
         break;
        }
       if(false)
        {
         if((false))
          continue;
        }
       else
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 & - 65837); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if(false)
              {
               if(((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
                break;
               if((false))
                continue;
               if(((! (! (false)))))
                {
                 if((false))
                  {
                   if((false))
                    break;
                   continue;
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 continue;
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             else
              {
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    return;
                  }
                 if((false))
                  {
                   if((false))
                    continue;
                   do
                    {
                     do
                      {
                       do
                        {
                         return;
                        }
                       while(false);
                      }
                     while(((injectionSwitch.x > injectionSwitch.y)));
                    }
                   while(false);
                  }
                }
               while(((injectionSwitch.x > injectionSwitch.y)));
               if(((injectionSwitch.x < injectionSwitch.y)))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   continue;
                  }
                 if((false))
                  {
                   if((false))
                    continue;
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 << (int(0))); _injected_loop_counter != int((injectionSwitch.y)); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 1; _injected_loop_counter > (1 ^ 1); _injected_loop_counter --)
                        {
                         if((false))
                          break;
                         if((false))
                          break;
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                              {
                               if((false))
                                {
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 break;
                                }
                               if(true)
                                {
                                 return;
                                 if((false))
                                  continue;
                                }
                               else
                                {
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
                                    {
                                     return;
                                    }
                                  }
                                }
                              }
                            }
                          }
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           if((false))
                            return;
                          }
                         if((false))
                          break;
                        }
                      }
                    }
                   if(true)
                    {
                     if((false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 if((false))
                  break;
                }
               if(false)
                {
                }
               else
                {
                 if((false))
                  {
                   if((false))
                    return;
                   return;
                  }
                }
               if((false))
                {
                 if((false))
                  continue;
                 break;
                }
              }
            }
          }
        }
       if(((false || (false))))
        break;
       if((false))
        break;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = 1; _injected_loop_counter != int((injectionSwitch.x)); _injected_loop_counter --)
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              break;
             break;
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(((! (! (((false) || false))))))
            continue;
           for(int _injected_loop_counter = 1; _injected_loop_counter != ((0 | 0) ^ 0); _injected_loop_counter --)
            {
             if((false))
              break;
             if((false))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter < ((1 << (int(4))) >> (int(4))); _injected_loop_counter ++)
                {
                 if((false))
                  return;
                 if((false))
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               break;
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              {
               if((false))
                {
                 if((false))
                  return;
                 do
                  {
                   if(false)
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                  }
                 while(false);
                 if((false))
                  return;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((((false) && true)))
                  {
                   if((false))
                    {
                     if((false))
                      return;
                     break;
                    }
                   continue;
                  }
                }
               if((false))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   return;
                  }
                 else
                  {
                   if((false))
                    break;
                  }
                }
               if((false))
                {
                 if((false))
                  return;
                 for(int _injected_loop_counter = ((((1 << (int(2))) >> (int(2))) << (int(2))) >> ((((max(int(2), int(2)))) ^ 0))); _injected_loop_counter != 0; _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(false)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if((false))
                  continue;
                 if((false))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   do
                    {
                     for(int _injected_loop_counter = 0; _injected_loop_counter < (0 ^ 1); _injected_loop_counter ++)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = ((- 997 / 61167) & 0); _injected_loop_counter != (1 & (1 & 1)); _injected_loop_counter ++)
                          {
                           return;
                          }
                        }
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   do
                    {
                     return;
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    continue;
                  }
                 if((false))
                  return;
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   if((false))
                    {
                     if((false))
                      return;
                     if((false))
                      continue;
                     break;
                    }
                   return;
                  }
                 if(true)
                  {
                   return;
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
              }
             if((false))
              break;
            }
           if((false))
            return;
          }
         while(((injectionSwitch.x > injectionSwitch.y)));
         if((false))
          break;
         if((false))
          break;
         if((false))
          break;
         if((false))
          break;
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(((injectionSwitch.x > injectionSwitch.y)));
 if((false))
  return;
 if(((injectionSwitch.x > injectionSwitch.y)))
  {
  }
 else
  {
   do
    {
     if(true)
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   while(false);
  }
 if(false)
  {
  }
 else
  {
   if(false)
    {
    }
   else
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != 1; _injected_loop_counter ++)
        {
         if((false))
          return;
         return;
        }
      }
    }
  }
 if(false)
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter > 0; _injected_loop_counter --)
    {
     do
      {
       if((false))
        {
         if(true)
          {
           if((! (! (false))))
            {
            }
           else
            {
             if(false)
              {
              }
             else
              {
               return;
               if((false))
                continue;
              }
            }
          }
         else
          {
          }
        }
       if((false))
        continue;
      }
     while(false);
    }
  }
 for(int _injected_loop_counter = (0 << (int(1))); _injected_loop_counter != 1; _injected_loop_counter ++)
  {
   if((false))
    {
     if((false))
      return;
     continue;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    continue;
   if((false))
    {
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 >> (((int(7)) ^ int((injectionSwitch.x))))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             return;
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       while(false);
      }
    }
  }
 if(false)
  {
   if((false))
    return;
   if((false))
    return;
  }
 else
  {
   if((false))
    return;
  }
 if((false))
  return;
 do
  {
   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(5))); _injected_loop_counter --)
    {
     do
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
          {
           if((false))
            return;
          }
         int i = 0;
         if(false)
          {
           if((false))
            break;
           if((false))
            {
             do
              {
               if((false))
                return;
               if((false))
                continue;
               return;
               if((false))
                break;
               if(false)
                {
                 if(((injectionSwitch.x > injectionSwitch.y)))
                  {
                   if((false))
                    break;
                  }
                 else
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   do
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(((injectionSwitch.x < injectionSwitch.y)))
                            {
                             if((false))
                              return;
                             return;
                            }
                           else
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           if((false))
                            return;
                           if(false)
                            {
                            }
                           else
                            {
                             if((! (! (true))))
                              {
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if((false))
                                  continue;
                                 return;
                                }
                               if((false))
                                continue;
                              }
                             else
                              {
                              }
                             if((false))
                              return;
                            }
                          }
                        }
                      }
                     while(false);
                    }
                   while(false);
                  }
                }
               else
                {
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if((false))
                  break;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if(((injectionSwitch.x < injectionSwitch.y)))
                    {
                     if(true)
                      {
                       if((false))
                        {
                         if((false))
                          break;
                         return;
                        }
                      }
                     else
                      {
                      }
                     if((false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if((false))
                continue;
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           if((false))
            return;
           if(false)
            {
            }
           else
            {
             do
              {
               do
                {
                 if((false))
                  break;
                 do
                  {
                   if((false))
                    {
                     if(((((injectionSwitch.x < injectionSwitch.y))) && true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   if((false))
                    return;
                  }
                 while(false);
                }
               while(false);
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
          }
         else
          {
           if(true)
            {
             for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                break;
               if((false))
                continue;
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               if((false))
                {
                 if((false))
                  continue;
                 if(((true) && true))
                  {
                   return;
                   if((false))
                    continue;
                  }
                 else
                  {
                   if((false))
                    break;
                  }
                }
               if(true)
                {
                 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if((false))
            continue;
           if((false))
            continue;
           if((false))
            {
             for(int _injected_loop_counter = 0; _injected_loop_counter < ((0 | 0) | (1)); _injected_loop_counter ++)
              {
               if(((! (! (false)))))
                break;
               if(true)
                {
                 return;
                }
               else
                {
                }
              }
            }
           if(false)
            {
             if((false))
              continue;
             if((false))
              return;
            }
           else
            {
             if(false)
              {
              }
             else
              {
               if(false)
                {
                }
               else
                {
                 for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter < 1; _injected_loop_counter ++)
                  {
                   if((false))
                    return;
                   if((false))
                    {
                     for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                      {
                       if((false))
                        return;
                      }
                     if((false))
                      break;
                     if((false))
                      break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     do
                      {
                       do
                        {
                         if((false))
                          continue;
                         do
                          {
                           return;
                           if((false))
                            continue;
                          }
                         while(false);
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(false)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         else
                          {
                           do
                            {
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           while(false);
                          }
                        }
                       while(false);
                      }
                     while(false);
                     if((false))
                      {
                       if((false))
                        continue;
                       continue;
                      }
                    }
                  }
                }
              }
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                continue;
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    break;
                   if((false))
                    continue;
                   continue;
                  }
                 if((false))
                  break;
                 do
                  {
                   do
                    {
                     if(true)
                      {
                       if(true)
                        {
                         do
                          {
                           if(false)
                            {
                            }
                           else
                            {
                             if((false))
                              {
                               for(int _injected_loop_counter = (0 >> (int(7))); _injected_loop_counter != 1; _injected_loop_counter ++)
                                {
                                 if(true)
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                     break;
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      break;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(((injectionSwitch.x > injectionSwitch.y)))
                                        {
                                        }
                                       else
                                        {
                                         if((false))
                                          continue;
                                         for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                                          {
                                           return;
                                          }
                                        }
                                      }
                                     return;
                                     if((false))
                                      {
                                       for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         return;
                                        }
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                    }
                                   if((false))
                                    {
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                     if((false))
                                      continue;
                                     continue;
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if((((((injectionSwitch.x > injectionSwitch.y))) || false)))
                                  break;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if((false))
                                    return;
                                   break;
                                   if((false))
                                    return;
                                  }
                                }
                               if((((injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if(((injectionSwitch.x < injectionSwitch.y)))
                                {
                                 if((false))
                                  continue;
                                 if((false))
                                  {
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if((false))
                                      continue;
                                     return;
                                    }
                                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 >> (int(1))); _injected_loop_counter --)
                                    {
                                     return;
                                    }
                                  }
                                 if(((injectionSwitch.x < injectionSwitch.y)))
                                  {
                                   do
                                    {
                                     if((false))
                                      break;
                                     if(false)
                                      {
                                      }
                                     else
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if((false))
                                          continue;
                                         continue;
                                        }
                                       return;
                                       if((false))
                                        break;
                                      }
                                    }
                                   while(false);
                                   if(((injectionSwitch.x < injectionSwitch.y)))
                                    {
                                     do
                                      {
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       if((false))
                                        {
                                         if(((false || (false))))
                                          return;
                                         return;
                                        }
                                      }
                                     while(false);
                                    }
                                   else
                                    {
                                    }
                                   if(false)
                                    {
                                    }
                                   else
                                    {
                                     if((false))
                                      {
                                       for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > 0; _injected_loop_counter --)
                                        {
                                         return;
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         while(((false) || false));
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   while(((injectionSwitch.x > injectionSwitch.y)));
                   if((false))
                    continue;
                  }
                 while(false);
                }
               else
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((false))
                    continue;
                   return;
                  }
                 if((false))
                  {
                   if(true)
                    {
                     do
                      {
                       return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          return;
                         if(((injectionSwitch.x > injectionSwitch.y)))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                      }
                     while((! (! (((injectionSwitch.x > injectionSwitch.y))))));
                    }
                   else
                    {
                    }
                   if((false))
                    {
                     do
                      {
                       return;
                      }
                     while(((false) && true));
                    }
                   if((false))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                     break;
                    }
                   for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                    {
                     if((false))
                      {
                       do
                        {
                         if((false))
                          continue;
                         return;
                        }
                       while(false);
                      }
                    }
                  }
                 if((false))
                  continue;
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             else
              {
               if((false))
                {
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((false))
                return;
              }
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((false))
                break;
               if((false))
                return;
              }
             if(true)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                return;
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               if((false))
                continue;
               if(true)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _injected_loop_counter > (0 & (- 97526 << 92154)); _injected_loop_counter --)
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   if((false))
                    return;
                   return;
                  }
                }
               else
                {
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if(((! (! (false)))))
                  continue;
                 return;
                }
               if((false))
                break;
              }
             else
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  {
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                 if((bool(bool((! (! (false)))))))
                  {
                  }
                 else
                  {
                   if((false))
                    {
                     if((false))
                      break;
                     break;
                    }
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if((false))
                      return;
                     return;
                    }
                  }
                }
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((false))
                break;
              }
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            {
             if((false))
              continue;
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               if((false))
                return;
               if(false)
                {
                }
               else
                {
                 if((false))
                  continue;
                 return;
                }
              }
             else
              {
              }
            }
           if(true)
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if(true)
              {
               if(false)
                {
                 if((((injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               else
                {
                 if(true)
                  {
                   if(true)
                    {
                     if((false))
                      return;
                     if((false))
                      break;
                     if(((injectionSwitch.x < injectionSwitch.y)))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if((false))
                        {
                         if(false)
                          {
                           if((false))
                            return;
                          }
                         else
                          {
                           do
                            {
                             if(true)
                              {
                               for(int _injected_loop_counter = 1; _injected_loop_counter > (0 << (int(4))); _injected_loop_counter --)
                                {
                                 do
                                  {
                                   if((false))
                                    break;
                                   for(int _injected_loop_counter = 0; _injected_loop_counter < int((injectionSwitch.y)); _injected_loop_counter ++)
                                    {
                                     if((false))
                                      {
                                       if(false)
                                        {
                                        }
                                       else
                                        {
                                         return;
                                        }
                                      }
                                     if(true)
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                     if((((injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if((false))
                                        return;
                                       return;
                                      }
                                     if((false))
                                      continue;
                                    }
                                   if((((injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                      {
                                       if((false))
                                        continue;
                                       for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
                                        {
                                         if((false))
                                          break;
                                         for(int _injected_loop_counter = (0 << (((false ? (i) : int(6))))); _injected_loop_counter < 1; _injected_loop_counter ++)
                                          {
                                           return;
                                          }
                                         if((false))
                                          return;
                                        }
                                       if((((injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                      }
                                    }
                                   if((((((injectionSwitch.x > injectionSwitch.y))) && true)))
                                    break;
                                   if((false))
                                    break;
                                   if((false))
                                    {
                                     if(((false || (false))))
                                      continue;
                                     break;
                                    }
                                  }
                                 while(false);
                                 if((((injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 if((false))
                                  return;
                                }
                               if((false))
                                return;
                              }
                             else
                              {
                              }
                            }
                           while(false);
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if((false))
                return;
              }
            }
           else
            {
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if((false))
          break;
         for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             if((false))
              continue;
             if(true)
              {
               if(true)
                {
                 if((false))
                  {
                   for(int _injected_loop_counter = (1 & 1); _injected_loop_counter != (int(ivec2(((0) | (0)), 1))); _injected_loop_counter --)
                    {
                     if((false))
                      {
                       if((false))
                        continue;
                       break;
                      }
                     if((false))
                      return;
                     for(int _injected_loop_counter = ((1 << (((false ? (i) : int(1))))) >> (int(1))); _injected_loop_counter > 0; _injected_loop_counter --)
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         continue;
                        }
                       return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         continue;
                        }
                      }
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         if((false))
          continue;
        }
       else
        {
         if(true)
          {
           if((false))
            return;
           if(true)
            {
             if((false))
              {
               if((false))
                return;
               if(true)
                {
                 return;
                }
               else
                {
                }
               if((false))
                continue;
               for(int _injected_loop_counter = int((injectionSwitch.y)); _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
                {
                 do
                  {
                   for(int _injected_loop_counter = int((injectionSwitch.x)); _injected_loop_counter != ((1 << (int(2))) >> (int(2))); _injected_loop_counter ++)
                    {
                     if((false))
                      {
                       do
                        {
                         return;
                        }
                       while(false);
                       if((false))
                        return;
                      }
                    }
                  }
                 while(((injectionSwitch.x > injectionSwitch.y)));
                }
              }
             if(((injectionSwitch.x < injectionSwitch.y)))
              {
               for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                {
                 do
                  {
                   do
                    {
                     if(((false || (false))))
                      {
                       if((false))
                        {
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if((false))
                          return;
                         if((false))
                          continue;
                         if((((injectionSwitch.x > injectionSwitch.y))))
                          return;
                         break;
                        }
                       if(true)
                        {
                         if(false)
                          {
                          }
                         else
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           return;
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(false);
                  }
                 while(false);
                }
              }
             else
              {
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               return;
              }
             if((false))
              continue;
             if((false))
              break;
            }
           else
            {
            }
           if((false))
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
          }
         else
          {
           if((false))
            break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(false)
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
           if((false))
            break;
           if((false))
            break;
           if(true)
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
            }
           else
            {
            }
           if((false))
            break;
          }
         if((false))
          {
           if((false))
            {
             if((false))
              {
               if((false))
                continue;
               return;
              }
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             if((false))
              break;
             if((false))
              break;
             break;
            }
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((((injectionSwitch.x > injectionSwitch.y))))
              break;
             if((false))
              break;
             if(((bool(bool(false)))))
              continue;
             if((((false) && true)))
              break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              {
               if((false))
                break;
               continue;
              }
             if((false))
              {
               if((false))
                {
                 if((false))
                  break;
                 break;
                }
               if((false))
                continue;
               if(true)
                {
                 if((false))
                  continue;
                 for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                  {
                   if(((injectionSwitch.x > injectionSwitch.y)))
                    {
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 0; _injected_loop_counter < (1 & 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = 1; _injected_loop_counter > 0; _injected_loop_counter --)
                            {
                             return;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                          }
                        }
                       if((false))
                        continue;
                       continue;
                      }
                    }
                   else
                    {
                     if(true)
                      {
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        {
                         if((false))
                          continue;
                         for(int _injected_loop_counter = (0 ^ 1); _injected_loop_counter > (27635 & 0); _injected_loop_counter --)
                          {
                           if((false))
                            {
                             if((false))
                              break;
                             break;
                            }
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                             if((false))
                              break;
                            }
                          }
                         if((false))
                          {
                           if(((! (! (false)))))
                            return;
                           continue;
                          }
                         if((false))
                          continue;
                         if((false))
                          {
                           if((false))
                            break;
                           break;
                          }
                        }
                      }
                     else
                      {
                       if((false))
                        return;
                       if((((injectionSwitch.x > injectionSwitch.y))))
                        break;
                       if((false))
                        {
                         if((false))
                          break;
                         continue;
                         if((false))
                          break;
                        }
                      }
                     if((false))
                      return;
                     for(int _injected_loop_counter = (0 ^ (~ (~ (0)))); _injected_loop_counter != 1; _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if((false))
                    break;
                   if((false))
                    return;
                   if((false))
                    break;
                  }
                }
               else
                {
                 if((false))
                  return;
                 if((false))
                  break;
                }
              }
             if(((bool(bvec3(false, true, true)))))
              break;
             if((false))
              return;
            }
           while(false);
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            break;
           if((false))
            break;
           if((false))
            {
             if((false))
              break;
             break;
             if((((injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(false)
            {
             if((false))
              return;
            }
           else
            {
             if((false))
              {
               if((false))
                {
                 if(((injectionSwitch.x < injectionSwitch.y)))
                  {
                   if((false))
                    break;
                   if((false))
                    break;
                   if((false))
                    break;
                   if(true)
                    {
                     return;
                    }
                   else
                    {
                    }
                   if((((injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                  }
                }
               if(((injectionSwitch.x > injectionSwitch.y)))
                {
                }
               else
                {
                 return;
                }
              }
            }
           return;
           for(int _injected_loop_counter = (0 | 0); _injected_loop_counter != 1; _injected_loop_counter ++)
            {
             if((false))
              break;
             for(int _injected_loop_counter = 1; _injected_loop_counter != 0; _injected_loop_counter --)
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                break;
               if((false))
                continue;
               if((false))
                {
                 do
                  {
                   if((false))
                    {
                     if((false))
                      break;
                     return;
                    }
                  }
                 while(false);
                 return;
                 if(((! (! (false)))))
                  return;
                }
               if((false))
                break;
              }
            }
          }
        }
      }
     while(((injectionSwitch.x > injectionSwitch.y)));
    }
  }
 while(false);
 do
  {
   if(true)
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(((! (! (false)))))
        break;
       if(((true && (false))))
        {
         if((false))
          continue;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
           if((false))
            return;
           continue;
           if((((injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(((! (! (false)))))
          break;
         do
          {
           do
            {
             return;
            }
           while(false);
          }
         while(false);
        }
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((false))
            break;
           if((false))
            break;
           break;
          }
         if((false))
          break;
         if((((injectionSwitch.x > injectionSwitch.y))))
          continue;
         if((false))
          {
           if(((injectionSwitch.x > injectionSwitch.y)))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _injected_loop_counter > int((injectionSwitch.x)); _injected_loop_counter --)
              {
               if((false))
                break;
               if((false))
                return;
              }
            }
           break;
          }
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             do
              {
               do
                {
                 if(false)
                  {
                  }
                 else
                  {
                   if((false))
                    continue;
                   for(int _injected_loop_counter = 0; _injected_loop_counter != 1; _injected_loop_counter ++)
                    {
                     if(true)
                      {
                       if(true)
                        {
                         for(int _injected_loop_counter = 1; _injected_loop_counter != (0 ^ 0); _injected_loop_counter --)
                          {
                           if((((injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(false)
                            {
                            }
                           else
                            {
                             return;
                             if((((injectionSwitch.x > injectionSwitch.y))))
                              break;
                            }
                          }
                        }
                       else
                        {
                         if((false))
                          break;
                        }
                      }
                     else
                      {
                      }
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if((((injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                  }
                }
               while(false);
              }
             while(((injectionSwitch.x > injectionSwitch.y)));
            }
           while(((injectionSwitch.x > injectionSwitch.y)));
           if((((injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(false)
          {
          }
         else
          {
           if(true)
            {
             do
              {
               if((((injectionSwitch.x > injectionSwitch.y))))
                continue;
               do
                {
                 if(true)
                  {
                   do
                    {
                     if((false))
                      return;
                     if(false)
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   while(false);
                  }
                 else
                  {
                  }
                }
               while(false);
              }
             while(false);
            }
           else
            {
            }
          }
         if((false))
          return;
         if((false))
          return;
        }
      }
     while(false);
    }
   else
    {
    }
  }
 while(false);
 if(((injectionSwitch.x < injectionSwitch.y)))
  {
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _injected_loop_counter < 1; _injected_loop_counter ++)
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if(false)
      {
      }
     else
      {
       if((false))
        continue;
       return;
      }
    }
   if((false))
    break;
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      break;
     if((false))
      break;
     if(((injectionSwitch.x > injectionSwitch.y)))
      {
       if((false))
        continue;
       if(false)
        {
        }
       else
        {
         if((false))
          return;
        }
      }
     else
      {
       if((false))
        break;
       return;
       if((((injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(false);
    }
   if((false))
    {
     if((false))
      break;
     return;
    }
   if((false))
    continue;
  }
}
