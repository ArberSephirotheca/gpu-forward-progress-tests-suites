#version 460

struct _GLF_struct_6 {
 mat3x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_7 {
 uint num_workgroup;
 mat3x2 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 bool _f1;
 _GLF_struct_2 _f2;
 mat4x3 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec2 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
 vec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_5 {
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 vec4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
} ;

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if((false))
  return;
 if(((! (((! (false))) && ((injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 uvec4 GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id;
 if((false))
  barrier();
 if(((((! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if((((((((((injectionSwitch.x > injectionSwitch.y)))) && true)) && true)) || false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if(((! (! (false)))))
    {
     if((false))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((true && ((false))))
  barrier();
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  {
   if(((! (! ((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if((false))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 (uvec2(0u, 0u) + (GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if((((false) || false)))
  {
   if((false))
    return;
   if(((((! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((false))
  {
   if((false))
    return;
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if((false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id;
 if((((bool(bvec3(false || ((! (! (false)))), (true && (false)), true))))))
  barrier();
 if((false || ((false))))
  {
   if((false))
    return;
   if((bool(bvec3((bool(bvec2((false), true))), false, ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && ((true && (false))))))
      barrier();
     if((false))
      return;
     return;
    }
   if((! ((! (! (! (((! (! (bool(bool(((true && (false))))))))))))))))
    barrier();
   if(((bool(((bvec2(bvec3(bvec2(bvec2(((bvec2((bvec3(((bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), false, false)), true)), false)), false))))))))))), ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       barrier();
      }
     if((false))
      return;
     if(((((injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(((((float((mat2x4(mat4(mat2x4(((false ? (- 2384.5211) : injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  barrier();
 if(((! (! (((! ((! (! ((false || (! ((((((injectionSwitch.x > ((clamp(float(mat2(injectionSwitch.y, sqrt(1.0), 0.0, length(vec2(0.0, 0.0)))), float(mat2(injectionSwitch.y, sqrt(1.0), ((0.0) + 0.0), length(((((max(vec2((mat3(mat4x3(mat3(vec2(0.0, 0.0), round(length(normalize(1.0))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0))))), vec2(mat3(vec2(0.0, 0.0), round(length(normalize(1.0))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0)))))) * vec2(1.0, 1.0))))), float(mat2(injectionSwitch.y, sqrt(1.0), 0.0, length(((vec2(0.0, 0.0)) * sqrt(vec2(1.0, 1.0))))))))))))) && true))))))))))))) && true))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.w = subgroup_id;
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if((false))
  {
   if((bool(bool((false)))))
    barrier();
   barrier();
  }
 if((false))
  {
   if((false))
    barrier();
   return;
   if((false))
    return;
  }
 GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.x = subgroup_size;
 if((false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((false))
  return;
 _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = subgroup_local_id;
 if((((false) && ((injectionSwitch.x < injectionSwitch.y)))))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if((false))
      return;
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(((((float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0))) > injectionSwitch.y))))
  return;
 if((((((bool(bvec2(((0.0 + (injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)))))) || false))))
  {
   if((false))
    {
     if((false))
      barrier();
     if((false))
      return;
     barrier();
    }
   if((false))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false || ((((injectionSwitch.x > injectionSwitch.y))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((((false) || false)))
      barrier();
     return;
    }
   if(((bool(bvec4((bool(bool(false))), false, false, true)))))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      barrier();
     return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > ((false ? (injectionSwitch) : injectionSwitch)).y))))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(gl_NumWorkGroups.x, mat3x2(((1.0) - 0.0)), _GLF_struct_6(mat3x2(1.0), uvec2(1u)));
 if((((bool(bvec3((((false) && true)), true, true)))) && true))
  {
   if(((bool(bvec4((true && (false)), true, true, false)))))
    barrier();
   if((((bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if((false))
    barrier();
   if((false))
    return;
   if(((! (! ((false || (((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if(((true && (! (! ((false)))))))
      barrier();
     return;
     if(((bool(bvec3(((! (! ((false))))) || false, false, false)))))
      {
       if((((injectionSwitch.x > injectionSwitch.y))))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((false))
          return;
         if((((injectionSwitch.x > injectionSwitch.y))))
          {
           if((! (! ((false)))))
            return;
           barrier();
          }
         return;
        }
       if((false))
        {
         if((((injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if((false))
        barrier();
       return;
      }
    }
   return;
   if((((false) && (true && (true)))))
    {
     if(((true && (false))))
      barrier();
     barrier();
    }
   if((false))
    return;
   if((false))
    barrier();
  }
 if(((((! (! (((injectionSwitch.x > ((injectionSwitch) - vec2(0.0, 0.0)).y)))))) || false)))
  barrier();
 if((false))
  {
   if((true && ((((injectionSwitch.x > (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if((false))
      return;
     if((false))
      return;
     barrier();
     if((false))
      return;
    }
   if(((((clamp(injectionSwitch.x, ((injectionSwitch.x) * 1.0), ((injectionSwitch.x) / sqrt(1.0)))) > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 (0u ^ (((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.y = _GLF_struct_replacement_7.num_workgroup) >> 0u)));
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if((bool((bvec2((bvec2(bvec4(bvec2(bvec2((false), true)), false, true))))))))
  return;
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(((((! (bool(bool((bool(bool((! (false)))))))))) || false)))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      barrier();
     return;
     if((! (! ((((((injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
    }
   if((false))
    {
     if(((true && (false))))
      {
       if(((! (! (((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     barrier();
    }
   if((false))
    {
     if((false))
      barrier();
     barrier();
     if((false))
      return;
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((false))
    return;
   if((((! ((! ((! (! (! (! ((true && ((false)))))))))))) && true)))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((((injectionSwitch.x > ((injectionSwitch.y) / determinant(mat2(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0)))))))
    return;
   if(((! (! (false)))))
    barrier();
   barrier();
  }
 if((false))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      {
       if((false))
        return;
       barrier();
      }
     barrier();
     if((false))
      return;
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if((false))
  barrier();
 if((((false)) || false))
  barrier();
 if((false))
  barrier();
 if((bool(bool((false)))))
  {
   if((((false)) || ((false) || false)))
    return;
   if(((! (! (false)))))
    {
     if((false))
      {
       if((! (! ((((((injectionSwitch.x > injectionSwitch.y)) || false)))))))
        return;
       return;
      }
     barrier();
     if((false))
      barrier();
    }
   if((false))
    barrier();
   if((false))
    barrier();
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if(((true && ((! (! ((false || ((((((min((float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x))) * (dot(vec3(0.0, 0.0, (injectionSwitch.y)), vec3(0.0, 0.0, 1.0)))) > injectionSwitch.y)))))))))))
  barrier();
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   return;
  }
 if((((false) && true)))
  {
   if((false))
    return;
   if((((bool(bool(bool(bvec4((bool(bvec4(((false) && true), true, false, true))), false, true, false))))))))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w = ((workgroup_id) / ((1u << (uint(6u))) >> (uint(6u))));
 if((false))
  barrier();
 if((false))
  return;
 if((false))
  {
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(((bool(bool((! (! (false))))))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(((true && (false))))
  return;
 if((false))
  return;
 if((false))
  {
   if((((! (! (! (! (false))))))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    barrier();
   if((false))
    barrier();
   return;
   if((false))
    {
     if((false))
      return;
     if(((! (! (((injectionSwitch.x > ((injectionSwitch.y) / 1.0))))))))
      {
       if((false))
        return;
       barrier();
      }
     return;
    }
  }
 if(((bool(bvec2((((! ((! (((! (! ((! (! ((! (! (((false) || false)))))))))) && true)))))) && true), false)))))
  {
   if((false))
    return;
   return;
  }
 if((false))
  barrier();
 if((false))
  barrier();
 if((bool(bvec3((true && ((! (! (((bool(bool(false))))))))), true, true))))
  {
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
  }
 if((false))
  return;
 if(((! (! ((! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if((((((false ? (0.7) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if((false))
    return;
   barrier();
  }
 if(((! (! (false)))))
  return;
 if((false))
  {
   if((false))
    {
     if((false))
      return;
     if((false))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > (mix(vec2((4.8), (- 43.67)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  barrier();
 if((false))
  {
   if((bool(bvec4((false), false, false, false))))
    barrier();
   return;
  }
 if((false))
  {
   if((false))
    {
     if((((((((injectionSwitch.x > injectionSwitch.y))) && true) || false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  {
   if(((((! ((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if((! (((! ((false))) || false))))
    return;
   if((((injectionSwitch.x > injectionSwitch.y))))
    return;
   if((false))
    barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((false))
      return;
     return;
    }
   barrier();
   if((false))
    return;
  }
 uint workgroup_base = (max(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w));
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(((! (! (false)))))
  barrier();
 _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  barrier();
 if((((injectionSwitch.x > ((injectionSwitch.y) - 0.0)))))
  {
   if(((((! (! (false)))) && true)))
    {
     if((false))
      barrier();
     return;
     if((((injectionSwitch.x > injectionSwitch.y))))
      {
       if((false))
        return;
       return;
      }
    }
   if((false))
    {
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     if((false))
      barrier();
     barrier();
    }
   if((((injectionSwitch.x > injectionSwitch.y))))
    {
     if((((injectionSwitch.x > ((true ? injectionSwitch.y : ((- - 94.15))))))))
      barrier();
     if((((injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if((false))
    barrier();
   barrier();
   if((((injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
 if((false))
  return;
 if((false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.w * GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.x + _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x;
 if((false))
  barrier();
 if((((false)) && ((injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if((((false) || (true && (false)))))
  {
   if((! ((false || ((((((bool(bvec4(! ((true && ((! (! ((((injectionSwitch.x > injectionSwitch.y))))))))), false, false, false)))) && true)) && true))))))
    barrier();
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool(((bvec3(bvec3(bvec3((bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))))
  barrier();
 if((false))
  {
   if((false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.y = (max(((virtual_gid) ^ 0u), virtual_gid));
 if((false))
  barrier();
 if((! (! (((((clamp((vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, (vec2(((mat4x3(injectionSwitch, (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))))).x > (min(injectionSwitch, injectionSwitch)).y)))))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.z = (max(((GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.y) >> 0u), GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.y));
 if((false))
  barrier();
 if((bool(bvec2((false), false))))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.w * GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy.x + ((((((false ? (virtual_gid) : ((false ? (subgroup_local_id) : (clamp(((((((_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x) | 0u)) << 0u)) / ((uint((injectionSwitch.y)) * (0u)) | ((((! (! (false))) ? (subgroup_id) : uint((injectionSwitch.y))))))), ((((((_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x) | 0u)) << 0u)) / ((uint((injectionSwitch.y)) * (0u)) | ((((! (! (false))) ? (subgroup_id) : uint((injectionSwitch.y))))))), ((((((_GLF_struct_replacement_5.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x) | 0u)) << 0u)) / ((uint((injectionSwitch.y)) * (0u)) | ((((! (! (false))) ? (subgroup_id) : uint((injectionSwitch.y)))))))))))))) / ((((1u << (clamp((((uint(7u)) + 0u)), (((uint(7u)) + 0u)), ((0u ^ (uint(uvec2((((((uint(7u)) + 0u))) | ((((uint(7u)) + 0u)))), 0u)))))))) ^ 0u)) >> (uint((min(7u, 7u)))))) + 1) % (((uvec2(uvec4((min(((GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy) >> uvec2(0u, 0u)), ((((((true ? (max(GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id, GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id)) : (GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id)))) | (GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id)).xy) | (GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.xy)))), 0u, ((~ (max(((uint(uvec2((uint(uvec2(~ (((true ? 1u | 1u : (workgroup_size)))), 0u))), 1u)))), ((uint(uvec2((uint(uvec2(~ (((true ? 1u | 1u : (workgroup_size)))), 0u))), 1u))))))))))) - uvec2(0u, (max(0u, 0u))))).x);
 if((! ((bool(bvec3(! ((false)), true, false))))))
  barrier();
 if((((false) || false)))
  return;
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if(((bool((bvec2(bvec3(bvec2(false, ((injectionSwitch.x > injectionSwitch.y))), false)))))))
  {
   if((false))
    return;
   barrier();
  }
 if((((injectionSwitch.x > injectionSwitch.y))))
  return;
 if((false))
  return;
 GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.z = next_virtual_gid;
 if((((false) && true)))
  barrier();
 if((false))
  barrier();
 if((false))
  {
   if((false))
    return;
   if((false))
    {
     if((false))
      {
       if(((true && (false))))
        return;
       return;
      }
     barrier();
    }
   if((false))
    barrier();
   if((false))
    return;
   if((false))
    {
     if((false))
      return;
     barrier();
    }
   barrier();
   if((false))
    return;
  }
 if((false))
  {
   if(((bool((bool(bvec3(bool(false), false, true)))))))
    barrier();
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.x = GLF_merged3_0_2_49_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidsubgroup_id.z;
 buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.z] = 1;
 buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.x] = 2;
 if((false))
  return;
 if((false))
  return;
 if((false))
  return;
 if(((true && (false))))
  barrier();
 if((((injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((false))
  return;
}
