#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = (((~ (((uint(uvec2(max((min((clamp(~ ((((max(~ (~ ((gl_NumWorkGroups.x))), ~ (~ ((gl_NumWorkGroups.x))))))) << (0u >> (uint(2u)))), ~ (gl_NumWorkGroups.x), ~ ((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x))))), (clamp(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x), ~ ((min((((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), ((((gl_NumWorkGroups) + uvec3(0u, 0u, 0u)).x) / 1u)))) | 0u), (clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x))))))))), (clamp(~ (gl_NumWorkGroups.x), ~ ((false ? (bitfieldExtract(26320u, - 14890, (~ 15757))) : (gl_NumWorkGroups.x))), (uint(uvec3(((~ (~ (((uint(uvec4(~ ((clamp(gl_NumWorkGroups.x, (uint(uvec3((((~ (~ (gl_NumWorkGroups.x)))) ^ 0u), 0u, (~ (((true ? ~ (1u) : (subgroup_size)))))))), gl_NumWorkGroups.x))), 0u, 1u, 0u))) | (uint(uvec4(~ ((clamp(gl_NumWorkGroups.x, (uint(uvec3((((~ (~ (gl_NumWorkGroups.x)))) ^ 0u), 0u, (~ (((true ? ~ (1u) : (subgroup_size)))))))), gl_NumWorkGroups.x))), 0u, 1u, 0u)))))))), (0u >> (uint(8u))), 1u)))))), 0u))))))) | ((~ ((max((min((clamp(~ (gl_NumWorkGroups.x), ((1u ^ 0u) * ((uint(uint(((~ (gl_NumWorkGroups.x)) - 0u)))))), ~ ((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), (clamp((uvec3(uvec3(gl_NumWorkGroups))), (clamp(((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), ((((gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) | (((gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))))), (uvec3(((uvec4(gl_NumWorkGroups, 1u)) | (max((uvec4((uvec3(uvec3(gl_NumWorkGroups))), 1u)), (uvec4((uvec3(uvec3(gl_NumWorkGroups))), 1u))))))))).x))))), (clamp(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x), ~ ((clamp(gl_NumWorkGroups.x, (~ (~ (clamp((gl_NumWorkGroups.x), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))))), (~ (~ (gl_NumWorkGroups.x)))))))))), (~ (~ ((uint(uint((clamp(~ (gl_NumWorkGroups.x), (~ (~ (((false ? (((98416u) >> (0u >> (uint(8u))))) : ~ (clamp((0u | ((~ (~ ((gl_NumWorkGroups.x)))))), (((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x)))))))), ~ (clamp((uint((injectionSwitch.x)) | (((((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) >> 0u))), (0u ^ (((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x))))), ((clamp(gl_NumWorkGroups.x, (~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x)))))))))))))))))));
 uint workgroup_size = (((((((((((float(vec4((min(injectionSwitch.x, injectionSwitch.x)), cos(0.0), 0.0, 1.0))) < injectionSwitch.y)) ? gl_WorkGroupSize : ((uvec3(103395u, 97618u, 30801u) >> uvec3(151004u, 126042u, 37330u))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)).x) >> 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = (((0u + (workgroup_size * ((workgroup_id) / 1u))) | (0u + (workgroup_size * workgroup_id))));
 uint virtual_gid = workgroup_base + (~ ((max(~ (subgroup_id), ~ (subgroup_id))))) * ((subgroup_size) / 1u) + (max(subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = workgroup_base + (0u + (subgroup_id)) * (~ (~ (subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = (((max(1, 1)) << (int((0 ^ (min((2), (2))))))) >> (int(2))); (! (bool((bool(bvec4(bool((! ((((! (! ((! (! (((bool(bvec4((((_injected_loop_counter != 0)) || false), (((vec2(mat4x3(injectionSwitch, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))).x < injectionSwitch.y)), true, false))) && true)))))))) && true)))), true, true, false)))))); _injected_loop_counter --)
  {
   if(((bool(bool((((((((bool(bvec4(bool(bvec4(false, ((((injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), true, false)), false, false, false)))) || false)) || false))) && true)))))
    {
    }
   else
    {
     buf[virtual_gid] = (min(1, 1));
    }
  }
 if(true)
  {
   ((buf[next_virtual_gid] = 2) - 0u);
  }
 else
  {
  }
}
