#version 460

// Contents of injectionSwitch: [0.0, 1.0]
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = ((min(uint(uvec3(((((((gl_WorkGroupID.x) << 0u)) >> 0u) | ((((((gl_WorkGroupID.x)) + 0u) << 0u)) >> 0u))), 1u, uint((max((mix(float((- 4.9)), float((((injectionSwitch) * mat2(1.0)).y)), bool(true))), (((injectionSwitch) * mat2(1.0)).y)))))), uint(uvec3(((((uint(uvec4((gl_WorkGroupID.x), 1u, uint((injectionSwitch.x)), 1u))) << 0u)) >> 0u), 1u, uint((((injectionSwitch) * mat2(1.0)).y)))))));
 uint workgroup_base = (uint((((true ? clamp((((((((uvec3(0u, 0u, 0u) | (uvec3(((((true ? workgroup_size * workgroup_id : (workgroup_size)))) | (workgroup_size * workgroup_id)), 0u, 0u)))) + uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)), (((((max(((uvec3(((workgroup_size * workgroup_id) | (((((workgroup_size * workgroup_id) >> 0u)) | 0u))), 0u, 0u)) | (uvec3(((workgroup_size * workgroup_id) | (((((workgroup_size * workgroup_id) >> 0u)) | 0u))), 0u, 0u))), ((uvec3(((workgroup_size * workgroup_id) | (((((workgroup_size * workgroup_id) >> 0u)) | 0u))), 0u, 0u)) | ((((uvec3(0u, 0u, 0u) | (uvec3(((workgroup_size * workgroup_id) | (((((workgroup_size * workgroup_id) >> 0u)) | 0u))), 0u, 0u)))) << uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), uvec3(workgroup_size * workgroup_id, (((((1u * ((((bool(bool(injectionSwitch.x < ((clamp((max((max((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))), (injectionSwitch.y), ((true ? (injectionSwitch.y) : (609.921))))) / 1.0)))))) ? 0u : ((0u | (uint(uvec3((workgroup_size), 1u, 1u)))))))) | 0u))), (clamp(0u, 0u, 0u)))) : (((clamp((~ (~ (uvec3(171759u, 179446u, 145040u)))), ((((((uvec3(171759u, 179446u, 145040u)) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))), (min((((uvec3((clamp(uvec4(uvec3(171759u, 179446u, 145040u), (~ ((0u + (~ (0u)))))), ((uvec4(uvec3(171759u, 179446u, 145040u), 0u)) | uvec4(0u, 0u, 0u, 0u)), uvec4(uvec3(171759u, 179446u, 145040u), 0u))))) ^ uvec3(0u, 0u, 0u))), uvec3(171759u, 179446u, 145040u))))))))))));
 uint virtual_gid = workgroup_base + subgroup_id * (max((((clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), (uint(((uint(((subgroup_size) | (0u ^ ((0u | ((max((clamp((subgroup_size), (subgroup_size), ((((false ? (60420u) : ((clamp(subgroup_size, subgroup_size, subgroup_size)) + (0u << (uint(7u)))))))))), (subgroup_size)))))))))) | (uint(((subgroup_size) | (0u ^ ((0u | ((max((clamp((subgroup_size), (subgroup_size), ((((false ? (60420u) : ((clamp(subgroup_size, subgroup_size, subgroup_size)) + (0u << (uint(7u)))))))))), (subgroup_size))))))))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (((uint(uvec4((min(((((max(uint((injectionSwitch.y)), (min(uint((injectionSwitch.y)), (min(uint((injectionSwitch.y)), uint((injectionSwitch.y)))))))) * ((((((0u ^ ((((clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) / 1u))))) - 0u) - (0u << (uint(2u))))))) % subgroup_size), (min(((((subgroup_local_id + 1) / 1u)) % subgroup_size), ((((subgroup_local_id + 1) % subgroup_size)) | (clamp((min((~ (((false ? (workgroup_base) : ~ (((0u + (((((0u) / 1u)) | (0u)) | ((((subgroup_local_id + 1) % subgroup_size))))))))))), ((min((0u ^ (((0u) * 1u))), ((0u) | (0u)))) | ((((0u + ((1u * ((subgroup_local_id + 1))))) % subgroup_size)))))), (0u | ((((((((subgroup_local_id + 1)) + 0u)) / (1u | (0u >> (uint(2u))))) % subgroup_size)))), (((min((((((0u | ((((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u)), (((((0u | ((((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u))))) >> 0u)))))))), 1u, 0u, 0u)))) ^ 0u);
 ((true ? ((((((injectionSwitch.x < injectionSwitch.y)) ? buf[virtual_gid] = 1 : (workgroup_size)) ^ 0u))) : (workgroup_base)));
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, ((0) | 0));
}
